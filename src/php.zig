pub const __builtin_bswap16 = @import("std").zig.c_builtins.__builtin_bswap16;
pub const __builtin_bswap32 = @import("std").zig.c_builtins.__builtin_bswap32;
pub const __builtin_bswap64 = @import("std").zig.c_builtins.__builtin_bswap64;
pub const __builtin_signbit = @import("std").zig.c_builtins.__builtin_signbit;
pub const __builtin_signbitf = @import("std").zig.c_builtins.__builtin_signbitf;
pub const __builtin_popcount = @import("std").zig.c_builtins.__builtin_popcount;
pub const __builtin_ctz = @import("std").zig.c_builtins.__builtin_ctz;
pub const __builtin_clz = @import("std").zig.c_builtins.__builtin_clz;
pub const __builtin_sqrt = @import("std").zig.c_builtins.__builtin_sqrt;
pub const __builtin_sqrtf = @import("std").zig.c_builtins.__builtin_sqrtf;
pub const __builtin_sin = @import("std").zig.c_builtins.__builtin_sin;
pub const __builtin_sinf = @import("std").zig.c_builtins.__builtin_sinf;
pub const __builtin_cos = @import("std").zig.c_builtins.__builtin_cos;
pub const __builtin_cosf = @import("std").zig.c_builtins.__builtin_cosf;
pub const __builtin_exp = @import("std").zig.c_builtins.__builtin_exp;
pub const __builtin_expf = @import("std").zig.c_builtins.__builtin_expf;
pub const __builtin_exp2 = @import("std").zig.c_builtins.__builtin_exp2;
pub const __builtin_exp2f = @import("std").zig.c_builtins.__builtin_exp2f;
pub const __builtin_log = @import("std").zig.c_builtins.__builtin_log;
pub const __builtin_logf = @import("std").zig.c_builtins.__builtin_logf;
pub const __builtin_log2 = @import("std").zig.c_builtins.__builtin_log2;
pub const __builtin_log2f = @import("std").zig.c_builtins.__builtin_log2f;
pub const __builtin_log10 = @import("std").zig.c_builtins.__builtin_log10;
pub const __builtin_log10f = @import("std").zig.c_builtins.__builtin_log10f;
pub const __builtin_abs = @import("std").zig.c_builtins.__builtin_abs;
pub const __builtin_labs = @import("std").zig.c_builtins.__builtin_labs;
pub const __builtin_llabs = @import("std").zig.c_builtins.__builtin_llabs;
pub const __builtin_fabs = @import("std").zig.c_builtins.__builtin_fabs;
pub const __builtin_fabsf = @import("std").zig.c_builtins.__builtin_fabsf;
pub const __builtin_floor = @import("std").zig.c_builtins.__builtin_floor;
pub const __builtin_floorf = @import("std").zig.c_builtins.__builtin_floorf;
pub const __builtin_ceil = @import("std").zig.c_builtins.__builtin_ceil;
pub const __builtin_ceilf = @import("std").zig.c_builtins.__builtin_ceilf;
pub const __builtin_trunc = @import("std").zig.c_builtins.__builtin_trunc;
pub const __builtin_truncf = @import("std").zig.c_builtins.__builtin_truncf;
pub const __builtin_round = @import("std").zig.c_builtins.__builtin_round;
pub const __builtin_roundf = @import("std").zig.c_builtins.__builtin_roundf;
pub const __builtin_strlen = @import("std").zig.c_builtins.__builtin_strlen;
pub const __builtin_strcmp = @import("std").zig.c_builtins.__builtin_strcmp;
pub const __builtin_object_size = @import("std").zig.c_builtins.__builtin_object_size;
pub const __builtin___memset_chk = @import("std").zig.c_builtins.__builtin___memset_chk;
pub const __builtin_memset = @import("std").zig.c_builtins.__builtin_memset;
pub const __builtin___memcpy_chk = @import("std").zig.c_builtins.__builtin___memcpy_chk;
pub const __builtin_memcpy = @import("std").zig.c_builtins.__builtin_memcpy;
pub const __builtin_expect = @import("std").zig.c_builtins.__builtin_expect;
pub const __builtin_nanf = @import("std").zig.c_builtins.__builtin_nanf;
pub const __builtin_huge_valf = @import("std").zig.c_builtins.__builtin_huge_valf;
pub const __builtin_inff = @import("std").zig.c_builtins.__builtin_inff;
pub const __builtin_isnan = @import("std").zig.c_builtins.__builtin_isnan;
pub const __builtin_isinf = @import("std").zig.c_builtins.__builtin_isinf;
pub const __builtin_isinf_sign = @import("std").zig.c_builtins.__builtin_isinf_sign;
pub const __has_builtin = @import("std").zig.c_builtins.__has_builtin;
pub const __builtin_assume = @import("std").zig.c_builtins.__builtin_assume;
pub const __builtin_unreachable = @import("std").zig.c_builtins.__builtin_unreachable;
pub const __builtin_constant_p = @import("std").zig.c_builtins.__builtin_constant_p;
pub const __builtin_mul_overflow = @import("std").zig.c_builtins.__builtin_mul_overflow;
pub const __int8_t = i8;
pub const __uint8_t = u8;
pub const __int16_t = c_short;
pub const __uint16_t = c_ushort;
pub const __int32_t = c_int;
pub const __uint32_t = c_uint;
pub const __int64_t = c_longlong;
pub const __uint64_t = c_ulonglong;
pub const __darwin_intptr_t = c_long;
pub const __darwin_natural_t = c_uint;
pub const __darwin_ct_rune_t = c_int;
pub const __mbstate_t = extern union {
    __mbstate8: [128]u8,
    _mbstateL: c_longlong,
};
pub const __darwin_mbstate_t = __mbstate_t;
pub const __darwin_ptrdiff_t = c_long;
pub const __darwin_size_t = c_ulong;
pub const __builtin_va_list = [*c]u8;
pub const __darwin_va_list = __builtin_va_list;
pub const __darwin_wchar_t = c_int;
pub const __darwin_rune_t = __darwin_wchar_t;
pub const __darwin_wint_t = c_int;
pub const __darwin_clock_t = c_ulong;
pub const __darwin_socklen_t = __uint32_t;
pub const __darwin_ssize_t = c_long;
pub const __darwin_time_t = c_long;
pub const __darwin_blkcnt_t = __int64_t;
pub const __darwin_blksize_t = __int32_t;
pub const __darwin_dev_t = __int32_t;
pub const __darwin_fsblkcnt_t = c_uint;
pub const __darwin_fsfilcnt_t = c_uint;
pub const __darwin_gid_t = __uint32_t;
pub const __darwin_id_t = __uint32_t;
pub const __darwin_ino64_t = __uint64_t;
pub const __darwin_ino_t = __darwin_ino64_t;
pub const __darwin_mach_port_name_t = __darwin_natural_t;
pub const __darwin_mach_port_t = __darwin_mach_port_name_t;
pub const __darwin_mode_t = __uint16_t;
pub const __darwin_off_t = __int64_t;
pub const __darwin_pid_t = __int32_t;
pub const __darwin_sigset_t = __uint32_t;
pub const __darwin_suseconds_t = __int32_t;
pub const __darwin_uid_t = __uint32_t;
pub const __darwin_useconds_t = __uint32_t;
pub const __darwin_uuid_t = [16]u8;
pub const __darwin_uuid_string_t = [37]u8;
pub const struct___darwin_pthread_handler_rec = extern struct {
    __routine: ?*const fn (?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) void),
    __arg: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    __next: [*c]struct___darwin_pthread_handler_rec = @import("std").mem.zeroes([*c]struct___darwin_pthread_handler_rec),
};
pub const struct__opaque_pthread_attr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [56]u8 = @import("std").mem.zeroes([56]u8),
};
pub const struct__opaque_pthread_cond_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [40]u8 = @import("std").mem.zeroes([40]u8),
};
pub const struct__opaque_pthread_condattr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const struct__opaque_pthread_mutex_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [56]u8 = @import("std").mem.zeroes([56]u8),
};
pub const struct__opaque_pthread_mutexattr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const struct__opaque_pthread_once_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [8]u8 = @import("std").mem.zeroes([8]u8),
};
pub const struct__opaque_pthread_rwlock_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [192]u8 = @import("std").mem.zeroes([192]u8),
};
pub const struct__opaque_pthread_rwlockattr_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __opaque: [16]u8 = @import("std").mem.zeroes([16]u8),
};
pub const struct__opaque_pthread_t = extern struct {
    __sig: c_long = @import("std").mem.zeroes(c_long),
    __cleanup_stack: [*c]struct___darwin_pthread_handler_rec = @import("std").mem.zeroes([*c]struct___darwin_pthread_handler_rec),
    __opaque: [8176]u8 = @import("std").mem.zeroes([8176]u8),
};
pub const __darwin_pthread_attr_t = struct__opaque_pthread_attr_t;
pub const __darwin_pthread_cond_t = struct__opaque_pthread_cond_t;
pub const __darwin_pthread_condattr_t = struct__opaque_pthread_condattr_t;
pub const __darwin_pthread_key_t = c_ulong;
pub const __darwin_pthread_mutex_t = struct__opaque_pthread_mutex_t;
pub const __darwin_pthread_mutexattr_t = struct__opaque_pthread_mutexattr_t;
pub const __darwin_pthread_once_t = struct__opaque_pthread_once_t;
pub const __darwin_pthread_rwlock_t = struct__opaque_pthread_rwlock_t;
pub const __darwin_pthread_rwlockattr_t = struct__opaque_pthread_rwlockattr_t;
pub const __darwin_pthread_t = [*c]struct__opaque_pthread_t;
pub const __darwin_nl_item = c_int;
pub const __darwin_wctrans_t = c_int;
pub const __darwin_wctype_t = __uint32_t;
pub const P_ALL: c_int = 0;
pub const P_PID: c_int = 1;
pub const P_PGID: c_int = 2;
pub const idtype_t = c_uint;
pub const pid_t = __darwin_pid_t;
pub const id_t = __darwin_id_t;
pub const sig_atomic_t = c_int;
pub const u_int8_t = u8;
pub const u_int16_t = c_ushort;
pub const u_int32_t = c_uint;
pub const u_int64_t = c_ulonglong;
pub const register_t = i64;
pub const user_addr_t = u_int64_t;
pub const user_size_t = u_int64_t;
pub const user_ssize_t = i64;
pub const user_long_t = i64;
pub const user_ulong_t = u_int64_t;
pub const user_time_t = i64;
pub const user_off_t = i64;
pub const syscall_arg_t = u_int64_t;
pub const struct___darwin_arm_exception_state = extern struct {
    __exception: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __fsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __far: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_exception_state64 = extern struct {
    __far: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __esr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __exception: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_exception_state64_v2 = extern struct {
    __far: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __esr: __uint64_t = @import("std").mem.zeroes(__uint64_t),
};
pub const struct___darwin_arm_thread_state = extern struct {
    __r: [13]__uint32_t = @import("std").mem.zeroes([13]__uint32_t),
    __sp: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __lr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __pc: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __cpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_thread_state64 = extern struct {
    __x: [29]__uint64_t = @import("std").mem.zeroes([29]__uint64_t),
    __fp: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __lr: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __sp: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __pc: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __cpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __pad: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_vfp_state = extern struct {
    __r: [64]__uint32_t = @import("std").mem.zeroes([64]__uint32_t),
    __fpscr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const __uint128_t = u128;
pub const struct___darwin_arm_neon_state64 = extern struct {
    __v: [32]__uint128_t = @import("std").mem.zeroes([32]__uint128_t),
    __fpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __fpcr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___darwin_arm_neon_state = extern struct {
    __v: [16]__uint128_t = @import("std").mem.zeroes([16]__uint128_t),
    __fpsr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    __fpcr: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct___arm_pagein_state = extern struct {
    __pagein_error: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct___darwin_arm_sme_state = extern struct {
    __svcr: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __tpidr2_el0: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    __svl_b: __uint16_t = @import("std").mem.zeroes(__uint16_t),
};
pub const struct___darwin_arm_sve_z_state = extern struct {
    __z: [16][256]u8 = @import("std").mem.zeroes([16][256]u8),
};
pub const struct___darwin_arm_sve_p_state = extern struct {
    __p: [16][32]u8 = @import("std").mem.zeroes([16][32]u8),
};
pub const struct___darwin_arm_sme_za_state = extern struct {
    __za: [4096]u8 = @import("std").mem.zeroes([4096]u8),
};
pub const struct___darwin_arm_sme2_state = extern struct {
    __zt0: [64]u8 = @import("std").mem.zeroes([64]u8),
};
pub const struct___arm_legacy_debug_state = extern struct {
    __bvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __bcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
};
pub const struct___darwin_arm_debug_state32 = extern struct {
    __bvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __bcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wvr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __wcr: [16]__uint32_t = @import("std").mem.zeroes([16]__uint32_t),
    __mdscr_el1: __uint64_t = @import("std").mem.zeroes(__uint64_t),
};
pub const struct___darwin_arm_debug_state64 = extern struct {
    __bvr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __bcr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __wvr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __wcr: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
    __mdscr_el1: __uint64_t = @import("std").mem.zeroes(__uint64_t),
};
pub const struct___darwin_arm_cpmu_state64 = extern struct {
    __ctrs: [16]__uint64_t = @import("std").mem.zeroes([16]__uint64_t),
};
pub const struct___darwin_mcontext32 = extern struct {
    __es: struct___darwin_arm_exception_state = @import("std").mem.zeroes(struct___darwin_arm_exception_state),
    __ss: struct___darwin_arm_thread_state = @import("std").mem.zeroes(struct___darwin_arm_thread_state),
    __fs: struct___darwin_arm_vfp_state = @import("std").mem.zeroes(struct___darwin_arm_vfp_state),
};
pub const struct___darwin_mcontext64 = extern struct {
    __es: struct___darwin_arm_exception_state64 = @import("std").mem.zeroes(struct___darwin_arm_exception_state64),
    __ss: struct___darwin_arm_thread_state64 = @import("std").mem.zeroes(struct___darwin_arm_thread_state64),
    __ns: struct___darwin_arm_neon_state64 = @import("std").mem.zeroes(struct___darwin_arm_neon_state64),
};
pub const mcontext_t = [*c]struct___darwin_mcontext64;
pub const pthread_attr_t = __darwin_pthread_attr_t;
pub const struct___darwin_sigaltstack = extern struct {
    ss_sp: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    ss_size: __darwin_size_t = @import("std").mem.zeroes(__darwin_size_t),
    ss_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const stack_t = struct___darwin_sigaltstack;
pub const struct___darwin_ucontext = extern struct {
    uc_onstack: c_int = @import("std").mem.zeroes(c_int),
    uc_sigmask: __darwin_sigset_t = @import("std").mem.zeroes(__darwin_sigset_t),
    uc_stack: struct___darwin_sigaltstack = @import("std").mem.zeroes(struct___darwin_sigaltstack),
    uc_link: [*c]struct___darwin_ucontext = @import("std").mem.zeroes([*c]struct___darwin_ucontext),
    uc_mcsize: __darwin_size_t = @import("std").mem.zeroes(__darwin_size_t),
    uc_mcontext: [*c]struct___darwin_mcontext64 = @import("std").mem.zeroes([*c]struct___darwin_mcontext64),
};
pub const ucontext_t = struct___darwin_ucontext;
pub const sigset_t = __darwin_sigset_t;
pub const uid_t = __darwin_uid_t;
pub const union_sigval = extern union {
    sival_int: c_int,
    sival_ptr: ?*anyopaque,
};
pub const struct_sigevent = extern struct {
    sigev_notify: c_int = @import("std").mem.zeroes(c_int),
    sigev_signo: c_int = @import("std").mem.zeroes(c_int),
    sigev_value: union_sigval = @import("std").mem.zeroes(union_sigval),
    sigev_notify_function: ?*const fn (union_sigval) callconv(.c) void = @import("std").mem.zeroes(?*const fn (union_sigval) callconv(.c) void),
    sigev_notify_attributes: [*c]pthread_attr_t = @import("std").mem.zeroes([*c]pthread_attr_t),
};
pub const struct___siginfo = extern struct {
    si_signo: c_int = @import("std").mem.zeroes(c_int),
    si_errno: c_int = @import("std").mem.zeroes(c_int),
    si_code: c_int = @import("std").mem.zeroes(c_int),
    si_pid: pid_t = @import("std").mem.zeroes(pid_t),
    si_uid: uid_t = @import("std").mem.zeroes(uid_t),
    si_status: c_int = @import("std").mem.zeroes(c_int),
    si_addr: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    si_value: union_sigval = @import("std").mem.zeroes(union_sigval),
    si_band: c_long = @import("std").mem.zeroes(c_long),
    __pad: [7]c_ulong = @import("std").mem.zeroes([7]c_ulong),
};
pub const siginfo_t = struct___siginfo;
pub const union___sigaction_u = extern union {
    __sa_handler: ?*const fn (c_int) callconv(.c) void,
    __sa_sigaction: ?*const fn (c_int, [*c]struct___siginfo, ?*anyopaque) callconv(.c) void,
};
pub const struct___sigaction = extern struct {
    __sigaction_u: union___sigaction_u = @import("std").mem.zeroes(union___sigaction_u),
    sa_tramp: ?*const fn (?*anyopaque, c_int, c_int, [*c]siginfo_t, ?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque, c_int, c_int, [*c]siginfo_t, ?*anyopaque) callconv(.c) void),
    sa_mask: sigset_t = @import("std").mem.zeroes(sigset_t),
    sa_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_sigaction = extern struct {
    __sigaction_u: union___sigaction_u = @import("std").mem.zeroes(union___sigaction_u),
    sa_mask: sigset_t = @import("std").mem.zeroes(sigset_t),
    sa_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const sig_t = ?*const fn (c_int) callconv(.c) void;
pub const struct_sigvec = extern struct {
    sv_handler: ?*const fn (c_int) callconv(.c) void = @import("std").mem.zeroes(?*const fn (c_int) callconv(.c) void),
    sv_mask: c_int = @import("std").mem.zeroes(c_int),
    sv_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_sigstack = extern struct {
    ss_sp: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    ss_onstack: c_int = @import("std").mem.zeroes(c_int),
};
pub extern fn signal(c_int, ?*const fn (c_int) callconv(.c) void) ?*const fn (c_int) callconv(.c) void;
pub const int_least8_t = i8;
pub const int_least16_t = i16;
pub const int_least32_t = i32;
pub const int_least64_t = i64;
pub const uint_least8_t = u8;
pub const uint_least16_t = u16;
pub const uint_least32_t = u32;
pub const uint_least64_t = u64;
pub const int_fast8_t = i8;
pub const int_fast16_t = i16;
pub const int_fast32_t = i32;
pub const int_fast64_t = i64;
pub const uint_fast8_t = u8;
pub const uint_fast16_t = u16;
pub const uint_fast32_t = u32;
pub const uint_fast64_t = u64;
pub const intmax_t = c_long;
pub const uintmax_t = c_ulong;
pub const struct_timeval = extern struct {
    tv_sec: __darwin_time_t = @import("std").mem.zeroes(__darwin_time_t),
    tv_usec: __darwin_suseconds_t = @import("std").mem.zeroes(__darwin_suseconds_t),
};
pub const rlim_t = __uint64_t;
pub const struct_rusage = extern struct {
    ru_utime: struct_timeval = @import("std").mem.zeroes(struct_timeval),
    ru_stime: struct_timeval = @import("std").mem.zeroes(struct_timeval),
    ru_maxrss: c_long = @import("std").mem.zeroes(c_long),
    ru_ixrss: c_long = @import("std").mem.zeroes(c_long),
    ru_idrss: c_long = @import("std").mem.zeroes(c_long),
    ru_isrss: c_long = @import("std").mem.zeroes(c_long),
    ru_minflt: c_long = @import("std").mem.zeroes(c_long),
    ru_majflt: c_long = @import("std").mem.zeroes(c_long),
    ru_nswap: c_long = @import("std").mem.zeroes(c_long),
    ru_inblock: c_long = @import("std").mem.zeroes(c_long),
    ru_oublock: c_long = @import("std").mem.zeroes(c_long),
    ru_msgsnd: c_long = @import("std").mem.zeroes(c_long),
    ru_msgrcv: c_long = @import("std").mem.zeroes(c_long),
    ru_nsignals: c_long = @import("std").mem.zeroes(c_long),
    ru_nvcsw: c_long = @import("std").mem.zeroes(c_long),
    ru_nivcsw: c_long = @import("std").mem.zeroes(c_long),
};
pub const rusage_info_t = ?*anyopaque;
pub const struct_rusage_info_v0 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v1 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v2 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v3 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v4 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_logical_writes: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_instructions: u64 = @import("std").mem.zeroes(u64),
    ri_cycles: u64 = @import("std").mem.zeroes(u64),
    ri_billed_energy: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_energy: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_runnable_time: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v5 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_logical_writes: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_instructions: u64 = @import("std").mem.zeroes(u64),
    ri_cycles: u64 = @import("std").mem.zeroes(u64),
    ri_billed_energy: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_energy: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_runnable_time: u64 = @import("std").mem.zeroes(u64),
    ri_flags: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_rusage_info_v6 = extern struct {
    ri_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    ri_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_wired_size: u64 = @import("std").mem.zeroes(u64),
    ri_resident_size: u64 = @import("std").mem.zeroes(u64),
    ri_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_proc_start_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_proc_exit_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_child_user_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_child_pkg_idle_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_interrupt_wkups: u64 = @import("std").mem.zeroes(u64),
    ri_child_pageins: u64 = @import("std").mem.zeroes(u64),
    ri_child_elapsed_abstime: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_bytesread: u64 = @import("std").mem.zeroes(u64),
    ri_diskio_byteswritten: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_default: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_maintenance: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_background: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_utility: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_legacy: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_initiated: u64 = @import("std").mem.zeroes(u64),
    ri_cpu_time_qos_user_interactive: u64 = @import("std").mem.zeroes(u64),
    ri_billed_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_system_time: u64 = @import("std").mem.zeroes(u64),
    ri_logical_writes: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_instructions: u64 = @import("std").mem.zeroes(u64),
    ri_cycles: u64 = @import("std").mem.zeroes(u64),
    ri_billed_energy: u64 = @import("std").mem.zeroes(u64),
    ri_serviced_energy: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_phys_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_runnable_time: u64 = @import("std").mem.zeroes(u64),
    ri_flags: u64 = @import("std").mem.zeroes(u64),
    ri_user_ptime: u64 = @import("std").mem.zeroes(u64),
    ri_system_ptime: u64 = @import("std").mem.zeroes(u64),
    ri_pinstructions: u64 = @import("std").mem.zeroes(u64),
    ri_pcycles: u64 = @import("std").mem.zeroes(u64),
    ri_energy_nj: u64 = @import("std").mem.zeroes(u64),
    ri_penergy_nj: u64 = @import("std").mem.zeroes(u64),
    ri_secure_time_in_system: u64 = @import("std").mem.zeroes(u64),
    ri_secure_ptime_in_system: u64 = @import("std").mem.zeroes(u64),
    ri_neural_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_lifetime_max_neural_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_interval_max_neural_footprint: u64 = @import("std").mem.zeroes(u64),
    ri_reserved: [9]u64 = @import("std").mem.zeroes([9]u64),
};
pub const rusage_info_current = struct_rusage_info_v6;
pub const struct_rlimit = extern struct {
    rlim_cur: rlim_t = @import("std").mem.zeroes(rlim_t),
    rlim_max: rlim_t = @import("std").mem.zeroes(rlim_t),
};
pub const struct_proc_rlimit_control_wakeupmon = extern struct {
    wm_flags: u32 = @import("std").mem.zeroes(u32),
    wm_rate: i32 = @import("std").mem.zeroes(i32),
};
pub extern fn getpriority(c_int, id_t) c_int;
pub extern fn getiopolicy_np(c_int, c_int) c_int;
pub extern fn getrlimit(c_int, [*c]struct_rlimit) c_int;
pub extern fn getrusage(c_int, [*c]struct_rusage) c_int;
pub extern fn setpriority(c_int, id_t, c_int) c_int;
pub extern fn setiopolicy_np(c_int, c_int, c_int) c_int;
pub extern fn setrlimit(c_int, [*c]const struct_rlimit) c_int;
pub fn _OSSwapInt16(arg__data: __uint16_t) callconv(.c) __uint16_t {
    var _data = arg__data;
    _ = &_data;
    return @as(__uint16_t, @bitCast(@as(c_short, @truncate((@as(c_int, @bitCast(@as(c_uint, _data))) << @intCast(8)) | (@as(c_int, @bitCast(@as(c_uint, _data))) >> @intCast(8))))));
}
pub fn _OSSwapInt32(arg__data: __uint32_t) callconv(.c) __uint32_t {
    var _data = arg__data;
    _ = &_data;
    _data = __builtin_bswap32(_data);
    return _data;
}
pub fn _OSSwapInt64(arg__data: __uint64_t) callconv(.c) __uint64_t {
    var _data = arg__data;
    _ = &_data;
    return __builtin_bswap64(_data);
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/wait.h:201:19: warning: struct demoted to opaque type - has bitfield
const struct_unnamed_1 = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/wait.h:219:19: warning: struct demoted to opaque type - has bitfield
const struct_unnamed_2 = opaque {};
pub const union_wait = extern union {
    w_status: c_int,
    w_T: struct_unnamed_1,
    w_S: struct_unnamed_2,
};
pub extern fn wait([*c]c_int) pid_t;
pub extern fn waitpid(pid_t, [*c]c_int, c_int) pid_t;
pub extern fn waitid(idtype_t, id_t, [*c]siginfo_t, c_int) c_int;
pub extern fn wait3([*c]c_int, c_int, [*c]struct_rusage) pid_t;
pub extern fn wait4(pid_t, [*c]c_int, c_int, [*c]struct_rusage) pid_t;
pub extern fn alloca(__size: c_ulong) ?*anyopaque;
pub const ct_rune_t = __darwin_ct_rune_t;
pub const rune_t = __darwin_rune_t;
pub const wchar_t = __darwin_wchar_t;
pub const div_t = extern struct {
    quot: c_int = @import("std").mem.zeroes(c_int),
    rem: c_int = @import("std").mem.zeroes(c_int),
};
pub const ldiv_t = extern struct {
    quot: c_long = @import("std").mem.zeroes(c_long),
    rem: c_long = @import("std").mem.zeroes(c_long),
};
pub const lldiv_t = extern struct {
    quot: c_longlong = @import("std").mem.zeroes(c_longlong),
    rem: c_longlong = @import("std").mem.zeroes(c_longlong),
};
pub extern var __mb_cur_max: c_int;
pub const malloc_type_id_t = c_ulonglong;
pub extern fn malloc_type_malloc(size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_calloc(count: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_free(ptr: ?*anyopaque, type_id: malloc_type_id_t) void;
pub extern fn malloc_type_realloc(ptr: ?*anyopaque, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_valloc(size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_aligned_alloc(alignment: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_posix_memalign(memptr: [*c]?*anyopaque, alignment: usize, size: usize, type_id: malloc_type_id_t) c_int;
pub const struct__malloc_zone_t = opaque {};
pub const malloc_zone_t = struct__malloc_zone_t;
pub extern fn malloc_type_zone_malloc(zone: ?*malloc_zone_t, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_calloc(zone: ?*malloc_zone_t, count: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_free(zone: ?*malloc_zone_t, ptr: ?*anyopaque, type_id: malloc_type_id_t) void;
pub extern fn malloc_type_zone_realloc(zone: ?*malloc_zone_t, ptr: ?*anyopaque, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_valloc(zone: ?*malloc_zone_t, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc_type_zone_memalign(zone: ?*malloc_zone_t, alignment: usize, size: usize, type_id: malloc_type_id_t) ?*anyopaque;
pub extern fn malloc(__size: c_ulong) ?*anyopaque;
pub extern fn calloc(__count: c_ulong, __size: c_ulong) ?*anyopaque;
pub extern fn free(?*anyopaque) void;
pub extern fn realloc(__ptr: ?*anyopaque, __size: c_ulong) ?*anyopaque;
pub extern fn reallocf(__ptr: ?*anyopaque, __size: usize) ?*anyopaque;
pub extern fn valloc(__size: usize) ?*anyopaque;
pub extern fn aligned_alloc(__alignment: c_ulong, __size: c_ulong) ?*anyopaque;
pub extern fn posix_memalign(__memptr: [*c]?*anyopaque, __alignment: usize, __size: usize) c_int;
pub extern fn abort() noreturn;
pub extern fn abs(c_int) c_int;
pub extern fn atexit(?*const fn () callconv(.c) void) c_int;
pub extern fn at_quick_exit(?*const fn () callconv(.c) void) c_int;
pub extern fn atof([*c]const u8) f64;
pub extern fn atoi([*c]const u8) c_int;
pub extern fn atol([*c]const u8) c_long;
pub extern fn atoll([*c]const u8) c_longlong;
pub extern fn bsearch(__key: ?*const anyopaque, __base: ?*const anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.c) c_int) ?*anyopaque;
pub extern fn div(c_int, c_int) div_t;
pub extern fn exit(c_int) noreturn;
pub extern fn getenv([*c]const u8) [*c]u8;
pub extern fn labs(c_long) c_long;
pub extern fn ldiv(c_long, c_long) ldiv_t;
pub extern fn llabs(c_longlong) c_longlong;
pub extern fn lldiv(c_longlong, c_longlong) lldiv_t;
pub extern fn mblen(__s: [*c]const u8, __n: usize) c_int;
pub extern fn mbstowcs(noalias [*c]wchar_t, noalias [*c]const u8, __n: usize) usize;
pub extern fn mbtowc(noalias [*c]wchar_t, noalias [*c]const u8, __n: usize) c_int;
pub extern fn qsort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.c) c_int) void;
pub extern fn quick_exit(c_int) noreturn;
pub extern fn rand() c_int;
pub extern fn srand(c_uint) void;
pub extern fn strtod([*c]const u8, [*c][*c]u8) f64;
pub extern fn strtof([*c]const u8, [*c][*c]u8) f32;
pub extern fn strtol(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_long;
pub extern fn strtold([*c]const u8, [*c][*c]u8) c_longdouble;
pub extern fn strtoll(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_longlong;
pub extern fn strtoul(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulong;
pub extern fn strtoull(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulonglong;
pub extern fn system([*c]const u8) c_int;
pub extern fn wcstombs(noalias [*c]u8, noalias [*c]const wchar_t, __n: usize) usize;
pub extern fn wctomb([*c]u8, wchar_t) c_int;
pub extern fn _Exit(c_int) noreturn;
pub extern fn a64l([*c]const u8) c_long;
pub extern fn drand48() f64;
pub extern fn ecvt(f64, c_int, noalias [*c]c_int, noalias [*c]c_int) [*c]u8;
pub extern fn erand48([*c]c_ushort) f64;
pub extern fn fcvt(f64, c_int, noalias [*c]c_int, noalias [*c]c_int) [*c]u8;
pub extern fn gcvt(f64, c_int, [*c]u8) [*c]u8;
pub extern fn getsubopt([*c][*c]u8, [*c]const [*c]u8, [*c][*c]u8) c_int;
pub extern fn grantpt(c_int) c_int;
pub extern fn initstate(c_uint, [*c]u8, __size: usize) [*c]u8;
pub extern fn jrand48([*c]c_ushort) c_long;
pub extern fn l64a(c_long) [*c]u8;
pub extern fn lcong48([*c]c_ushort) void;
pub extern fn lrand48() c_long;
pub extern fn mktemp([*c]u8) [*c]u8;
pub extern fn mkstemp([*c]u8) c_int;
pub extern fn mrand48() c_long;
pub extern fn nrand48([*c]c_ushort) c_long;
pub extern fn posix_openpt(c_int) c_int;
pub extern fn ptsname(c_int) [*c]u8;
pub extern fn ptsname_r(fildes: c_int, buffer: [*c]u8, buflen: usize) c_int;
pub extern fn putenv([*c]u8) c_int;
pub extern fn random() c_long;
pub extern fn rand_r([*c]c_uint) c_int;
pub extern fn realpath(noalias [*c]const u8, noalias [*c]u8) [*c]u8;
pub extern fn seed48([*c]c_ushort) [*c]c_ushort;
pub extern fn setenv(__name: [*c]const u8, __value: [*c]const u8, __overwrite: c_int) c_int;
pub extern fn setkey([*c]const u8) void;
pub extern fn setstate([*c]const u8) [*c]u8;
pub extern fn srand48(c_long) void;
pub extern fn srandom(c_uint) void;
pub extern fn unlockpt(c_int) c_int;
pub extern fn unsetenv([*c]const u8) c_int;
pub const dev_t = __darwin_dev_t;
pub const mode_t = __darwin_mode_t;
pub extern fn arc4random() u32;
pub extern fn arc4random_addrandom([*c]u8, __datlen: c_int) void;
pub extern fn arc4random_buf(__buf: ?*anyopaque, __nbytes: usize) void;
pub extern fn arc4random_stir() void;
pub extern fn arc4random_uniform(__upper_bound: u32) u32;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:293:6: warning: unsupported type: 'BlockPointer'
pub const atexit_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:293:6

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:302:7: warning: unsupported type: 'BlockPointer'
pub const bsearch_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:302:7
pub extern fn cgetcap([*c]u8, [*c]const u8, c_int) [*c]u8;
pub extern fn cgetclose() c_int;
pub extern fn cgetent([*c][*c]u8, [*c][*c]u8, [*c]const u8) c_int;
pub extern fn cgetfirst([*c][*c]u8, [*c][*c]u8) c_int;
pub extern fn cgetmatch([*c]const u8, [*c]const u8) c_int;
pub extern fn cgetnext([*c][*c]u8, [*c][*c]u8) c_int;
pub extern fn cgetnum([*c]u8, [*c]const u8, [*c]c_long) c_int;
pub extern fn cgetset([*c]const u8) c_int;
pub extern fn cgetstr([*c]u8, [*c]const u8, [*c][*c]u8) c_int;
pub extern fn cgetustr([*c]u8, [*c]const u8, [*c][*c]u8) c_int;
pub extern fn daemon(c_int, c_int) c_int;
pub extern fn devname(dev_t, mode_t) [*c]u8;
pub extern fn devname_r(dev_t, mode_t, buf: [*c]u8, len: c_int) [*c]u8;
pub extern fn getbsize([*c]c_int, [*c]c_long) [*c]u8;
pub extern fn getloadavg([*c]f64, __nelem: c_int) c_int;
pub extern fn getprogname() [*c]const u8;
pub extern fn setprogname([*c]const u8) void;
pub extern fn heapsort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.c) c_int) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:339:6: warning: unsupported type: 'BlockPointer'
pub const heapsort_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:339:6
pub extern fn mergesort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.c) c_int) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:346:6: warning: unsupported type: 'BlockPointer'
pub const mergesort_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:346:6
pub extern fn psort(__base: ?*anyopaque, __nel: usize, __width: usize, __compar: ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.c) c_int) void;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:354:7: warning: unsupported type: 'BlockPointer'
pub const psort_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:354:7
pub extern fn psort_r(__base: ?*anyopaque, __nel: usize, __width: usize, ?*anyopaque, __compar: ?*const fn (?*anyopaque, ?*const anyopaque, ?*const anyopaque) callconv(.c) c_int) void;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:362:7: warning: unsupported type: 'BlockPointer'
pub const qsort_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:362:7
pub extern fn qsort_r(__base: ?*anyopaque, __nel: usize, __width: usize, ?*anyopaque, __compar: ?*const fn (?*anyopaque, ?*const anyopaque, ?*const anyopaque) callconv(.c) c_int) void;
pub extern fn radixsort(__base: [*c][*c]const u8, __nel: c_int, __table: [*c]const u8, __endbyte: c_uint) c_int;
pub extern fn rpmatch([*c]const u8) c_int;
pub extern fn sradixsort(__base: [*c][*c]const u8, __nel: c_int, __table: [*c]const u8, __endbyte: c_uint) c_int;
pub extern fn sranddev() void;
pub extern fn srandomdev() void;
pub extern fn strtonum(__numstr: [*c]const u8, __minval: c_longlong, __maxval: c_longlong, __errstrp: [*c][*c]const u8) c_longlong;
pub extern fn strtoq(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_longlong;
pub extern fn strtouq(__str: [*c]const u8, __endptr: [*c][*c]u8, __base: c_int) c_ulonglong;
pub extern var suboptarg: [*c]u8;
pub const u_char = u8;
pub const u_short = c_ushort;
pub const u_int = c_uint;
pub const u_long = c_ulong;
pub const ushort = c_ushort;
pub const uint = c_uint;
pub const u_quad_t = u_int64_t;
pub const quad_t = i64;
pub const qaddr_t = [*c]quad_t;
pub const caddr_t = [*c]u8;
pub const daddr_t = i32;
pub const fixpt_t = u_int32_t;
pub const blkcnt_t = __darwin_blkcnt_t;
pub const blksize_t = __darwin_blksize_t;
pub const gid_t = __darwin_gid_t;
pub const in_addr_t = __uint32_t;
pub const in_port_t = __uint16_t;
pub const ino_t = __darwin_ino_t;
pub const ino64_t = __darwin_ino64_t;
pub const key_t = __int32_t;
pub const nlink_t = __uint16_t;
pub const off_t = __darwin_off_t;
pub const segsz_t = i32;
pub const swblk_t = i32;
pub const clock_t = __darwin_clock_t;
pub const time_t = __darwin_time_t;
pub const useconds_t = __darwin_useconds_t;
pub const suseconds_t = __darwin_suseconds_t;
pub const rsize_t = __darwin_size_t;
pub const errno_t = c_int;
pub const struct_fd_set = extern struct {
    fds_bits: [32]__int32_t = @import("std").mem.zeroes([32]__int32_t),
};
pub const fd_set = struct_fd_set;
pub extern fn __darwin_check_fd_set_overflow(c_int, ?*const anyopaque, c_int) c_int;
pub inline fn __darwin_check_fd_set(arg__a: c_int, arg__b: ?*const anyopaque) c_int {
    var _a = arg__a;
    _ = &_a;
    var _b = arg__b;
    _ = &_b;
    if (@as(usize, @intCast(@intFromPtr(&__darwin_check_fd_set_overflow))) != @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) {
        return __darwin_check_fd_set_overflow(_a, _b, @as(c_int, 1));
    } else {
        return 1;
    }
    return 0;
}
pub inline fn __darwin_fd_isset(arg__fd: c_int, arg__p: [*c]const struct_fd_set) c_int {
    var _fd = arg__fd;
    _ = &_fd;
    var _p = arg__p;
    _ = &_p;
    if (__darwin_check_fd_set(_fd, @as(?*const anyopaque, @ptrCast(_p))) != 0) {
        return _p.*.fds_bits[@as(c_ulong, @bitCast(@as(c_long, _fd))) / (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8)))))] & @as(__int32_t, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1)))) << @intCast(@as(c_ulong, @bitCast(@as(c_long, _fd))) % (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))))))));
    }
    return 0;
}
pub inline fn __darwin_fd_set(arg__fd: c_int, _p: [*c]struct_fd_set) void {
    var _fd = arg__fd;
    _ = &_fd;
    _ = &_p;
    if (__darwin_check_fd_set(_fd, @as(?*const anyopaque, @ptrCast(_p))) != 0) {
        _ = blk: {
            const ref = &_p.*.fds_bits[@as(c_ulong, @bitCast(@as(c_long, _fd))) / (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8)))))];
            ref.* |= @as(__int32_t, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1)))) << @intCast(@as(c_ulong, @bitCast(@as(c_long, _fd))) % (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))))))));
            break :blk ref.*;
        };
    }
}
pub inline fn __darwin_fd_clr(arg__fd: c_int, _p: [*c]struct_fd_set) void {
    var _fd = arg__fd;
    _ = &_fd;
    _ = &_p;
    if (__darwin_check_fd_set(_fd, @as(?*const anyopaque, @ptrCast(_p))) != 0) {
        _ = blk: {
            const ref = &_p.*.fds_bits[@as(c_ulong, @bitCast(@as(c_long, _fd))) / (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8)))))];
            ref.* &= ~@as(__int32_t, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1)))) << @intCast(@as(c_ulong, @bitCast(@as(c_long, _fd))) % (@sizeOf(__int32_t) *% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))))))));
            break :blk ref.*;
        };
    }
}
pub const fd_mask = __int32_t;
pub const pthread_cond_t = __darwin_pthread_cond_t;
pub const pthread_condattr_t = __darwin_pthread_condattr_t;
pub const pthread_mutex_t = __darwin_pthread_mutex_t;
pub const pthread_mutexattr_t = __darwin_pthread_mutexattr_t;
pub const pthread_once_t = __darwin_pthread_once_t;
pub const pthread_rwlock_t = __darwin_pthread_rwlock_t;
pub const pthread_rwlockattr_t = __darwin_pthread_rwlockattr_t;
pub const pthread_t = __darwin_pthread_t;
pub const pthread_key_t = __darwin_pthread_key_t;
pub const fsblkcnt_t = __darwin_fsblkcnt_t;
pub const fsfilcnt_t = __darwin_fsfilcnt_t;
pub const struct_timespec = extern struct {
    tv_sec: __darwin_time_t = @import("std").mem.zeroes(__darwin_time_t),
    tv_nsec: c_long = @import("std").mem.zeroes(c_long),
};
pub extern fn pselect(c_int, noalias [*c]fd_set, noalias [*c]fd_set, noalias [*c]fd_set, noalias [*c]const struct_timespec, noalias [*c]const sigset_t) c_int;
pub extern fn select(c_int, noalias [*c]fd_set, noalias [*c]fd_set, noalias [*c]fd_set, noalias [*c]struct_timeval) c_int;
pub extern fn memchr(__s: ?*const anyopaque, __c: c_int, __n: c_ulong) ?*anyopaque;
pub extern fn memcmp(__s1: ?*const anyopaque, __s2: ?*const anyopaque, __n: c_ulong) c_int;
pub extern fn memcpy(__dst: ?*anyopaque, __src: ?*const anyopaque, __n: c_ulong) ?*anyopaque;
pub extern fn memmove(__dst: ?*anyopaque, __src: ?*const anyopaque, __len: c_ulong) ?*anyopaque;
pub extern fn memset(__b: ?*anyopaque, __c: c_int, __len: c_ulong) ?*anyopaque;
pub extern fn strcat(__s1: [*c]u8, __s2: [*c]const u8) [*c]u8;
pub extern fn strchr(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strcmp(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strcoll(__s1: [*c]const u8, __s2: [*c]const u8) c_int;
pub extern fn strcpy(__dst: [*c]u8, __src: [*c]const u8) [*c]u8;
pub extern fn strcspn(__s: [*c]const u8, __charset: [*c]const u8) c_ulong;
pub extern fn strerror(__errnum: c_int) [*c]u8;
pub extern fn strlen(__s: [*c]const u8) c_ulong;
pub extern fn strncat(__s1: [*c]u8, __s2: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strncmp(__s1: [*c]const u8, __s2: [*c]const u8, __n: c_ulong) c_int;
pub extern fn strncpy(__dst: [*c]u8, __src: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strpbrk(__s: [*c]const u8, __charset: [*c]const u8) [*c]u8;
pub extern fn strrchr(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strspn(__s: [*c]const u8, __charset: [*c]const u8) c_ulong;
pub extern fn strstr(__big: [*c]const u8, __little: [*c]const u8) [*c]u8;
pub extern fn strtok(__str: [*c]u8, __sep: [*c]const u8) [*c]u8;
pub extern fn strxfrm(__s1: [*c]u8, __s2: [*c]const u8, __n: c_ulong) c_ulong;
pub extern fn strtok_r(__str: [*c]u8, __sep: [*c]const u8, __lasts: [*c][*c]u8) [*c]u8;
pub extern fn strerror_r(__errnum: c_int, __strerrbuf: [*c]u8, __buflen: usize) c_int;
pub extern fn strdup(__s1: [*c]const u8) [*c]u8;
pub extern fn memccpy(__dst: ?*anyopaque, __src: ?*const anyopaque, __c: c_int, __n: c_ulong) ?*anyopaque;
pub extern fn stpcpy(__dst: [*c]u8, __src: [*c]const u8) [*c]u8;
pub extern fn stpncpy(__dst: [*c]u8, __src: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strndup(__s1: [*c]const u8, __n: c_ulong) [*c]u8;
pub extern fn strnlen(__s1: [*c]const u8, __n: usize) usize;
pub extern fn strsignal(__sig: c_int) [*c]u8;
pub extern fn memset_s(__s: ?*anyopaque, __smax: rsize_t, __c: c_int, __n: rsize_t) errno_t;
pub extern fn memmem(__big: ?*const anyopaque, __big_len: usize, __little: ?*const anyopaque, __little_len: usize) ?*anyopaque;
pub extern fn memset_pattern4(__b: ?*anyopaque, __pattern4: ?*const anyopaque, __len: usize) void;
pub extern fn memset_pattern8(__b: ?*anyopaque, __pattern8: ?*const anyopaque, __len: usize) void;
pub extern fn memset_pattern16(__b: ?*anyopaque, __pattern16: ?*const anyopaque, __len: usize) void;
pub extern fn strcasestr(__big: [*c]const u8, __little: [*c]const u8) [*c]u8;
pub extern fn strchrnul(__s: [*c]const u8, __c: c_int) [*c]u8;
pub extern fn strnstr(__big: [*c]const u8, __little: [*c]const u8, __len: usize) [*c]u8;
pub extern fn strlcat(__dst: [*c]u8, __source: [*c]const u8, __size: c_ulong) c_ulong;
pub extern fn strlcpy(__dst: [*c]u8, __source: [*c]const u8, __size: c_ulong) c_ulong;
pub extern fn strmode(__mode: c_int, __bp: [*c]u8) void;
pub extern fn strsep(__stringp: [*c][*c]u8, __delim: [*c]const u8) [*c]u8;
pub extern fn swab(noalias ?*const anyopaque, noalias ?*anyopaque, __len: isize) void;
pub extern fn timingsafe_bcmp(__b1: ?*const anyopaque, __b2: ?*const anyopaque, __len: usize) c_int;
pub extern fn strsignal_r(__sig: c_int, __strsignalbuf: [*c]u8, __buflen: usize) c_int;
pub extern fn bcmp(?*const anyopaque, ?*const anyopaque, __n: c_ulong) c_int;
pub extern fn bcopy(?*const anyopaque, ?*anyopaque, __n: c_ulong) void;
pub extern fn bzero(?*anyopaque, __n: c_ulong) void;
pub extern fn index([*c]const u8, c_int) [*c]u8;
pub extern fn rindex([*c]const u8, c_int) [*c]u8;
pub extern fn ffs(c_int) c_int;
pub extern fn strcasecmp([*c]const u8, [*c]const u8) c_int;
pub extern fn strncasecmp([*c]const u8, [*c]const u8, c_ulong) c_int;
pub extern fn ffsl(c_long) c_int;
pub extern fn ffsll(c_longlong) c_int;
pub extern fn fls(c_int) c_int;
pub extern fn flsl(c_long) c_int;
pub extern fn flsll(c_longlong) c_int;
pub const tsrm_intptr_t = isize;
pub const tsrm_uintptr_t = usize;
pub const va_list = __darwin_va_list;
pub extern fn renameat(c_int, [*c]const u8, c_int, [*c]const u8) c_int;
pub extern fn renamex_np([*c]const u8, [*c]const u8, c_uint) c_int;
pub extern fn renameatx_np(c_int, [*c]const u8, c_int, [*c]const u8, c_uint) c_int;
pub extern fn printf([*c]const u8, ...) c_int;
pub const fpos_t = __darwin_off_t;
pub const struct___sbuf = extern struct {
    _base: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _size: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct___sFILEX = opaque {};
pub const struct___sFILE = extern struct {
    _p: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    _r: c_int = @import("std").mem.zeroes(c_int),
    _w: c_int = @import("std").mem.zeroes(c_int),
    _flags: c_short = @import("std").mem.zeroes(c_short),
    _file: c_short = @import("std").mem.zeroes(c_short),
    _bf: struct___sbuf = @import("std").mem.zeroes(struct___sbuf),
    _lbfsize: c_int = @import("std").mem.zeroes(c_int),
    _cookie: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    _close: ?*const fn (?*anyopaque) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) c_int),
    _read: ?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.c) c_int),
    _seek: ?*const fn (?*anyopaque, fpos_t, c_int) callconv(.c) fpos_t = @import("std").mem.zeroes(?*const fn (?*anyopaque, fpos_t, c_int) callconv(.c) fpos_t),
    _write: ?*const fn (?*anyopaque, [*c]const u8, c_int) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (?*anyopaque, [*c]const u8, c_int) callconv(.c) c_int),
    _ub: struct___sbuf = @import("std").mem.zeroes(struct___sbuf),
    _extra: ?*struct___sFILEX = @import("std").mem.zeroes(?*struct___sFILEX),
    _ur: c_int = @import("std").mem.zeroes(c_int),
    _ubuf: [3]u8 = @import("std").mem.zeroes([3]u8),
    _nbuf: [1]u8 = @import("std").mem.zeroes([1]u8),
    _lb: struct___sbuf = @import("std").mem.zeroes(struct___sbuf),
    _blksize: c_int = @import("std").mem.zeroes(c_int),
    _offset: fpos_t = @import("std").mem.zeroes(fpos_t),
};
pub const FILE = struct___sFILE;
pub extern var __stdinp: [*c]FILE;
pub extern var __stdoutp: [*c]FILE;
pub extern var __stderrp: [*c]FILE;
pub extern fn clearerr([*c]FILE) void;
pub extern fn fclose([*c]FILE) c_int;
pub extern fn feof([*c]FILE) c_int;
pub extern fn ferror([*c]FILE) c_int;
pub extern fn fflush([*c]FILE) c_int;
pub extern fn fgetc([*c]FILE) c_int;
pub extern fn fgetpos(noalias [*c]FILE, [*c]fpos_t) c_int;
pub extern fn fgets(noalias [*c]u8, __size: c_int, [*c]FILE) [*c]u8;
pub extern fn fopen(__filename: [*c]const u8, __mode: [*c]const u8) [*c]FILE;
pub extern fn fprintf(noalias [*c]FILE, noalias [*c]const u8, ...) c_int;
pub extern fn fputc(c_int, [*c]FILE) c_int;
pub extern fn fputs(noalias [*c]const u8, noalias [*c]FILE) c_int;
pub extern fn fread(__ptr: ?*anyopaque, __size: c_ulong, __nitems: c_ulong, __stream: [*c]FILE) c_ulong;
pub extern fn freopen(noalias [*c]const u8, noalias [*c]const u8, noalias [*c]FILE) [*c]FILE;
pub extern fn fscanf(noalias [*c]FILE, noalias [*c]const u8, ...) c_int;
pub extern fn fseek([*c]FILE, c_long, c_int) c_int;
pub extern fn fsetpos([*c]FILE, [*c]const fpos_t) c_int;
pub extern fn ftell([*c]FILE) c_long;
pub extern fn fwrite(__ptr: ?*const anyopaque, __size: c_ulong, __nitems: c_ulong, __stream: [*c]FILE) c_ulong;
pub extern fn getc([*c]FILE) c_int;
pub extern fn getchar() c_int;
pub extern fn gets([*c]u8) [*c]u8;
pub extern fn perror([*c]const u8) void;
pub extern fn putc(c_int, [*c]FILE) c_int;
pub extern fn putchar(c_int) c_int;
pub extern fn puts([*c]const u8) c_int;
pub extern fn remove([*c]const u8) c_int;
pub extern fn rename(__old: [*c]const u8, __new: [*c]const u8) c_int;
pub extern fn rewind([*c]FILE) void;
pub extern fn scanf(noalias [*c]const u8, ...) c_int;
pub extern fn setbuf(noalias [*c]FILE, noalias [*c]u8) void;
pub extern fn setvbuf(noalias [*c]FILE, noalias [*c]u8, c_int, __size: usize) c_int;
pub extern fn sprintf(noalias [*c]u8, noalias [*c]const u8, ...) c_int;
pub extern fn sscanf(noalias [*c]const u8, noalias [*c]const u8, ...) c_int;
pub extern fn tmpfile() [*c]FILE;
pub extern fn tmpnam([*c]u8) [*c]u8;
pub extern fn ungetc(c_int, [*c]FILE) c_int;
pub extern fn vfprintf(noalias [*c]FILE, noalias [*c]const u8, __builtin_va_list) c_int;
pub extern fn vprintf(noalias [*c]const u8, __builtin_va_list) c_int;
pub extern fn vsprintf(noalias [*c]u8, noalias [*c]const u8, __builtin_va_list) c_int;
pub extern fn ctermid([*c]u8) [*c]u8;
pub extern fn fdopen(c_int, [*c]const u8) [*c]FILE;
pub extern fn fileno([*c]FILE) c_int;
pub extern fn pclose([*c]FILE) c_int;
pub extern fn popen([*c]const u8, [*c]const u8) [*c]FILE;
pub extern fn __srget([*c]FILE) c_int;
pub extern fn __svfscanf([*c]FILE, [*c]const u8, va_list) c_int;
pub extern fn __swbuf(c_int, [*c]FILE) c_int;
pub inline fn __sputc(arg__c: c_int, arg__p: [*c]FILE) c_int {
    var _c = arg__c;
    _ = &_c;
    var _p = arg__p;
    _ = &_p;
    if (((blk: {
        const ref = &_p.*._w;
        ref.* -= 1;
        break :blk ref.*;
    }) >= @as(c_int, 0)) or ((_p.*._w >= _p.*._lbfsize) and (@as(c_int, @bitCast(@as(c_uint, @as(u8, @bitCast(@as(i8, @truncate(_c))))))) != @as(c_int, '\n')))) return @as(c_int, @bitCast(@as(c_uint, blk: {
        const tmp = @as(u8, @bitCast(@as(i8, @truncate(_c))));
        (blk_1: {
            const ref = &_p.*._p;
            const tmp_2 = ref.*;
            ref.* += 1;
            break :blk_1 tmp_2;
        }).* = tmp;
        break :blk tmp;
    }))) else return __swbuf(_c, _p);
    return 0;
}
pub extern fn flockfile([*c]FILE) void;
pub extern fn ftrylockfile([*c]FILE) c_int;
pub extern fn funlockfile([*c]FILE) void;
pub extern fn getc_unlocked([*c]FILE) c_int;
pub extern fn getchar_unlocked() c_int;
pub extern fn putc_unlocked(c_int, [*c]FILE) c_int;
pub extern fn putchar_unlocked(c_int) c_int;
pub extern fn getw([*c]FILE) c_int;
pub extern fn putw(c_int, [*c]FILE) c_int;
pub extern fn tempnam(__dir: [*c]const u8, __prefix: [*c]const u8) [*c]u8;
pub extern fn fseeko(__stream: [*c]FILE, __offset: off_t, __whence: c_int) c_int;
pub extern fn ftello(__stream: [*c]FILE) off_t;
pub extern fn snprintf(noalias __str: [*c]u8, __size: c_ulong, noalias __format: [*c]const u8, ...) c_int;
pub extern fn vfscanf(noalias __stream: [*c]FILE, noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn vscanf(noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn vsnprintf(noalias __str: [*c]u8, __size: c_ulong, noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn vsscanf(noalias __str: [*c]const u8, noalias __format: [*c]const u8, __builtin_va_list) c_int;
pub extern fn dprintf(c_int, noalias [*c]const u8, ...) c_int;
pub extern fn vdprintf(c_int, noalias [*c]const u8, va_list) c_int;
pub extern fn getdelim(noalias __linep: [*c][*c]u8, noalias __linecapp: [*c]usize, __delimiter: c_int, noalias __stream: [*c]FILE) isize;
pub extern fn getline(noalias __linep: [*c][*c]u8, noalias __linecapp: [*c]usize, noalias __stream: [*c]FILE) isize;
pub extern fn fmemopen(noalias __buf: ?*anyopaque, __size: usize, noalias __mode: [*c]const u8) [*c]FILE;
pub extern fn open_memstream(__bufp: [*c][*c]u8, __sizep: [*c]usize) [*c]FILE;
pub extern const sys_nerr: c_int;
pub const sys_errlist: [*c]const [*c]const u8 = @extern([*c]const [*c]const u8, .{
    .name = "sys_errlist",
});
pub extern fn asprintf(noalias [*c][*c]u8, noalias [*c]const u8, ...) c_int;
pub extern fn ctermid_r([*c]u8) [*c]u8;
pub extern fn fgetln([*c]FILE, __len: [*c]usize) [*c]u8;
pub extern fn fmtcheck([*c]const u8, [*c]const u8) [*c]const u8;
pub extern fn fpurge([*c]FILE) c_int;
pub extern fn setbuffer([*c]FILE, [*c]u8, __size: c_int) void;
pub extern fn setlinebuf([*c]FILE) c_int;
pub extern fn vasprintf(noalias [*c][*c]u8, noalias [*c]const u8, va_list) c_int;
pub extern fn funopen(?*const anyopaque, ?*const fn (?*anyopaque, [*c]u8, c_int) callconv(.c) c_int, ?*const fn (?*anyopaque, [*c]const u8, c_int) callconv(.c) c_int, ?*const fn (?*anyopaque, fpos_t, c_int) callconv(.c) fpos_t, ?*const fn (?*anyopaque) callconv(.c) c_int) [*c]FILE;
pub extern fn __sprintf_chk(noalias [*c]u8, c_int, usize, noalias [*c]const u8, ...) c_int;
pub extern fn __snprintf_chk(noalias [*c]u8, __maxlen: usize, c_int, usize, noalias [*c]const u8, ...) c_int;
pub extern fn __vsprintf_chk(noalias [*c]u8, c_int, usize, noalias [*c]const u8, va_list) c_int;
pub extern fn __vsnprintf_chk(noalias [*c]u8, __maxlen: usize, c_int, usize, noalias [*c]const u8, va_list) c_int;
pub extern fn __assert_rtn([*c]const u8, [*c]const u8, c_int, [*c]const u8) noreturn;
pub const float_t = f32;
pub const double_t = f64;
pub extern fn __math_errhandling() c_int;
pub extern fn __fpclassifyf(f32) c_int;
pub extern fn __fpclassifyd(f64) c_int;
pub extern fn __fpclassifyl(c_longdouble) c_int;
pub inline fn __inline_isfinitef(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool((__x == __x) and (__builtin_fabsf(__x) != __builtin_inff()));
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:200:49: warning: TODO implement function '__builtin_inf' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:199:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isfinited(arg___x: f64) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:203:26: warning: TODO implement function '__builtin_fabsl' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:202:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isfinitel(arg___x: c_longdouble) c_int;
pub inline fn __inline_isinff(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__builtin_fabsf(__x) == __builtin_inff());
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:209:35: warning: TODO implement function '__builtin_inf' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:208:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isinfd(arg___x: f64) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:212:12: warning: TODO implement function '__builtin_fabsl' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:211:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isinfl(arg___x: c_longdouble) c_int;
pub inline fn __inline_isnanf(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__x != __x);
}
pub inline fn __inline_isnand(arg___x: f64) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__x != __x);
}
pub inline fn __inline_isnanl(arg___x: c_longdouble) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool(__x != __x);
}
pub inline fn __inline_isnormalf(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool((__inline_isfinitef(__x) != 0) and (__builtin_fabsf(__x) >= 0.000000000000000000000000000000000000011754943508222875));
}
pub inline fn __inline_isnormald(arg___x: f64) c_int {
    var __x = arg___x;
    _ = &__x;
    return @intFromBool((__inline_isfinited(__x) != 0) and (__builtin_fabs(__x) >= 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014));
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:256:39: warning: TODO implement function '__builtin_fabsl' in std.zig.c_builtins

// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:255:28: warning: unable to translate function, demoted to extern
pub extern fn __inline_isnormall(arg___x: c_longdouble) c_int;
pub inline fn __inline_signbitf(arg___x: f32) c_int {
    var __x = arg___x;
    _ = &__x;
    const union_unnamed_3 = extern union {
        __f: f32,
        __u: c_uint,
    };
    _ = &union_unnamed_3;
    var __u: union_unnamed_3 = undefined;
    _ = &__u;
    __u.__f = __x;
    return @as(c_int, @bitCast(__u.__u >> @intCast(31)));
}
pub inline fn __inline_signbitd(arg___x: f64) c_int {
    var __x = arg___x;
    _ = &__x;
    const union_unnamed_4 = extern union {
        __f: f64,
        __u: c_ulonglong,
    };
    _ = &union_unnamed_4;
    var __u: union_unnamed_4 = undefined;
    _ = &__u;
    __u.__f = __x;
    return @as(c_int, @bitCast(@as(c_uint, @truncate(__u.__u >> @intCast(63)))));
}
pub inline fn __inline_signbitl(arg___x: c_longdouble) c_int {
    var __x = arg___x;
    _ = &__x;
    const union_unnamed_5 = extern union {
        __f: c_longdouble,
        __u: c_ulonglong,
    };
    _ = &union_unnamed_5;
    var __u: union_unnamed_5 = undefined;
    _ = &__u;
    __u.__f = __x;
    return @as(c_int, @bitCast(@as(c_uint, @truncate(__u.__u >> @intCast(63)))));
}
pub extern fn acosf(f32) f32;
pub extern fn acos(f64) f64;
pub extern fn acosl(c_longdouble) c_longdouble;
pub extern fn asinf(f32) f32;
pub extern fn asin(f64) f64;
pub extern fn asinl(c_longdouble) c_longdouble;
pub extern fn atanf(f32) f32;
pub extern fn atan(f64) f64;
pub extern fn atanl(c_longdouble) c_longdouble;
pub extern fn atan2f(f32, f32) f32;
pub extern fn atan2(f64, f64) f64;
pub extern fn atan2l(c_longdouble, c_longdouble) c_longdouble;
pub extern fn cosf(f32) f32;
pub extern fn cos(f64) f64;
pub extern fn cosl(c_longdouble) c_longdouble;
pub extern fn sinf(f32) f32;
pub extern fn sin(f64) f64;
pub extern fn sinl(c_longdouble) c_longdouble;
pub extern fn tanf(f32) f32;
pub extern fn tan(f64) f64;
pub extern fn tanl(c_longdouble) c_longdouble;
pub extern fn acoshf(f32) f32;
pub extern fn acosh(f64) f64;
pub extern fn acoshl(c_longdouble) c_longdouble;
pub extern fn asinhf(f32) f32;
pub extern fn asinh(f64) f64;
pub extern fn asinhl(c_longdouble) c_longdouble;
pub extern fn atanhf(f32) f32;
pub extern fn atanh(f64) f64;
pub extern fn atanhl(c_longdouble) c_longdouble;
pub extern fn coshf(f32) f32;
pub extern fn cosh(f64) f64;
pub extern fn coshl(c_longdouble) c_longdouble;
pub extern fn sinhf(f32) f32;
pub extern fn sinh(f64) f64;
pub extern fn sinhl(c_longdouble) c_longdouble;
pub extern fn tanhf(f32) f32;
pub extern fn tanh(f64) f64;
pub extern fn tanhl(c_longdouble) c_longdouble;
pub extern fn expf(f32) f32;
pub extern fn exp(f64) f64;
pub extern fn expl(c_longdouble) c_longdouble;
pub extern fn exp2f(f32) f32;
pub extern fn exp2(f64) f64;
pub extern fn exp2l(c_longdouble) c_longdouble;
pub extern fn expm1f(f32) f32;
pub extern fn expm1(f64) f64;
pub extern fn expm1l(c_longdouble) c_longdouble;
pub extern fn logf(f32) f32;
pub extern fn log(f64) f64;
pub extern fn logl(c_longdouble) c_longdouble;
pub extern fn log10f(f32) f32;
pub extern fn log10(f64) f64;
pub extern fn log10l(c_longdouble) c_longdouble;
pub extern fn log2f(f32) f32;
pub extern fn log2(f64) f64;
pub extern fn log2l(c_longdouble) c_longdouble;
pub extern fn log1pf(f32) f32;
pub extern fn log1p(f64) f64;
pub extern fn log1pl(c_longdouble) c_longdouble;
pub extern fn logbf(f32) f32;
pub extern fn logb(f64) f64;
pub extern fn logbl(c_longdouble) c_longdouble;
pub extern fn modff(f32, [*c]f32) f32;
pub extern fn modf(f64, [*c]f64) f64;
pub extern fn modfl(c_longdouble, [*c]c_longdouble) c_longdouble;
pub extern fn ldexpf(f32, c_int) f32;
pub extern fn ldexp(f64, c_int) f64;
pub extern fn ldexpl(c_longdouble, c_int) c_longdouble;
pub extern fn frexpf(f32, [*c]c_int) f32;
pub extern fn frexp(f64, [*c]c_int) f64;
pub extern fn frexpl(c_longdouble, [*c]c_int) c_longdouble;
pub extern fn ilogbf(f32) c_int;
pub extern fn ilogb(f64) c_int;
pub extern fn ilogbl(c_longdouble) c_int;
pub extern fn scalbnf(f32, c_int) f32;
pub extern fn scalbn(f64, c_int) f64;
pub extern fn scalbnl(c_longdouble, c_int) c_longdouble;
pub extern fn scalblnf(f32, c_long) f32;
pub extern fn scalbln(f64, c_long) f64;
pub extern fn scalblnl(c_longdouble, c_long) c_longdouble;
pub extern fn fabsf(f32) f32;
pub extern fn fabs(f64) f64;
pub extern fn fabsl(c_longdouble) c_longdouble;
pub extern fn cbrtf(f32) f32;
pub extern fn cbrt(f64) f64;
pub extern fn cbrtl(c_longdouble) c_longdouble;
pub extern fn hypotf(f32, f32) f32;
pub extern fn hypot(f64, f64) f64;
pub extern fn hypotl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn powf(f32, f32) f32;
pub extern fn pow(f64, f64) f64;
pub extern fn powl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn sqrtf(f32) f32;
pub extern fn sqrt(f64) f64;
pub extern fn sqrtl(c_longdouble) c_longdouble;
pub extern fn erff(f32) f32;
pub extern fn erf(f64) f64;
pub extern fn erfl(c_longdouble) c_longdouble;
pub extern fn erfcf(f32) f32;
pub extern fn erfc(f64) f64;
pub extern fn erfcl(c_longdouble) c_longdouble;
pub extern fn lgammaf(f32) f32;
pub extern fn lgamma(f64) f64;
pub extern fn lgammal(c_longdouble) c_longdouble;
pub extern fn tgammaf(f32) f32;
pub extern fn tgamma(f64) f64;
pub extern fn tgammal(c_longdouble) c_longdouble;
pub extern fn ceilf(f32) f32;
pub extern fn ceil(f64) f64;
pub extern fn ceill(c_longdouble) c_longdouble;
pub extern fn floorf(f32) f32;
pub extern fn floor(f64) f64;
pub extern fn floorl(c_longdouble) c_longdouble;
pub extern fn nearbyintf(f32) f32;
pub extern fn nearbyint(f64) f64;
pub extern fn nearbyintl(c_longdouble) c_longdouble;
pub extern fn rintf(f32) f32;
pub extern fn rint(f64) f64;
pub extern fn rintl(c_longdouble) c_longdouble;
pub extern fn lrintf(f32) c_long;
pub extern fn lrint(f64) c_long;
pub extern fn lrintl(c_longdouble) c_long;
pub extern fn roundf(f32) f32;
pub extern fn round(f64) f64;
pub extern fn roundl(c_longdouble) c_longdouble;
pub extern fn lroundf(f32) c_long;
pub extern fn lround(f64) c_long;
pub extern fn lroundl(c_longdouble) c_long;
pub extern fn llrintf(f32) c_longlong;
pub extern fn llrint(f64) c_longlong;
pub extern fn llrintl(c_longdouble) c_longlong;
pub extern fn llroundf(f32) c_longlong;
pub extern fn llround(f64) c_longlong;
pub extern fn llroundl(c_longdouble) c_longlong;
pub extern fn truncf(f32) f32;
pub extern fn trunc(f64) f64;
pub extern fn truncl(c_longdouble) c_longdouble;
pub extern fn fmodf(f32, f32) f32;
pub extern fn fmod(f64, f64) f64;
pub extern fn fmodl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn remainderf(f32, f32) f32;
pub extern fn remainder(f64, f64) f64;
pub extern fn remainderl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn remquof(f32, f32, [*c]c_int) f32;
pub extern fn remquo(f64, f64, [*c]c_int) f64;
pub extern fn remquol(c_longdouble, c_longdouble, [*c]c_int) c_longdouble;
pub extern fn copysignf(f32, f32) f32;
pub extern fn copysign(f64, f64) f64;
pub extern fn copysignl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn nanf([*c]const u8) f32;
pub extern fn nan([*c]const u8) f64;
pub extern fn nanl([*c]const u8) c_longdouble;
pub extern fn nextafterf(f32, f32) f32;
pub extern fn nextafter(f64, f64) f64;
pub extern fn nextafterl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn nexttoward(f64, c_longdouble) f64;
pub extern fn nexttowardf(f32, c_longdouble) f32;
pub extern fn nexttowardl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fdimf(f32, f32) f32;
pub extern fn fdim(f64, f64) f64;
pub extern fn fdiml(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fmaxf(f32, f32) f32;
pub extern fn fmax(f64, f64) f64;
pub extern fn fmaxl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fminf(f32, f32) f32;
pub extern fn fmin(f64, f64) f64;
pub extern fn fminl(c_longdouble, c_longdouble) c_longdouble;
pub extern fn fmaf(f32, f32, f32) f32;
pub extern fn fma(f64, f64, f64) f64;
pub extern fn fmal(c_longdouble, c_longdouble, c_longdouble) c_longdouble;
pub extern fn __exp10f(f32) f32;
pub extern fn __exp10(f64) f64;
pub const struct___float2 = extern struct {
    __sinval: f32 = @import("std").mem.zeroes(f32),
    __cosval: f32 = @import("std").mem.zeroes(f32),
};
pub inline fn __sincosf(arg___x: f32, arg___sinp: [*c]f32, arg___cosp: [*c]f32) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___float2 = __sincosf_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub const struct___double2 = extern struct {
    __sinval: f64 = @import("std").mem.zeroes(f64),
    __cosval: f64 = @import("std").mem.zeroes(f64),
};
pub inline fn __sincos(arg___x: f64, arg___sinp: [*c]f64, arg___cosp: [*c]f64) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___double2 = __sincos_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub extern fn __cospif(f32) f32;
pub extern fn __cospi(f64) f64;
pub extern fn __sinpif(f32) f32;
pub extern fn __sinpi(f64) f64;
pub extern fn __tanpif(f32) f32;
pub extern fn __tanpi(f64) f64;
pub extern fn __fabsf16(f16) f16;
pub extern fn __hypotf16(f16, f16) f16;
pub extern fn __sqrtf16(f16) f16;
pub extern fn __ceilf16(f16) f16;
pub extern fn __floorf16(f16) f16;
pub extern fn __rintf16(f16) f16;
pub extern fn __roundf16(f16) f16;
pub extern fn __truncf16(f16) f16;
pub extern fn __copysignf16(f16, f16) f16;
pub extern fn __nextafterf16(f16, f16) f16;
pub extern fn __fmaxf16(f16, f16) f16;
pub extern fn __fminf16(f16, f16) f16;
pub extern fn __fmaf16(f16, f16, f16) f16;
pub inline fn __sincospif(arg___x: f32, arg___sinp: [*c]f32, arg___cosp: [*c]f32) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___float2 = __sincospif_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub inline fn __sincospi(arg___x: f64, arg___sinp: [*c]f64, arg___cosp: [*c]f64) void {
    var __x = arg___x;
    _ = &__x;
    var __sinp = arg___sinp;
    _ = &__sinp;
    var __cosp = arg___cosp;
    _ = &__cosp;
    const __stret: struct___double2 = __sincospi_stret(__x);
    _ = &__stret;
    __sinp.* = __stret.__sinval;
    __cosp.* = __stret.__cosval;
}
pub extern fn __sincosf_stret(f32) struct___float2;
pub extern fn __sincos_stret(f64) struct___double2;
pub extern fn __sincospif_stret(f32) struct___float2;
pub extern fn __sincospi_stret(f64) struct___double2;
pub extern fn j0(f64) f64;
pub extern fn j1(f64) f64;
pub extern fn jn(c_int, f64) f64;
pub extern fn y0(f64) f64;
pub extern fn y1(f64) f64;
pub extern fn yn(c_int, f64) f64;
pub extern fn scalb(f64, f64) f64;
pub extern var signgam: c_int;
pub const struct_exception = extern struct {
    type: c_int = @import("std").mem.zeroes(c_int),
    name: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    arg1: f64 = @import("std").mem.zeroes(f64),
    arg2: f64 = @import("std").mem.zeroes(f64),
    retval: f64 = @import("std").mem.zeroes(f64),
};
pub const __gnuc_va_list = __builtin_va_list;
pub const ptrdiff_t = c_long;
pub const max_align_t = c_longdouble;
pub const struct_dl_info = extern struct {
    dli_fname: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    dli_fbase: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    dli_sname: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    dli_saddr: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const Dl_info = struct_dl_info;
pub extern fn dladdr(?*const anyopaque, [*c]Dl_info) c_int;
pub extern fn dlclose(__handle: ?*anyopaque) c_int;
pub extern fn dlerror() [*c]u8;
pub extern fn dlopen(__path: [*c]const u8, __mode: c_int) ?*anyopaque;
pub extern fn dlsym(__handle: ?*anyopaque, __symbol: [*c]const u8) ?*anyopaque;
pub extern fn dlopen_preflight(__path: [*c]const u8) bool;
pub extern fn imaxabs(j: intmax_t) intmax_t;
pub const imaxdiv_t = extern struct {
    quot: intmax_t = @import("std").mem.zeroes(intmax_t),
    rem: intmax_t = @import("std").mem.zeroes(intmax_t),
};
pub extern fn imaxdiv(__numer: intmax_t, __denom: intmax_t) imaxdiv_t;
pub extern fn strtoimax(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) intmax_t;
pub extern fn strtoumax(noalias __nptr: [*c]const u8, noalias __endptr: [*c][*c]u8, __base: c_int) uintmax_t;
pub extern fn wcstoimax(noalias __nptr: [*c]const wchar_t, noalias __endptr: [*c][*c]wchar_t, __base: c_int) intmax_t;
pub extern fn wcstoumax(noalias __nptr: [*c]const wchar_t, noalias __endptr: [*c][*c]wchar_t, __base: c_int) uintmax_t;
pub const zend_long = i64;
pub const zend_ulong = u64;
pub const zend_off_t = i64;
pub const long_min_digits: [19:0]u8 = "9223372036854775808".*;
pub const zend_max_align_t = max_align_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_bf16.h:14:16: warning: unsupported builtin type
pub const bfloat16_t = @compileError("unable to resolve typedef child type");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_bf16.h:14:16
pub const float32_t = f32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_vector_types.h:18:16: warning: unsupported builtin type
pub const float16_t = @compileError("unable to resolve typedef child type");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_vector_types.h:18:16
pub const float64_t = f64;
pub const int8x8_t = @Vector(8, i8);
pub const int8x16_t = @Vector(16, i8);
pub const int16x4_t = @Vector(4, i16);
pub const int16x8_t = @Vector(8, i16);
pub const int32x2_t = @Vector(2, i32);
pub const int32x4_t = @Vector(4, i32);
pub const int64x1_t = @Vector(1, i64);
pub const int64x2_t = @Vector(2, i64);
pub const uint8x8_t = @Vector(8, u8);
pub const uint8x16_t = @Vector(16, u8);
pub const uint16x4_t = @Vector(4, u16);
pub const uint16x8_t = @Vector(8, u16);
pub const uint32x2_t = @Vector(2, u32);
pub const uint32x4_t = @Vector(4, u32);
pub const uint64x1_t = @Vector(1, u64);
pub const uint64x2_t = @Vector(2, u64);
pub const float16x4_t = @Vector(4, float16_t);
pub const float16x8_t = @Vector(8, float16_t);
pub const float32x2_t = @Vector(2, float32_t);
pub const float32x4_t = @Vector(4, float32_t);
pub const float64x1_t = @Vector(1, float64_t);
pub const float64x2_t = @Vector(2, float64_t);
pub const struct_int8x8x2_t = extern struct {
    val: [2]int8x8_t = @import("std").mem.zeroes([2]int8x8_t),
};
pub const int8x8x2_t = struct_int8x8x2_t;
pub const struct_int8x16x2_t = extern struct {
    val: [2]int8x16_t = @import("std").mem.zeroes([2]int8x16_t),
};
pub const int8x16x2_t = struct_int8x16x2_t;
pub const struct_int16x4x2_t = extern struct {
    val: [2]int16x4_t = @import("std").mem.zeroes([2]int16x4_t),
};
pub const int16x4x2_t = struct_int16x4x2_t;
pub const struct_int16x8x2_t = extern struct {
    val: [2]int16x8_t = @import("std").mem.zeroes([2]int16x8_t),
};
pub const int16x8x2_t = struct_int16x8x2_t;
pub const struct_int32x2x2_t = extern struct {
    val: [2]int32x2_t = @import("std").mem.zeroes([2]int32x2_t),
};
pub const int32x2x2_t = struct_int32x2x2_t;
pub const struct_int32x4x2_t = extern struct {
    val: [2]int32x4_t = @import("std").mem.zeroes([2]int32x4_t),
};
pub const int32x4x2_t = struct_int32x4x2_t;
pub const struct_int64x1x2_t = extern struct {
    val: [2]int64x1_t = @import("std").mem.zeroes([2]int64x1_t),
};
pub const int64x1x2_t = struct_int64x1x2_t;
pub const struct_int64x2x2_t = extern struct {
    val: [2]int64x2_t = @import("std").mem.zeroes([2]int64x2_t),
};
pub const int64x2x2_t = struct_int64x2x2_t;
pub const struct_uint8x8x2_t = extern struct {
    val: [2]uint8x8_t = @import("std").mem.zeroes([2]uint8x8_t),
};
pub const uint8x8x2_t = struct_uint8x8x2_t;
pub const struct_uint8x16x2_t = extern struct {
    val: [2]uint8x16_t = @import("std").mem.zeroes([2]uint8x16_t),
};
pub const uint8x16x2_t = struct_uint8x16x2_t;
pub const struct_uint16x4x2_t = extern struct {
    val: [2]uint16x4_t = @import("std").mem.zeroes([2]uint16x4_t),
};
pub const uint16x4x2_t = struct_uint16x4x2_t;
pub const struct_uint16x8x2_t = extern struct {
    val: [2]uint16x8_t = @import("std").mem.zeroes([2]uint16x8_t),
};
pub const uint16x8x2_t = struct_uint16x8x2_t;
pub const struct_uint32x2x2_t = extern struct {
    val: [2]uint32x2_t = @import("std").mem.zeroes([2]uint32x2_t),
};
pub const uint32x2x2_t = struct_uint32x2x2_t;
pub const struct_uint32x4x2_t = extern struct {
    val: [2]uint32x4_t = @import("std").mem.zeroes([2]uint32x4_t),
};
pub const uint32x4x2_t = struct_uint32x4x2_t;
pub const struct_uint64x1x2_t = extern struct {
    val: [2]uint64x1_t = @import("std").mem.zeroes([2]uint64x1_t),
};
pub const uint64x1x2_t = struct_uint64x1x2_t;
pub const struct_uint64x2x2_t = extern struct {
    val: [2]uint64x2_t = @import("std").mem.zeroes([2]uint64x2_t),
};
pub const uint64x2x2_t = struct_uint64x2x2_t;
pub const struct_float16x4x2_t = extern struct {
    val: [2]float16x4_t = @import("std").mem.zeroes([2]float16x4_t),
};
pub const float16x4x2_t = struct_float16x4x2_t;
pub const struct_float16x8x2_t = extern struct {
    val: [2]float16x8_t = @import("std").mem.zeroes([2]float16x8_t),
};
pub const float16x8x2_t = struct_float16x8x2_t;
pub const struct_float32x2x2_t = extern struct {
    val: [2]float32x2_t = @import("std").mem.zeroes([2]float32x2_t),
};
pub const float32x2x2_t = struct_float32x2x2_t;
pub const struct_float32x4x2_t = extern struct {
    val: [2]float32x4_t = @import("std").mem.zeroes([2]float32x4_t),
};
pub const float32x4x2_t = struct_float32x4x2_t;
pub const struct_float64x1x2_t = extern struct {
    val: [2]float64x1_t = @import("std").mem.zeroes([2]float64x1_t),
};
pub const float64x1x2_t = struct_float64x1x2_t;
pub const struct_float64x2x2_t = extern struct {
    val: [2]float64x2_t = @import("std").mem.zeroes([2]float64x2_t),
};
pub const float64x2x2_t = struct_float64x2x2_t;
pub const struct_int8x8x3_t = extern struct {
    val: [3]int8x8_t = @import("std").mem.zeroes([3]int8x8_t),
};
pub const int8x8x3_t = struct_int8x8x3_t;
pub const struct_int8x16x3_t = extern struct {
    val: [3]int8x16_t = @import("std").mem.zeroes([3]int8x16_t),
};
pub const int8x16x3_t = struct_int8x16x3_t;
pub const struct_int16x4x3_t = extern struct {
    val: [3]int16x4_t = @import("std").mem.zeroes([3]int16x4_t),
};
pub const int16x4x3_t = struct_int16x4x3_t;
pub const struct_int16x8x3_t = extern struct {
    val: [3]int16x8_t = @import("std").mem.zeroes([3]int16x8_t),
};
pub const int16x8x3_t = struct_int16x8x3_t;
pub const struct_int32x2x3_t = extern struct {
    val: [3]int32x2_t = @import("std").mem.zeroes([3]int32x2_t),
};
pub const int32x2x3_t = struct_int32x2x3_t;
pub const struct_int32x4x3_t = extern struct {
    val: [3]int32x4_t = @import("std").mem.zeroes([3]int32x4_t),
};
pub const int32x4x3_t = struct_int32x4x3_t;
pub const struct_int64x1x3_t = extern struct {
    val: [3]int64x1_t = @import("std").mem.zeroes([3]int64x1_t),
};
pub const int64x1x3_t = struct_int64x1x3_t;
pub const struct_int64x2x3_t = extern struct {
    val: [3]int64x2_t = @import("std").mem.zeroes([3]int64x2_t),
};
pub const int64x2x3_t = struct_int64x2x3_t;
pub const struct_uint8x8x3_t = extern struct {
    val: [3]uint8x8_t = @import("std").mem.zeroes([3]uint8x8_t),
};
pub const uint8x8x3_t = struct_uint8x8x3_t;
pub const struct_uint8x16x3_t = extern struct {
    val: [3]uint8x16_t = @import("std").mem.zeroes([3]uint8x16_t),
};
pub const uint8x16x3_t = struct_uint8x16x3_t;
pub const struct_uint16x4x3_t = extern struct {
    val: [3]uint16x4_t = @import("std").mem.zeroes([3]uint16x4_t),
};
pub const uint16x4x3_t = struct_uint16x4x3_t;
pub const struct_uint16x8x3_t = extern struct {
    val: [3]uint16x8_t = @import("std").mem.zeroes([3]uint16x8_t),
};
pub const uint16x8x3_t = struct_uint16x8x3_t;
pub const struct_uint32x2x3_t = extern struct {
    val: [3]uint32x2_t = @import("std").mem.zeroes([3]uint32x2_t),
};
pub const uint32x2x3_t = struct_uint32x2x3_t;
pub const struct_uint32x4x3_t = extern struct {
    val: [3]uint32x4_t = @import("std").mem.zeroes([3]uint32x4_t),
};
pub const uint32x4x3_t = struct_uint32x4x3_t;
pub const struct_uint64x1x3_t = extern struct {
    val: [3]uint64x1_t = @import("std").mem.zeroes([3]uint64x1_t),
};
pub const uint64x1x3_t = struct_uint64x1x3_t;
pub const struct_uint64x2x3_t = extern struct {
    val: [3]uint64x2_t = @import("std").mem.zeroes([3]uint64x2_t),
};
pub const uint64x2x3_t = struct_uint64x2x3_t;
pub const struct_float16x4x3_t = extern struct {
    val: [3]float16x4_t = @import("std").mem.zeroes([3]float16x4_t),
};
pub const float16x4x3_t = struct_float16x4x3_t;
pub const struct_float16x8x3_t = extern struct {
    val: [3]float16x8_t = @import("std").mem.zeroes([3]float16x8_t),
};
pub const float16x8x3_t = struct_float16x8x3_t;
pub const struct_float32x2x3_t = extern struct {
    val: [3]float32x2_t = @import("std").mem.zeroes([3]float32x2_t),
};
pub const float32x2x3_t = struct_float32x2x3_t;
pub const struct_float32x4x3_t = extern struct {
    val: [3]float32x4_t = @import("std").mem.zeroes([3]float32x4_t),
};
pub const float32x4x3_t = struct_float32x4x3_t;
pub const struct_float64x1x3_t = extern struct {
    val: [3]float64x1_t = @import("std").mem.zeroes([3]float64x1_t),
};
pub const float64x1x3_t = struct_float64x1x3_t;
pub const struct_float64x2x3_t = extern struct {
    val: [3]float64x2_t = @import("std").mem.zeroes([3]float64x2_t),
};
pub const float64x2x3_t = struct_float64x2x3_t;
pub const struct_int8x8x4_t = extern struct {
    val: [4]int8x8_t = @import("std").mem.zeroes([4]int8x8_t),
};
pub const int8x8x4_t = struct_int8x8x4_t;
pub const struct_int8x16x4_t = extern struct {
    val: [4]int8x16_t = @import("std").mem.zeroes([4]int8x16_t),
};
pub const int8x16x4_t = struct_int8x16x4_t;
pub const struct_int16x4x4_t = extern struct {
    val: [4]int16x4_t = @import("std").mem.zeroes([4]int16x4_t),
};
pub const int16x4x4_t = struct_int16x4x4_t;
pub const struct_int16x8x4_t = extern struct {
    val: [4]int16x8_t = @import("std").mem.zeroes([4]int16x8_t),
};
pub const int16x8x4_t = struct_int16x8x4_t;
pub const struct_int32x2x4_t = extern struct {
    val: [4]int32x2_t = @import("std").mem.zeroes([4]int32x2_t),
};
pub const int32x2x4_t = struct_int32x2x4_t;
pub const struct_int32x4x4_t = extern struct {
    val: [4]int32x4_t = @import("std").mem.zeroes([4]int32x4_t),
};
pub const int32x4x4_t = struct_int32x4x4_t;
pub const struct_int64x1x4_t = extern struct {
    val: [4]int64x1_t = @import("std").mem.zeroes([4]int64x1_t),
};
pub const int64x1x4_t = struct_int64x1x4_t;
pub const struct_int64x2x4_t = extern struct {
    val: [4]int64x2_t = @import("std").mem.zeroes([4]int64x2_t),
};
pub const int64x2x4_t = struct_int64x2x4_t;
pub const struct_uint8x8x4_t = extern struct {
    val: [4]uint8x8_t = @import("std").mem.zeroes([4]uint8x8_t),
};
pub const uint8x8x4_t = struct_uint8x8x4_t;
pub const struct_uint8x16x4_t = extern struct {
    val: [4]uint8x16_t = @import("std").mem.zeroes([4]uint8x16_t),
};
pub const uint8x16x4_t = struct_uint8x16x4_t;
pub const struct_uint16x4x4_t = extern struct {
    val: [4]uint16x4_t = @import("std").mem.zeroes([4]uint16x4_t),
};
pub const uint16x4x4_t = struct_uint16x4x4_t;
pub const struct_uint16x8x4_t = extern struct {
    val: [4]uint16x8_t = @import("std").mem.zeroes([4]uint16x8_t),
};
pub const uint16x8x4_t = struct_uint16x8x4_t;
pub const struct_uint32x2x4_t = extern struct {
    val: [4]uint32x2_t = @import("std").mem.zeroes([4]uint32x2_t),
};
pub const uint32x2x4_t = struct_uint32x2x4_t;
pub const struct_uint32x4x4_t = extern struct {
    val: [4]uint32x4_t = @import("std").mem.zeroes([4]uint32x4_t),
};
pub const uint32x4x4_t = struct_uint32x4x4_t;
pub const struct_uint64x1x4_t = extern struct {
    val: [4]uint64x1_t = @import("std").mem.zeroes([4]uint64x1_t),
};
pub const uint64x1x4_t = struct_uint64x1x4_t;
pub const struct_uint64x2x4_t = extern struct {
    val: [4]uint64x2_t = @import("std").mem.zeroes([4]uint64x2_t),
};
pub const uint64x2x4_t = struct_uint64x2x4_t;
pub const struct_float16x4x4_t = extern struct {
    val: [4]float16x4_t = @import("std").mem.zeroes([4]float16x4_t),
};
pub const float16x4x4_t = struct_float16x4x4_t;
pub const struct_float16x8x4_t = extern struct {
    val: [4]float16x8_t = @import("std").mem.zeroes([4]float16x8_t),
};
pub const float16x8x4_t = struct_float16x8x4_t;
pub const struct_float32x2x4_t = extern struct {
    val: [4]float32x2_t = @import("std").mem.zeroes([4]float32x2_t),
};
pub const float32x2x4_t = struct_float32x2x4_t;
pub const struct_float32x4x4_t = extern struct {
    val: [4]float32x4_t = @import("std").mem.zeroes([4]float32x4_t),
};
pub const float32x4x4_t = struct_float32x4x4_t;
pub const struct_float64x1x4_t = extern struct {
    val: [4]float64x1_t = @import("std").mem.zeroes([4]float64x1_t),
};
pub const float64x1x4_t = struct_float64x1x4_t;
pub const struct_float64x2x4_t = extern struct {
    val: [4]float64x2_t = @import("std").mem.zeroes([4]float64x2_t),
};
pub const float64x2x4_t = struct_float64x2x4_t;
pub const bfloat16x4_t = @Vector(4, bfloat16_t);
pub const bfloat16x8_t = @Vector(8, bfloat16_t);
pub const struct_bfloat16x4x2_t = extern struct {
    val: [2]bfloat16x4_t = @import("std").mem.zeroes([2]bfloat16x4_t),
};
pub const bfloat16x4x2_t = struct_bfloat16x4x2_t;
pub const struct_bfloat16x8x2_t = extern struct {
    val: [2]bfloat16x8_t = @import("std").mem.zeroes([2]bfloat16x8_t),
};
pub const bfloat16x8x2_t = struct_bfloat16x8x2_t;
pub const struct_bfloat16x4x3_t = extern struct {
    val: [3]bfloat16x4_t = @import("std").mem.zeroes([3]bfloat16x4_t),
};
pub const bfloat16x4x3_t = struct_bfloat16x4x3_t;
pub const struct_bfloat16x8x3_t = extern struct {
    val: [3]bfloat16x8_t = @import("std").mem.zeroes([3]bfloat16x8_t),
};
pub const bfloat16x8x3_t = struct_bfloat16x8x3_t;
pub const struct_bfloat16x4x4_t = extern struct {
    val: [4]bfloat16x4_t = @import("std").mem.zeroes([4]bfloat16x4_t),
};
pub const bfloat16x4x4_t = struct_bfloat16x4x4_t;
pub const struct_bfloat16x8x4_t = extern struct {
    val: [4]bfloat16x8_t = @import("std").mem.zeroes([4]bfloat16x8_t),
};
pub const bfloat16x8x4_t = struct_bfloat16x8x4_t;
pub const poly8_t = u8;
pub const poly16_t = u16;
pub const poly64_t = u64;
pub const poly128_t = __uint128_t;
pub const poly8x8_t = @Vector(8, poly8_t);
pub const poly8x16_t = @Vector(16, poly8_t);
pub const poly16x4_t = @Vector(4, poly16_t);
pub const poly16x8_t = @Vector(8, poly16_t);
pub const poly64x1_t = @Vector(1, poly64_t);
pub const poly64x2_t = @Vector(2, poly64_t);
pub const struct_poly8x8x2_t = extern struct {
    val: [2]poly8x8_t = @import("std").mem.zeroes([2]poly8x8_t),
};
pub const poly8x8x2_t = struct_poly8x8x2_t;
pub const struct_poly8x16x2_t = extern struct {
    val: [2]poly8x16_t = @import("std").mem.zeroes([2]poly8x16_t),
};
pub const poly8x16x2_t = struct_poly8x16x2_t;
pub const struct_poly16x4x2_t = extern struct {
    val: [2]poly16x4_t = @import("std").mem.zeroes([2]poly16x4_t),
};
pub const poly16x4x2_t = struct_poly16x4x2_t;
pub const struct_poly16x8x2_t = extern struct {
    val: [2]poly16x8_t = @import("std").mem.zeroes([2]poly16x8_t),
};
pub const poly16x8x2_t = struct_poly16x8x2_t;
pub const struct_poly64x1x2_t = extern struct {
    val: [2]poly64x1_t = @import("std").mem.zeroes([2]poly64x1_t),
};
pub const poly64x1x2_t = struct_poly64x1x2_t;
pub const struct_poly64x2x2_t = extern struct {
    val: [2]poly64x2_t = @import("std").mem.zeroes([2]poly64x2_t),
};
pub const poly64x2x2_t = struct_poly64x2x2_t;
pub const struct_poly8x8x3_t = extern struct {
    val: [3]poly8x8_t = @import("std").mem.zeroes([3]poly8x8_t),
};
pub const poly8x8x3_t = struct_poly8x8x3_t;
pub const struct_poly8x16x3_t = extern struct {
    val: [3]poly8x16_t = @import("std").mem.zeroes([3]poly8x16_t),
};
pub const poly8x16x3_t = struct_poly8x16x3_t;
pub const struct_poly16x4x3_t = extern struct {
    val: [3]poly16x4_t = @import("std").mem.zeroes([3]poly16x4_t),
};
pub const poly16x4x3_t = struct_poly16x4x3_t;
pub const struct_poly16x8x3_t = extern struct {
    val: [3]poly16x8_t = @import("std").mem.zeroes([3]poly16x8_t),
};
pub const poly16x8x3_t = struct_poly16x8x3_t;
pub const struct_poly64x1x3_t = extern struct {
    val: [3]poly64x1_t = @import("std").mem.zeroes([3]poly64x1_t),
};
pub const poly64x1x3_t = struct_poly64x1x3_t;
pub const struct_poly64x2x3_t = extern struct {
    val: [3]poly64x2_t = @import("std").mem.zeroes([3]poly64x2_t),
};
pub const poly64x2x3_t = struct_poly64x2x3_t;
pub const struct_poly8x8x4_t = extern struct {
    val: [4]poly8x8_t = @import("std").mem.zeroes([4]poly8x8_t),
};
pub const poly8x8x4_t = struct_poly8x8x4_t;
pub const struct_poly8x16x4_t = extern struct {
    val: [4]poly8x16_t = @import("std").mem.zeroes([4]poly8x16_t),
};
pub const poly8x16x4_t = struct_poly8x16x4_t;
pub const struct_poly16x4x4_t = extern struct {
    val: [4]poly16x4_t = @import("std").mem.zeroes([4]poly16x4_t),
};
pub const poly16x4x4_t = struct_poly16x4x4_t;
pub const struct_poly16x8x4_t = extern struct {
    val: [4]poly16x8_t = @import("std").mem.zeroes([4]poly16x8_t),
};
pub const poly16x8x4_t = struct_poly16x8x4_t;
pub const struct_poly64x1x4_t = extern struct {
    val: [4]poly64x1_t = @import("std").mem.zeroes([4]poly64x1_t),
};
pub const poly64x1x4_t = struct_poly64x1x4_t;
pub const struct_poly64x2x4_t = extern struct {
    val: [4]poly64x2_t = @import("std").mem.zeroes([4]poly64x2_t),
};
pub const poly64x2x4_t = struct_poly64x2x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:225:25: warning: TODO implement function '__builtin_neon_vbfdotq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:223:55: warning: unable to translate function, demoted to extern
pub extern fn vbfdotq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:248:25: warning: TODO implement function '__builtin_neon_vbfdot_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:246:55: warning: unable to translate function, demoted to extern
pub extern fn vbfdot_f32(arg___p0: float32x2_t, arg___p1: bfloat16x4_t, arg___p2: bfloat16x4_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:271:25: warning: TODO implement function '__builtin_neon_vbfmlalbq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:269:55: warning: unable to translate function, demoted to extern
pub extern fn vbfmlalbq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:294:25: warning: TODO implement function '__builtin_neon_vbfmlaltq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:292:55: warning: unable to translate function, demoted to extern
pub extern fn vbfmlaltq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:317:25: warning: TODO implement function '__builtin_neon_vbfmmlaq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:315:55: warning: unable to translate function, demoted to extern
pub extern fn vbfmmlaq_f32(arg___p0: float32x4_t, arg___p1: bfloat16x8_t, arg___p2: bfloat16x8_t) float32x4_t;
pub inline fn vcombine_bf16(arg___p0: bfloat16x4_t, arg___p1: bfloat16x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcvtah_f32_bf16(arg___p0: bfloat16_t) float32_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32_t = undefined;
    _ = &__ret;
    var __reint: bfloat16_t = __p0;
    _ = &__reint;
    var __reint1: i32 = @as(i32, @bitCast(@as(c_int, @as([*c]i16, @ptrCast(@alignCast(&__reint))).*))) << @intCast(16);
    _ = &__reint1;
    __ret = @as([*c]float32_t, @ptrCast(@alignCast(&__reint1))).*;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:369:24: warning: TODO implement function '__builtin_neon_vcvth_bf16_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:367:54: warning: unable to translate function, demoted to extern
pub extern fn vcvth_bf16_f32(arg___p0: float32_t) bfloat16_t;
pub inline fn vdupq_n_bf16(arg___p0: bfloat16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk bfloat16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_bf16(arg___p0: bfloat16_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk bfloat16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vget_high_bf16(arg___p0: bfloat16x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_bf16(arg___p0: bfloat16x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1557:24: warning: TODO implement function '__builtin_neon_vdotq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1555:57: warning: unable to translate function, demoted to extern
pub extern fn vdotq_u32(arg___p0: uint32x4_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1580:23: warning: TODO implement function '__builtin_neon_vdotq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1578:56: warning: unable to translate function, demoted to extern
pub extern fn vdotq_s32(arg___p0: int32x4_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1603:24: warning: TODO implement function '__builtin_neon_vdot_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1601:57: warning: unable to translate function, demoted to extern
pub extern fn vdot_u32(arg___p0: uint32x2_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1626:23: warning: TODO implement function '__builtin_neon_vdot_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1624:56: warning: unable to translate function, demoted to extern
pub extern fn vdot_s32(arg___p0: int32x2_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1649:25: warning: TODO implement function '__builtin_neon_vabdq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1647:59: warning: unable to translate function, demoted to extern
pub extern fn vabdq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1666:25: warning: TODO implement function '__builtin_neon_vabd_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1664:59: warning: unable to translate function, demoted to extern
pub extern fn vabd_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1683:25: warning: TODO implement function '__builtin_neon_vabsq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1681:59: warning: unable to translate function, demoted to extern
pub extern fn vabsq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1699:25: warning: TODO implement function '__builtin_neon_vabs_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1697:59: warning: unable to translate function, demoted to extern
pub extern fn vabs_f16(arg___p0: float16x4_t) float16x4_t;
pub inline fn vaddq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1749:24: warning: TODO implement function '__builtin_neon_vcageq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1747:58: warning: unable to translate function, demoted to extern
pub extern fn vcageq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1766:24: warning: TODO implement function '__builtin_neon_vcage_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1764:58: warning: unable to translate function, demoted to extern
pub extern fn vcage_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1783:24: warning: TODO implement function '__builtin_neon_vcagtq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1781:58: warning: unable to translate function, demoted to extern
pub extern fn vcagtq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1800:24: warning: TODO implement function '__builtin_neon_vcagt_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1798:58: warning: unable to translate function, demoted to extern
pub extern fn vcagt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1817:24: warning: TODO implement function '__builtin_neon_vcaleq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1815:58: warning: unable to translate function, demoted to extern
pub extern fn vcaleq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1834:24: warning: TODO implement function '__builtin_neon_vcale_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1832:58: warning: unable to translate function, demoted to extern
pub extern fn vcale_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1851:24: warning: TODO implement function '__builtin_neon_vcaltq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1849:58: warning: unable to translate function, demoted to extern
pub extern fn vcaltq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1868:24: warning: TODO implement function '__builtin_neon_vcalt_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1866:58: warning: unable to translate function, demoted to extern
pub extern fn vcalt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t;
pub inline fn vceqq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1919:24: warning: TODO implement function '__builtin_neon_vceqzq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1917:58: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1935:24: warning: TODO implement function '__builtin_neon_vceqz_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1933:58: warning: unable to translate function, demoted to extern
pub extern fn vceqz_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcgeq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1985:24: warning: TODO implement function '__builtin_neon_vcgezq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1983:58: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2001:24: warning: TODO implement function '__builtin_neon_vcgez_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1999:58: warning: unable to translate function, demoted to extern
pub extern fn vcgez_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcgtq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2051:24: warning: TODO implement function '__builtin_neon_vcgtzq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2049:58: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2067:24: warning: TODO implement function '__builtin_neon_vcgtz_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2065:58: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcleq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2117:24: warning: TODO implement function '__builtin_neon_vclezq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2115:58: warning: unable to translate function, demoted to extern
pub extern fn vclezq_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2133:24: warning: TODO implement function '__builtin_neon_vclez_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2131:58: warning: unable to translate function, demoted to extern
pub extern fn vclez_f16(arg___p0: float16x4_t) uint16x4_t;
pub inline fn vcltq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2183:24: warning: TODO implement function '__builtin_neon_vcltzq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2181:58: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2199:24: warning: TODO implement function '__builtin_neon_vcltz_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2197:58: warning: unable to translate function, demoted to extern
pub extern fn vcltz_f16(arg___p0: float16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2215:25: warning: TODO implement function '__builtin_neon_vcvtq_f16_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2213:59: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f16_u16(arg___p0: uint16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2231:25: warning: TODO implement function '__builtin_neon_vcvtq_f16_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2229:59: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f16_s16(arg___p0: int16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2247:25: warning: TODO implement function '__builtin_neon_vcvt_f16_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2245:59: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f16_u16(arg___p0: uint16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2263:25: warning: TODO implement function '__builtin_neon_vcvt_f16_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2261:59: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f16_s16(arg___p0: int16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2423:23: warning: TODO implement function '__builtin_neon_vcvtq_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2421:57: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2439:23: warning: TODO implement function '__builtin_neon_vcvt_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2437:57: warning: unable to translate function, demoted to extern
pub extern fn vcvt_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2455:24: warning: TODO implement function '__builtin_neon_vcvtq_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2453:58: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2471:24: warning: TODO implement function '__builtin_neon_vcvt_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2469:58: warning: unable to translate function, demoted to extern
pub extern fn vcvt_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2487:23: warning: TODO implement function '__builtin_neon_vcvtaq_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2485:57: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2503:23: warning: TODO implement function '__builtin_neon_vcvta_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2501:57: warning: unable to translate function, demoted to extern
pub extern fn vcvta_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2519:24: warning: TODO implement function '__builtin_neon_vcvtaq_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2517:58: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2535:24: warning: TODO implement function '__builtin_neon_vcvta_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2533:58: warning: unable to translate function, demoted to extern
pub extern fn vcvta_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2551:23: warning: TODO implement function '__builtin_neon_vcvtmq_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2549:57: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2567:23: warning: TODO implement function '__builtin_neon_vcvtm_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2565:57: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2583:24: warning: TODO implement function '__builtin_neon_vcvtmq_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2581:58: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2599:24: warning: TODO implement function '__builtin_neon_vcvtm_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2597:58: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2615:23: warning: TODO implement function '__builtin_neon_vcvtnq_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2613:57: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2631:23: warning: TODO implement function '__builtin_neon_vcvtn_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2629:57: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2647:24: warning: TODO implement function '__builtin_neon_vcvtnq_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2645:58: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2663:24: warning: TODO implement function '__builtin_neon_vcvtn_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2661:58: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2679:23: warning: TODO implement function '__builtin_neon_vcvtpq_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2677:57: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_s16_f16(arg___p0: float16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2695:23: warning: TODO implement function '__builtin_neon_vcvtp_s16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2693:57: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_s16_f16(arg___p0: float16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2711:24: warning: TODO implement function '__builtin_neon_vcvtpq_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2709:58: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_u16_f16(arg___p0: float16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2727:24: warning: TODO implement function '__builtin_neon_vcvtp_u16_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2725:58: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_u16_f16(arg___p0: float16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2743:25: warning: TODO implement function '__builtin_neon_vfmaq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2741:59: warning: unable to translate function, demoted to extern
pub extern fn vfmaq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2766:25: warning: TODO implement function '__builtin_neon_vfma_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2764:59: warning: unable to translate function, demoted to extern
pub extern fn vfma_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
pub inline fn vfmsq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f16(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfms_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = vfma_f16(__p0, -__p1, __p2);
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2825:25: warning: TODO implement function '__builtin_neon_vmaxq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2823:59: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2842:25: warning: TODO implement function '__builtin_neon_vmax_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2840:59: warning: unable to translate function, demoted to extern
pub extern fn vmax_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2859:25: warning: TODO implement function '__builtin_neon_vminq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2857:59: warning: unable to translate function, demoted to extern
pub extern fn vminq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2876:25: warning: TODO implement function '__builtin_neon_vmin_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2874:59: warning: unable to translate function, demoted to extern
pub extern fn vmin_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
pub inline fn vmulq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vnegq_f16(arg___p0: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_f16(arg___p0: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2999:25: warning: TODO implement function '__builtin_neon_vpadd_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2997:59: warning: unable to translate function, demoted to extern
pub extern fn vpadd_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3016:25: warning: TODO implement function '__builtin_neon_vpmax_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3014:59: warning: unable to translate function, demoted to extern
pub extern fn vpmax_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3033:25: warning: TODO implement function '__builtin_neon_vpmin_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3031:59: warning: unable to translate function, demoted to extern
pub extern fn vpmin_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3050:25: warning: TODO implement function '__builtin_neon_vrecpeq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3048:59: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3066:25: warning: TODO implement function '__builtin_neon_vrecpe_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3064:59: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3082:25: warning: TODO implement function '__builtin_neon_vrecpsq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3080:59: warning: unable to translate function, demoted to extern
pub extern fn vrecpsq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3099:25: warning: TODO implement function '__builtin_neon_vrecps_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3097:59: warning: unable to translate function, demoted to extern
pub extern fn vrecps_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3116:25: warning: TODO implement function '__builtin_neon_vrsqrteq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3114:59: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3132:25: warning: TODO implement function '__builtin_neon_vrsqrte_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3130:59: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3148:25: warning: TODO implement function '__builtin_neon_vrsqrtsq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3146:59: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3165:25: warning: TODO implement function '__builtin_neon_vrsqrts_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3163:59: warning: unable to translate function, demoted to extern
pub extern fn vrsqrts_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
pub inline fn vsubq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3216:24: warning: TODO implement function '__builtin_neon_vmmlaq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3214:54: warning: unable to translate function, demoted to extern
pub extern fn vmmlaq_u32(arg___p0: uint32x4_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3234:23: warning: TODO implement function '__builtin_neon_vmmlaq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3232:53: warning: unable to translate function, demoted to extern
pub extern fn vmmlaq_s32(arg___p0: int32x4_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3252:23: warning: TODO implement function '__builtin_neon_vusdotq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3250:53: warning: unable to translate function, demoted to extern
pub extern fn vusdotq_s32(arg___p0: int32x4_t, arg___p1: uint8x16_t, arg___p2: int8x16_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3275:23: warning: TODO implement function '__builtin_neon_vusdot_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3273:53: warning: unable to translate function, demoted to extern
pub extern fn vusdot_s32(arg___p0: int32x2_t, arg___p1: uint8x8_t, arg___p2: int8x8_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3298:23: warning: TODO implement function '__builtin_neon_vusmmlaq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3296:53: warning: unable to translate function, demoted to extern
pub extern fn vusmmlaq_s32(arg___p0: int32x4_t, arg___p1: uint8x16_t, arg___p2: int8x16_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4580:24: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4578:49: warning: unable to translate function, demoted to extern
pub extern fn vabdq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4602:24: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4600:49: warning: unable to translate function, demoted to extern
pub extern fn vabdq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4624:24: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4622:49: warning: unable to translate function, demoted to extern
pub extern fn vabdq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4646:23: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4644:48: warning: unable to translate function, demoted to extern
pub extern fn vabdq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4668:25: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4666:50: warning: unable to translate function, demoted to extern
pub extern fn vabdq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4685:23: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4683:48: warning: unable to translate function, demoted to extern
pub extern fn vabdq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4707:23: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4705:48: warning: unable to translate function, demoted to extern
pub extern fn vabdq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4729:23: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4727:48: warning: unable to translate function, demoted to extern
pub extern fn vabd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4751:24: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4749:49: warning: unable to translate function, demoted to extern
pub extern fn vabd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4773:24: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4771:49: warning: unable to translate function, demoted to extern
pub extern fn vabd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4795:22: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4793:47: warning: unable to translate function, demoted to extern
pub extern fn vabd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4817:25: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4815:50: warning: unable to translate function, demoted to extern
pub extern fn vabd_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4834:23: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4832:48: warning: unable to translate function, demoted to extern
pub extern fn vabd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4856:23: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4854:48: warning: unable to translate function, demoted to extern
pub extern fn vabd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4878:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4876:48: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s8(arg___p0: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4894:25: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4892:50: warning: unable to translate function, demoted to extern
pub extern fn vabsq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4910:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4908:48: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s32(arg___p0: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4926:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4924:48: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s16(arg___p0: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4942:22: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4940:47: warning: unable to translate function, demoted to extern
pub extern fn vabs_s8(arg___p0: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4958:25: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4956:50: warning: unable to translate function, demoted to extern
pub extern fn vabs_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4974:23: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4972:48: warning: unable to translate function, demoted to extern
pub extern fn vabs_s32(arg___p0: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4990:23: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4988:48: warning: unable to translate function, demoted to extern
pub extern fn vabs_s16(arg___p0: int16x4_t) int16x4_t;
pub inline fn vaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5288:23: warning: TODO implement function '__builtin_neon_vadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5286:48: warning: unable to translate function, demoted to extern
pub extern fn vadd_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5304:24: warning: TODO implement function '__builtin_neon_vadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5302:49: warning: unable to translate function, demoted to extern
pub extern fn vadd_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) poly64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5310:24: warning: TODO implement function '__builtin_neon_vadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5308:49: warning: unable to translate function, demoted to extern
pub extern fn vadd_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5327:24: warning: TODO implement function '__builtin_neon_vaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5325:49: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5344:24: warning: TODO implement function '__builtin_neon_vaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5342:49: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5361:24: warning: TODO implement function '__builtin_neon_vaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5359:49: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5378:24: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5376:49: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5400:24: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5398:49: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5422:23: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5420:48: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5444:23: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5442:48: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5466:23: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5464:48: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5488:22: warning: TODO implement function '__builtin_neon_vaddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:5486:47: warning: unable to translate function, demoted to extern
pub extern fn vaddhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
pub inline fn vandq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vandq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vand_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & __p1;
    return __ret;
}
pub inline fn vbicq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbicq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
pub inline fn vbic_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 & ~__p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6006:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6004:48: warning: unable to translate function, demoted to extern
pub extern fn vbsl_p8(arg___p0: uint8x8_t, arg___p1: poly8x8_t, arg___p2: poly8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6024:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6022:49: warning: unable to translate function, demoted to extern
pub extern fn vbsl_p16(arg___p0: uint16x4_t, arg___p1: poly16x4_t, arg___p2: poly16x4_t) poly16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6042:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6040:49: warning: unable to translate function, demoted to extern
pub extern fn vbslq_p8(arg___p0: uint8x16_t, arg___p1: poly8x16_t, arg___p2: poly8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6060:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6058:49: warning: unable to translate function, demoted to extern
pub extern fn vbslq_p16(arg___p0: uint16x8_t, arg___p1: poly16x8_t, arg___p2: poly16x8_t) poly16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6078:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6076:49: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6096:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6094:49: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6114:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6112:49: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6132:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6130:49: warning: unable to translate function, demoted to extern
pub extern fn vbslq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6150:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6148:48: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s8(arg___p0: uint8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6168:25: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6166:50: warning: unable to translate function, demoted to extern
pub extern fn vbslq_f32(arg___p0: uint32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6186:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6184:48: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s32(arg___p0: uint32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6204:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6202:48: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s64(arg___p0: uint64x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6222:23: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6220:48: warning: unable to translate function, demoted to extern
pub extern fn vbslq_s16(arg___p0: uint16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6240:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6238:48: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6258:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6256:49: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6275:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6273:49: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t, arg___p2: uint64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6281:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6279:49: warning: unable to translate function, demoted to extern
pub extern fn vbsl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6299:22: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6297:47: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s8(arg___p0: uint8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6317:25: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6315:50: warning: unable to translate function, demoted to extern
pub extern fn vbsl_f32(arg___p0: uint32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6335:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6333:48: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s32(arg___p0: uint32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6352:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6350:48: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s64(arg___p0: uint64x1_t, arg___p1: int64x1_t, arg___p2: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6358:23: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6356:48: warning: unable to translate function, demoted to extern
pub extern fn vbsl_s16(arg___p0: uint16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6376:25: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6374:50: warning: unable to translate function, demoted to extern
pub extern fn vbslq_f16(arg___p0: uint16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6394:25: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6392:50: warning: unable to translate function, demoted to extern
pub extern fn vbsl_f16(arg___p0: uint16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6412:24: warning: TODO implement function '__builtin_neon_vcageq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6410:49: warning: unable to translate function, demoted to extern
pub extern fn vcageq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6429:24: warning: TODO implement function '__builtin_neon_vcage_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6427:49: warning: unable to translate function, demoted to extern
pub extern fn vcage_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6446:24: warning: TODO implement function '__builtin_neon_vcagtq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6444:49: warning: unable to translate function, demoted to extern
pub extern fn vcagtq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6463:24: warning: TODO implement function '__builtin_neon_vcagt_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6461:49: warning: unable to translate function, demoted to extern
pub extern fn vcagt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6480:24: warning: TODO implement function '__builtin_neon_vcaleq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6478:49: warning: unable to translate function, demoted to extern
pub extern fn vcaleq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6497:24: warning: TODO implement function '__builtin_neon_vcale_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6495:49: warning: unable to translate function, demoted to extern
pub extern fn vcale_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6514:24: warning: TODO implement function '__builtin_neon_vcaltq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6512:49: warning: unable to translate function, demoted to extern
pub extern fn vcaltq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6531:24: warning: TODO implement function '__builtin_neon_vcalt_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:6529:49: warning: unable to translate function, demoted to extern
pub extern fn vcalt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t;
pub inline fn vceq_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vcgeq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgtq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcleq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 <= __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7534:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7532:48: warning: unable to translate function, demoted to extern
pub extern fn vclsq_u8(arg___p0: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7550:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7548:48: warning: unable to translate function, demoted to extern
pub extern fn vclsq_u32(arg___p0: uint32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7566:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7564:48: warning: unable to translate function, demoted to extern
pub extern fn vclsq_u16(arg___p0: uint16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7582:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7580:48: warning: unable to translate function, demoted to extern
pub extern fn vclsq_s8(arg___p0: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7598:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7596:48: warning: unable to translate function, demoted to extern
pub extern fn vclsq_s32(arg___p0: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7614:23: warning: TODO implement function '__builtin_neon_vclsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7612:48: warning: unable to translate function, demoted to extern
pub extern fn vclsq_s16(arg___p0: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7630:22: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7628:47: warning: unable to translate function, demoted to extern
pub extern fn vcls_u8(arg___p0: uint8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7646:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7644:48: warning: unable to translate function, demoted to extern
pub extern fn vcls_u32(arg___p0: uint32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7662:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7660:48: warning: unable to translate function, demoted to extern
pub extern fn vcls_u16(arg___p0: uint16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7678:22: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7676:47: warning: unable to translate function, demoted to extern
pub extern fn vcls_s8(arg___p0: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7694:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7692:48: warning: unable to translate function, demoted to extern
pub extern fn vcls_s32(arg___p0: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7710:23: warning: TODO implement function '__builtin_neon_vcls_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7708:48: warning: unable to translate function, demoted to extern
pub extern fn vcls_s16(arg___p0: int16x4_t) int16x4_t;
pub inline fn vcltq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0 < __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7964:24: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7962:49: warning: unable to translate function, demoted to extern
pub extern fn vclzq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7980:24: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7978:49: warning: unable to translate function, demoted to extern
pub extern fn vclzq_u32(arg___p0: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7996:24: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:7994:49: warning: unable to translate function, demoted to extern
pub extern fn vclzq_u16(arg___p0: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8012:23: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8010:48: warning: unable to translate function, demoted to extern
pub extern fn vclzq_s8(arg___p0: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8028:23: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8026:48: warning: unable to translate function, demoted to extern
pub extern fn vclzq_s32(arg___p0: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8044:23: warning: TODO implement function '__builtin_neon_vclzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8042:48: warning: unable to translate function, demoted to extern
pub extern fn vclzq_s16(arg___p0: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8060:23: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8058:48: warning: unable to translate function, demoted to extern
pub extern fn vclz_u8(arg___p0: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8076:24: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8074:49: warning: unable to translate function, demoted to extern
pub extern fn vclz_u32(arg___p0: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8092:24: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8090:49: warning: unable to translate function, demoted to extern
pub extern fn vclz_u16(arg___p0: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8108:22: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8106:47: warning: unable to translate function, demoted to extern
pub extern fn vclz_s8(arg___p0: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8124:23: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8122:48: warning: unable to translate function, demoted to extern
pub extern fn vclz_s32(arg___p0: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8140:23: warning: TODO implement function '__builtin_neon_vclz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8138:48: warning: unable to translate function, demoted to extern
pub extern fn vclz_s16(arg___p0: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8156:23: warning: TODO implement function '__builtin_neon_vcnt_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8154:48: warning: unable to translate function, demoted to extern
pub extern fn vcnt_p8(arg___p0: poly8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8172:24: warning: TODO implement function '__builtin_neon_vcntq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8170:49: warning: unable to translate function, demoted to extern
pub extern fn vcntq_p8(arg___p0: poly8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8188:24: warning: TODO implement function '__builtin_neon_vcntq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8186:49: warning: unable to translate function, demoted to extern
pub extern fn vcntq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8204:23: warning: TODO implement function '__builtin_neon_vcntq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8202:48: warning: unable to translate function, demoted to extern
pub extern fn vcntq_s8(arg___p0: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8220:23: warning: TODO implement function '__builtin_neon_vcnt_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8218:48: warning: unable to translate function, demoted to extern
pub extern fn vcnt_u8(arg___p0: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8236:22: warning: TODO implement function '__builtin_neon_vcnt_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8234:47: warning: unable to translate function, demoted to extern
pub extern fn vcnt_s8(arg___p0: int8x8_t) int8x8_t;
pub inline fn vcombine_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8564:25: warning: TODO implement function '__builtin_neon_vcvtq_f32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8562:50: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f32_u32(arg___p0: uint32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8580:25: warning: TODO implement function '__builtin_neon_vcvtq_f32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8578:50: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f32_s32(arg___p0: int32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8596:25: warning: TODO implement function '__builtin_neon_vcvt_f32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8594:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_u32(arg___p0: uint32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8612:25: warning: TODO implement function '__builtin_neon_vcvt_f32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8610:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_s32(arg___p0: int32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8772:23: warning: TODO implement function '__builtin_neon_vcvtq_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8770:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8788:23: warning: TODO implement function '__builtin_neon_vcvt_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8786:48: warning: unable to translate function, demoted to extern
pub extern fn vcvt_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8804:24: warning: TODO implement function '__builtin_neon_vcvtq_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8802:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8820:24: warning: TODO implement function '__builtin_neon_vcvt_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8818:49: warning: unable to translate function, demoted to extern
pub extern fn vcvt_u32_f32(arg___p0: float32x2_t) uint32x2_t;
pub inline fn vdup_n_p8(arg___p0: poly8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_p16(arg___p0: poly16_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk poly16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_p8(arg___p0: poly8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk poly8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_p16(arg___p0: poly16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u8(arg___p0: u8) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk uint8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u32(arg___p0: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u64(arg___p0: u64) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_u16(arg___p0: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s8(arg___p0: i8) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk int8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_f32(arg___p0: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s32(arg___p0: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s64(arg___p0: i64) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_s16(arg___p0: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u8(arg___p0: u8) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u32(arg___p0: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u64(arg___p0: u64) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk uint64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vdup_n_u16(arg___p0: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s8(arg___p0: i8) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vdup_n_f32(arg___p0: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s32(arg___p0: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s64(arg___p0: i64) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk int64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vdup_n_s16(arg___p0: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn veorq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veorq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn veor_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 ^ __p1;
    return __ret;
}
pub inline fn vget_high_p8(arg___p0: poly8x16_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_p16(arg___p0: poly16x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u8(arg___p0: uint8x16_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u32(arg___p0: uint32x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u64(arg___p0: uint64x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_u16(arg___p0: uint16x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s8(arg___p0: int8x16_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_f32(arg___p0: float32x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_f16(arg___p0: float16x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s32(arg___p0: int32x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s64(arg___p0: int64x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_s16(arg___p0: int16x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_p8(arg___p0: poly8x16_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_p16(arg___p0: poly16x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u8(arg___p0: uint8x16_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u32(arg___p0: uint32x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u64(arg___p0: uint64x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_u16(arg___p0: uint16x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s8(arg___p0: int8x16_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_f32(arg___p0: float32x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_f16(arg___p0: float16x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s32(arg___p0: int32x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s64(arg___p0: int64x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_s16(arg___p0: int16x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11207:24: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11205:49: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11224:24: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11222:49: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11241:24: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11239:49: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11258:23: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11256:48: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11275:23: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11273:48: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11292:23: warning: TODO implement function '__builtin_neon_vhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11290:48: warning: unable to translate function, demoted to extern
pub extern fn vhaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11309:23: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11307:48: warning: unable to translate function, demoted to extern
pub extern fn vhadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11326:24: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11324:49: warning: unable to translate function, demoted to extern
pub extern fn vhadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11343:24: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11341:49: warning: unable to translate function, demoted to extern
pub extern fn vhadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11360:22: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11358:47: warning: unable to translate function, demoted to extern
pub extern fn vhadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11377:23: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11375:48: warning: unable to translate function, demoted to extern
pub extern fn vhadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11394:23: warning: TODO implement function '__builtin_neon_vhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11392:48: warning: unable to translate function, demoted to extern
pub extern fn vhadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11411:24: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11409:49: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11428:24: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11426:49: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11445:24: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11443:49: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11462:23: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11460:48: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11479:23: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11477:48: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11496:23: warning: TODO implement function '__builtin_neon_vhsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11494:48: warning: unable to translate function, demoted to extern
pub extern fn vhsubq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11513:23: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11511:48: warning: unable to translate function, demoted to extern
pub extern fn vhsub_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11530:24: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11528:49: warning: unable to translate function, demoted to extern
pub extern fn vhsub_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11547:24: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11545:49: warning: unable to translate function, demoted to extern
pub extern fn vhsub_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11564:22: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11562:47: warning: unable to translate function, demoted to extern
pub extern fn vhsub_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11581:23: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11579:48: warning: unable to translate function, demoted to extern
pub extern fn vhsub_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11598:23: warning: TODO implement function '__builtin_neon_vhsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11596:48: warning: unable to translate function, demoted to extern
pub extern fn vhsub_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16909:24: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16907:49: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16926:24: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16924:49: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16943:24: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16941:49: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16960:23: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16958:48: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16977:25: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16975:50: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16994:23: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16992:48: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17011:23: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17009:48: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17028:23: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17026:48: warning: unable to translate function, demoted to extern
pub extern fn vmax_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17045:24: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17043:49: warning: unable to translate function, demoted to extern
pub extern fn vmax_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17062:24: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17060:49: warning: unable to translate function, demoted to extern
pub extern fn vmax_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17079:22: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17077:47: warning: unable to translate function, demoted to extern
pub extern fn vmax_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17096:25: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17094:50: warning: unable to translate function, demoted to extern
pub extern fn vmax_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17113:23: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17111:48: warning: unable to translate function, demoted to extern
pub extern fn vmax_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17130:23: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17128:48: warning: unable to translate function, demoted to extern
pub extern fn vmax_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17147:24: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17145:49: warning: unable to translate function, demoted to extern
pub extern fn vminq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17164:24: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17162:49: warning: unable to translate function, demoted to extern
pub extern fn vminq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17181:24: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17179:49: warning: unable to translate function, demoted to extern
pub extern fn vminq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17198:23: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17196:48: warning: unable to translate function, demoted to extern
pub extern fn vminq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17215:25: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17213:50: warning: unable to translate function, demoted to extern
pub extern fn vminq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17232:23: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17230:48: warning: unable to translate function, demoted to extern
pub extern fn vminq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17249:23: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17247:48: warning: unable to translate function, demoted to extern
pub extern fn vminq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17266:23: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17264:48: warning: unable to translate function, demoted to extern
pub extern fn vmin_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17283:24: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17281:49: warning: unable to translate function, demoted to extern
pub extern fn vmin_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17300:24: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17298:49: warning: unable to translate function, demoted to extern
pub extern fn vmin_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17317:22: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17315:47: warning: unable to translate function, demoted to extern
pub extern fn vmin_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17334:25: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17332:50: warning: unable to translate function, demoted to extern
pub extern fn vmin_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17351:23: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17349:48: warning: unable to translate function, demoted to extern
pub extern fn vmin_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17368:23: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17366:48: warning: unable to translate function, demoted to extern
pub extern fn vmin_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vmlaq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlaq_n_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlaq_n_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmla_n_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_n_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmlsq_n_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        const tmp_4 = __p2;
        const tmp_5 = __p2;
        const tmp_6 = __p2;
        const tmp_7 = __p2;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    }));
    return __ret;
}
pub inline fn vmls_n_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * (blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    }));
    return __ret;
}
pub inline fn vmov_n_p8(arg___p0: poly8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_p16(arg___p0: poly16_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk poly16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_p8(arg___p0: poly8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk poly8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_p16(arg___p0: poly16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk poly16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u8(arg___p0: u8) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk uint8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u32(arg___p0: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u64(arg___p0: u64) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_u16(arg___p0: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s8(arg___p0: i8) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        const tmp_8 = __p0;
        const tmp_9 = __p0;
        const tmp_10 = __p0;
        const tmp_11 = __p0;
        const tmp_12 = __p0;
        const tmp_13 = __p0;
        const tmp_14 = __p0;
        const tmp_15 = __p0;
        break :blk int8x16_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
            tmp_8,
            tmp_9,
            tmp_10,
            tmp_11,
            tmp_12,
            tmp_13,
            tmp_14,
            tmp_15,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_f32(arg___p0: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s32(arg___p0: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s64(arg___p0: i64) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_s16(arg___p0: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u8(arg___p0: u8) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk uint8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u32(arg___p0: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u64(arg___p0: u64) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk uint64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vmov_n_u16(arg___p0: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s8(arg___p0: i8) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        const tmp_4 = __p0;
        const tmp_5 = __p0;
        const tmp_6 = __p0;
        const tmp_7 = __p0;
        break :blk int8x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    };
    return __ret;
}
pub inline fn vmov_n_f32(arg___p0: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s32(arg___p0: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s64(arg___p0: i64) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk int64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vmov_n_s16(arg___p0: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        const tmp_2 = __p0;
        const tmp_3 = __p0;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    };
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19053:24: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19051:49: warning: unable to translate function, demoted to extern
pub extern fn vmovl_u8(arg___p0: uint8x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19074:24: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19072:49: warning: unable to translate function, demoted to extern
pub extern fn vmovl_u32(arg___p0: uint32x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19095:24: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19093:49: warning: unable to translate function, demoted to extern
pub extern fn vmovl_u16(arg___p0: uint16x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19116:23: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19114:48: warning: unable to translate function, demoted to extern
pub extern fn vmovl_s8(arg___p0: int8x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19137:23: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19135:48: warning: unable to translate function, demoted to extern
pub extern fn vmovl_s32(arg___p0: int32x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19158:23: warning: TODO implement function '__builtin_neon_vmovl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19156:48: warning: unable to translate function, demoted to extern
pub extern fn vmovl_s16(arg___p0: int16x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19179:24: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19177:49: warning: unable to translate function, demoted to extern
pub extern fn vmovn_u32(arg___p0: uint32x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19200:24: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19198:49: warning: unable to translate function, demoted to extern
pub extern fn vmovn_u64(arg___p0: uint64x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19221:23: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19219:48: warning: unable to translate function, demoted to extern
pub extern fn vmovn_u16(arg___p0: uint16x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19242:23: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19240:48: warning: unable to translate function, demoted to extern
pub extern fn vmovn_s32(arg___p0: int32x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19263:23: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19261:48: warning: unable to translate function, demoted to extern
pub extern fn vmovn_s64(arg___p0: int64x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19284:22: warning: TODO implement function '__builtin_neon_vmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19282:47: warning: unable to translate function, demoted to extern
pub extern fn vmovn_s16(arg___p0: int16x8_t) int8x8_t;
pub inline fn vmulq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmulq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19543:23: warning: TODO implement function '__builtin_neon_vmul_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19541:48: warning: unable to translate function, demoted to extern
pub extern fn vmul_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19560:24: warning: TODO implement function '__builtin_neon_vmulq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19558:49: warning: unable to translate function, demoted to extern
pub extern fn vmulq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t;
pub inline fn vmulq_n_u32(arg___p0: uint32x4_t, arg___p1: u32) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk uint32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_u16(arg___p0: uint16x8_t, arg___p1: u16) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk uint16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_f32(arg___p0: float32x4_t, arg___p1: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_s32(arg___p0: int32x4_t, arg___p1: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmulq_n_s16(arg___p0: int16x8_t, arg___p1: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vmul_n_u32(arg___p0: uint32x2_t, arg___p1: u32) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmul_n_u16(arg___p0: uint16x4_t, arg___p1: u16) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmul_n_f32(arg___p0: float32x2_t, arg___p1: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmul_n_s32(arg___p0: int32x2_t, arg___p1: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmul_n_s16(arg___p0: int16x4_t, arg___p1: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19947:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19945:49: warning: unable to translate function, demoted to extern
pub extern fn vmull_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19969:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19967:49: warning: unable to translate function, demoted to extern
pub extern fn vmull_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19991:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19989:49: warning: unable to translate function, demoted to extern
pub extern fn vmull_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20013:24: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20011:49: warning: unable to translate function, demoted to extern
pub extern fn vmull_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20035:23: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20033:48: warning: unable to translate function, demoted to extern
pub extern fn vmull_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20057:23: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20055:48: warning: unable to translate function, demoted to extern
pub extern fn vmull_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20079:23: warning: TODO implement function '__builtin_neon_vmull_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20077:48: warning: unable to translate function, demoted to extern
pub extern fn vmull_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t;
pub inline fn vmull_n_u32(arg___p0: uint32x2_t, arg___p1: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_u32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmull_n_u16(arg___p0: uint16x4_t, arg___p1: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_u16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmull_n_s32(arg___p0: int32x2_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmull_n_s16(arg___p0: int16x4_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmvn_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_u32(arg___p0: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_u16(arg___p0: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_s32(arg___p0: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvnq_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_u32(arg___p0: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_u16(arg___p0: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_s32(arg___p0: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vmvn_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = ~__p0;
    return __ret;
}
pub inline fn vnegq_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_f32(arg___p0: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_s32(arg___p0: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_f32(arg___p0: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s32(arg___p0: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vornq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vornq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorn_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | ~__p1;
    return __ret;
}
pub inline fn vorrq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorrq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
pub inline fn vorr_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 | __p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21117:24: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21115:49: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21134:24: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21132:49: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21151:24: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21149:49: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21168:23: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21166:48: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_s8(arg___p0: int16x8_t, arg___p1: int8x16_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21185:23: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21183:48: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_s32(arg___p0: int64x2_t, arg___p1: int32x4_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21202:23: warning: TODO implement function '__builtin_neon_vpadalq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21200:48: warning: unable to translate function, demoted to extern
pub extern fn vpadalq_s16(arg___p0: int32x4_t, arg___p1: int16x8_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21219:24: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21217:49: warning: unable to translate function, demoted to extern
pub extern fn vpadal_u8(arg___p0: uint16x4_t, arg___p1: uint8x8_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21236:24: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21234:49: warning: unable to translate function, demoted to extern
pub extern fn vpadal_u32(arg___p0: uint64x1_t, arg___p1: uint32x2_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21251:24: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21249:49: warning: unable to translate function, demoted to extern
pub extern fn vpadal_u16(arg___p0: uint32x2_t, arg___p1: uint16x4_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21268:23: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21266:48: warning: unable to translate function, demoted to extern
pub extern fn vpadal_s8(arg___p0: int16x4_t, arg___p1: int8x8_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21285:23: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21283:48: warning: unable to translate function, demoted to extern
pub extern fn vpadal_s32(arg___p0: int64x1_t, arg___p1: int32x2_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21300:23: warning: TODO implement function '__builtin_neon_vpadal_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21298:48: warning: unable to translate function, demoted to extern
pub extern fn vpadal_s16(arg___p0: int32x2_t, arg___p1: int16x4_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21317:23: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21315:48: warning: unable to translate function, demoted to extern
pub extern fn vpadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21334:24: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21332:49: warning: unable to translate function, demoted to extern
pub extern fn vpadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21351:24: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21349:49: warning: unable to translate function, demoted to extern
pub extern fn vpadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21368:22: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21366:47: warning: unable to translate function, demoted to extern
pub extern fn vpadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21385:25: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21383:50: warning: unable to translate function, demoted to extern
pub extern fn vpadd_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21402:23: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21400:48: warning: unable to translate function, demoted to extern
pub extern fn vpadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21419:23: warning: TODO implement function '__builtin_neon_vpadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21417:48: warning: unable to translate function, demoted to extern
pub extern fn vpadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21436:24: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21434:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_u8(arg___p0: uint8x16_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21452:24: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21450:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_u32(arg___p0: uint32x4_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21468:24: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21466:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_u16(arg___p0: uint16x8_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21484:23: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21482:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_s8(arg___p0: int8x16_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21500:23: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21498:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_s32(arg___p0: int32x4_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21516:23: warning: TODO implement function '__builtin_neon_vpaddlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21514:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddlq_s16(arg___p0: int16x8_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21532:24: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21530:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_u8(arg___p0: uint8x8_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21548:24: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21546:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_u32(arg___p0: uint32x2_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21563:24: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21561:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_u16(arg___p0: uint16x4_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21579:23: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21577:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_s8(arg___p0: int8x8_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21595:23: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21593:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_s32(arg___p0: int32x2_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21610:23: warning: TODO implement function '__builtin_neon_vpaddl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21608:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddl_s16(arg___p0: int16x4_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21626:23: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21624:48: warning: unable to translate function, demoted to extern
pub extern fn vpmax_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21643:24: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21641:49: warning: unable to translate function, demoted to extern
pub extern fn vpmax_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21660:24: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21658:49: warning: unable to translate function, demoted to extern
pub extern fn vpmax_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21677:22: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21675:47: warning: unable to translate function, demoted to extern
pub extern fn vpmax_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21694:25: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21692:50: warning: unable to translate function, demoted to extern
pub extern fn vpmax_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21711:23: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21709:48: warning: unable to translate function, demoted to extern
pub extern fn vpmax_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21728:23: warning: TODO implement function '__builtin_neon_vpmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21726:48: warning: unable to translate function, demoted to extern
pub extern fn vpmax_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21745:23: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21743:48: warning: unable to translate function, demoted to extern
pub extern fn vpmin_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21762:24: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21760:49: warning: unable to translate function, demoted to extern
pub extern fn vpmin_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21779:24: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21777:49: warning: unable to translate function, demoted to extern
pub extern fn vpmin_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21796:22: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21794:47: warning: unable to translate function, demoted to extern
pub extern fn vpmin_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21813:25: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21811:50: warning: unable to translate function, demoted to extern
pub extern fn vpmin_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21830:23: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21828:48: warning: unable to translate function, demoted to extern
pub extern fn vpmin_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21847:23: warning: TODO implement function '__builtin_neon_vpmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21845:48: warning: unable to translate function, demoted to extern
pub extern fn vpmin_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21864:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21862:48: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s8(arg___p0: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21880:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21878:48: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s32(arg___p0: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21896:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21894:48: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s16(arg___p0: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21912:22: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21910:47: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s8(arg___p0: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21928:23: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21926:48: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s32(arg___p0: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21944:23: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21942:48: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s16(arg___p0: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21960:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21958:49: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21977:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21975:49: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21994:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:21992:49: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22011:24: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22009:49: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22028:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22026:48: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22045:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22043:48: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22062:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22060:48: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22079:23: warning: TODO implement function '__builtin_neon_vqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22077:48: warning: unable to translate function, demoted to extern
pub extern fn vqaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22096:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22094:48: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22113:24: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22111:49: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22129:24: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22127:49: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22135:24: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22133:49: warning: unable to translate function, demoted to extern
pub extern fn vqadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22152:22: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22150:47: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22169:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22167:48: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22185:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22183:48: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22191:23: warning: TODO implement function '__builtin_neon_vqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22189:48: warning: unable to translate function, demoted to extern
pub extern fn vqadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22208:23: warning: TODO implement function '__builtin_neon_vqdmlal_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22206:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmlal_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22231:23: warning: TODO implement function '__builtin_neon_vqdmlal_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22229:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmlal_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t;
pub inline fn vqdmlal_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmlal_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s16(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22346:23: warning: TODO implement function '__builtin_neon_vqdmlsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22344:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmlsl_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22369:23: warning: TODO implement function '__builtin_neon_vqdmlsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22367:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmlsl_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t;
pub inline fn vqdmlsl_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmlsl_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s16(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22484:23: warning: TODO implement function '__builtin_neon_vqdmulhq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22482:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22506:23: warning: TODO implement function '__builtin_neon_vqdmulhq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22504:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22528:23: warning: TODO implement function '__builtin_neon_vqdmulh_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22526:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmulh_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22550:23: warning: TODO implement function '__builtin_neon_vqdmulh_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22548:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmulh_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vqdmulhq_n_s32(arg___p0: int32x4_t, arg___p1: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmulhq_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vqdmulhq_n_s16(arg___p0: int16x8_t, arg___p1: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vqdmulhq_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vqdmulh_n_s32(arg___p0: int32x2_t, arg___p1: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = vqdmulh_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmulh_n_s16(arg___p0: int16x4_t, arg___p1: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = vqdmulh_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22636:23: warning: TODO implement function '__builtin_neon_vqdmull_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22634:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmull_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22658:23: warning: TODO implement function '__builtin_neon_vqdmull_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22656:48: warning: unable to translate function, demoted to extern
pub extern fn vqdmull_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t;
pub inline fn vqdmull_n_s32(arg___p0: int32x2_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqdmull_n_s16(arg___p0: int16x4_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22764:24: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22762:49: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_u32(arg___p0: uint32x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22785:24: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22783:49: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_u64(arg___p0: uint64x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22806:23: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22804:48: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_u16(arg___p0: uint16x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22827:23: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22825:48: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_s32(arg___p0: int32x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22848:23: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22846:48: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_s64(arg___p0: int64x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22869:22: warning: TODO implement function '__builtin_neon_vqmovn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22867:47: warning: unable to translate function, demoted to extern
pub extern fn vqmovn_s16(arg___p0: int16x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22890:24: warning: TODO implement function '__builtin_neon_vqmovun_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22888:49: warning: unable to translate function, demoted to extern
pub extern fn vqmovun_s32(arg___p0: int32x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22911:24: warning: TODO implement function '__builtin_neon_vqmovun_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22909:49: warning: unable to translate function, demoted to extern
pub extern fn vqmovun_s64(arg___p0: int64x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22932:23: warning: TODO implement function '__builtin_neon_vqmovun_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22930:48: warning: unable to translate function, demoted to extern
pub extern fn vqmovun_s16(arg___p0: int16x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22953:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22951:48: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s8(arg___p0: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22969:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22967:48: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s32(arg___p0: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22985:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22983:48: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s16(arg___p0: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23001:22: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22999:47: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s8(arg___p0: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23017:23: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23015:48: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s32(arg___p0: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23033:23: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23031:48: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s16(arg___p0: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23049:23: warning: TODO implement function '__builtin_neon_vqrdmulhq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23047:48: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23071:23: warning: TODO implement function '__builtin_neon_vqrdmulhq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23069:48: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23093:23: warning: TODO implement function '__builtin_neon_vqrdmulh_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23091:48: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulh_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23115:23: warning: TODO implement function '__builtin_neon_vqrdmulh_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23113:48: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulh_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vqrdmulhq_n_s32(arg___p0: int32x4_t, arg___p1: i32) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqrdmulhq_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vqrdmulhq_n_s16(arg___p0: int16x8_t, arg___p1: i16) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vqrdmulhq_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        const tmp_4 = __p1;
        const tmp_5 = __p1;
        const tmp_6 = __p1;
        const tmp_7 = __p1;
        break :blk int16x8_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
            tmp_4,
            tmp_5,
            tmp_6,
            tmp_7,
        };
    });
    return __ret;
}
pub inline fn vqrdmulh_n_s32(arg___p0: int32x2_t, arg___p1: i32) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = vqrdmulh_s32(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vqrdmulh_n_s16(arg___p0: int16x4_t, arg___p1: i16) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = vqrdmulh_s16(__p0, blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        const tmp_2 = __p1;
        const tmp_3 = __p1;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23201:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23199:49: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23218:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23216:49: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23235:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23233:49: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23252:24: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23250:49: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23269:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23267:48: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23286:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23284:48: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23303:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23301:48: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23320:23: warning: TODO implement function '__builtin_neon_vqrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23318:48: warning: unable to translate function, demoted to extern
pub extern fn vqrshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23337:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23335:48: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23354:24: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23352:49: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23370:24: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23368:49: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23376:24: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23374:49: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23393:22: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23391:47: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23410:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23408:48: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23426:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23424:48: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23432:23: warning: TODO implement function '__builtin_neon_vqrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23430:48: warning: unable to translate function, demoted to extern
pub extern fn vqrshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23665:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23663:49: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23682:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23680:49: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23699:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23697:49: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23716:24: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23714:49: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23733:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23731:48: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23750:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23748:48: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23767:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23765:48: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23784:23: warning: TODO implement function '__builtin_neon_vqshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23782:48: warning: unable to translate function, demoted to extern
pub extern fn vqshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23801:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23799:48: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23818:24: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23816:49: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23834:24: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23832:49: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23840:24: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23838:49: warning: unable to translate function, demoted to extern
pub extern fn vqshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23857:22: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23855:47: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23874:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23872:48: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23890:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23888:48: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23896:23: warning: TODO implement function '__builtin_neon_vqshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23894:48: warning: unable to translate function, demoted to extern
pub extern fn vqshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24525:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24523:49: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24542:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24540:49: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24559:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24557:49: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24576:24: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24574:49: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24593:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24591:48: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24610:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24608:48: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24627:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24625:48: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24644:23: warning: TODO implement function '__builtin_neon_vqsubq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24642:48: warning: unable to translate function, demoted to extern
pub extern fn vqsubq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24661:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24659:48: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24678:24: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24676:49: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24694:24: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24692:49: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24700:24: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24698:49: warning: unable to translate function, demoted to extern
pub extern fn vqsub_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24717:22: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24715:47: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24734:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24732:48: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24750:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24748:48: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24756:23: warning: TODO implement function '__builtin_neon_vqsub_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24754:48: warning: unable to translate function, demoted to extern
pub extern fn vqsub_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24773:24: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24771:49: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24795:24: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24793:49: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24817:23: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24815:48: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24839:23: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24837:48: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24861:23: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24859:48: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24883:22: warning: TODO implement function '__builtin_neon_vraddhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24881:47: warning: unable to translate function, demoted to extern
pub extern fn vraddhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24905:24: warning: TODO implement function '__builtin_neon_vrecpeq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24903:49: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_u32(arg___p0: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24921:25: warning: TODO implement function '__builtin_neon_vrecpeq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24919:50: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24937:24: warning: TODO implement function '__builtin_neon_vrecpe_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24935:49: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_u32(arg___p0: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24953:25: warning: TODO implement function '__builtin_neon_vrecpe_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24951:50: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24969:25: warning: TODO implement function '__builtin_neon_vrecpsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24967:50: warning: unable to translate function, demoted to extern
pub extern fn vrecpsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24986:25: warning: TODO implement function '__builtin_neon_vrecps_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24984:50: warning: unable to translate function, demoted to extern
pub extern fn vrecps_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
pub inline fn vrev16_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev16q_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev16q_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev16q_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev16_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev16_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32_p16(arg___p0: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_p16(arg___p0: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_u16(arg___p0: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32q_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32_u16(arg___p0: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev32_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_p8(arg___p0: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_p16(arg___p0: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_p8(arg___p0: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_p16(arg___p0: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_u8(arg___p0: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_u32(arg___p0: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_u16(arg___p0: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_s8(arg___p0: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_f32(arg___p0: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_s32(arg___p0: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_s16(arg___p0: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_u8(arg___p0: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_u32(arg___p0: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_u16(arg___p0: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_s8(arg___p0: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_f32(arg___p0: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_s32(arg___p0: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_s16(arg___p0: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64q_f16(arg___p0: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vrev64_f16(arg___p0: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25611:24: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25609:49: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25628:24: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25626:49: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25645:24: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25643:49: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25662:23: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25660:48: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25679:23: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25677:48: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25696:23: warning: TODO implement function '__builtin_neon_vrhaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25694:48: warning: unable to translate function, demoted to extern
pub extern fn vrhaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25713:23: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25711:48: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25730:24: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25728:49: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25747:24: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25745:49: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25764:22: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25762:47: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25781:23: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25779:48: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25798:23: warning: TODO implement function '__builtin_neon_vrhadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25796:48: warning: unable to translate function, demoted to extern
pub extern fn vrhadd_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25815:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25813:49: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25832:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25830:49: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25849:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25847:49: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25866:24: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25864:49: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25883:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25881:48: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25900:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25898:48: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25917:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25915:48: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25934:23: warning: TODO implement function '__builtin_neon_vrshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25932:48: warning: unable to translate function, demoted to extern
pub extern fn vrshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25951:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25949:48: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25968:24: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25966:49: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25984:24: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25982:49: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25990:24: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:25988:49: warning: unable to translate function, demoted to extern
pub extern fn vrshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26007:22: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26005:47: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26024:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26022:48: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26040:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26038:48: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26046:23: warning: TODO implement function '__builtin_neon_vrshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26044:48: warning: unable to translate function, demoted to extern
pub extern fn vrshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26471:24: warning: TODO implement function '__builtin_neon_vrsqrteq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26469:49: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_u32(arg___p0: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26487:25: warning: TODO implement function '__builtin_neon_vrsqrteq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26485:50: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26503:24: warning: TODO implement function '__builtin_neon_vrsqrte_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26501:49: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_u32(arg___p0: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26519:25: warning: TODO implement function '__builtin_neon_vrsqrte_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26517:50: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26535:25: warning: TODO implement function '__builtin_neon_vrsqrtsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26533:50: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26552:25: warning: TODO implement function '__builtin_neon_vrsqrts_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26550:50: warning: unable to translate function, demoted to extern
pub extern fn vrsqrts_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26877:24: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26875:49: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26899:24: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26897:49: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26921:23: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26919:48: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26943:23: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26941:48: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26965:23: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26963:48: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26987:22: warning: TODO implement function '__builtin_neon_vrsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26985:47: warning: unable to translate function, demoted to extern
pub extern fn vrsubhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27563:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27561:49: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27580:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27578:49: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27597:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27595:49: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27614:24: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27612:49: warning: unable to translate function, demoted to extern
pub extern fn vshlq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27631:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27629:48: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27648:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27646:48: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27665:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27663:48: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27682:23: warning: TODO implement function '__builtin_neon_vshlq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27680:48: warning: unable to translate function, demoted to extern
pub extern fn vshlq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27699:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27697:48: warning: unable to translate function, demoted to extern
pub extern fn vshl_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27716:24: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27714:49: warning: unable to translate function, demoted to extern
pub extern fn vshl_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27732:24: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27730:49: warning: unable to translate function, demoted to extern
pub extern fn vshl_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27738:24: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27736:49: warning: unable to translate function, demoted to extern
pub extern fn vshl_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27755:22: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27753:47: warning: unable to translate function, demoted to extern
pub extern fn vshl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27772:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27770:48: warning: unable to translate function, demoted to extern
pub extern fn vshl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27788:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27786:48: warning: unable to translate function, demoted to extern
pub extern fn vshl_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27794:23: warning: TODO implement function '__builtin_neon_vshl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27792:48: warning: unable to translate function, demoted to extern
pub extern fn vshl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t;
pub inline fn vsubq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33129:24: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33127:49: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33151:24: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33149:49: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33173:23: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33171:48: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33195:23: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33193:48: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33217:23: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33215:48: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33239:22: warning: TODO implement function '__builtin_neon_vsubhn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33237:47: warning: unable to translate function, demoted to extern
pub extern fn vsubhn_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int8x8_t;
pub inline fn vsubl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_u8(__p0) - vmovl_u8(__p1);
    return __ret;
}
pub inline fn vsubl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_u32(__p0) - vmovl_u32(__p1);
    return __ret;
}
pub inline fn vsubl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_u16(__p0) - vmovl_u16(__p1);
    return __ret;
}
pub inline fn vsubl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_s8(__p0) - vmovl_s8(__p1);
    return __ret;
}
pub inline fn vsubl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_s32(__p0) - vmovl_s32(__p1);
    return __ret;
}
pub inline fn vsubl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_s16(__p0) - vmovl_s16(__p1);
    return __ret;
}
pub inline fn vsubw_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_u8(__p1);
    return __ret;
}
pub inline fn vsubw_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_u32(__p1);
    return __ret;
}
pub inline fn vsubw_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_u16(__p1);
    return __ret;
}
pub inline fn vsubw_s8(arg___p0: int16x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_s8(__p1);
    return __ret;
}
pub inline fn vsubw_s32(arg___p0: int64x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_s32(__p1);
    return __ret;
}
pub inline fn vsubw_s16(arg___p0: int32x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_s16(__p1);
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33465:23: warning: TODO implement function '__builtin_neon_vtbl1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33463:48: warning: unable to translate function, demoted to extern
pub extern fn vtbl1_p8(arg___p0: poly8x8_t, arg___p1: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33482:23: warning: TODO implement function '__builtin_neon_vtbl1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33480:48: warning: unable to translate function, demoted to extern
pub extern fn vtbl1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33499:22: warning: TODO implement function '__builtin_neon_vtbl1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33497:47: warning: unable to translate function, demoted to extern
pub extern fn vtbl1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33516:23: warning: TODO implement function '__builtin_neon_vtbl2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33514:48: warning: unable to translate function, demoted to extern
pub extern fn vtbl2_p8(arg___p0: poly8x8x2_t, arg___p1: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33535:23: warning: TODO implement function '__builtin_neon_vtbl2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33533:48: warning: unable to translate function, demoted to extern
pub extern fn vtbl2_u8(arg___p0: uint8x8x2_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33554:22: warning: TODO implement function '__builtin_neon_vtbl2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33552:47: warning: unable to translate function, demoted to extern
pub extern fn vtbl2_s8(arg___p0: int8x8x2_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33573:23: warning: TODO implement function '__builtin_neon_vtbl3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33571:48: warning: unable to translate function, demoted to extern
pub extern fn vtbl3_p8(arg___p0: poly8x8x3_t, arg___p1: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33593:23: warning: TODO implement function '__builtin_neon_vtbl3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33591:48: warning: unable to translate function, demoted to extern
pub extern fn vtbl3_u8(arg___p0: uint8x8x3_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33613:22: warning: TODO implement function '__builtin_neon_vtbl3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33611:47: warning: unable to translate function, demoted to extern
pub extern fn vtbl3_s8(arg___p0: int8x8x3_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33633:23: warning: TODO implement function '__builtin_neon_vtbl4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33631:48: warning: unable to translate function, demoted to extern
pub extern fn vtbl4_p8(arg___p0: poly8x8x4_t, arg___p1: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33654:23: warning: TODO implement function '__builtin_neon_vtbl4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33652:48: warning: unable to translate function, demoted to extern
pub extern fn vtbl4_u8(arg___p0: uint8x8x4_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33675:22: warning: TODO implement function '__builtin_neon_vtbl4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33673:47: warning: unable to translate function, demoted to extern
pub extern fn vtbl4_s8(arg___p0: int8x8x4_t, arg___p1: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33696:23: warning: TODO implement function '__builtin_neon_vtbx1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33694:48: warning: unable to translate function, demoted to extern
pub extern fn vtbx1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t, arg___p2: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33714:23: warning: TODO implement function '__builtin_neon_vtbx1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33712:48: warning: unable to translate function, demoted to extern
pub extern fn vtbx1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33732:22: warning: TODO implement function '__builtin_neon_vtbx1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33730:47: warning: unable to translate function, demoted to extern
pub extern fn vtbx1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33750:23: warning: TODO implement function '__builtin_neon_vtbx2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33748:48: warning: unable to translate function, demoted to extern
pub extern fn vtbx2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8x2_t, arg___p2: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33770:23: warning: TODO implement function '__builtin_neon_vtbx2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33768:48: warning: unable to translate function, demoted to extern
pub extern fn vtbx2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8x2_t, arg___p2: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33790:22: warning: TODO implement function '__builtin_neon_vtbx2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33788:47: warning: unable to translate function, demoted to extern
pub extern fn vtbx2_s8(arg___p0: int8x8_t, arg___p1: int8x8x2_t, arg___p2: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33810:23: warning: TODO implement function '__builtin_neon_vtbx3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33808:48: warning: unable to translate function, demoted to extern
pub extern fn vtbx3_p8(arg___p0: poly8x8_t, arg___p1: poly8x8x3_t, arg___p2: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33831:23: warning: TODO implement function '__builtin_neon_vtbx3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33829:48: warning: unable to translate function, demoted to extern
pub extern fn vtbx3_u8(arg___p0: uint8x8_t, arg___p1: uint8x8x3_t, arg___p2: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33852:22: warning: TODO implement function '__builtin_neon_vtbx3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33850:47: warning: unable to translate function, demoted to extern
pub extern fn vtbx3_s8(arg___p0: int8x8_t, arg___p1: int8x8x3_t, arg___p2: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33873:23: warning: TODO implement function '__builtin_neon_vtbx4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33871:48: warning: unable to translate function, demoted to extern
pub extern fn vtbx4_p8(arg___p0: poly8x8_t, arg___p1: poly8x8x4_t, arg___p2: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33895:23: warning: TODO implement function '__builtin_neon_vtbx4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33893:48: warning: unable to translate function, demoted to extern
pub extern fn vtbx4_u8(arg___p0: uint8x8_t, arg___p1: uint8x8x4_t, arg___p2: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33917:22: warning: TODO implement function '__builtin_neon_vtbx4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33915:47: warning: unable to translate function, demoted to extern
pub extern fn vtbx4_s8(arg___p0: int8x8_t, arg___p1: int8x8x4_t, arg___p2: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33939:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33937:50: warning: unable to translate function, demoted to extern
pub extern fn vtrn_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33958:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33956:51: warning: unable to translate function, demoted to extern
pub extern fn vtrn_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33977:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33975:51: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33996:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:33994:51: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34015:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34013:51: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34034:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34032:51: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34053:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34051:51: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34072:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34070:50: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34091:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34089:52: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34110:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34108:50: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34129:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34127:50: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34148:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34146:50: warning: unable to translate function, demoted to extern
pub extern fn vtrn_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34167:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34165:51: warning: unable to translate function, demoted to extern
pub extern fn vtrn_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34186:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34184:51: warning: unable to translate function, demoted to extern
pub extern fn vtrn_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34205:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34203:49: warning: unable to translate function, demoted to extern
pub extern fn vtrn_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34224:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34222:52: warning: unable to translate function, demoted to extern
pub extern fn vtrn_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34243:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34241:50: warning: unable to translate function, demoted to extern
pub extern fn vtrn_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34262:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34260:50: warning: unable to translate function, demoted to extern
pub extern fn vtrn_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34281:3: warning: TODO implement function '__builtin_neon_vtrnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34279:52: warning: unable to translate function, demoted to extern
pub extern fn vtrnq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34300:3: warning: TODO implement function '__builtin_neon_vtrn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34298:52: warning: unable to translate function, demoted to extern
pub extern fn vtrn_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34319:23: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34317:48: warning: unable to translate function, demoted to extern
pub extern fn vtst_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34336:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34334:49: warning: unable to translate function, demoted to extern
pub extern fn vtst_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34353:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34351:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34370:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34368:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34387:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34385:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34404:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34402:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34421:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34419:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34438:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34436:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34455:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34453:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34472:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34470:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34489:23: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34487:48: warning: unable to translate function, demoted to extern
pub extern fn vtst_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34506:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34504:49: warning: unable to translate function, demoted to extern
pub extern fn vtst_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34523:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34521:49: warning: unable to translate function, demoted to extern
pub extern fn vtst_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34540:23: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34538:48: warning: unable to translate function, demoted to extern
pub extern fn vtst_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34557:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34555:49: warning: unable to translate function, demoted to extern
pub extern fn vtst_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34574:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34572:49: warning: unable to translate function, demoted to extern
pub extern fn vtst_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34591:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34589:50: warning: unable to translate function, demoted to extern
pub extern fn vuzp_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34610:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34608:51: warning: unable to translate function, demoted to extern
pub extern fn vuzp_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34629:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34627:51: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34648:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34646:51: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34667:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34665:51: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34686:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34684:51: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34705:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34703:51: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34724:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34722:50: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34743:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34741:52: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34762:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34760:50: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34781:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34779:50: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34800:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34798:50: warning: unable to translate function, demoted to extern
pub extern fn vuzp_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34819:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34817:51: warning: unable to translate function, demoted to extern
pub extern fn vuzp_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34838:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34836:51: warning: unable to translate function, demoted to extern
pub extern fn vuzp_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34857:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34855:49: warning: unable to translate function, demoted to extern
pub extern fn vuzp_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34876:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34874:52: warning: unable to translate function, demoted to extern
pub extern fn vuzp_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34895:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34893:50: warning: unable to translate function, demoted to extern
pub extern fn vuzp_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34914:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34912:50: warning: unable to translate function, demoted to extern
pub extern fn vuzp_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34933:3: warning: TODO implement function '__builtin_neon_vuzpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34931:52: warning: unable to translate function, demoted to extern
pub extern fn vuzpq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34952:3: warning: TODO implement function '__builtin_neon_vuzp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34950:52: warning: unable to translate function, demoted to extern
pub extern fn vuzp_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34971:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34969:50: warning: unable to translate function, demoted to extern
pub extern fn vzip_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34990:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:34988:51: warning: unable to translate function, demoted to extern
pub extern fn vzip_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35009:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35007:51: warning: unable to translate function, demoted to extern
pub extern fn vzipq_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35028:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35026:51: warning: unable to translate function, demoted to extern
pub extern fn vzipq_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35047:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35045:51: warning: unable to translate function, demoted to extern
pub extern fn vzipq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35066:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35064:51: warning: unable to translate function, demoted to extern
pub extern fn vzipq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35085:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35083:51: warning: unable to translate function, demoted to extern
pub extern fn vzipq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35104:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35102:50: warning: unable to translate function, demoted to extern
pub extern fn vzipq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35123:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35121:52: warning: unable to translate function, demoted to extern
pub extern fn vzipq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35142:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35140:50: warning: unable to translate function, demoted to extern
pub extern fn vzipq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35161:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35159:50: warning: unable to translate function, demoted to extern
pub extern fn vzipq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35180:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35178:50: warning: unable to translate function, demoted to extern
pub extern fn vzip_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35199:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35197:51: warning: unable to translate function, demoted to extern
pub extern fn vzip_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35218:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35216:51: warning: unable to translate function, demoted to extern
pub extern fn vzip_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35237:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35235:49: warning: unable to translate function, demoted to extern
pub extern fn vzip_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35256:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35254:52: warning: unable to translate function, demoted to extern
pub extern fn vzip_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35275:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35273:50: warning: unable to translate function, demoted to extern
pub extern fn vzip_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35294:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35292:50: warning: unable to translate function, demoted to extern
pub extern fn vzip_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35313:3: warning: TODO implement function '__builtin_neon_vzipq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35311:52: warning: unable to translate function, demoted to extern
pub extern fn vzipq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35332:3: warning: TODO implement function '__builtin_neon_vzip_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35330:52: warning: unable to translate function, demoted to extern
pub extern fn vzip_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35351:23: warning: TODO implement function '__builtin_neon_vqrdmlahq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35349:54: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35374:23: warning: TODO implement function '__builtin_neon_vqrdmlahq_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35372:54: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35397:23: warning: TODO implement function '__builtin_neon_vqrdmlah_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35395:54: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlah_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35420:23: warning: TODO implement function '__builtin_neon_vqrdmlah_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35418:54: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlah_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35539:23: warning: TODO implement function '__builtin_neon_vqrdmlshq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35537:54: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35562:23: warning: TODO implement function '__builtin_neon_vqrdmlshq_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35560:54: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35585:23: warning: TODO implement function '__builtin_neon_vqrdmlsh_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35583:54: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlsh_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35608:23: warning: TODO implement function '__builtin_neon_vqrdmlsh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35606:54: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlsh_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35727:25: warning: TODO implement function '__builtin_neon_vcadd_rot270_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35725:65: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot270_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35744:25: warning: TODO implement function '__builtin_neon_vcadd_rot90_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35742:65: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot90_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35761:25: warning: TODO implement function '__builtin_neon_vcaddq_rot270_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35759:65: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot270_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35778:25: warning: TODO implement function '__builtin_neon_vcaddq_rot90_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35776:65: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot90_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35795:25: warning: TODO implement function '__builtin_neon_vcmlaq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35793:65: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35818:25: warning: TODO implement function '__builtin_neon_vcmla_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35816:65: warning: unable to translate function, demoted to extern
pub extern fn vcmla_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35953:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot180_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35951:65: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot180_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35976:25: warning: TODO implement function '__builtin_neon_vcmla_rot180_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35974:65: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot180_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36111:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot270_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36109:65: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot270_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36134:25: warning: TODO implement function '__builtin_neon_vcmla_rot270_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36132:65: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot270_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36269:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot90_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36267:65: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot90_f16(arg___p0: float16x8_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36292:25: warning: TODO implement function '__builtin_neon_vcmla_rot90_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36290:65: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot90_f16(arg___p0: float16x4_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36427:25: warning: TODO implement function '__builtin_neon_vcadd_rot270_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36425:56: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot270_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36444:25: warning: TODO implement function '__builtin_neon_vcadd_rot90_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36442:56: warning: unable to translate function, demoted to extern
pub extern fn vcadd_rot90_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36461:25: warning: TODO implement function '__builtin_neon_vcaddq_rot270_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36459:56: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot270_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36478:25: warning: TODO implement function '__builtin_neon_vcaddq_rot90_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36476:56: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot90_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36495:25: warning: TODO implement function '__builtin_neon_vcmlaq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36493:56: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36518:25: warning: TODO implement function '__builtin_neon_vcmla_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36516:56: warning: unable to translate function, demoted to extern
pub extern fn vcmla_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36653:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot180_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36651:56: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot180_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36676:25: warning: TODO implement function '__builtin_neon_vcmla_rot180_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36674:56: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot180_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36811:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot270_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36809:56: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot270_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36834:25: warning: TODO implement function '__builtin_neon_vcmla_rot270_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36832:56: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot270_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36969:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot90_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36967:56: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot90_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36992:25: warning: TODO implement function '__builtin_neon_vcmla_rot90_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36990:56: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot90_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:38948:25: warning: TODO implement function '__builtin_neon_vcvt_f16_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:38946:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f16_f32(arg___p0: float32x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:38969:25: warning: TODO implement function '__builtin_neon_vcvt_f32_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:38967:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_f16(arg___p0: float16x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39896:25: warning: TODO implement function '__builtin_neon_vmaxnmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39894:50: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39912:25: warning: TODO implement function '__builtin_neon_vmaxnm_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39910:50: warning: unable to translate function, demoted to extern
pub extern fn vmaxnm_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39918:25: warning: TODO implement function '__builtin_neon_vminnmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39916:50: warning: unable to translate function, demoted to extern
pub extern fn vminnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39934:25: warning: TODO implement function '__builtin_neon_vminnm_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39932:50: warning: unable to translate function, demoted to extern
pub extern fn vminnm_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39942:25: warning: TODO implement function '__builtin_neon_vrndq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39940:50: warning: unable to translate function, demoted to extern
pub extern fn vrndq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39957:25: warning: TODO implement function '__builtin_neon_vrnd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39955:50: warning: unable to translate function, demoted to extern
pub extern fn vrnd_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39963:25: warning: TODO implement function '__builtin_neon_vrndaq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39961:50: warning: unable to translate function, demoted to extern
pub extern fn vrndaq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39978:25: warning: TODO implement function '__builtin_neon_vrnda_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39976:50: warning: unable to translate function, demoted to extern
pub extern fn vrnda_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39984:25: warning: TODO implement function '__builtin_neon_vrndiq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39982:50: warning: unable to translate function, demoted to extern
pub extern fn vrndiq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39999:25: warning: TODO implement function '__builtin_neon_vrndi_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39997:50: warning: unable to translate function, demoted to extern
pub extern fn vrndi_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40005:25: warning: TODO implement function '__builtin_neon_vrndmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40003:50: warning: unable to translate function, demoted to extern
pub extern fn vrndmq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40020:25: warning: TODO implement function '__builtin_neon_vrndm_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40018:50: warning: unable to translate function, demoted to extern
pub extern fn vrndm_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40026:25: warning: TODO implement function '__builtin_neon_vrndnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40024:50: warning: unable to translate function, demoted to extern
pub extern fn vrndnq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40041:25: warning: TODO implement function '__builtin_neon_vrndn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40039:50: warning: unable to translate function, demoted to extern
pub extern fn vrndn_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40047:25: warning: TODO implement function '__builtin_neon_vrndpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40045:50: warning: unable to translate function, demoted to extern
pub extern fn vrndpq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40062:25: warning: TODO implement function '__builtin_neon_vrndp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40060:50: warning: unable to translate function, demoted to extern
pub extern fn vrndp_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40068:25: warning: TODO implement function '__builtin_neon_vrndxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40066:50: warning: unable to translate function, demoted to extern
pub extern fn vrndxq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40083:25: warning: TODO implement function '__builtin_neon_vrndx_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40081:50: warning: unable to translate function, demoted to extern
pub extern fn vrndx_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40091:24: warning: TODO implement function '__builtin_neon_vaesdq_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40089:53: warning: unable to translate function, demoted to extern
pub extern fn vaesdq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40108:24: warning: TODO implement function '__builtin_neon_vaeseq_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40106:53: warning: unable to translate function, demoted to extern
pub extern fn vaeseq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40125:24: warning: TODO implement function '__builtin_neon_vaesimcq_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40123:53: warning: unable to translate function, demoted to extern
pub extern fn vaesimcq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40141:24: warning: TODO implement function '__builtin_neon_vaesmcq_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40139:53: warning: unable to translate function, demoted to extern
pub extern fn vaesmcq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40157:23: warning: TODO implement function '__builtin_neon_vcvtaq_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40155:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40173:23: warning: TODO implement function '__builtin_neon_vcvta_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40171:48: warning: unable to translate function, demoted to extern
pub extern fn vcvta_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40189:24: warning: TODO implement function '__builtin_neon_vcvtaq_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40187:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40205:24: warning: TODO implement function '__builtin_neon_vcvta_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40203:49: warning: unable to translate function, demoted to extern
pub extern fn vcvta_u32_f32(arg___p0: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40221:23: warning: TODO implement function '__builtin_neon_vcvtmq_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40219:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40237:23: warning: TODO implement function '__builtin_neon_vcvtm_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40235:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40253:24: warning: TODO implement function '__builtin_neon_vcvtmq_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40251:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40269:24: warning: TODO implement function '__builtin_neon_vcvtm_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40267:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_u32_f32(arg___p0: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40285:23: warning: TODO implement function '__builtin_neon_vcvtnq_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40283:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40301:23: warning: TODO implement function '__builtin_neon_vcvtn_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40299:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40317:24: warning: TODO implement function '__builtin_neon_vcvtnq_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40315:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40333:24: warning: TODO implement function '__builtin_neon_vcvtn_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40331:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_u32_f32(arg___p0: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40349:23: warning: TODO implement function '__builtin_neon_vcvtpq_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40347:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_s32_f32(arg___p0: float32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40365:23: warning: TODO implement function '__builtin_neon_vcvtp_s32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40363:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_s32_f32(arg___p0: float32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40381:24: warning: TODO implement function '__builtin_neon_vcvtpq_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40379:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_u32_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40397:24: warning: TODO implement function '__builtin_neon_vcvtp_u32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40395:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_u32_f32(arg___p0: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40413:24: warning: TODO implement function '__builtin_neon_vsha1cq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40411:54: warning: unable to translate function, demoted to extern
pub extern fn vsha1cq_u32(arg___p0: uint32x4_t, arg___p1: u32, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40429:22: warning: TODO implement function '__builtin_neon_vsha1h_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40427:52: warning: unable to translate function, demoted to extern
pub extern fn vsha1h_u32(arg___p0: u32) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40435:24: warning: TODO implement function '__builtin_neon_vsha1mq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40433:54: warning: unable to translate function, demoted to extern
pub extern fn vsha1mq_u32(arg___p0: uint32x4_t, arg___p1: u32, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40452:24: warning: TODO implement function '__builtin_neon_vsha1pq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40450:54: warning: unable to translate function, demoted to extern
pub extern fn vsha1pq_u32(arg___p0: uint32x4_t, arg___p1: u32, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40469:24: warning: TODO implement function '__builtin_neon_vsha1su0q_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40467:54: warning: unable to translate function, demoted to extern
pub extern fn vsha1su0q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40487:24: warning: TODO implement function '__builtin_neon_vsha1su1q_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40485:54: warning: unable to translate function, demoted to extern
pub extern fn vsha1su1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40504:24: warning: TODO implement function '__builtin_neon_vsha256hq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40502:54: warning: unable to translate function, demoted to extern
pub extern fn vsha256hq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40522:24: warning: TODO implement function '__builtin_neon_vsha256h2q_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40520:54: warning: unable to translate function, demoted to extern
pub extern fn vsha256h2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40540:24: warning: TODO implement function '__builtin_neon_vsha256su0q_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40538:54: warning: unable to translate function, demoted to extern
pub extern fn vsha256su0q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40557:24: warning: TODO implement function '__builtin_neon_vsha256su1q_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40555:54: warning: unable to translate function, demoted to extern
pub extern fn vsha256su1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40577:25: warning: TODO implement function '__builtin_neon_vrndq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40575:59: warning: unable to translate function, demoted to extern
pub extern fn vrndq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40593:25: warning: TODO implement function '__builtin_neon_vrnd_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40591:59: warning: unable to translate function, demoted to extern
pub extern fn vrnd_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40609:25: warning: TODO implement function '__builtin_neon_vrndaq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40607:59: warning: unable to translate function, demoted to extern
pub extern fn vrndaq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40625:25: warning: TODO implement function '__builtin_neon_vrnda_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40623:59: warning: unable to translate function, demoted to extern
pub extern fn vrnda_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40641:25: warning: TODO implement function '__builtin_neon_vrndmq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40639:59: warning: unable to translate function, demoted to extern
pub extern fn vrndmq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40657:25: warning: TODO implement function '__builtin_neon_vrndm_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40655:59: warning: unable to translate function, demoted to extern
pub extern fn vrndm_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40673:25: warning: TODO implement function '__builtin_neon_vrndnq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40671:59: warning: unable to translate function, demoted to extern
pub extern fn vrndnq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40689:25: warning: TODO implement function '__builtin_neon_vrndn_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40687:59: warning: unable to translate function, demoted to extern
pub extern fn vrndn_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40705:25: warning: TODO implement function '__builtin_neon_vrndpq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40703:59: warning: unable to translate function, demoted to extern
pub extern fn vrndpq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40721:25: warning: TODO implement function '__builtin_neon_vrndp_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40719:59: warning: unable to translate function, demoted to extern
pub extern fn vrndp_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40737:25: warning: TODO implement function '__builtin_neon_vrndxq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40735:59: warning: unable to translate function, demoted to extern
pub extern fn vrndxq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40753:25: warning: TODO implement function '__builtin_neon_vrndx_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40751:59: warning: unable to translate function, demoted to extern
pub extern fn vrndx_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40769:25: warning: TODO implement function '__builtin_neon_vrndq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40767:50: warning: unable to translate function, demoted to extern
pub extern fn vrndq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40785:25: warning: TODO implement function '__builtin_neon_vrnd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40783:50: warning: unable to translate function, demoted to extern
pub extern fn vrnd_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40801:25: warning: TODO implement function '__builtin_neon_vrndaq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40799:50: warning: unable to translate function, demoted to extern
pub extern fn vrndaq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40817:25: warning: TODO implement function '__builtin_neon_vrnda_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40815:50: warning: unable to translate function, demoted to extern
pub extern fn vrnda_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40833:25: warning: TODO implement function '__builtin_neon_vrndiq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40831:50: warning: unable to translate function, demoted to extern
pub extern fn vrndiq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40849:25: warning: TODO implement function '__builtin_neon_vrndi_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40847:50: warning: unable to translate function, demoted to extern
pub extern fn vrndi_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40865:25: warning: TODO implement function '__builtin_neon_vrndmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40863:50: warning: unable to translate function, demoted to extern
pub extern fn vrndmq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40881:25: warning: TODO implement function '__builtin_neon_vrndm_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40879:50: warning: unable to translate function, demoted to extern
pub extern fn vrndm_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40897:25: warning: TODO implement function '__builtin_neon_vrndnq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40895:50: warning: unable to translate function, demoted to extern
pub extern fn vrndnq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40913:25: warning: TODO implement function '__builtin_neon_vrndn_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40911:50: warning: unable to translate function, demoted to extern
pub extern fn vrndn_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40928:23: warning: TODO implement function '__builtin_neon_vrndns_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40926:48: warning: unable to translate function, demoted to extern
pub extern fn vrndns_f32(arg___p0: float32_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40934:25: warning: TODO implement function '__builtin_neon_vrndpq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40932:50: warning: unable to translate function, demoted to extern
pub extern fn vrndpq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40950:25: warning: TODO implement function '__builtin_neon_vrndp_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40948:50: warning: unable to translate function, demoted to extern
pub extern fn vrndp_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40966:25: warning: TODO implement function '__builtin_neon_vrndxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40964:50: warning: unable to translate function, demoted to extern
pub extern fn vrndxq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40982:25: warning: TODO implement function '__builtin_neon_vrndx_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40980:50: warning: unable to translate function, demoted to extern
pub extern fn vrndx_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41000:25: warning: TODO implement function '__builtin_neon_vmaxnmq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:40998:59: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41017:25: warning: TODO implement function '__builtin_neon_vmaxnm_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41015:59: warning: unable to translate function, demoted to extern
pub extern fn vmaxnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41034:25: warning: TODO implement function '__builtin_neon_vminnmq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41032:59: warning: unable to translate function, demoted to extern
pub extern fn vminnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41051:25: warning: TODO implement function '__builtin_neon_vminnm_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41049:59: warning: unable to translate function, demoted to extern
pub extern fn vminnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41068:25: warning: TODO implement function '__builtin_neon_vmaxnmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41066:50: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41085:25: warning: TODO implement function '__builtin_neon_vmaxnm_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41083:50: warning: unable to translate function, demoted to extern
pub extern fn vmaxnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41102:25: warning: TODO implement function '__builtin_neon_vminnmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41100:50: warning: unable to translate function, demoted to extern
pub extern fn vminnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41119:25: warning: TODO implement function '__builtin_neon_vminnm_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41117:50: warning: unable to translate function, demoted to extern
pub extern fn vminnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41138:25: warning: TODO implement function '__builtin_neon_vfmaq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41136:50: warning: unable to translate function, demoted to extern
pub extern fn vfmaq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41161:25: warning: TODO implement function '__builtin_neon_vfma_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41159:50: warning: unable to translate function, demoted to extern
pub extern fn vfma_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t;
pub inline fn vfmaq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vfma_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = vfma_f32(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vfmsq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f32(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfms_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = vfma_f32(__p0, -__p1, __p2);
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41255:23: warning: TODO implement function '__builtin_neon_vmull_p64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41253:52: warning: unable to translate function, demoted to extern
pub extern fn vmull_p64(arg___p0: poly64_t, arg___p1: poly64_t) poly128_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41261:26: warning: TODO implement function '__builtin_neon___a64_vcvtq_low_bf16_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41259:56: warning: unable to translate function, demoted to extern
pub extern fn __a64_vcvtq_low_bf16_f32(arg___p0: float32x4_t) bfloat16x8_t;
pub inline fn vcvt_bf16_f32(arg___p0: float32x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = vget_low_bf16(__a64_vcvtq_low_bf16_f32(__p0));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41382:26: warning: TODO implement function '__builtin_neon_vcvtq_high_bf16_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41380:56: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_high_bf16_f32(arg___p0: bfloat16x8_t, arg___p1: float32x4_t) bfloat16x8_t;
pub inline fn vcvtq_low_bf16_f32(arg___p0: float32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = __a64_vcvtq_low_bf16_f32(__p0);
    return __ret;
}
pub inline fn vreinterpret_p8_bf16(arg___p0: bfloat16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_bf16(arg___p0: bfloat16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_bf16(arg___p0: bfloat16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_bf16(arg___p0: bfloat16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_bf16(arg___p0: bfloat16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_bf16(arg___p0: bfloat16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_bf16(arg___p0: bfloat16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_bf16(arg___p0: bfloat16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_bf16(arg___p0: bfloat16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_bf16(arg___p0: bfloat16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_bf16(arg___p0: bfloat16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_bf16(arg___p0: bfloat16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_bf16(arg___p0: bfloat16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_bf16(arg___p0: bfloat16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_bf16(arg___p0: bfloat16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_bf16(arg___p0: bfloat16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_bf16(arg___p0: bfloat16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_bf16(arg___p0: bfloat16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_bf16(arg___p0: bfloat16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_bf16(arg___p0: bfloat16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_bf16(arg___p0: bfloat16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_bf16(arg___p0: bfloat16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_bf16(arg___p0: bfloat16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_bf16(arg___p0: bfloat16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_bf16(arg___p0: bfloat16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_bf16(arg___p0: bfloat16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_bf16(arg___p0: bfloat16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_bf16(arg___p0: bfloat16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_bf16(arg___p0: bfloat16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p8(arg___p0: poly8x16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p128(arg___p0: poly128_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p64(arg___p0: poly64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_p16(arg___p0: poly16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u8(arg___p0: uint8x16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u32(arg___p0: uint32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u64(arg___p0: uint64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_u16(arg___p0: uint16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s8(arg___p0: int8x16_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_f64(arg___p0: float64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_f32(arg___p0: float32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_f16(arg___p0: float16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s32(arg___p0: int32x4_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s64(arg___p0: int64x2_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_bf16_s16(arg___p0: int16x8_t) bfloat16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x8_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_p8(arg___p0: poly8x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_p64(arg___p0: poly64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_p16(arg___p0: poly16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u8(arg___p0: uint8x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u32(arg___p0: uint32x2_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u64(arg___p0: uint64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_u16(arg___p0: uint16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s8(arg___p0: int8x8_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_f64(arg___p0: float64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_f32(arg___p0: float32x2_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_f16(arg___p0: float16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s32(arg___p0: int32x2_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s64(arg___p0: int64x1_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_bf16_s16(arg___p0: int16x4_t) bfloat16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: bfloat16x4_t = undefined;
    _ = &__ret;
    __ret = @as(bfloat16x4_t, @bitCast(__p0));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41817:25: warning: TODO implement function '__builtin_neon_vfmlalq_high_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41815:58: warning: unable to translate function, demoted to extern
pub extern fn vfmlalq_high_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41840:25: warning: TODO implement function '__builtin_neon_vfmlal_high_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41838:58: warning: unable to translate function, demoted to extern
pub extern fn vfmlal_high_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41863:25: warning: TODO implement function '__builtin_neon_vfmlalq_low_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41861:58: warning: unable to translate function, demoted to extern
pub extern fn vfmlalq_low_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41886:25: warning: TODO implement function '__builtin_neon_vfmlal_low_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41884:58: warning: unable to translate function, demoted to extern
pub extern fn vfmlal_low_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41909:25: warning: TODO implement function '__builtin_neon_vfmlslq_high_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41907:58: warning: unable to translate function, demoted to extern
pub extern fn vfmlslq_high_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41932:25: warning: TODO implement function '__builtin_neon_vfmlsl_high_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41930:58: warning: unable to translate function, demoted to extern
pub extern fn vfmlsl_high_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41955:25: warning: TODO implement function '__builtin_neon_vfmlslq_low_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41953:58: warning: unable to translate function, demoted to extern
pub extern fn vfmlslq_low_f16(arg___p0: float32x4_t, arg___p1: float16x8_t, arg___p2: float16x8_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41978:25: warning: TODO implement function '__builtin_neon_vfmlsl_low_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41976:58: warning: unable to translate function, demoted to extern
pub extern fn vfmlsl_low_f16(arg___p0: float32x2_t, arg___p1: float16x4_t, arg___p2: float16x4_t) float32x2_t;
pub inline fn vdivq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdiv_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42629:25: warning: TODO implement function '__builtin_neon_vmulxq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42627:59: warning: unable to translate function, demoted to extern
pub extern fn vmulxq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42651:25: warning: TODO implement function '__builtin_neon_vmulx_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42649:59: warning: unable to translate function, demoted to extern
pub extern fn vmulx_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42835:25: warning: TODO implement function '__builtin_neon_vpaddq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42833:59: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42852:25: warning: TODO implement function '__builtin_neon_vpmaxq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42850:59: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42869:25: warning: TODO implement function '__builtin_neon_vpmaxnmq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42867:59: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42886:25: warning: TODO implement function '__builtin_neon_vpmaxnm_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42884:59: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42903:25: warning: TODO implement function '__builtin_neon_vpminq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42901:59: warning: unable to translate function, demoted to extern
pub extern fn vpminq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42920:25: warning: TODO implement function '__builtin_neon_vpminnmq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42918:59: warning: unable to translate function, demoted to extern
pub extern fn vpminnmq_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42937:25: warning: TODO implement function '__builtin_neon_vpminnm_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42935:59: warning: unable to translate function, demoted to extern
pub extern fn vpminnm_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42954:25: warning: TODO implement function '__builtin_neon_vrndiq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42952:59: warning: unable to translate function, demoted to extern
pub extern fn vrndiq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42970:25: warning: TODO implement function '__builtin_neon_vrndi_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42968:59: warning: unable to translate function, demoted to extern
pub extern fn vrndi_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42986:25: warning: TODO implement function '__builtin_neon_vsqrtq_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42984:59: warning: unable to translate function, demoted to extern
pub extern fn vsqrtq_f16(arg___p0: float16x8_t) float16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43002:25: warning: TODO implement function '__builtin_neon_vsqrt_f16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43000:59: warning: unable to translate function, demoted to extern
pub extern fn vsqrt_f16(arg___p0: float16x4_t) float16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43122:25: warning: TODO implement function '__builtin_neon_vabdq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43120:50: warning: unable to translate function, demoted to extern
pub extern fn vabdq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43138:25: warning: TODO implement function '__builtin_neon_vabd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43136:50: warning: unable to translate function, demoted to extern
pub extern fn vabd_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43143:23: warning: TODO implement function '__builtin_neon_vabdd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43141:48: warning: unable to translate function, demoted to extern
pub extern fn vabdd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43148:23: warning: TODO implement function '__builtin_neon_vabds_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43146:48: warning: unable to translate function, demoted to extern
pub extern fn vabds_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43154:25: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43152:50: warning: unable to translate function, demoted to extern
pub extern fn vabsq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43170:23: warning: TODO implement function '__builtin_neon_vabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43168:48: warning: unable to translate function, demoted to extern
pub extern fn vabsq_s64(arg___p0: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43185:25: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43183:50: warning: unable to translate function, demoted to extern
pub extern fn vabs_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43190:23: warning: TODO implement function '__builtin_neon_vabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43188:48: warning: unable to translate function, demoted to extern
pub extern fn vabs_s64(arg___p0: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43195:21: warning: TODO implement function '__builtin_neon_vabsd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43193:46: warning: unable to translate function, demoted to extern
pub extern fn vabsd_s64(arg___p0: i64) i64;
pub inline fn vaddq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
pub inline fn vadd_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + __p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43222:22: warning: TODO implement function '__builtin_neon_vaddd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43220:47: warning: unable to translate function, demoted to extern
pub extern fn vaddd_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43227:21: warning: TODO implement function '__builtin_neon_vaddd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43225:46: warning: unable to translate function, demoted to extern
pub extern fn vaddd_s64(arg___p0: i64, arg___p1: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43232:23: warning: TODO implement function '__builtin_neon_vaddq_p128' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43230:48: warning: unable to translate function, demoted to extern
pub extern fn vaddq_p128(arg___p0: poly128_t, arg___p1: poly128_t) poly128_t;
pub inline fn vaddhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vaddhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vaddhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vaddhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vaddhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vaddhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vaddhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vaddhn_s16(__p1, __p2));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43346:22: warning: TODO implement function '__builtin_neon_vaddlvq_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43344:47: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_u8(arg___p0: uint8x16_t) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43361:22: warning: TODO implement function '__builtin_neon_vaddlvq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43359:47: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_u32(arg___p0: uint32x4_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43376:22: warning: TODO implement function '__builtin_neon_vaddlvq_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43374:47: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_u16(arg___p0: uint16x8_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43391:21: warning: TODO implement function '__builtin_neon_vaddlvq_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43389:46: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_s8(arg___p0: int8x16_t) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43406:21: warning: TODO implement function '__builtin_neon_vaddlvq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43404:46: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_s32(arg___p0: int32x4_t) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43421:21: warning: TODO implement function '__builtin_neon_vaddlvq_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43419:46: warning: unable to translate function, demoted to extern
pub extern fn vaddlvq_s16(arg___p0: int16x8_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43436:22: warning: TODO implement function '__builtin_neon_vaddlv_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43434:47: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_u8(arg___p0: uint8x8_t) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43451:22: warning: TODO implement function '__builtin_neon_vaddlv_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43449:47: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_u32(arg___p0: uint32x2_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43466:22: warning: TODO implement function '__builtin_neon_vaddlv_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43464:47: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_u16(arg___p0: uint16x4_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43481:21: warning: TODO implement function '__builtin_neon_vaddlv_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43479:46: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_s8(arg___p0: int8x8_t) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43496:21: warning: TODO implement function '__builtin_neon_vaddlv_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43494:46: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_s32(arg___p0: int32x2_t) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43511:21: warning: TODO implement function '__builtin_neon_vaddlv_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43509:46: warning: unable to translate function, demoted to extern
pub extern fn vaddlv_s16(arg___p0: int16x4_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43526:21: warning: TODO implement function '__builtin_neon_vaddvq_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43524:46: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u8(arg___p0: uint8x16_t) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43541:22: warning: TODO implement function '__builtin_neon_vaddvq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43539:47: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u32(arg___p0: uint32x4_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43556:22: warning: TODO implement function '__builtin_neon_vaddvq_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43554:47: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u64(arg___p0: uint64x2_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43571:22: warning: TODO implement function '__builtin_neon_vaddvq_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43569:47: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_u16(arg___p0: uint16x8_t) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43586:20: warning: TODO implement function '__builtin_neon_vaddvq_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43584:45: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s8(arg___p0: int8x16_t) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43601:23: warning: TODO implement function '__builtin_neon_vaddvq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43599:48: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43616:23: warning: TODO implement function '__builtin_neon_vaddvq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43614:48: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_f32(arg___p0: float32x4_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43631:21: warning: TODO implement function '__builtin_neon_vaddvq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43629:46: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s32(arg___p0: int32x4_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43646:21: warning: TODO implement function '__builtin_neon_vaddvq_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43644:46: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s64(arg___p0: int64x2_t) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43661:21: warning: TODO implement function '__builtin_neon_vaddvq_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43659:46: warning: unable to translate function, demoted to extern
pub extern fn vaddvq_s16(arg___p0: int16x8_t) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43676:21: warning: TODO implement function '__builtin_neon_vaddv_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43674:46: warning: unable to translate function, demoted to extern
pub extern fn vaddv_u8(arg___p0: uint8x8_t) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43691:22: warning: TODO implement function '__builtin_neon_vaddv_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43689:47: warning: unable to translate function, demoted to extern
pub extern fn vaddv_u32(arg___p0: uint32x2_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43706:22: warning: TODO implement function '__builtin_neon_vaddv_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43704:47: warning: unable to translate function, demoted to extern
pub extern fn vaddv_u16(arg___p0: uint16x4_t) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43721:20: warning: TODO implement function '__builtin_neon_vaddv_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43719:45: warning: unable to translate function, demoted to extern
pub extern fn vaddv_s8(arg___p0: int8x8_t) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43736:23: warning: TODO implement function '__builtin_neon_vaddv_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43734:48: warning: unable to translate function, demoted to extern
pub extern fn vaddv_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43751:21: warning: TODO implement function '__builtin_neon_vaddv_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43749:46: warning: unable to translate function, demoted to extern
pub extern fn vaddv_s32(arg___p0: int32x2_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43766:21: warning: TODO implement function '__builtin_neon_vaddv_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43764:46: warning: unable to translate function, demoted to extern
pub extern fn vaddv_s16(arg___p0: int16x4_t) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43780:24: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43778:49: warning: unable to translate function, demoted to extern
pub extern fn vbsl_p64(arg___p0: uint64x1_t, arg___p1: poly64x1_t, arg___p2: poly64x1_t) poly64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43786:24: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43784:49: warning: unable to translate function, demoted to extern
pub extern fn vbslq_p64(arg___p0: uint64x2_t, arg___p1: poly64x2_t, arg___p2: poly64x2_t) poly64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43804:25: warning: TODO implement function '__builtin_neon_vbslq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43802:50: warning: unable to translate function, demoted to extern
pub extern fn vbslq_f64(arg___p0: uint64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43821:25: warning: TODO implement function '__builtin_neon_vbsl_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43819:50: warning: unable to translate function, demoted to extern
pub extern fn vbsl_f64(arg___p0: uint64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43827:24: warning: TODO implement function '__builtin_neon_vcageq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43825:49: warning: unable to translate function, demoted to extern
pub extern fn vcageq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43843:24: warning: TODO implement function '__builtin_neon_vcage_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43841:49: warning: unable to translate function, demoted to extern
pub extern fn vcage_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43848:22: warning: TODO implement function '__builtin_neon_vcaged_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43846:47: warning: unable to translate function, demoted to extern
pub extern fn vcaged_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43853:22: warning: TODO implement function '__builtin_neon_vcages_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43851:47: warning: unable to translate function, demoted to extern
pub extern fn vcages_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43859:24: warning: TODO implement function '__builtin_neon_vcagtq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43857:49: warning: unable to translate function, demoted to extern
pub extern fn vcagtq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43875:24: warning: TODO implement function '__builtin_neon_vcagt_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43873:49: warning: unable to translate function, demoted to extern
pub extern fn vcagt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43880:22: warning: TODO implement function '__builtin_neon_vcagtd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43878:47: warning: unable to translate function, demoted to extern
pub extern fn vcagtd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43885:22: warning: TODO implement function '__builtin_neon_vcagts_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43883:47: warning: unable to translate function, demoted to extern
pub extern fn vcagts_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43891:24: warning: TODO implement function '__builtin_neon_vcaleq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43889:49: warning: unable to translate function, demoted to extern
pub extern fn vcaleq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43907:24: warning: TODO implement function '__builtin_neon_vcale_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43905:49: warning: unable to translate function, demoted to extern
pub extern fn vcale_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43912:22: warning: TODO implement function '__builtin_neon_vcaled_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43910:47: warning: unable to translate function, demoted to extern
pub extern fn vcaled_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43917:22: warning: TODO implement function '__builtin_neon_vcales_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43915:47: warning: unable to translate function, demoted to extern
pub extern fn vcales_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43923:24: warning: TODO implement function '__builtin_neon_vcaltq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43921:49: warning: unable to translate function, demoted to extern
pub extern fn vcaltq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43939:24: warning: TODO implement function '__builtin_neon_vcalt_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43937:49: warning: unable to translate function, demoted to extern
pub extern fn vcalt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43944:22: warning: TODO implement function '__builtin_neon_vcaltd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43942:47: warning: unable to translate function, demoted to extern
pub extern fn vcaltd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43949:22: warning: TODO implement function '__builtin_neon_vcalts_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43947:47: warning: unable to translate function, demoted to extern
pub extern fn vcalts_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
pub inline fn vceq_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceqq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
pub inline fn vceq_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 == __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44042:22: warning: TODO implement function '__builtin_neon_vceqd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44040:47: warning: unable to translate function, demoted to extern
pub extern fn vceqd_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44047:22: warning: TODO implement function '__builtin_neon_vceqd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44045:47: warning: unable to translate function, demoted to extern
pub extern fn vceqd_s64(arg___p0: i64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44052:22: warning: TODO implement function '__builtin_neon_vceqd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44050:47: warning: unable to translate function, demoted to extern
pub extern fn vceqd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44057:22: warning: TODO implement function '__builtin_neon_vceqs_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44055:47: warning: unable to translate function, demoted to extern
pub extern fn vceqs_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44063:23: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44061:48: warning: unable to translate function, demoted to extern
pub extern fn vceqz_p8(arg___p0: poly8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44078:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44076:49: warning: unable to translate function, demoted to extern
pub extern fn vceqz_p64(arg___p0: poly64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44084:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44082:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_p8(arg___p0: poly8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44100:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44098:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_p64(arg___p0: poly64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44116:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44114:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44132:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44130:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u32(arg___p0: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44148:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44146:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u64(arg___p0: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44164:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44162:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_u16(arg___p0: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44180:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44178:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s8(arg___p0: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44196:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44194:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44212:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44210:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44228:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44226:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s32(arg___p0: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44244:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44242:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s64(arg___p0: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44260:24: warning: TODO implement function '__builtin_neon_vceqzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44258:49: warning: unable to translate function, demoted to extern
pub extern fn vceqzq_s16(arg___p0: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44276:23: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44274:48: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u8(arg___p0: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44292:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44290:49: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u32(arg___p0: uint32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44307:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44305:49: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u64(arg___p0: uint64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44313:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44311:49: warning: unable to translate function, demoted to extern
pub extern fn vceqz_u16(arg___p0: uint16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44329:23: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44327:48: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s8(arg___p0: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44344:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44342:49: warning: unable to translate function, demoted to extern
pub extern fn vceqz_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44350:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44348:49: warning: unable to translate function, demoted to extern
pub extern fn vceqz_f32(arg___p0: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44366:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44364:49: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s32(arg___p0: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44381:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44379:49: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s64(arg___p0: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44387:24: warning: TODO implement function '__builtin_neon_vceqz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44385:49: warning: unable to translate function, demoted to extern
pub extern fn vceqz_s16(arg___p0: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44402:22: warning: TODO implement function '__builtin_neon_vceqzd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44400:47: warning: unable to translate function, demoted to extern
pub extern fn vceqzd_u64(arg___p0: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44407:22: warning: TODO implement function '__builtin_neon_vceqzd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44405:47: warning: unable to translate function, demoted to extern
pub extern fn vceqzd_s64(arg___p0: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44412:22: warning: TODO implement function '__builtin_neon_vceqzd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44410:47: warning: unable to translate function, demoted to extern
pub extern fn vceqzd_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44417:22: warning: TODO implement function '__builtin_neon_vceqzs_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44415:47: warning: unable to translate function, demoted to extern
pub extern fn vceqzs_f32(arg___p0: float32_t) u32;
pub inline fn vcgeq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcgeq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 >= __p1));
    return __ret;
}
pub inline fn vcge_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 >= __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44488:22: warning: TODO implement function '__builtin_neon_vcged_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44486:47: warning: unable to translate function, demoted to extern
pub extern fn vcged_s64(arg___p0: i64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44493:22: warning: TODO implement function '__builtin_neon_vcged_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44491:47: warning: unable to translate function, demoted to extern
pub extern fn vcged_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44498:22: warning: TODO implement function '__builtin_neon_vcged_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44496:47: warning: unable to translate function, demoted to extern
pub extern fn vcged_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44503:22: warning: TODO implement function '__builtin_neon_vcges_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44501:47: warning: unable to translate function, demoted to extern
pub extern fn vcges_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44509:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44507:49: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s8(arg___p0: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44525:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44523:49: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44541:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44539:49: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44557:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44555:49: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s32(arg___p0: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44573:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44571:49: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s64(arg___p0: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44589:24: warning: TODO implement function '__builtin_neon_vcgezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44587:49: warning: unable to translate function, demoted to extern
pub extern fn vcgezq_s16(arg___p0: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44605:23: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44603:48: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s8(arg___p0: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44620:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44618:49: warning: unable to translate function, demoted to extern
pub extern fn vcgez_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44626:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44624:49: warning: unable to translate function, demoted to extern
pub extern fn vcgez_f32(arg___p0: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44642:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44640:49: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s32(arg___p0: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44657:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44655:49: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s64(arg___p0: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44663:24: warning: TODO implement function '__builtin_neon_vcgez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44661:49: warning: unable to translate function, demoted to extern
pub extern fn vcgez_s16(arg___p0: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44678:22: warning: TODO implement function '__builtin_neon_vcgezd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44676:47: warning: unable to translate function, demoted to extern
pub extern fn vcgezd_s64(arg___p0: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44683:22: warning: TODO implement function '__builtin_neon_vcgezd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44681:47: warning: unable to translate function, demoted to extern
pub extern fn vcgezd_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44688:22: warning: TODO implement function '__builtin_neon_vcgezs_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44686:47: warning: unable to translate function, demoted to extern
pub extern fn vcgezs_f32(arg___p0: float32_t) u32;
pub inline fn vcgtq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgtq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 > __p1));
    return __ret;
}
pub inline fn vcgt_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 > __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44759:22: warning: TODO implement function '__builtin_neon_vcgtd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44757:47: warning: unable to translate function, demoted to extern
pub extern fn vcgtd_s64(arg___p0: i64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44764:22: warning: TODO implement function '__builtin_neon_vcgtd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44762:47: warning: unable to translate function, demoted to extern
pub extern fn vcgtd_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44769:22: warning: TODO implement function '__builtin_neon_vcgtd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44767:47: warning: unable to translate function, demoted to extern
pub extern fn vcgtd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44774:22: warning: TODO implement function '__builtin_neon_vcgts_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44772:47: warning: unable to translate function, demoted to extern
pub extern fn vcgts_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44780:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44778:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s8(arg___p0: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44796:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44794:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44812:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44810:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44828:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44826:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s32(arg___p0: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44844:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44842:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s64(arg___p0: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44860:24: warning: TODO implement function '__builtin_neon_vcgtzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44858:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtzq_s16(arg___p0: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44876:23: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44874:48: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s8(arg___p0: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44891:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44889:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44897:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44895:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_f32(arg___p0: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44913:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44911:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s32(arg___p0: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44928:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44926:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s64(arg___p0: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44934:24: warning: TODO implement function '__builtin_neon_vcgtz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44932:49: warning: unable to translate function, demoted to extern
pub extern fn vcgtz_s16(arg___p0: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44949:22: warning: TODO implement function '__builtin_neon_vcgtzd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44947:47: warning: unable to translate function, demoted to extern
pub extern fn vcgtzd_s64(arg___p0: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44954:22: warning: TODO implement function '__builtin_neon_vcgtzd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44952:47: warning: unable to translate function, demoted to extern
pub extern fn vcgtzd_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44959:22: warning: TODO implement function '__builtin_neon_vcgtzs_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:44957:47: warning: unable to translate function, demoted to extern
pub extern fn vcgtzs_f32(arg___p0: float32_t) u32;
pub inline fn vcleq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcleq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 <= __p1));
    return __ret;
}
pub inline fn vcle_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 <= __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45030:22: warning: TODO implement function '__builtin_neon_vcled_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45028:47: warning: unable to translate function, demoted to extern
pub extern fn vcled_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45035:22: warning: TODO implement function '__builtin_neon_vcled_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45033:47: warning: unable to translate function, demoted to extern
pub extern fn vcled_s64(arg___p0: i64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45040:22: warning: TODO implement function '__builtin_neon_vcled_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45038:47: warning: unable to translate function, demoted to extern
pub extern fn vcled_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45045:22: warning: TODO implement function '__builtin_neon_vcles_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45043:47: warning: unable to translate function, demoted to extern
pub extern fn vcles_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45051:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45049:49: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s8(arg___p0: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45067:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45065:49: warning: unable to translate function, demoted to extern
pub extern fn vclezq_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45083:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45081:49: warning: unable to translate function, demoted to extern
pub extern fn vclezq_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45099:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45097:49: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s32(arg___p0: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45115:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45113:49: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s64(arg___p0: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45131:24: warning: TODO implement function '__builtin_neon_vclezq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45129:49: warning: unable to translate function, demoted to extern
pub extern fn vclezq_s16(arg___p0: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45147:23: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45145:48: warning: unable to translate function, demoted to extern
pub extern fn vclez_s8(arg___p0: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45162:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45160:49: warning: unable to translate function, demoted to extern
pub extern fn vclez_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45168:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45166:49: warning: unable to translate function, demoted to extern
pub extern fn vclez_f32(arg___p0: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45184:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45182:49: warning: unable to translate function, demoted to extern
pub extern fn vclez_s32(arg___p0: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45199:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45197:49: warning: unable to translate function, demoted to extern
pub extern fn vclez_s64(arg___p0: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45205:24: warning: TODO implement function '__builtin_neon_vclez_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45203:49: warning: unable to translate function, demoted to extern
pub extern fn vclez_s16(arg___p0: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45220:22: warning: TODO implement function '__builtin_neon_vclezd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45218:47: warning: unable to translate function, demoted to extern
pub extern fn vclezd_s64(arg___p0: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45225:22: warning: TODO implement function '__builtin_neon_vclezd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45223:47: warning: unable to translate function, demoted to extern
pub extern fn vclezd_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45230:22: warning: TODO implement function '__builtin_neon_vclezs_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45228:47: warning: unable to translate function, demoted to extern
pub extern fn vclezs_f32(arg___p0: float32_t) u32;
pub inline fn vcltq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vcltq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 < __p1));
    return __ret;
}
pub inline fn vclt_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0 < __p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45301:22: warning: TODO implement function '__builtin_neon_vcltd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45299:47: warning: unable to translate function, demoted to extern
pub extern fn vcltd_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45306:22: warning: TODO implement function '__builtin_neon_vcltd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45304:47: warning: unable to translate function, demoted to extern
pub extern fn vcltd_s64(arg___p0: i64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45311:22: warning: TODO implement function '__builtin_neon_vcltd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45309:47: warning: unable to translate function, demoted to extern
pub extern fn vcltd_f64(arg___p0: float64_t, arg___p1: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45316:22: warning: TODO implement function '__builtin_neon_vclts_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45314:47: warning: unable to translate function, demoted to extern
pub extern fn vclts_f32(arg___p0: float32_t, arg___p1: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45322:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45320:49: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s8(arg___p0: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45338:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45336:49: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45354:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45352:49: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_f32(arg___p0: float32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45370:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45368:49: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s32(arg___p0: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45386:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45384:49: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s64(arg___p0: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45402:24: warning: TODO implement function '__builtin_neon_vcltzq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45400:49: warning: unable to translate function, demoted to extern
pub extern fn vcltzq_s16(arg___p0: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45418:23: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45416:48: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s8(arg___p0: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45433:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45431:49: warning: unable to translate function, demoted to extern
pub extern fn vcltz_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45439:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45437:49: warning: unable to translate function, demoted to extern
pub extern fn vcltz_f32(arg___p0: float32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45455:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45453:49: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s32(arg___p0: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45470:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45468:49: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s64(arg___p0: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45476:24: warning: TODO implement function '__builtin_neon_vcltz_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45474:49: warning: unable to translate function, demoted to extern
pub extern fn vcltz_s16(arg___p0: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45491:22: warning: TODO implement function '__builtin_neon_vcltzd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45489:47: warning: unable to translate function, demoted to extern
pub extern fn vcltzd_s64(arg___p0: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45496:22: warning: TODO implement function '__builtin_neon_vcltzd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45494:47: warning: unable to translate function, demoted to extern
pub extern fn vcltzd_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45501:22: warning: TODO implement function '__builtin_neon_vcltzs_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45499:47: warning: unable to translate function, demoted to extern
pub extern fn vcltzs_f32(arg___p0: float32_t) u32;
pub inline fn vcombine_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vcombine_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46438:23: warning: TODO implement function '__builtin_neon_vcvts_f32_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46436:48: warning: unable to translate function, demoted to extern
pub extern fn vcvts_f32_s32(arg___p0: i32) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46443:23: warning: TODO implement function '__builtin_neon_vcvts_f32_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46441:48: warning: unable to translate function, demoted to extern
pub extern fn vcvts_f32_u32(arg___p0: u32) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46449:25: warning: TODO implement function '__builtin_neon_vcvt_f32_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46447:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_f64(arg___p0: float64x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46469:23: warning: TODO implement function '__builtin_neon_vcvtd_f64_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46467:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_f64_s64(arg___p0: i64) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46474:23: warning: TODO implement function '__builtin_neon_vcvtd_f64_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46472:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_f64_u64(arg___p0: u64) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46480:25: warning: TODO implement function '__builtin_neon_vcvtq_f64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46478:50: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f64_u64(arg___p0: uint64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46496:25: warning: TODO implement function '__builtin_neon_vcvtq_f64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46494:50: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_f64_s64(arg___p0: int64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46511:25: warning: TODO implement function '__builtin_neon_vcvt_f64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46509:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f64_u64(arg___p0: uint64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46516:25: warning: TODO implement function '__builtin_neon_vcvt_f64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46514:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f64_s64(arg___p0: int64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46522:25: warning: TODO implement function '__builtin_neon_vcvt_f64_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46520:50: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f64_f32(arg___p0: float32x2_t) float64x2_t;
pub inline fn vcvt_high_f16_f32(arg___p0: float16x4_t, arg___p1: float32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_f16(__p0, vcvt_f16_f32(__p1));
    return __ret;
}
pub inline fn vcvt_high_f32_f16(arg___p0: float16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcvt_f32_f16(vget_high_f16(__p0));
    return __ret;
}
pub inline fn vcvt_high_f32_f64(arg___p0: float32x2_t, arg___p1: float64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_f32(__p0, vcvt_f32_f64(__p1));
    return __ret;
}
pub inline fn vcvt_high_f64_f32(arg___p0: float32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vcvt_f64_f32(vget_high_f32(__p0));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46752:21: warning: TODO implement function '__builtin_neon_vcvts_s32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46750:46: warning: unable to translate function, demoted to extern
pub extern fn vcvts_s32_f32(arg___p0: float32_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46757:21: warning: TODO implement function '__builtin_neon_vcvtd_s64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46755:46: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_s64_f64(arg___p0: float64_t) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46763:23: warning: TODO implement function '__builtin_neon_vcvtq_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46761:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46778:23: warning: TODO implement function '__builtin_neon_vcvt_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46776:48: warning: unable to translate function, demoted to extern
pub extern fn vcvt_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46783:22: warning: TODO implement function '__builtin_neon_vcvts_u32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46781:47: warning: unable to translate function, demoted to extern
pub extern fn vcvts_u32_f32(arg___p0: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46788:22: warning: TODO implement function '__builtin_neon_vcvtd_u64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46786:47: warning: unable to translate function, demoted to extern
pub extern fn vcvtd_u64_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46794:24: warning: TODO implement function '__builtin_neon_vcvtq_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46792:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46809:24: warning: TODO implement function '__builtin_neon_vcvt_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46807:49: warning: unable to translate function, demoted to extern
pub extern fn vcvt_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46814:21: warning: TODO implement function '__builtin_neon_vcvtas_s32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46812:46: warning: unable to translate function, demoted to extern
pub extern fn vcvtas_s32_f32(arg___p0: float32_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46820:23: warning: TODO implement function '__builtin_neon_vcvtaq_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46818:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46835:23: warning: TODO implement function '__builtin_neon_vcvta_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46833:48: warning: unable to translate function, demoted to extern
pub extern fn vcvta_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46840:21: warning: TODO implement function '__builtin_neon_vcvtad_s64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46838:46: warning: unable to translate function, demoted to extern
pub extern fn vcvtad_s64_f64(arg___p0: float64_t) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46845:22: warning: TODO implement function '__builtin_neon_vcvtas_u32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46843:47: warning: unable to translate function, demoted to extern
pub extern fn vcvtas_u32_f32(arg___p0: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46851:24: warning: TODO implement function '__builtin_neon_vcvtaq_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46849:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtaq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46866:24: warning: TODO implement function '__builtin_neon_vcvta_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46864:49: warning: unable to translate function, demoted to extern
pub extern fn vcvta_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46871:22: warning: TODO implement function '__builtin_neon_vcvtad_u64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46869:47: warning: unable to translate function, demoted to extern
pub extern fn vcvtad_u64_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46876:21: warning: TODO implement function '__builtin_neon_vcvtms_s32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46874:46: warning: unable to translate function, demoted to extern
pub extern fn vcvtms_s32_f32(arg___p0: float32_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46882:23: warning: TODO implement function '__builtin_neon_vcvtmq_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46880:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46897:23: warning: TODO implement function '__builtin_neon_vcvtm_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46895:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46902:21: warning: TODO implement function '__builtin_neon_vcvtmd_s64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46900:46: warning: unable to translate function, demoted to extern
pub extern fn vcvtmd_s64_f64(arg___p0: float64_t) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46907:22: warning: TODO implement function '__builtin_neon_vcvtms_u32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46905:47: warning: unable to translate function, demoted to extern
pub extern fn vcvtms_u32_f32(arg___p0: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46913:24: warning: TODO implement function '__builtin_neon_vcvtmq_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46911:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtmq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46928:24: warning: TODO implement function '__builtin_neon_vcvtm_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46926:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtm_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46933:22: warning: TODO implement function '__builtin_neon_vcvtmd_u64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46931:47: warning: unable to translate function, demoted to extern
pub extern fn vcvtmd_u64_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46938:21: warning: TODO implement function '__builtin_neon_vcvtns_s32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46936:46: warning: unable to translate function, demoted to extern
pub extern fn vcvtns_s32_f32(arg___p0: float32_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46944:23: warning: TODO implement function '__builtin_neon_vcvtnq_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46942:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46959:23: warning: TODO implement function '__builtin_neon_vcvtn_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46957:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46964:21: warning: TODO implement function '__builtin_neon_vcvtnd_s64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46962:46: warning: unable to translate function, demoted to extern
pub extern fn vcvtnd_s64_f64(arg___p0: float64_t) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46969:22: warning: TODO implement function '__builtin_neon_vcvtns_u32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46967:47: warning: unable to translate function, demoted to extern
pub extern fn vcvtns_u32_f32(arg___p0: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46975:24: warning: TODO implement function '__builtin_neon_vcvtnq_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46973:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtnq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46990:24: warning: TODO implement function '__builtin_neon_vcvtn_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46988:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtn_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46995:22: warning: TODO implement function '__builtin_neon_vcvtnd_u64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46993:47: warning: unable to translate function, demoted to extern
pub extern fn vcvtnd_u64_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47000:21: warning: TODO implement function '__builtin_neon_vcvtps_s32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46998:46: warning: unable to translate function, demoted to extern
pub extern fn vcvtps_s32_f32(arg___p0: float32_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47006:23: warning: TODO implement function '__builtin_neon_vcvtpq_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47004:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_s64_f64(arg___p0: float64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47021:23: warning: TODO implement function '__builtin_neon_vcvtp_s64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47019:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_s64_f64(arg___p0: float64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47026:21: warning: TODO implement function '__builtin_neon_vcvtpd_s64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47024:46: warning: unable to translate function, demoted to extern
pub extern fn vcvtpd_s64_f64(arg___p0: float64_t) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47031:22: warning: TODO implement function '__builtin_neon_vcvtps_u32_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47029:47: warning: unable to translate function, demoted to extern
pub extern fn vcvtps_u32_f32(arg___p0: float32_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47037:24: warning: TODO implement function '__builtin_neon_vcvtpq_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47035:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtpq_u64_f64(arg___p0: float64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47052:24: warning: TODO implement function '__builtin_neon_vcvtp_u64_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47050:49: warning: unable to translate function, demoted to extern
pub extern fn vcvtp_u64_f64(arg___p0: float64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47057:22: warning: TODO implement function '__builtin_neon_vcvtpd_u64_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47055:47: warning: unable to translate function, demoted to extern
pub extern fn vcvtpd_u64_f64(arg___p0: float64_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47062:23: warning: TODO implement function '__builtin_neon_vcvtxd_f32_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47060:48: warning: unable to translate function, demoted to extern
pub extern fn vcvtxd_f32_f64(arg___p0: float64_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47068:25: warning: TODO implement function '__builtin_neon_vcvtx_f32_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47066:50: warning: unable to translate function, demoted to extern
pub extern fn vcvtx_f32_f64(arg___p0: float64x2_t) float32x2_t;
pub inline fn vcvtx_high_f32_f64(arg___p0: float32x2_t, arg___p1: float64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_f32(__p0, vcvtx_f32_f64(__p1));
    return __ret;
}
pub inline fn vdivq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdivq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdiv_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdiv_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 / __p1;
    return __ret;
}
pub inline fn vdup_n_p64(arg___p0: poly64_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk poly64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_p64(arg___p0: poly64_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk poly64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdupq_n_f64(arg___p0: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vdup_n_f64(arg___p0: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk float64x1_t{
            tmp,
        };
    };
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48213:25: warning: TODO implement function '__builtin_neon_vfmaq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48211:50: warning: unable to translate function, demoted to extern
pub extern fn vfmaq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48235:25: warning: TODO implement function '__builtin_neon_vfma_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48233:50: warning: unable to translate function, demoted to extern
pub extern fn vfma_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
pub inline fn vfmaq_n_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f64(__p0, __p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vfma_n_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = vfma_f64(__p0, __p1, blk: {
        const tmp = __p2;
        break :blk float64x1_t{
            tmp,
        };
    });
    return __ret;
}
pub inline fn vfmsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f64(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfms_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = vfma_f64(__p0, -__p1, __p2);
    return __ret;
}
pub inline fn vfmsq_n_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f64(__p0, -__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vfmsq_n_f32(arg___p0: float32x4_t, arg___p1: float32x4_t, arg___p2: float32_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vfmaq_f32(__p0, -__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk float32x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vfms_n_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = vfma_f64(__p0, -__p1, blk: {
        const tmp = __p2;
        break :blk float64x1_t{
            tmp,
        };
    });
    return __ret;
}
pub inline fn vfms_n_f32(arg___p0: float32x2_t, arg___p1: float32x2_t, arg___p2: float32_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = vfma_f32(__p0, -__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk float32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vget_high_p64(arg___p0: poly64x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_high_f64(arg___p0: float64x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_p64(arg___p0: poly64x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
pub inline fn vget_low_f64(arg___p0: float64x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(@shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p0, @Vector(1, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
    })));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50262:25: warning: TODO implement function '__builtin_neon_vmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50260:50: warning: unable to translate function, demoted to extern
pub extern fn vmaxq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50278:25: warning: TODO implement function '__builtin_neon_vmax_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50276:50: warning: unable to translate function, demoted to extern
pub extern fn vmax_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50284:23: warning: TODO implement function '__builtin_neon_vmaxnmvq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50282:48: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmvq_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50299:23: warning: TODO implement function '__builtin_neon_vmaxnmvq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50297:48: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmvq_f32(arg___p0: float32x4_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50314:23: warning: TODO implement function '__builtin_neon_vmaxnmv_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50312:48: warning: unable to translate function, demoted to extern
pub extern fn vmaxnmv_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50329:21: warning: TODO implement function '__builtin_neon_vmaxvq_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50327:46: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_u8(arg___p0: uint8x16_t) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50344:22: warning: TODO implement function '__builtin_neon_vmaxvq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50342:47: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_u32(arg___p0: uint32x4_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50359:22: warning: TODO implement function '__builtin_neon_vmaxvq_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50357:47: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_u16(arg___p0: uint16x8_t) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50374:20: warning: TODO implement function '__builtin_neon_vmaxvq_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50372:45: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_s8(arg___p0: int8x16_t) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50389:23: warning: TODO implement function '__builtin_neon_vmaxvq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50387:48: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50404:23: warning: TODO implement function '__builtin_neon_vmaxvq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50402:48: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_f32(arg___p0: float32x4_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50419:21: warning: TODO implement function '__builtin_neon_vmaxvq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50417:46: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_s32(arg___p0: int32x4_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50434:21: warning: TODO implement function '__builtin_neon_vmaxvq_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50432:46: warning: unable to translate function, demoted to extern
pub extern fn vmaxvq_s16(arg___p0: int16x8_t) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50449:21: warning: TODO implement function '__builtin_neon_vmaxv_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50447:46: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_u8(arg___p0: uint8x8_t) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50464:22: warning: TODO implement function '__builtin_neon_vmaxv_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50462:47: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_u32(arg___p0: uint32x2_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50479:22: warning: TODO implement function '__builtin_neon_vmaxv_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50477:47: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_u16(arg___p0: uint16x4_t) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50494:20: warning: TODO implement function '__builtin_neon_vmaxv_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50492:45: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_s8(arg___p0: int8x8_t) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50509:23: warning: TODO implement function '__builtin_neon_vmaxv_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50507:48: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50524:21: warning: TODO implement function '__builtin_neon_vmaxv_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50522:46: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_s32(arg___p0: int32x2_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50539:21: warning: TODO implement function '__builtin_neon_vmaxv_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50537:46: warning: unable to translate function, demoted to extern
pub extern fn vmaxv_s16(arg___p0: int16x4_t) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50554:25: warning: TODO implement function '__builtin_neon_vminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50552:50: warning: unable to translate function, demoted to extern
pub extern fn vminq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50570:25: warning: TODO implement function '__builtin_neon_vmin_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50568:50: warning: unable to translate function, demoted to extern
pub extern fn vmin_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50576:23: warning: TODO implement function '__builtin_neon_vminnmvq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50574:48: warning: unable to translate function, demoted to extern
pub extern fn vminnmvq_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50591:23: warning: TODO implement function '__builtin_neon_vminnmvq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50589:48: warning: unable to translate function, demoted to extern
pub extern fn vminnmvq_f32(arg___p0: float32x4_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50606:23: warning: TODO implement function '__builtin_neon_vminnmv_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50604:48: warning: unable to translate function, demoted to extern
pub extern fn vminnmv_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50621:21: warning: TODO implement function '__builtin_neon_vminvq_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50619:46: warning: unable to translate function, demoted to extern
pub extern fn vminvq_u8(arg___p0: uint8x16_t) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50636:22: warning: TODO implement function '__builtin_neon_vminvq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50634:47: warning: unable to translate function, demoted to extern
pub extern fn vminvq_u32(arg___p0: uint32x4_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50651:22: warning: TODO implement function '__builtin_neon_vminvq_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50649:47: warning: unable to translate function, demoted to extern
pub extern fn vminvq_u16(arg___p0: uint16x8_t) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50666:20: warning: TODO implement function '__builtin_neon_vminvq_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50664:45: warning: unable to translate function, demoted to extern
pub extern fn vminvq_s8(arg___p0: int8x16_t) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50681:23: warning: TODO implement function '__builtin_neon_vminvq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50679:48: warning: unable to translate function, demoted to extern
pub extern fn vminvq_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50696:23: warning: TODO implement function '__builtin_neon_vminvq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50694:48: warning: unable to translate function, demoted to extern
pub extern fn vminvq_f32(arg___p0: float32x4_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50711:21: warning: TODO implement function '__builtin_neon_vminvq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50709:46: warning: unable to translate function, demoted to extern
pub extern fn vminvq_s32(arg___p0: int32x4_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50726:21: warning: TODO implement function '__builtin_neon_vminvq_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50724:46: warning: unable to translate function, demoted to extern
pub extern fn vminvq_s16(arg___p0: int16x8_t) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50741:21: warning: TODO implement function '__builtin_neon_vminv_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50739:46: warning: unable to translate function, demoted to extern
pub extern fn vminv_u8(arg___p0: uint8x8_t) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50756:22: warning: TODO implement function '__builtin_neon_vminv_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50754:47: warning: unable to translate function, demoted to extern
pub extern fn vminv_u32(arg___p0: uint32x2_t) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50771:22: warning: TODO implement function '__builtin_neon_vminv_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50769:47: warning: unable to translate function, demoted to extern
pub extern fn vminv_u16(arg___p0: uint16x4_t) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50786:20: warning: TODO implement function '__builtin_neon_vminv_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50784:45: warning: unable to translate function, demoted to extern
pub extern fn vminv_s8(arg___p0: int8x8_t) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50801:23: warning: TODO implement function '__builtin_neon_vminv_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50799:48: warning: unable to translate function, demoted to extern
pub extern fn vminv_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50816:21: warning: TODO implement function '__builtin_neon_vminv_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50814:46: warning: unable to translate function, demoted to extern
pub extern fn vminv_s32(arg___p0: int32x2_t) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50831:21: warning: TODO implement function '__builtin_neon_vminv_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50829:46: warning: unable to translate function, demoted to extern
pub extern fn vminv_s16(arg___p0: int16x4_t) i16;
pub inline fn vmlaq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmla_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 + (__p1 * __p2);
    return __ret;
}
pub inline fn vmlsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmls_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - (__p1 * __p2);
    return __ret;
}
pub inline fn vmov_n_p64(arg___p0: poly64_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk poly64x1_t{
            tmp,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_p64(arg___p0: poly64_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk poly64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmovq_n_f64(arg___p0: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        const tmp_1 = __p0;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    };
    return __ret;
}
pub inline fn vmov_n_f64(arg___p0: float64_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = blk: {
        const tmp = __p0;
        break :blk float64x1_t{
            tmp,
        };
    };
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28076:24: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51986:49: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_u8(arg___p0_536: uint8x16_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28100:24: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52010:49: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_u32(arg___p0_539: uint32x4_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28124:24: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52034:49: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_u16(arg___p0_542: uint16x8_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28148:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52058:48: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_s8(arg___p0_545: int8x16_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28172:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52082:48: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_s32(arg___p0_548: int32x4_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28196:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52106:48: warning: unable to translate function, demoted to extern
pub extern fn vmovl_high_s16(arg___p0_551: int16x8_t) int32x4_t;
pub inline fn vmovn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vmovn_u32(__p1));
    return __ret;
}
pub inline fn vmovn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vmovn_u64(__p1));
    return __ret;
}
pub inline fn vmovn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vmovn_u16(__p1));
    return __ret;
}
pub inline fn vmovn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vmovn_s32(__p1));
    return __ret;
}
pub inline fn vmovn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vmovn_s64(__p1));
    return __ret;
}
pub inline fn vmovn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vmovn_s16(__p1));
    return __ret;
}
pub inline fn vmulq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
pub inline fn vmul_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 * __p1;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52596:25: warning: TODO implement function '__builtin_neon_vmul_n_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52594:50: warning: unable to translate function, demoted to extern
pub extern fn vmul_n_f64(arg___p0: float64x1_t, arg___p1: float64_t) float64x1_t;
pub inline fn vmulq_n_f64(arg___p0: float64x2_t, arg___p1: float64_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 * (blk: {
        const tmp = __p1;
        const tmp_1 = __p1;
        break :blk float64x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmull_high_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = vmull_p8(vget_high_p8(__p0), vget_high_p8(__p1));
    return __ret;
}
pub inline fn vmull_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmull_u8(vget_high_u8(__p0), vget_high_u8(__p1));
    return __ret;
}
pub inline fn vmull_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_u32(vget_high_u32(__p0), vget_high_u32(__p1));
    return __ret;
}
pub inline fn vmull_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_u16(vget_high_u16(__p0), vget_high_u16(__p1));
    return __ret;
}
pub inline fn vmull_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmull_s8(vget_high_s8(__p0), vget_high_s8(__p1));
    return __ret;
}
pub inline fn vmull_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_s32(vget_high_s32(__p0), vget_high_s32(__p1));
    return __ret;
}
pub inline fn vmull_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_s16(vget_high_s16(__p0), vget_high_s16(__p1));
    return __ret;
}
pub inline fn vmull_high_n_u32(arg___p0: uint32x4_t, arg___p1: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_n_u32(vget_high_u32(__p0), __p1);
    return __ret;
}
pub inline fn vmull_high_n_u16(arg___p0: uint16x8_t, arg___p1: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_n_u16(vget_high_u16(__p0), __p1);
    return __ret;
}
pub inline fn vmull_high_n_s32(arg___p0: int32x4_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmull_n_s32(vget_high_s32(__p0), __p1);
    return __ret;
}
pub inline fn vmull_high_n_s16(arg___p0: int16x8_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmull_n_s16(vget_high_s16(__p0), __p1);
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53053:25: warning: TODO implement function '__builtin_neon_vmulxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53051:50: warning: unable to translate function, demoted to extern
pub extern fn vmulxq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53075:25: warning: TODO implement function '__builtin_neon_vmulxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53073:50: warning: unable to translate function, demoted to extern
pub extern fn vmulxq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53096:25: warning: TODO implement function '__builtin_neon_vmulx_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53094:50: warning: unable to translate function, demoted to extern
pub extern fn vmulx_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53102:25: warning: TODO implement function '__builtin_neon_vmulx_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53100:50: warning: unable to translate function, demoted to extern
pub extern fn vmulx_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53123:23: warning: TODO implement function '__builtin_neon_vmulxd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53121:48: warning: unable to translate function, demoted to extern
pub extern fn vmulxd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53128:23: warning: TODO implement function '__builtin_neon_vmulxs_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53126:48: warning: unable to translate function, demoted to extern
pub extern fn vmulxs_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
pub inline fn vnegq_f64(arg___p0: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vnegq_s64(arg___p0: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_f64(arg___p0: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
pub inline fn vneg_s64(arg___p0: int64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = -__p0;
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53364:21: warning: TODO implement function '__builtin_neon_vnegd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53362:46: warning: unable to translate function, demoted to extern
pub extern fn vnegd_s64(arg___p0: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53370:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53368:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53387:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53385:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53404:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53402:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53421:24: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53419:49: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53438:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53436:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53455:25: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53453:50: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53472:25: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53470:50: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53489:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53487:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53506:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53504:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53523:23: warning: TODO implement function '__builtin_neon_vpaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53521:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53540:22: warning: TODO implement function '__builtin_neon_vpaddd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53538:47: warning: unable to translate function, demoted to extern
pub extern fn vpaddd_u64(arg___p0: uint64x2_t) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53555:23: warning: TODO implement function '__builtin_neon_vpaddd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53553:48: warning: unable to translate function, demoted to extern
pub extern fn vpaddd_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53570:21: warning: TODO implement function '__builtin_neon_vpaddd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53568:46: warning: unable to translate function, demoted to extern
pub extern fn vpaddd_s64(arg___p0: int64x2_t) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53585:23: warning: TODO implement function '__builtin_neon_vpadds_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53583:48: warning: unable to translate function, demoted to extern
pub extern fn vpadds_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53600:24: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53598:49: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53617:24: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53615:49: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53634:24: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53632:49: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53651:23: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53649:48: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53668:25: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53666:50: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53685:25: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53683:50: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53702:23: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53700:48: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53719:23: warning: TODO implement function '__builtin_neon_vpmaxq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53717:48: warning: unable to translate function, demoted to extern
pub extern fn vpmaxq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53736:23: warning: TODO implement function '__builtin_neon_vpmaxqd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53734:48: warning: unable to translate function, demoted to extern
pub extern fn vpmaxqd_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53751:23: warning: TODO implement function '__builtin_neon_vpmaxs_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53749:48: warning: unable to translate function, demoted to extern
pub extern fn vpmaxs_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53766:25: warning: TODO implement function '__builtin_neon_vpmaxnmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53764:50: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53783:25: warning: TODO implement function '__builtin_neon_vpmaxnmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53781:50: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53800:25: warning: TODO implement function '__builtin_neon_vpmaxnm_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53798:50: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53817:23: warning: TODO implement function '__builtin_neon_vpmaxnmqd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53815:48: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnmqd_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53832:23: warning: TODO implement function '__builtin_neon_vpmaxnms_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53830:48: warning: unable to translate function, demoted to extern
pub extern fn vpmaxnms_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53847:24: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53845:49: warning: unable to translate function, demoted to extern
pub extern fn vpminq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53864:24: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53862:49: warning: unable to translate function, demoted to extern
pub extern fn vpminq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53881:24: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53879:49: warning: unable to translate function, demoted to extern
pub extern fn vpminq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53898:23: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53896:48: warning: unable to translate function, demoted to extern
pub extern fn vpminq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53915:25: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53913:50: warning: unable to translate function, demoted to extern
pub extern fn vpminq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53932:25: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53930:50: warning: unable to translate function, demoted to extern
pub extern fn vpminq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53949:23: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53947:48: warning: unable to translate function, demoted to extern
pub extern fn vpminq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53966:23: warning: TODO implement function '__builtin_neon_vpminq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53964:48: warning: unable to translate function, demoted to extern
pub extern fn vpminq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53983:23: warning: TODO implement function '__builtin_neon_vpminqd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53981:48: warning: unable to translate function, demoted to extern
pub extern fn vpminqd_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53998:23: warning: TODO implement function '__builtin_neon_vpmins_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53996:48: warning: unable to translate function, demoted to extern
pub extern fn vpmins_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54013:25: warning: TODO implement function '__builtin_neon_vpminnmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54011:50: warning: unable to translate function, demoted to extern
pub extern fn vpminnmq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54030:25: warning: TODO implement function '__builtin_neon_vpminnmq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54028:50: warning: unable to translate function, demoted to extern
pub extern fn vpminnmq_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54047:25: warning: TODO implement function '__builtin_neon_vpminnm_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54045:50: warning: unable to translate function, demoted to extern
pub extern fn vpminnm_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54064:23: warning: TODO implement function '__builtin_neon_vpminnmqd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54062:48: warning: unable to translate function, demoted to extern
pub extern fn vpminnmqd_f64(arg___p0: float64x2_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54079:23: warning: TODO implement function '__builtin_neon_vpminnms_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54077:48: warning: unable to translate function, demoted to extern
pub extern fn vpminnms_f32(arg___p0: float32x2_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54094:23: warning: TODO implement function '__builtin_neon_vqabsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54092:48: warning: unable to translate function, demoted to extern
pub extern fn vqabsq_s64(arg___p0: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54109:23: warning: TODO implement function '__builtin_neon_vqabs_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54107:48: warning: unable to translate function, demoted to extern
pub extern fn vqabs_s64(arg___p0: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54114:20: warning: TODO implement function '__builtin_neon_vqabsb_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54112:45: warning: unable to translate function, demoted to extern
pub extern fn vqabsb_s8(arg___p0: i8) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54119:21: warning: TODO implement function '__builtin_neon_vqabss_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54117:46: warning: unable to translate function, demoted to extern
pub extern fn vqabss_s32(arg___p0: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54124:21: warning: TODO implement function '__builtin_neon_vqabsd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54122:46: warning: unable to translate function, demoted to extern
pub extern fn vqabsd_s64(arg___p0: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54129:21: warning: TODO implement function '__builtin_neon_vqabsh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54127:46: warning: unable to translate function, demoted to extern
pub extern fn vqabsh_s16(arg___p0: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54134:21: warning: TODO implement function '__builtin_neon_vqaddb_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54132:46: warning: unable to translate function, demoted to extern
pub extern fn vqaddb_u8(arg___p0: u8, arg___p1: u8) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54139:22: warning: TODO implement function '__builtin_neon_vqadds_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54137:47: warning: unable to translate function, demoted to extern
pub extern fn vqadds_u32(arg___p0: u32, arg___p1: u32) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54144:22: warning: TODO implement function '__builtin_neon_vqaddd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54142:47: warning: unable to translate function, demoted to extern
pub extern fn vqaddd_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54149:22: warning: TODO implement function '__builtin_neon_vqaddh_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54147:47: warning: unable to translate function, demoted to extern
pub extern fn vqaddh_u16(arg___p0: u16, arg___p1: u16) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54154:20: warning: TODO implement function '__builtin_neon_vqaddb_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54152:45: warning: unable to translate function, demoted to extern
pub extern fn vqaddb_s8(arg___p0: i8, arg___p1: i8) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54159:21: warning: TODO implement function '__builtin_neon_vqadds_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54157:46: warning: unable to translate function, demoted to extern
pub extern fn vqadds_s32(arg___p0: i32, arg___p1: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54164:21: warning: TODO implement function '__builtin_neon_vqaddd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54162:46: warning: unable to translate function, demoted to extern
pub extern fn vqaddd_s64(arg___p0: i64, arg___p1: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54169:21: warning: TODO implement function '__builtin_neon_vqaddh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54167:46: warning: unable to translate function, demoted to extern
pub extern fn vqaddh_s16(arg___p0: i16, arg___p1: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54174:21: warning: TODO implement function '__builtin_neon_vqdmlals_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54172:46: warning: unable to translate function, demoted to extern
pub extern fn vqdmlals_s32(arg___p0: i64, arg___p1: i32, arg___p2: i32) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54179:21: warning: TODO implement function '__builtin_neon_vqdmlalh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54177:46: warning: unable to translate function, demoted to extern
pub extern fn vqdmlalh_s16(arg___p0: i32, arg___p1: i16, arg___p2: i16) i32;
pub inline fn vqdmlal_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vqdmlal_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vqdmlal_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vqdmlal_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlal_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54482:21: warning: TODO implement function '__builtin_neon_vqdmlsls_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54480:46: warning: unable to translate function, demoted to extern
pub extern fn vqdmlsls_s32(arg___p0: i64, arg___p1: i32, arg___p2: i32) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54487:21: warning: TODO implement function '__builtin_neon_vqdmlslh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54485:46: warning: unable to translate function, demoted to extern
pub extern fn vqdmlslh_s16(arg___p0: i32, arg___p1: i16, arg___p2: i16) i32;
pub inline fn vqdmlsl_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vqdmlsl_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vqdmlsl_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vqdmlsl_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmlsl_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54790:21: warning: TODO implement function '__builtin_neon_vqdmulhs_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54788:46: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhs_s32(arg___p0: i32, arg___p1: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54795:21: warning: TODO implement function '__builtin_neon_vqdmulhh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54793:46: warning: unable to translate function, demoted to extern
pub extern fn vqdmulhh_s16(arg___p0: i16, arg___p1: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55044:21: warning: TODO implement function '__builtin_neon_vqdmulls_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55042:46: warning: unable to translate function, demoted to extern
pub extern fn vqdmulls_s32(arg___p0: i32, arg___p1: i32) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55049:21: warning: TODO implement function '__builtin_neon_vqdmullh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55047:46: warning: unable to translate function, demoted to extern
pub extern fn vqdmullh_s16(arg___p0: i16, arg___p1: i16) i32;
pub inline fn vqdmull_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s32(vget_high_s32(__p0), vget_high_s32(__p1));
    return __ret;
}
pub inline fn vqdmull_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmull_s16(vget_high_s16(__p0), vget_high_s16(__p1));
    return __ret;
}
pub inline fn vqdmull_high_n_s32(arg___p0: int32x4_t, arg___p1: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vqdmull_n_s32(vget_high_s32(__p0), __p1);
    return __ret;
}
pub inline fn vqdmull_high_n_s16(arg___p0: int16x8_t, arg___p1: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vqdmull_n_s16(vget_high_s16(__p0), __p1);
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55322:21: warning: TODO implement function '__builtin_neon_vqmovns_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55320:46: warning: unable to translate function, demoted to extern
pub extern fn vqmovns_s32(arg___p0: i32) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55327:21: warning: TODO implement function '__builtin_neon_vqmovnd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55325:46: warning: unable to translate function, demoted to extern
pub extern fn vqmovnd_s64(arg___p0: i64) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55332:20: warning: TODO implement function '__builtin_neon_vqmovnh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55330:45: warning: unable to translate function, demoted to extern
pub extern fn vqmovnh_s16(arg___p0: i16) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55337:22: warning: TODO implement function '__builtin_neon_vqmovns_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55335:47: warning: unable to translate function, demoted to extern
pub extern fn vqmovns_u32(arg___p0: u32) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55342:22: warning: TODO implement function '__builtin_neon_vqmovnd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55340:47: warning: unable to translate function, demoted to extern
pub extern fn vqmovnd_u64(arg___p0: u64) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55347:21: warning: TODO implement function '__builtin_neon_vqmovnh_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55345:46: warning: unable to translate function, demoted to extern
pub extern fn vqmovnh_u16(arg___p0: u16) u8;
pub inline fn vqmovn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vqmovn_u32(__p1));
    return __ret;
}
pub inline fn vqmovn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vqmovn_u64(__p1));
    return __ret;
}
pub inline fn vqmovn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vqmovn_u16(__p1));
    return __ret;
}
pub inline fn vqmovn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vqmovn_s32(__p1));
    return __ret;
}
pub inline fn vqmovn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vqmovn_s64(__p1));
    return __ret;
}
pub inline fn vqmovn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vqmovn_s16(__p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55454:22: warning: TODO implement function '__builtin_neon_vqmovuns_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55452:47: warning: unable to translate function, demoted to extern
pub extern fn vqmovuns_s32(arg___p0: i32) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55459:22: warning: TODO implement function '__builtin_neon_vqmovund_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55457:47: warning: unable to translate function, demoted to extern
pub extern fn vqmovund_s64(arg___p0: i64) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55464:21: warning: TODO implement function '__builtin_neon_vqmovunh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55462:46: warning: unable to translate function, demoted to extern
pub extern fn vqmovunh_s16(arg___p0: i16) u8;
pub inline fn vqmovun_high_s32(arg___p0: uint16x4_t, arg___p1: int32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vqmovun_s32(__p1));
    return __ret;
}
pub inline fn vqmovun_high_s64(arg___p0: uint32x2_t, arg___p1: int64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vqmovun_s64(__p1));
    return __ret;
}
pub inline fn vqmovun_high_s16(arg___p0: uint8x8_t, arg___p1: int16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vqmovun_s16(__p1));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55521:23: warning: TODO implement function '__builtin_neon_vqnegq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55519:48: warning: unable to translate function, demoted to extern
pub extern fn vqnegq_s64(arg___p0: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55536:23: warning: TODO implement function '__builtin_neon_vqneg_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55534:48: warning: unable to translate function, demoted to extern
pub extern fn vqneg_s64(arg___p0: int64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55541:20: warning: TODO implement function '__builtin_neon_vqnegb_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55539:45: warning: unable to translate function, demoted to extern
pub extern fn vqnegb_s8(arg___p0: i8) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55546:21: warning: TODO implement function '__builtin_neon_vqnegs_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55544:46: warning: unable to translate function, demoted to extern
pub extern fn vqnegs_s32(arg___p0: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55551:21: warning: TODO implement function '__builtin_neon_vqnegd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55549:46: warning: unable to translate function, demoted to extern
pub extern fn vqnegd_s64(arg___p0: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55556:21: warning: TODO implement function '__builtin_neon_vqnegh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55554:46: warning: unable to translate function, demoted to extern
pub extern fn vqnegh_s16(arg___p0: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55561:21: warning: TODO implement function '__builtin_neon_vqrdmulhs_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55559:46: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhs_s32(arg___p0: i32, arg___p1: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55566:21: warning: TODO implement function '__builtin_neon_vqrdmulhh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55564:46: warning: unable to translate function, demoted to extern
pub extern fn vqrdmulhh_s16(arg___p0: i16, arg___p1: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55815:21: warning: TODO implement function '__builtin_neon_vqrshlb_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55813:46: warning: unable to translate function, demoted to extern
pub extern fn vqrshlb_u8(arg___p0: u8, arg___p1: i8) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55820:22: warning: TODO implement function '__builtin_neon_vqrshls_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55818:47: warning: unable to translate function, demoted to extern
pub extern fn vqrshls_u32(arg___p0: u32, arg___p1: i32) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55825:22: warning: TODO implement function '__builtin_neon_vqrshld_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55823:47: warning: unable to translate function, demoted to extern
pub extern fn vqrshld_u64(arg___p0: u64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55830:22: warning: TODO implement function '__builtin_neon_vqrshlh_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55828:47: warning: unable to translate function, demoted to extern
pub extern fn vqrshlh_u16(arg___p0: u16, arg___p1: i16) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55835:20: warning: TODO implement function '__builtin_neon_vqrshlb_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55833:45: warning: unable to translate function, demoted to extern
pub extern fn vqrshlb_s8(arg___p0: i8, arg___p1: i8) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55840:21: warning: TODO implement function '__builtin_neon_vqrshls_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55838:46: warning: unable to translate function, demoted to extern
pub extern fn vqrshls_s32(arg___p0: i32, arg___p1: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55845:21: warning: TODO implement function '__builtin_neon_vqrshld_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55843:46: warning: unable to translate function, demoted to extern
pub extern fn vqrshld_s64(arg___p0: i64, arg___p1: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55850:21: warning: TODO implement function '__builtin_neon_vqrshlh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55848:46: warning: unable to translate function, demoted to extern
pub extern fn vqrshlh_s16(arg___p0: i16, arg___p1: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56098:21: warning: TODO implement function '__builtin_neon_vqshlb_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56096:46: warning: unable to translate function, demoted to extern
pub extern fn vqshlb_u8(arg___p0: u8, arg___p1: i8) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56103:22: warning: TODO implement function '__builtin_neon_vqshls_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56101:47: warning: unable to translate function, demoted to extern
pub extern fn vqshls_u32(arg___p0: u32, arg___p1: i32) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56108:22: warning: TODO implement function '__builtin_neon_vqshld_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56106:47: warning: unable to translate function, demoted to extern
pub extern fn vqshld_u64(arg___p0: u64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56113:22: warning: TODO implement function '__builtin_neon_vqshlh_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56111:47: warning: unable to translate function, demoted to extern
pub extern fn vqshlh_u16(arg___p0: u16, arg___p1: i16) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56118:20: warning: TODO implement function '__builtin_neon_vqshlb_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56116:45: warning: unable to translate function, demoted to extern
pub extern fn vqshlb_s8(arg___p0: i8, arg___p1: i8) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56123:21: warning: TODO implement function '__builtin_neon_vqshls_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56121:46: warning: unable to translate function, demoted to extern
pub extern fn vqshls_s32(arg___p0: i32, arg___p1: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56128:21: warning: TODO implement function '__builtin_neon_vqshld_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56126:46: warning: unable to translate function, demoted to extern
pub extern fn vqshld_s64(arg___p0: i64, arg___p1: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56133:21: warning: TODO implement function '__builtin_neon_vqshlh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56131:46: warning: unable to translate function, demoted to extern
pub extern fn vqshlh_s16(arg___p0: i16, arg___p1: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56453:21: warning: TODO implement function '__builtin_neon_vqsubb_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56451:46: warning: unable to translate function, demoted to extern
pub extern fn vqsubb_u8(arg___p0: u8, arg___p1: u8) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56458:22: warning: TODO implement function '__builtin_neon_vqsubs_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56456:47: warning: unable to translate function, demoted to extern
pub extern fn vqsubs_u32(arg___p0: u32, arg___p1: u32) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56463:22: warning: TODO implement function '__builtin_neon_vqsubd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56461:47: warning: unable to translate function, demoted to extern
pub extern fn vqsubd_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56468:22: warning: TODO implement function '__builtin_neon_vqsubh_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56466:47: warning: unable to translate function, demoted to extern
pub extern fn vqsubh_u16(arg___p0: u16, arg___p1: u16) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56473:20: warning: TODO implement function '__builtin_neon_vqsubb_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56471:45: warning: unable to translate function, demoted to extern
pub extern fn vqsubb_s8(arg___p0: i8, arg___p1: i8) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56478:21: warning: TODO implement function '__builtin_neon_vqsubs_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56476:46: warning: unable to translate function, demoted to extern
pub extern fn vqsubs_s32(arg___p0: i32, arg___p1: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56483:21: warning: TODO implement function '__builtin_neon_vqsubd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56481:46: warning: unable to translate function, demoted to extern
pub extern fn vqsubd_s64(arg___p0: i64, arg___p1: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56488:21: warning: TODO implement function '__builtin_neon_vqsubh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56486:46: warning: unable to translate function, demoted to extern
pub extern fn vqsubh_s16(arg___p0: i16, arg___p1: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56494:23: warning: TODO implement function '__builtin_neon_vqtbl1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56492:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1_p8(arg___p0: poly8x16_t, arg___p1: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56511:24: warning: TODO implement function '__builtin_neon_vqtbl1q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56509:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1q_p8(arg___p0: poly8x16_t, arg___p1: uint8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56528:24: warning: TODO implement function '__builtin_neon_vqtbl1q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56526:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56545:23: warning: TODO implement function '__builtin_neon_vqtbl1q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56543:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1q_s8(arg___p0: int8x16_t, arg___p1: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56562:23: warning: TODO implement function '__builtin_neon_vqtbl1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56560:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1_u8(arg___p0: uint8x16_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56579:22: warning: TODO implement function '__builtin_neon_vqtbl1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56577:47: warning: unable to translate function, demoted to extern
pub extern fn vqtbl1_s8(arg___p0: int8x16_t, arg___p1: uint8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56596:23: warning: TODO implement function '__builtin_neon_vqtbl2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56594:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2_p8(arg___p0: poly8x16x2_t, arg___p1: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56615:24: warning: TODO implement function '__builtin_neon_vqtbl2q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56613:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2q_p8(arg___p0: poly8x16x2_t, arg___p1: uint8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56634:24: warning: TODO implement function '__builtin_neon_vqtbl2q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56632:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2q_u8(arg___p0: uint8x16x2_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56653:23: warning: TODO implement function '__builtin_neon_vqtbl2q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56651:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2q_s8(arg___p0: int8x16x2_t, arg___p1: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56672:23: warning: TODO implement function '__builtin_neon_vqtbl2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56670:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2_u8(arg___p0: uint8x16x2_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56691:22: warning: TODO implement function '__builtin_neon_vqtbl2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56689:47: warning: unable to translate function, demoted to extern
pub extern fn vqtbl2_s8(arg___p0: int8x16x2_t, arg___p1: uint8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56710:23: warning: TODO implement function '__builtin_neon_vqtbl3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56708:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3_p8(arg___p0: poly8x16x3_t, arg___p1: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56730:24: warning: TODO implement function '__builtin_neon_vqtbl3q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56728:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3q_p8(arg___p0: poly8x16x3_t, arg___p1: uint8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56750:24: warning: TODO implement function '__builtin_neon_vqtbl3q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56748:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3q_u8(arg___p0: uint8x16x3_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56770:23: warning: TODO implement function '__builtin_neon_vqtbl3q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56768:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3q_s8(arg___p0: int8x16x3_t, arg___p1: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56790:23: warning: TODO implement function '__builtin_neon_vqtbl3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56788:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3_u8(arg___p0: uint8x16x3_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56810:22: warning: TODO implement function '__builtin_neon_vqtbl3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56808:47: warning: unable to translate function, demoted to extern
pub extern fn vqtbl3_s8(arg___p0: int8x16x3_t, arg___p1: uint8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56830:23: warning: TODO implement function '__builtin_neon_vqtbl4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56828:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4_p8(arg___p0: poly8x16x4_t, arg___p1: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56851:24: warning: TODO implement function '__builtin_neon_vqtbl4q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56849:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4q_p8(arg___p0: poly8x16x4_t, arg___p1: uint8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56872:24: warning: TODO implement function '__builtin_neon_vqtbl4q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56870:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4q_u8(arg___p0: uint8x16x4_t, arg___p1: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56893:23: warning: TODO implement function '__builtin_neon_vqtbl4q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56891:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4q_s8(arg___p0: int8x16x4_t, arg___p1: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56914:23: warning: TODO implement function '__builtin_neon_vqtbl4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56912:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4_u8(arg___p0: uint8x16x4_t, arg___p1: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56935:22: warning: TODO implement function '__builtin_neon_vqtbl4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56933:47: warning: unable to translate function, demoted to extern
pub extern fn vqtbl4_s8(arg___p0: int8x16x4_t, arg___p1: uint8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56956:23: warning: TODO implement function '__builtin_neon_vqtbx1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56954:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1_p8(arg___p0: poly8x8_t, arg___p1: poly8x16_t, arg___p2: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56974:24: warning: TODO implement function '__builtin_neon_vqtbx1q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56972:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t, arg___p2: uint8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56992:24: warning: TODO implement function '__builtin_neon_vqtbx1q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56990:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57010:23: warning: TODO implement function '__builtin_neon_vqtbx1q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57008:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57028:23: warning: TODO implement function '__builtin_neon_vqtbx1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57026:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1_u8(arg___p0: uint8x8_t, arg___p1: uint8x16_t, arg___p2: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57046:22: warning: TODO implement function '__builtin_neon_vqtbx1_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57044:47: warning: unable to translate function, demoted to extern
pub extern fn vqtbx1_s8(arg___p0: int8x8_t, arg___p1: int8x16_t, arg___p2: uint8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57064:23: warning: TODO implement function '__builtin_neon_vqtbx2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57062:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2_p8(arg___p0: poly8x8_t, arg___p1: poly8x16x2_t, arg___p2: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57084:24: warning: TODO implement function '__builtin_neon_vqtbx2q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57082:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16x2_t, arg___p2: uint8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57104:24: warning: TODO implement function '__builtin_neon_vqtbx2q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57102:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16x2_t, arg___p2: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57124:23: warning: TODO implement function '__builtin_neon_vqtbx2q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57122:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2q_s8(arg___p0: int8x16_t, arg___p1: int8x16x2_t, arg___p2: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57144:23: warning: TODO implement function '__builtin_neon_vqtbx2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57142:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2_u8(arg___p0: uint8x8_t, arg___p1: uint8x16x2_t, arg___p2: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57164:22: warning: TODO implement function '__builtin_neon_vqtbx2_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57162:47: warning: unable to translate function, demoted to extern
pub extern fn vqtbx2_s8(arg___p0: int8x8_t, arg___p1: int8x16x2_t, arg___p2: uint8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57184:23: warning: TODO implement function '__builtin_neon_vqtbx3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57182:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3_p8(arg___p0: poly8x8_t, arg___p1: poly8x16x3_t, arg___p2: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57205:24: warning: TODO implement function '__builtin_neon_vqtbx3q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57203:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16x3_t, arg___p2: uint8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57226:24: warning: TODO implement function '__builtin_neon_vqtbx3q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57224:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16x3_t, arg___p2: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57247:23: warning: TODO implement function '__builtin_neon_vqtbx3q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57245:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3q_s8(arg___p0: int8x16_t, arg___p1: int8x16x3_t, arg___p2: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57268:23: warning: TODO implement function '__builtin_neon_vqtbx3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57266:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3_u8(arg___p0: uint8x8_t, arg___p1: uint8x16x3_t, arg___p2: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57289:22: warning: TODO implement function '__builtin_neon_vqtbx3_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57287:47: warning: unable to translate function, demoted to extern
pub extern fn vqtbx3_s8(arg___p0: int8x8_t, arg___p1: int8x16x3_t, arg___p2: uint8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57310:23: warning: TODO implement function '__builtin_neon_vqtbx4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57308:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4_p8(arg___p0: poly8x8_t, arg___p1: poly8x16x4_t, arg___p2: uint8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57332:24: warning: TODO implement function '__builtin_neon_vqtbx4q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57330:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16x4_t, arg___p2: uint8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57354:24: warning: TODO implement function '__builtin_neon_vqtbx4q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57352:49: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16x4_t, arg___p2: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57376:23: warning: TODO implement function '__builtin_neon_vqtbx4q_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57374:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4q_s8(arg___p0: int8x16_t, arg___p1: int8x16x4_t, arg___p2: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57398:23: warning: TODO implement function '__builtin_neon_vqtbx4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57396:48: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4_u8(arg___p0: uint8x8_t, arg___p1: uint8x16x4_t, arg___p2: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57420:22: warning: TODO implement function '__builtin_neon_vqtbx4_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57418:47: warning: unable to translate function, demoted to extern
pub extern fn vqtbx4_s8(arg___p0: int8x8_t, arg___p1: int8x16x4_t, arg___p2: uint8x8_t) int8x8_t;
pub inline fn vraddhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vraddhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vraddhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vraddhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vraddhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vraddhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vraddhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vraddhn_s16(__p1, __p2));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57550:23: warning: TODO implement function '__builtin_neon_vrbit_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57548:48: warning: unable to translate function, demoted to extern
pub extern fn vrbit_p8(arg___p0: poly8x8_t) poly8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57566:24: warning: TODO implement function '__builtin_neon_vrbitq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57564:49: warning: unable to translate function, demoted to extern
pub extern fn vrbitq_p8(arg___p0: poly8x16_t) poly8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57582:24: warning: TODO implement function '__builtin_neon_vrbitq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57580:49: warning: unable to translate function, demoted to extern
pub extern fn vrbitq_u8(arg___p0: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57598:23: warning: TODO implement function '__builtin_neon_vrbitq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57596:48: warning: unable to translate function, demoted to extern
pub extern fn vrbitq_s8(arg___p0: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57614:23: warning: TODO implement function '__builtin_neon_vrbit_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57612:48: warning: unable to translate function, demoted to extern
pub extern fn vrbit_u8(arg___p0: uint8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57630:22: warning: TODO implement function '__builtin_neon_vrbit_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57628:47: warning: unable to translate function, demoted to extern
pub extern fn vrbit_s8(arg___p0: int8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57646:25: warning: TODO implement function '__builtin_neon_vrecpeq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57644:50: warning: unable to translate function, demoted to extern
pub extern fn vrecpeq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57661:25: warning: TODO implement function '__builtin_neon_vrecpe_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57659:50: warning: unable to translate function, demoted to extern
pub extern fn vrecpe_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57666:23: warning: TODO implement function '__builtin_neon_vrecped_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57664:48: warning: unable to translate function, demoted to extern
pub extern fn vrecped_f64(arg___p0: float64_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57671:23: warning: TODO implement function '__builtin_neon_vrecpes_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57669:48: warning: unable to translate function, demoted to extern
pub extern fn vrecpes_f32(arg___p0: float32_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57677:25: warning: TODO implement function '__builtin_neon_vrecpsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57675:50: warning: unable to translate function, demoted to extern
pub extern fn vrecpsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57693:25: warning: TODO implement function '__builtin_neon_vrecps_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57691:50: warning: unable to translate function, demoted to extern
pub extern fn vrecps_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57698:23: warning: TODO implement function '__builtin_neon_vrecpsd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57696:48: warning: unable to translate function, demoted to extern
pub extern fn vrecpsd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57703:23: warning: TODO implement function '__builtin_neon_vrecpss_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57701:48: warning: unable to translate function, demoted to extern
pub extern fn vrecpss_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57708:23: warning: TODO implement function '__builtin_neon_vrecpxd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57706:48: warning: unable to translate function, demoted to extern
pub extern fn vrecpxd_f64(arg___p0: float64_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57713:23: warning: TODO implement function '__builtin_neon_vrecpxs_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:57711:48: warning: unable to translate function, demoted to extern
pub extern fn vrecpxs_f32(arg___p0: float32_t) float32_t;
pub inline fn vreinterpret_p8_p64(arg___p0: poly64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_p16(arg___p0: poly16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u8(arg___p0: uint8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u32(arg___p0: uint32x2_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u64(arg___p0: uint64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_u16(arg___p0: uint16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s8(arg___p0: int8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_f64(arg___p0: float64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_f32(arg___p0: float32x2_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_f16(arg___p0: float16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s32(arg___p0: int32x2_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s64(arg___p0: int64x1_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p8_s16(arg___p0: int16x4_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_p8(arg___p0: poly8x8_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_p16(arg___p0: poly16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u8(arg___p0: uint8x8_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u32(arg___p0: uint32x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u64(arg___p0: uint64x1_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_u16(arg___p0: uint16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s8(arg___p0: int8x8_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_f64(arg___p0: float64x1_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_f32(arg___p0: float32x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_f16(arg___p0: float16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s32(arg___p0: int32x2_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s64(arg___p0: int64x1_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p64_s16(arg___p0: int16x4_t) poly64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x1_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_p8(arg___p0: poly8x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_p64(arg___p0: poly64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u8(arg___p0: uint8x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u32(arg___p0: uint32x2_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u64(arg___p0: uint64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_u16(arg___p0: uint16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s8(arg___p0: int8x8_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_f64(arg___p0: float64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_f32(arg___p0: float32x2_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_f16(arg___p0: float16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s32(arg___p0: int32x2_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s64(arg___p0: int64x1_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_p16_s16(arg___p0: int16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_p128(arg___p0: poly128_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_p64(arg___p0: poly64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_p16(arg___p0: poly16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u8(arg___p0: uint8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u32(arg___p0: uint32x4_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u64(arg___p0: uint64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_u16(arg___p0: uint16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s8(arg___p0: int8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_f64(arg___p0: float64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_f32(arg___p0: float32x4_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_f16(arg___p0: float16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s32(arg___p0: int32x4_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s64(arg___p0: int64x2_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p8_s16(arg___p0: int16x8_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @as(poly8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_p8(arg___p0: poly8x16_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_p64(arg___p0: poly64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_p16(arg___p0: poly16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u8(arg___p0: uint8x16_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u32(arg___p0: uint32x4_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u64(arg___p0: uint64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_u16(arg___p0: uint16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s8(arg___p0: int8x16_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_f64(arg___p0: float64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_f32(arg___p0: float32x4_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_f16(arg___p0: float16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s32(arg___p0: int32x4_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s64(arg___p0: int64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p128_s16(arg___p0: int16x8_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = @as(poly128_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_p8(arg___p0: poly8x16_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_p128(arg___p0: poly128_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_p16(arg___p0: poly16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u8(arg___p0: uint8x16_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u32(arg___p0: uint32x4_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u64(arg___p0: uint64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_u16(arg___p0: uint16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s8(arg___p0: int8x16_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_f64(arg___p0: float64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_f32(arg___p0: float32x4_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_f16(arg___p0: float16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s32(arg___p0: int32x4_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s64(arg___p0: int64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p64_s16(arg___p0: int16x8_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @as(poly64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_p8(arg___p0: poly8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_p128(arg___p0: poly128_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_p64(arg___p0: poly64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u8(arg___p0: uint8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u32(arg___p0: uint32x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u64(arg___p0: uint64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_u16(arg___p0: uint16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s8(arg___p0: int8x16_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_f64(arg___p0: float64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_f32(arg___p0: float32x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_f16(arg___p0: float16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s32(arg___p0: int32x4_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s64(arg___p0: int64x2_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_p16_s16(arg___p0: int16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @as(poly16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p8(arg___p0: poly8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p128(arg___p0: poly128_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p64(arg___p0: poly64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_p16(arg___p0: poly16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_u32(arg___p0: uint32x4_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_u64(arg___p0: uint64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_u16(arg___p0: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s8(arg___p0: int8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_f64(arg___p0: float64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_f32(arg___p0: float32x4_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_f16(arg___p0: float16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s32(arg___p0: int32x4_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s64(arg___p0: int64x2_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u8_s16(arg___p0: int16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p8(arg___p0: poly8x16_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p128(arg___p0: poly128_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p64(arg___p0: poly64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_p16(arg___p0: poly16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_u8(arg___p0: uint8x16_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_u64(arg___p0: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_u16(arg___p0: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s8(arg___p0: int8x16_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_f64(arg___p0: float64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_f32(arg___p0: float32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_f16(arg___p0: float16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s32(arg___p0: int32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s64(arg___p0: int64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u32_s16(arg___p0: int16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p8(arg___p0: poly8x16_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p128(arg___p0: poly128_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p64(arg___p0: poly64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_p16(arg___p0: poly16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_u8(arg___p0: uint8x16_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_u32(arg___p0: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_u16(arg___p0: uint16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s8(arg___p0: int8x16_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_f64(arg___p0: float64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_f32(arg___p0: float32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_f16(arg___p0: float16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s32(arg___p0: int32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s64(arg___p0: int64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u64_s16(arg___p0: int16x8_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p8(arg___p0: poly8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p128(arg___p0: poly128_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p64(arg___p0: poly64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_p16(arg___p0: poly16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_u8(arg___p0: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_u32(arg___p0: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_u64(arg___p0: uint64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s8(arg___p0: int8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_f64(arg___p0: float64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_f32(arg___p0: float32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_f16(arg___p0: float16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s32(arg___p0: int32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s64(arg___p0: int64x2_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_u16_s16(arg___p0: int16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p8(arg___p0: poly8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p128(arg___p0: poly128_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p64(arg___p0: poly64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_p16(arg___p0: poly16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u8(arg___p0: uint8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u32(arg___p0: uint32x4_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u64(arg___p0: uint64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_u16(arg___p0: uint16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_f64(arg___p0: float64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_f32(arg___p0: float32x4_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_f16(arg___p0: float16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_s32(arg___p0: int32x4_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_s64(arg___p0: int64x2_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s8_s16(arg___p0: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @as(int8x16_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p8(arg___p0: poly8x16_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p128(arg___p0: poly128_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p64(arg___p0: poly64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_p16(arg___p0: poly16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u8(arg___p0: uint8x16_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u32(arg___p0: uint32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u64(arg___p0: uint64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_u16(arg___p0: uint16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s8(arg___p0: int8x16_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_f32(arg___p0: float32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_f16(arg___p0: float16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s32(arg___p0: int32x4_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s64(arg___p0: int64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f64_s16(arg___p0: int16x8_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @as(float64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p8(arg___p0: poly8x16_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p128(arg___p0: poly128_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p64(arg___p0: poly64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_p16(arg___p0: poly16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u8(arg___p0: uint8x16_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u32(arg___p0: uint32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u64(arg___p0: uint64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_u16(arg___p0: uint16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s8(arg___p0: int8x16_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_f64(arg___p0: float64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_f16(arg___p0: float16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s32(arg___p0: int32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s64(arg___p0: int64x2_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f32_s16(arg___p0: int16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @as(float32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p8(arg___p0: poly8x16_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p128(arg___p0: poly128_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p64(arg___p0: poly64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_p16(arg___p0: poly16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u8(arg___p0: uint8x16_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u32(arg___p0: uint32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u64(arg___p0: uint64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_u16(arg___p0: uint16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s8(arg___p0: int8x16_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_f64(arg___p0: float64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_f32(arg___p0: float32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s32(arg___p0: int32x4_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s64(arg___p0: int64x2_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_f16_s16(arg___p0: int16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @as(float16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p8(arg___p0: poly8x16_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p128(arg___p0: poly128_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p64(arg___p0: poly64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_p16(arg___p0: poly16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u8(arg___p0: uint8x16_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u32(arg___p0: uint32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u64(arg___p0: uint64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_u16(arg___p0: uint16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_s8(arg___p0: int8x16_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_f64(arg___p0: float64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_f32(arg___p0: float32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_f16(arg___p0: float16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_s64(arg___p0: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s32_s16(arg___p0: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p8(arg___p0: poly8x16_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p128(arg___p0: poly128_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p64(arg___p0: poly64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_p16(arg___p0: poly16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u8(arg___p0: uint8x16_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u32(arg___p0: uint32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u64(arg___p0: uint64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_u16(arg___p0: uint16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_s8(arg___p0: int8x16_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_f64(arg___p0: float64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_f32(arg___p0: float32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_f16(arg___p0: float16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_s32(arg___p0: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s64_s16(arg___p0: int16x8_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p8(arg___p0: poly8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p128(arg___p0: poly128_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p64(arg___p0: poly64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_p16(arg___p0: poly16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u8(arg___p0: uint8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u32(arg___p0: uint32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u64(arg___p0: uint64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_u16(arg___p0: uint16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_s8(arg___p0: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_f64(arg___p0: float64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_f32(arg___p0: float32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_f16(arg___p0: float16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_s32(arg___p0: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpretq_s16_s64(arg___p0: int64x2_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_p8(arg___p0: poly8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_p64(arg___p0: poly64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_p16(arg___p0: poly16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_u32(arg___p0: uint32x2_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_u64(arg___p0: uint64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_u16(arg___p0: uint16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s8(arg___p0: int8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_f64(arg___p0: float64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_f32(arg___p0: float32x2_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_f16(arg___p0: float16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s32(arg___p0: int32x2_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s64(arg___p0: int64x1_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u8_s16(arg___p0: int16x4_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @as(uint8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_p8(arg___p0: poly8x8_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_p64(arg___p0: poly64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_p16(arg___p0: poly16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_u8(arg___p0: uint8x8_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_u64(arg___p0: uint64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_u16(arg___p0: uint16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s8(arg___p0: int8x8_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_f64(arg___p0: float64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_f32(arg___p0: float32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_f16(arg___p0: float16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s32(arg___p0: int32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s64(arg___p0: int64x1_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u32_s16(arg___p0: int16x4_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @as(uint32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_p8(arg___p0: poly8x8_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_p64(arg___p0: poly64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_p16(arg___p0: poly16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_u8(arg___p0: uint8x8_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_u32(arg___p0: uint32x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_u16(arg___p0: uint16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s8(arg___p0: int8x8_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_f64(arg___p0: float64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_f32(arg___p0: float32x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_f16(arg___p0: float16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s32(arg___p0: int32x2_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s64(arg___p0: int64x1_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u64_s16(arg___p0: int16x4_t) uint64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint64x1_t = undefined;
    _ = &__ret;
    __ret = @as(uint64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_p8(arg___p0: poly8x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_p64(arg___p0: poly64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_p16(arg___p0: poly16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_u8(arg___p0: uint8x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_u32(arg___p0: uint32x2_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_u64(arg___p0: uint64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s8(arg___p0: int8x8_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_f64(arg___p0: float64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_f32(arg___p0: float32x2_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_f16(arg___p0: float16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s32(arg___p0: int32x2_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s64(arg___p0: int64x1_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_u16_s16(arg___p0: int16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @as(uint16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_p8(arg___p0: poly8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_p64(arg___p0: poly64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_p16(arg___p0: poly16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u8(arg___p0: uint8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u32(arg___p0: uint32x2_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u64(arg___p0: uint64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_u16(arg___p0: uint16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_f64(arg___p0: float64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_f32(arg___p0: float32x2_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_f16(arg___p0: float16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_s32(arg___p0: int32x2_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_s64(arg___p0: int64x1_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s8_s16(arg___p0: int16x4_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @as(int8x8_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_p8(arg___p0: poly8x8_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_p64(arg___p0: poly64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_p16(arg___p0: poly16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u8(arg___p0: uint8x8_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u32(arg___p0: uint32x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u64(arg___p0: uint64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_u16(arg___p0: uint16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s8(arg___p0: int8x8_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_f32(arg___p0: float32x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_f16(arg___p0: float16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s32(arg___p0: int32x2_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s64(arg___p0: int64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f64_s16(arg___p0: int16x4_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = @as(float64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_p8(arg___p0: poly8x8_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_p64(arg___p0: poly64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_p16(arg___p0: poly16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u8(arg___p0: uint8x8_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u32(arg___p0: uint32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u64(arg___p0: uint64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_u16(arg___p0: uint16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s8(arg___p0: int8x8_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_f64(arg___p0: float64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_f16(arg___p0: float16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s32(arg___p0: int32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s64(arg___p0: int64x1_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f32_s16(arg___p0: int16x4_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @as(float32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_p8(arg___p0: poly8x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_p64(arg___p0: poly64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_p16(arg___p0: poly16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u8(arg___p0: uint8x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u32(arg___p0: uint32x2_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u64(arg___p0: uint64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_u16(arg___p0: uint16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s8(arg___p0: int8x8_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_f64(arg___p0: float64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_f32(arg___p0: float32x2_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s32(arg___p0: int32x2_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s64(arg___p0: int64x1_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_f16_s16(arg___p0: int16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @as(float16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_p8(arg___p0: poly8x8_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_p64(arg___p0: poly64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_p16(arg___p0: poly16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u8(arg___p0: uint8x8_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u32(arg___p0: uint32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u64(arg___p0: uint64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_u16(arg___p0: uint16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_s8(arg___p0: int8x8_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_f64(arg___p0: float64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_f32(arg___p0: float32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_f16(arg___p0: float16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_s64(arg___p0: int64x1_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s32_s16(arg___p0: int16x4_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @as(int32x2_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_p8(arg___p0: poly8x8_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_p64(arg___p0: poly64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_p16(arg___p0: poly16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u8(arg___p0: uint8x8_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u32(arg___p0: uint32x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u64(arg___p0: uint64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_u16(arg___p0: uint16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_s8(arg___p0: int8x8_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_f64(arg___p0: float64x1_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_f32(arg___p0: float32x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_f16(arg___p0: float16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_s32(arg___p0: int32x2_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s64_s16(arg___p0: int16x4_t) int64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int64x1_t = undefined;
    _ = &__ret;
    __ret = @as(int64x1_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_p8(arg___p0: poly8x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_p64(arg___p0: poly64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_p16(arg___p0: poly16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u8(arg___p0: uint8x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u32(arg___p0: uint32x2_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u64(arg___p0: uint64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_u16(arg___p0: uint16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_s8(arg___p0: int8x8_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_f64(arg___p0: float64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_f32(arg___p0: float32x2_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_f16(arg___p0: float16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_s32(arg___p0: int32x2_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
pub inline fn vreinterpret_s16_s64(arg___p0: int64x1_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @as(int16x4_t, @bitCast(__p0));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59678:22: warning: TODO implement function '__builtin_neon_vrshld_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59676:47: warning: unable to translate function, demoted to extern
pub extern fn vrshld_u64(arg___p0: u64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59683:21: warning: TODO implement function '__builtin_neon_vrshld_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59681:46: warning: unable to translate function, demoted to extern
pub extern fn vrshld_s64(arg___p0: i64, arg___p1: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59827:25: warning: TODO implement function '__builtin_neon_vrsqrteq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59825:50: warning: unable to translate function, demoted to extern
pub extern fn vrsqrteq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59842:25: warning: TODO implement function '__builtin_neon_vrsqrte_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59840:50: warning: unable to translate function, demoted to extern
pub extern fn vrsqrte_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59847:23: warning: TODO implement function '__builtin_neon_vrsqrted_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59845:48: warning: unable to translate function, demoted to extern
pub extern fn vrsqrted_f64(arg___p0: float64_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59852:23: warning: TODO implement function '__builtin_neon_vrsqrtes_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59850:48: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtes_f32(arg___p0: float32_t) float32_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59858:25: warning: TODO implement function '__builtin_neon_vrsqrtsq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59856:50: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59874:25: warning: TODO implement function '__builtin_neon_vrsqrts_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59872:50: warning: unable to translate function, demoted to extern
pub extern fn vrsqrts_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59879:23: warning: TODO implement function '__builtin_neon_vrsqrtsd_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59877:48: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtsd_f64(arg___p0: float64_t, arg___p1: float64_t) float64_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59884:23: warning: TODO implement function '__builtin_neon_vrsqrtss_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59882:48: warning: unable to translate function, demoted to extern
pub extern fn vrsqrtss_f32(arg___p0: float32_t, arg___p1: float32_t) float32_t;
pub inline fn vrsubhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vrsubhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vrsubhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vrsubhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vrsubhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vrsubhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vrsubhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vrsubhn_s16(__p1, __p2));
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60079:22: warning: TODO implement function '__builtin_neon_vshld_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60077:47: warning: unable to translate function, demoted to extern
pub extern fn vshld_u64(arg___p0: u64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60084:21: warning: TODO implement function '__builtin_neon_vshld_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60082:46: warning: unable to translate function, demoted to extern
pub extern fn vshld_s64(arg___p0: i64, arg___p1: i64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60389:21: warning: TODO implement function '__builtin_neon_vsqaddb_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60387:46: warning: unable to translate function, demoted to extern
pub extern fn vsqaddb_u8(arg___p0: u8, arg___p1: i8) u8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60394:22: warning: TODO implement function '__builtin_neon_vsqadds_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60392:47: warning: unable to translate function, demoted to extern
pub extern fn vsqadds_u32(arg___p0: u32, arg___p1: i32) u32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60399:22: warning: TODO implement function '__builtin_neon_vsqaddd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60397:47: warning: unable to translate function, demoted to extern
pub extern fn vsqaddd_u64(arg___p0: u64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60404:22: warning: TODO implement function '__builtin_neon_vsqaddh_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60402:47: warning: unable to translate function, demoted to extern
pub extern fn vsqaddh_u16(arg___p0: u16, arg___p1: i16) u16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60410:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60408:49: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u8(arg___p0: uint8x16_t, arg___p1: int8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60427:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60425:49: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u32(arg___p0: uint32x4_t, arg___p1: int32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60444:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60442:49: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u64(arg___p0: uint64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60461:24: warning: TODO implement function '__builtin_neon_vsqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60459:49: warning: unable to translate function, demoted to extern
pub extern fn vsqaddq_u16(arg___p0: uint16x8_t, arg___p1: int16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60478:23: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60476:48: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u8(arg___p0: uint8x8_t, arg___p1: int8x8_t) uint8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60495:24: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60493:49: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u32(arg___p0: uint32x2_t, arg___p1: int32x2_t) uint32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60511:24: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60509:49: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u64(arg___p0: uint64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60517:24: warning: TODO implement function '__builtin_neon_vsqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60515:49: warning: unable to translate function, demoted to extern
pub extern fn vsqadd_u16(arg___p0: uint16x4_t, arg___p1: int16x4_t) uint16x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60534:25: warning: TODO implement function '__builtin_neon_vsqrtq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60532:50: warning: unable to translate function, demoted to extern
pub extern fn vsqrtq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60550:25: warning: TODO implement function '__builtin_neon_vsqrtq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60548:50: warning: unable to translate function, demoted to extern
pub extern fn vsqrtq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60565:25: warning: TODO implement function '__builtin_neon_vsqrt_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60563:50: warning: unable to translate function, demoted to extern
pub extern fn vsqrt_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60571:25: warning: TODO implement function '__builtin_neon_vsqrt_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60569:50: warning: unable to translate function, demoted to extern
pub extern fn vsqrt_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61434:22: warning: TODO implement function '__builtin_neon_vsubd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61432:47: warning: unable to translate function, demoted to extern
pub extern fn vsubd_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61439:21: warning: TODO implement function '__builtin_neon_vsubd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61437:46: warning: unable to translate function, demoted to extern
pub extern fn vsubd_s64(arg___p0: i64, arg___p1: i64) i64;
pub inline fn vsubq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsub_f64(arg___p0: float64x1_t, arg___p1: float64x1_t) float64x1_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x1_t = undefined;
    _ = &__ret;
    __ret = __p0 - __p1;
    return __ret;
}
pub inline fn vsubhn_high_u32(arg___p0: uint16x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_u16(__p0, vsubhn_u32(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_u64(arg___p0: uint32x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_u32(__p0, vsubhn_u64(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_u16(arg___p0: uint8x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_u8(__p0, vsubhn_u16(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_s32(arg___p0: int16x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vcombine_s16(__p0, vsubhn_s32(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_s64(arg___p0: int32x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vcombine_s32(__p0, vsubhn_s64(__p1, __p2));
    return __ret;
}
pub inline fn vsubhn_high_s16(arg___p0: int8x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = vcombine_s8(__p0, vsubhn_s16(__p1, __p2));
    return __ret;
}
pub inline fn vsubl_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u8(__p0) - vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vsubl_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u32(__p0) - vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vsubl_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u16(__p0) - vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vsubl_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s8(__p0) - vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vsubl_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s32(__p0) - vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vsubl_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s16(__p0) - vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vsubw_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vsubw_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vsubw_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vsubw_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vsubw_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vsubw_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vtrn1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn1_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vtrn2_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62594:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62592:49: warning: unable to translate function, demoted to extern
pub extern fn vtst_p64(arg___p0: poly64x1_t, arg___p1: poly64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62600:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62598:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62617:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62615:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62634:24: warning: TODO implement function '__builtin_neon_vtstq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62632:49: warning: unable to translate function, demoted to extern
pub extern fn vtstq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62650:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62648:49: warning: unable to translate function, demoted to extern
pub extern fn vtst_u64(arg___p0: uint64x1_t, arg___p1: uint64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62655:24: warning: TODO implement function '__builtin_neon_vtst_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62653:49: warning: unable to translate function, demoted to extern
pub extern fn vtst_s64(arg___p0: int64x1_t, arg___p1: int64x1_t) uint64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62660:22: warning: TODO implement function '__builtin_neon_vtstd_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62658:47: warning: unable to translate function, demoted to extern
pub extern fn vtstd_u64(arg___p0: u64, arg___p1: u64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62665:22: warning: TODO implement function '__builtin_neon_vtstd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62663:47: warning: unable to translate function, demoted to extern
pub extern fn vtstd_s64(arg___p0: i64, arg___p1: i64) u64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62670:20: warning: TODO implement function '__builtin_neon_vuqaddb_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62668:45: warning: unable to translate function, demoted to extern
pub extern fn vuqaddb_s8(arg___p0: i8, arg___p1: u8) i8;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62675:21: warning: TODO implement function '__builtin_neon_vuqadds_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62673:46: warning: unable to translate function, demoted to extern
pub extern fn vuqadds_s32(arg___p0: i32, arg___p1: u32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62680:21: warning: TODO implement function '__builtin_neon_vuqaddd_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62678:46: warning: unable to translate function, demoted to extern
pub extern fn vuqaddd_s64(arg___p0: i64, arg___p1: u64) i64;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62685:21: warning: TODO implement function '__builtin_neon_vuqaddh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62683:46: warning: unable to translate function, demoted to extern
pub extern fn vuqaddh_s16(arg___p0: i16, arg___p1: u16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62691:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62689:48: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s8(arg___p0: int8x16_t, arg___p1: uint8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62708:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62706:48: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s32(arg___p0: int32x4_t, arg___p1: uint32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62725:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62723:48: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s64(arg___p0: int64x2_t, arg___p1: uint64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62742:23: warning: TODO implement function '__builtin_neon_vuqaddq_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62740:48: warning: unable to translate function, demoted to extern
pub extern fn vuqaddq_s16(arg___p0: int16x8_t, arg___p1: uint16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62759:22: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62757:47: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s8(arg___p0: int8x8_t, arg___p1: uint8x8_t) int8x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62776:23: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62774:48: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s32(arg___p0: int32x2_t, arg___p1: uint32x2_t) int32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62792:23: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62790:48: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s64(arg___p0: int64x1_t, arg___p1: uint64x1_t) int64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62798:23: warning: TODO implement function '__builtin_neon_vuqadd_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:62796:48: warning: unable to translate function, demoted to extern
pub extern fn vuqadd_s16(arg___p0: int16x4_t, arg___p1: uint16x4_t) int16x4_t;
pub inline fn vuzp1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp1_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vuzp2_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(16, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(17, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(18, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(19, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(20, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(21, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(22, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(23, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip1_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(0, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_p8(arg___p0: poly8x8_t, arg___p1: poly8x8_t) poly8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_p16(arg___p0: poly16x4_t, arg___p1: poly16x4_t) poly16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_p8(arg___p0: poly8x16_t, arg___p1: poly8x16_t) poly8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_p16(arg___p0: poly16x8_t, arg___p1: poly16x8_t) poly16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(16, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(8, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(24, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(9, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(25, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(10, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(26, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(11, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(27, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(28, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(29, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(30, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(31, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_f32(arg___p0: float32x4_t, arg___p1: float32x4_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_f32(arg___p0: float32x2_t, arg___p1: float32x2_t) float32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(2, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(1, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2q_f16(arg___p0: float16x8_t, arg___p1: float16x8_t) float16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x8_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(8, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(4, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(12, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(5, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(13, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(14, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(15, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
pub inline fn vzip2_f16(arg___p0: float16x4_t, arg___p1: float16x4_t) float16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: float16x4_t = undefined;
    _ = &__ret;
    __ret = @shuffle(@typeInfo(@TypeOf(__p0)).vector.child, __p0, __p1, @Vector(4, i32){
        @import("std").zig.c_translation.shuffleVectorIndex(2, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(6, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(3, @typeInfo(@TypeOf(__p0)).vector.len),
        @import("std").zig.c_translation.shuffleVectorIndex(7, @typeInfo(@TypeOf(__p0)).vector.len),
    });
    return __ret;
}
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64611:24: warning: TODO implement function '__builtin_neon_vbcaxq_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64609:54: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64629:24: warning: TODO implement function '__builtin_neon_vbcaxq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64627:54: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64647:24: warning: TODO implement function '__builtin_neon_vbcaxq_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64645:54: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64665:24: warning: TODO implement function '__builtin_neon_vbcaxq_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64663:54: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64683:23: warning: TODO implement function '__builtin_neon_vbcaxq_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64681:53: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64701:23: warning: TODO implement function '__builtin_neon_vbcaxq_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64699:53: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64719:23: warning: TODO implement function '__builtin_neon_vbcaxq_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64717:53: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s64(arg___p0: int64x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64737:23: warning: TODO implement function '__builtin_neon_vbcaxq_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64735:53: warning: unable to translate function, demoted to extern
pub extern fn vbcaxq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64755:24: warning: TODO implement function '__builtin_neon_veor3q_u8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64753:54: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64773:24: warning: TODO implement function '__builtin_neon_veor3q_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64771:54: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64791:24: warning: TODO implement function '__builtin_neon_veor3q_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64789:54: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64809:24: warning: TODO implement function '__builtin_neon_veor3q_u16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64807:54: warning: unable to translate function, demoted to extern
pub extern fn veor3q_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64827:23: warning: TODO implement function '__builtin_neon_veor3q_s8' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64825:53: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64845:23: warning: TODO implement function '__builtin_neon_veor3q_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64843:53: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64863:23: warning: TODO implement function '__builtin_neon_veor3q_s64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64861:53: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s64(arg___p0: int64x2_t, arg___p1: int64x2_t, arg___p2: int64x2_t) int64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64881:23: warning: TODO implement function '__builtin_neon_veor3q_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64879:53: warning: unable to translate function, demoted to extern
pub extern fn veor3q_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64899:24: warning: TODO implement function '__builtin_neon_vrax1q_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64897:54: warning: unable to translate function, demoted to extern
pub extern fn vrax1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64916:24: warning: TODO implement function '__builtin_neon_vsha512hq_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64914:54: warning: unable to translate function, demoted to extern
pub extern fn vsha512hq_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64934:24: warning: TODO implement function '__builtin_neon_vsha512h2q_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64932:54: warning: unable to translate function, demoted to extern
pub extern fn vsha512h2q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64952:24: warning: TODO implement function '__builtin_neon_vsha512su0q_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64950:54: warning: unable to translate function, demoted to extern
pub extern fn vsha512su0q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64969:24: warning: TODO implement function '__builtin_neon_vsha512su1q_u64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64967:54: warning: unable to translate function, demoted to extern
pub extern fn vsha512su1q_u64(arg___p0: uint64x2_t, arg___p1: uint64x2_t, arg___p2: uint64x2_t) uint64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65008:24: warning: TODO implement function '__builtin_neon_vsm3partw1q_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65006:53: warning: unable to translate function, demoted to extern
pub extern fn vsm3partw1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65026:24: warning: TODO implement function '__builtin_neon_vsm3partw2q_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65024:53: warning: unable to translate function, demoted to extern
pub extern fn vsm3partw2q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65044:24: warning: TODO implement function '__builtin_neon_vsm3ss1q_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65042:53: warning: unable to translate function, demoted to extern
pub extern fn vsm3ss1q_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65158:24: warning: TODO implement function '__builtin_neon_vsm4eq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65156:53: warning: unable to translate function, demoted to extern
pub extern fn vsm4eq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65175:24: warning: TODO implement function '__builtin_neon_vsm4ekeyq_u32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65173:53: warning: unable to translate function, demoted to extern
pub extern fn vsm4ekeyq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65191:21: warning: TODO implement function '__builtin_neon_vqrdmlahs_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65189:52: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahs_s32(arg___p0: i32, arg___p1: i32, arg___p2: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65196:21: warning: TODO implement function '__builtin_neon_vqrdmlahh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65194:52: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlahh_s16(arg___p0: i16, arg___p1: i16, arg___p2: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65381:21: warning: TODO implement function '__builtin_neon_vqrdmlshs_s32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65379:52: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshs_s32(arg___p0: i32, arg___p1: i32, arg___p2: i32) i32;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65386:21: warning: TODO implement function '__builtin_neon_vqrdmlshh_s16' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65384:52: warning: unable to translate function, demoted to extern
pub extern fn vqrdmlshh_s16(arg___p0: i16, arg___p1: i16, arg___p2: i16) i16;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65572:25: warning: TODO implement function '__builtin_neon_vcaddq_rot270_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65570:56: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot270_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65589:25: warning: TODO implement function '__builtin_neon_vcaddq_rot90_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65587:56: warning: unable to translate function, demoted to extern
pub extern fn vcaddq_rot90_f64(arg___p0: float64x2_t, arg___p1: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65606:25: warning: TODO implement function '__builtin_neon_vcmlaq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65604:56: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65628:25: warning: TODO implement function '__builtin_neon_vcmla_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65626:56: warning: unable to translate function, demoted to extern
pub extern fn vcmla_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65724:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot180_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65722:56: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot180_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65746:25: warning: TODO implement function '__builtin_neon_vcmla_rot180_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65744:56: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot180_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65842:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot270_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65840:56: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot270_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65864:25: warning: TODO implement function '__builtin_neon_vcmla_rot270_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65862:56: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot270_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65960:25: warning: TODO implement function '__builtin_neon_vcmlaq_rot90_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65958:56: warning: unable to translate function, demoted to extern
pub extern fn vcmlaq_rot90_f64(arg___p0: float64x2_t, arg___p1: float64x2_t, arg___p2: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65982:25: warning: TODO implement function '__builtin_neon_vcmla_rot90_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65980:56: warning: unable to translate function, demoted to extern
pub extern fn vcmla_rot90_f64(arg___p0: float64x1_t, arg___p1: float64x1_t, arg___p2: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66078:25: warning: TODO implement function '__builtin_neon_vrnd32xq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66076:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd32xq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66094:25: warning: TODO implement function '__builtin_neon_vrnd32x_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66092:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd32x_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66110:25: warning: TODO implement function '__builtin_neon_vrnd32xq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66108:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd32xq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66125:25: warning: TODO implement function '__builtin_neon_vrnd32x_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66123:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd32x_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66131:25: warning: TODO implement function '__builtin_neon_vrnd32zq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66129:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd32zq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66147:25: warning: TODO implement function '__builtin_neon_vrnd32z_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66145:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd32z_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66163:25: warning: TODO implement function '__builtin_neon_vrnd32zq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66161:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd32zq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66178:25: warning: TODO implement function '__builtin_neon_vrnd32z_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66176:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd32z_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66184:25: warning: TODO implement function '__builtin_neon_vrnd64xq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66182:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd64xq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66200:25: warning: TODO implement function '__builtin_neon_vrnd64x_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66198:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd64x_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66216:25: warning: TODO implement function '__builtin_neon_vrnd64xq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66214:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd64xq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66231:25: warning: TODO implement function '__builtin_neon_vrnd64x_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66229:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd64x_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66237:25: warning: TODO implement function '__builtin_neon_vrnd64zq_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66235:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd64zq_f32(arg___p0: float32x4_t) float32x4_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66253:25: warning: TODO implement function '__builtin_neon_vrnd64z_f32' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66251:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd64z_f32(arg___p0: float32x2_t) float32x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66269:25: warning: TODO implement function '__builtin_neon_vrnd64zq_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66267:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd64zq_f64(arg___p0: float64x2_t) float64x2_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66284:25: warning: TODO implement function '__builtin_neon_vrnd64z_f64' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66282:56: warning: unable to translate function, demoted to extern
pub extern fn vrnd64z_f64(arg___p0: float64x1_t) float64x1_t;
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28196:23: warning: TODO implement function '__builtin_neon_vshll_n_v' in std.zig.c_builtins

// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66497:55: warning: unable to translate function, demoted to extern
pub extern fn vcvt_f32_bf16(arg___p0_836: bfloat16x4_t) float32x4_t;
pub inline fn vcvtq_high_f32_bf16(arg___p0: bfloat16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcvt_f32_bf16(vget_high_bf16(__p0));
    return __ret;
}
pub inline fn vcvtq_low_f32_bf16(arg___p0: bfloat16x8_t) float32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __ret: float32x4_t = undefined;
    _ = &__ret;
    __ret = vcvt_f32_bf16(vget_low_bf16(__p0));
    return __ret;
}
pub inline fn vabaq_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_u8(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_u32(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_u16(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_s8(arg___p0: int8x16_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int8x16_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x16_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_s8(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_s32(arg___p0: int32x4_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_s32(__p1, __p2);
    return __ret;
}
pub inline fn vabaq_s16(arg___p0: int16x8_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdq_s16(__p1, __p2);
    return __ret;
}
pub inline fn vaba_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_u8(__p1, __p2);
    return __ret;
}
pub inline fn vaba_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_u32(__p1, __p2);
    return __ret;
}
pub inline fn vaba_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_u16(__p1, __p2);
    return __ret;
}
pub inline fn vaba_s8(arg___p0: int8x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int8x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int8x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_s8(__p1, __p2);
    return __ret;
}
pub inline fn vaba_s32(arg___p0: int32x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int32x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_s32(__p1, __p2);
    return __ret;
}
pub inline fn vaba_s16(arg___p0: int16x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int16x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabd_s16(__p1, __p2);
    return __ret;
}
pub inline fn vabdl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_u8(vabd_u8(__p0, __p1));
    return __ret;
}
pub inline fn vabdl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_u32(vabd_u32(__p0, __p1));
    return __ret;
}
pub inline fn vabdl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_u16(vabd_u16(__p0, __p1));
    return __ret;
}
pub inline fn vabdl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = @as(int16x8_t, @bitCast(vmovl_u8(@as(uint8x8_t, @bitCast(vabd_s8(__p0, __p1))))));
    return __ret;
}
pub inline fn vabdl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = @as(int64x2_t, @bitCast(vmovl_u32(@as(uint32x2_t, @bitCast(vabd_s32(__p0, __p1))))));
    return __ret;
}
pub inline fn vabdl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = @as(int32x4_t, @bitCast(vmovl_u16(@as(uint16x4_t, @bitCast(vabd_s16(__p0, __p1))))));
    return __ret;
}
pub inline fn vaddl_u8(arg___p0: uint8x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_u8(__p0) + vmovl_u8(__p1);
    return __ret;
}
pub inline fn vaddl_u32(arg___p0: uint32x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_u32(__p0) + vmovl_u32(__p1);
    return __ret;
}
pub inline fn vaddl_u16(arg___p0: uint16x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_u16(__p0) + vmovl_u16(__p1);
    return __ret;
}
pub inline fn vaddl_s8(arg___p0: int8x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_s8(__p0) + vmovl_s8(__p1);
    return __ret;
}
pub inline fn vaddl_s32(arg___p0: int32x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_s32(__p0) + vmovl_s32(__p1);
    return __ret;
}
pub inline fn vaddl_s16(arg___p0: int16x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_s16(__p0) + vmovl_s16(__p1);
    return __ret;
}
pub inline fn vaddw_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_u8(__p1);
    return __ret;
}
pub inline fn vaddw_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_u32(__p1);
    return __ret;
}
pub inline fn vaddw_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_u16(__p1);
    return __ret;
}
pub inline fn vaddw_s8(arg___p0: int16x8_t, arg___p1: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_s8(__p1);
    return __ret;
}
pub inline fn vaddw_s32(arg___p0: int64x2_t, arg___p1: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_s32(__p1);
    return __ret;
}
pub inline fn vaddw_s16(arg___p0: int32x4_t, arg___p1: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_s16(__p1);
    return __ret;
}
pub inline fn vmlal_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u8(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u32(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u16(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_s8(arg___p0: int16x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s8(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s32(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s16(__p1, __p2);
    return __ret;
}
pub inline fn vmlal_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlal_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_u16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmlal_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlal_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmull_s16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmlsl_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u8(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u32(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u16(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_s8(arg___p0: int16x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s8(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s32(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s16(__p1, __p2);
    return __ret;
}
pub inline fn vmlsl_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk uint32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlsl_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_u16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk uint16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmlsl_n_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s32(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        break :blk int32x2_t{
            tmp,
            tmp_1,
        };
    });
    return __ret;
}
pub inline fn vmlsl_n_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 - vmull_s16(__p1, blk: {
        const tmp = __p2;
        const tmp_1 = __p2;
        const tmp_2 = __p2;
        const tmp_3 = __p2;
        break :blk int16x4_t{
            tmp,
            tmp_1,
            tmp_2,
            tmp_3,
        };
    });
    return __ret;
}
pub inline fn vmull_high_p64(arg___p0: poly64x2_t, arg___p1: poly64x2_t) poly128_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: poly128_t = undefined;
    _ = &__ret;
    __ret = vmull_p64(@as(poly64_t, @bitCast(vget_high_p64(__p0))), @as(poly64_t, @bitCast(vget_high_p64(__p1))));
    return __ret;
}
pub inline fn vabdl_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vabdl_u8(vget_high_u8(__p0), vget_high_u8(__p1));
    return __ret;
}
pub inline fn vabdl_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vabdl_u32(vget_high_u32(__p0), vget_high_u32(__p1));
    return __ret;
}
pub inline fn vabdl_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vabdl_u16(vget_high_u16(__p0), vget_high_u16(__p1));
    return __ret;
}
pub inline fn vabdl_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vabdl_s8(vget_high_s8(__p0), vget_high_s8(__p1));
    return __ret;
}
pub inline fn vabdl_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vabdl_s32(vget_high_s32(__p0), vget_high_s32(__p1));
    return __ret;
}
pub inline fn vabdl_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vabdl_s16(vget_high_s16(__p0), vget_high_s16(__p1));
    return __ret;
}
pub inline fn vaddl_high_u8(arg___p0: uint8x16_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u8(__p0) + vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vaddl_high_u32(arg___p0: uint32x4_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u32(__p0) + vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vaddl_high_u16(arg___p0: uint16x8_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_u16(__p0) + vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vaddl_high_s8(arg___p0: int8x16_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s8(__p0) + vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vaddl_high_s32(arg___p0: int32x4_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s32(__p0) + vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vaddl_high_s16(arg___p0: int16x8_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmovl_high_s16(__p0) + vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vaddw_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_u8(__p1);
    return __ret;
}
pub inline fn vaddw_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_u32(__p1);
    return __ret;
}
pub inline fn vaddw_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_u16(__p1);
    return __ret;
}
pub inline fn vaddw_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_s8(__p1);
    return __ret;
}
pub inline fn vaddw_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_s32(__p1);
    return __ret;
}
pub inline fn vaddw_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vmovl_high_s16(__p1);
    return __ret;
}
pub inline fn vmlal_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmlal_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
    return __ret;
}
pub inline fn vmlal_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
    return __ret;
}
pub inline fn vmlal_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
    return __ret;
}
pub inline fn vmlal_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmlal_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
    return __ret;
}
pub inline fn vmlal_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vmlal_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vmlal_high_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_u32(__p0, vget_high_u32(__p1), __p2);
    return __ret;
}
pub inline fn vmlal_high_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_u16(__p0, vget_high_u16(__p1), __p2);
    return __ret;
}
pub inline fn vmlal_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vmlal_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlal_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vmlsl_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
    return __ret;
}
pub inline fn vmlsl_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
    return __ret;
}
pub inline fn vmlsl_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
    return __ret;
}
pub inline fn vmlsl_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vmlsl_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
    return __ret;
}
pub inline fn vmlsl_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vmlsl_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub inline fn vmlsl_high_n_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: u32) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_u32(__p0, vget_high_u32(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_n_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: u16) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_u16(__p0, vget_high_u16(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_n_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: i32) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_s32(__p0, vget_high_s32(__p1), __p2);
    return __ret;
}
pub inline fn vmlsl_high_n_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: i16) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vmlsl_n_s16(__p0, vget_high_s16(__p1), __p2);
    return __ret;
}
pub inline fn vabal_u8(arg___p0: uint16x8_t, arg___p1: uint8x8_t, arg___p2: uint8x8_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_u8(__p1, __p2);
    return __ret;
}
pub inline fn vabal_u32(arg___p0: uint64x2_t, arg___p1: uint32x2_t, arg___p2: uint32x2_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_u32(__p1, __p2);
    return __ret;
}
pub inline fn vabal_u16(arg___p0: uint32x4_t, arg___p1: uint16x4_t, arg___p2: uint16x4_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_u16(__p1, __p2);
    return __ret;
}
pub inline fn vabal_s8(arg___p0: int16x8_t, arg___p1: int8x8_t, arg___p2: int8x8_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_s8(__p1, __p2);
    return __ret;
}
pub inline fn vabal_s32(arg___p0: int64x2_t, arg___p1: int32x2_t, arg___p2: int32x2_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_s32(__p1, __p2);
    return __ret;
}
pub inline fn vabal_s16(arg___p0: int32x4_t, arg___p1: int16x4_t, arg___p2: int16x4_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = __p0 + vabdl_s16(__p1, __p2);
    return __ret;
}
pub inline fn vabal_high_u8(arg___p0: uint16x8_t, arg___p1: uint8x16_t, arg___p2: uint8x16_t) uint16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint16x8_t = undefined;
    _ = &__ret;
    __ret = vabal_u8(__p0, vget_high_u8(__p1), vget_high_u8(__p2));
    return __ret;
}
pub inline fn vabal_high_u32(arg___p0: uint64x2_t, arg___p1: uint32x4_t, arg___p2: uint32x4_t) uint64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint64x2_t = undefined;
    _ = &__ret;
    __ret = vabal_u32(__p0, vget_high_u32(__p1), vget_high_u32(__p2));
    return __ret;
}
pub inline fn vabal_high_u16(arg___p0: uint32x4_t, arg___p1: uint16x8_t, arg___p2: uint16x8_t) uint32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: uint32x4_t = undefined;
    _ = &__ret;
    __ret = vabal_u16(__p0, vget_high_u16(__p1), vget_high_u16(__p2));
    return __ret;
}
pub inline fn vabal_high_s8(arg___p0: int16x8_t, arg___p1: int8x16_t, arg___p2: int8x16_t) int16x8_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int16x8_t = undefined;
    _ = &__ret;
    __ret = vabal_s8(__p0, vget_high_s8(__p1), vget_high_s8(__p2));
    return __ret;
}
pub inline fn vabal_high_s32(arg___p0: int64x2_t, arg___p1: int32x4_t, arg___p2: int32x4_t) int64x2_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int64x2_t = undefined;
    _ = &__ret;
    __ret = vabal_s32(__p0, vget_high_s32(__p1), vget_high_s32(__p2));
    return __ret;
}
pub inline fn vabal_high_s16(arg___p0: int32x4_t, arg___p1: int16x8_t, arg___p2: int16x8_t) int32x4_t {
    var __p0 = arg___p0;
    _ = &__p0;
    var __p1 = arg___p1;
    _ = &__p1;
    var __p2 = arg___p2;
    _ = &__p2;
    var __ret: int32x4_t = undefined;
    _ = &__ret;
    __ret = vabal_s16(__p0, vget_high_s16(__p1), vget_high_s16(__p2));
    return __ret;
}
pub const zend_uchar = u8;
pub const SUCCESS: c_int = 0;
pub const FAILURE: c_int = -1;
pub const ZEND_RESULT_CODE = c_int;
pub const zend_result = ZEND_RESULT_CODE;
const union_unnamed_6 = extern union {
    type_info: u32,
};
pub const struct__zend_refcounted_h = extern struct {
    refcount: u32 = @import("std").mem.zeroes(u32),
    u: union_unnamed_6 = @import("std").mem.zeroes(union_unnamed_6),
};
pub const zend_refcounted_h = struct__zend_refcounted_h;
pub const struct__zend_string = extern struct {
    gc: zend_refcounted_h = @import("std").mem.zeroes(zend_refcounted_h),
    h: zend_ulong = @import("std").mem.zeroes(zend_ulong),
    len: usize = @import("std").mem.zeroes(usize),
    val: [1]u8 = @import("std").mem.zeroes([1]u8),
};
pub const zend_string = struct__zend_string;
const union_unnamed_7 = extern union {
    parent: [*c]zend_class_entry,
    parent_name: [*c]zend_string,
};
pub const struct__zend_refcounted = extern struct {
    gc: zend_refcounted_h = @import("std").mem.zeroes(zend_refcounted_h),
};
pub const zend_refcounted = struct__zend_refcounted;
const struct_unnamed_9 = extern struct {
    flags: u8 = @import("std").mem.zeroes(u8),
    _unused: u8 = @import("std").mem.zeroes(u8),
    nIteratorsCount: u8 = @import("std").mem.zeroes(u8),
    _unused2: u8 = @import("std").mem.zeroes(u8),
};
const union_unnamed_8 = extern union {
    v: struct_unnamed_9,
    flags: u32,
};
pub const struct__Bucket = extern struct {
    val: zval = @import("std").mem.zeroes(zval),
    h: zend_ulong = @import("std").mem.zeroes(zend_ulong),
    key: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
};
pub const Bucket = struct__Bucket;
const union_unnamed_10 = extern union {
    arHash: [*c]u32,
    arData: [*c]Bucket,
    arPacked: [*c]zval,
};
pub const dtor_func_t = ?*const fn ([*c]zval) callconv(.c) void;
pub const struct__zend_array = extern struct {
    gc: zend_refcounted_h = @import("std").mem.zeroes(zend_refcounted_h),
    u: union_unnamed_8 = @import("std").mem.zeroes(union_unnamed_8),
    nTableMask: u32 = @import("std").mem.zeroes(u32),
    unnamed_0: union_unnamed_10 = @import("std").mem.zeroes(union_unnamed_10),
    nNumUsed: u32 = @import("std").mem.zeroes(u32),
    nNumOfElements: u32 = @import("std").mem.zeroes(u32),
    nTableSize: u32 = @import("std").mem.zeroes(u32),
    nInternalPointer: u32 = @import("std").mem.zeroes(u32),
    nNextFreeElement: zend_long = @import("std").mem.zeroes(zend_long),
    pDestructor: dtor_func_t = @import("std").mem.zeroes(dtor_func_t),
};
pub const zend_array = struct__zend_array;
pub const struct__zend_resource = extern struct {
    gc: zend_refcounted_h = @import("std").mem.zeroes(zend_refcounted_h),
    handle: zend_long = @import("std").mem.zeroes(zend_long),
    type: c_int = @import("std").mem.zeroes(c_int),
    ptr: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const zend_resource = struct__zend_resource;
pub const struct__zend_reference = extern struct {
    gc: zend_refcounted_h = @import("std").mem.zeroes(zend_refcounted_h),
    val: zval = @import("std").mem.zeroes(zval),
    sources: zend_property_info_source_list = @import("std").mem.zeroes(zend_property_info_source_list),
};
pub const zend_reference = struct__zend_reference;
pub const struct__zend_ast_ref = extern struct {
    gc: zend_refcounted_h = @import("std").mem.zeroes(zend_refcounted_h),
};
pub const zend_ast_ref = struct__zend_ast_ref;
pub const struct__zend_arg_info = extern struct {
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    type: zend_type = @import("std").mem.zeroes(zend_type),
    default_value: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
};
pub const zend_arg_info = struct__zend_arg_info;
pub const HashTable = struct__zend_array;
pub const struct__zend_property_info = extern struct {
    offset: u32 = @import("std").mem.zeroes(u32),
    flags: u32 = @import("std").mem.zeroes(u32),
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    doc_comment: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    attributes: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    ce: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    type: zend_type = @import("std").mem.zeroes(zend_type),
    prototype: [*c]const zend_property_info = @import("std").mem.zeroes([*c]const zend_property_info),
    hooks: [*c][*c]zend_function = @import("std").mem.zeroes([*c][*c]zend_function),
};
pub const zend_property_info = struct__zend_property_info;
const struct_unnamed_11 = extern struct {
    type: u8 = @import("std").mem.zeroes(u8),
    arg_flags: [3]u8 = @import("std").mem.zeroes([3]u8),
    fn_flags: u32 = @import("std").mem.zeroes(u32),
    function_name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    scope: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    prototype: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    num_args: u32 = @import("std").mem.zeroes(u32),
    required_num_args: u32 = @import("std").mem.zeroes(u32),
    arg_info: [*c]zend_arg_info = @import("std").mem.zeroes([*c]zend_arg_info),
    attributes: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    run_time_cache__ptr: [*c]?*anyopaque = @import("std").mem.zeroes([*c]?*anyopaque),
    doc_comment: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    T: u32 = @import("std").mem.zeroes(u32),
    prop_info: [*c]const zend_property_info = @import("std").mem.zeroes([*c]const zend_property_info),
};
pub const union__znode_op = extern union {
    constant: u32,
    @"var": u32,
    num: u32,
    opline_num: u32,
    jmp_offset: u32,
};
pub const znode_op = union__znode_op;
pub const struct__zend_op = extern struct {
    handler: ?*const anyopaque = @import("std").mem.zeroes(?*const anyopaque),
    op1: znode_op = @import("std").mem.zeroes(znode_op),
    op2: znode_op = @import("std").mem.zeroes(znode_op),
    result: znode_op = @import("std").mem.zeroes(znode_op),
    extended_value: u32 = @import("std").mem.zeroes(u32),
    lineno: u32 = @import("std").mem.zeroes(u32),
    opcode: u8 = @import("std").mem.zeroes(u8),
    op1_type: u8 = @import("std").mem.zeroes(u8),
    op2_type: u8 = @import("std").mem.zeroes(u8),
    result_type: u8 = @import("std").mem.zeroes(u8),
};
pub const zend_op = struct__zend_op;
pub const struct__zend_live_range = extern struct {
    @"var": u32 = @import("std").mem.zeroes(u32),
    start: u32 = @import("std").mem.zeroes(u32),
    end: u32 = @import("std").mem.zeroes(u32),
};
pub const zend_live_range = struct__zend_live_range;
pub const struct__zend_try_catch_element = extern struct {
    try_op: u32 = @import("std").mem.zeroes(u32),
    catch_op: u32 = @import("std").mem.zeroes(u32),
    finally_op: u32 = @import("std").mem.zeroes(u32),
    finally_end: u32 = @import("std").mem.zeroes(u32),
};
pub const zend_try_catch_element = struct__zend_try_catch_element;
pub const struct__zend_op_array = extern struct {
    type: u8 = @import("std").mem.zeroes(u8),
    arg_flags: [3]u8 = @import("std").mem.zeroes([3]u8),
    fn_flags: u32 = @import("std").mem.zeroes(u32),
    function_name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    scope: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    prototype: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    num_args: u32 = @import("std").mem.zeroes(u32),
    required_num_args: u32 = @import("std").mem.zeroes(u32),
    arg_info: [*c]zend_arg_info = @import("std").mem.zeroes([*c]zend_arg_info),
    attributes: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    run_time_cache__ptr: [*c]?*anyopaque = @import("std").mem.zeroes([*c]?*anyopaque),
    doc_comment: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    T: u32 = @import("std").mem.zeroes(u32),
    prop_info: [*c]const zend_property_info = @import("std").mem.zeroes([*c]const zend_property_info),
    cache_size: c_int = @import("std").mem.zeroes(c_int),
    last_var: c_int = @import("std").mem.zeroes(c_int),
    last: u32 = @import("std").mem.zeroes(u32),
    opcodes: [*c]zend_op = @import("std").mem.zeroes([*c]zend_op),
    static_variables_ptr__ptr: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    static_variables: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    vars: [*c][*c]zend_string = @import("std").mem.zeroes([*c][*c]zend_string),
    refcount: [*c]u32 = @import("std").mem.zeroes([*c]u32),
    last_live_range: c_int = @import("std").mem.zeroes(c_int),
    last_try_catch: c_int = @import("std").mem.zeroes(c_int),
    live_range: [*c]zend_live_range = @import("std").mem.zeroes([*c]zend_live_range),
    try_catch_array: [*c]zend_try_catch_element = @import("std").mem.zeroes([*c]zend_try_catch_element),
    filename: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    line_start: u32 = @import("std").mem.zeroes(u32),
    line_end: u32 = @import("std").mem.zeroes(u32),
    last_literal: c_int = @import("std").mem.zeroes(c_int),
    num_dynamic_func_defs: u32 = @import("std").mem.zeroes(u32),
    literals: [*c]zval = @import("std").mem.zeroes([*c]zval),
    dynamic_func_defs: [*c][*c]zend_op_array = @import("std").mem.zeroes([*c][*c]zend_op_array),
    reserved: [6]?*anyopaque = @import("std").mem.zeroes([6]?*anyopaque),
};
pub const zend_op_array = struct__zend_op_array;
pub const struct__zend_internal_arg_info = extern struct {
    name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    type: zend_type = @import("std").mem.zeroes(zend_type),
    default_value: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const zend_internal_arg_info = struct__zend_internal_arg_info;
pub const struct__zend_execute_data = extern struct {
    opline: [*c]const zend_op = @import("std").mem.zeroes([*c]const zend_op),
    call: [*c]zend_execute_data = @import("std").mem.zeroes([*c]zend_execute_data),
    return_value: [*c]zval = @import("std").mem.zeroes([*c]zval),
    func: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    This: zval = @import("std").mem.zeroes(zval),
    prev_execute_data: [*c]zend_execute_data = @import("std").mem.zeroes([*c]zend_execute_data),
    symbol_table: [*c]zend_array = @import("std").mem.zeroes([*c]zend_array),
    run_time_cache: [*c]?*anyopaque = @import("std").mem.zeroes([*c]?*anyopaque),
    extra_named_params: [*c]zend_array = @import("std").mem.zeroes([*c]zend_array),
};
pub const zend_execute_data = struct__zend_execute_data;
pub const zif_handler = ?*const fn ([*c]zend_execute_data, [*c]zval) callconv(.c) void;
pub const zend_ini_entry = struct__zend_ini_entry;
pub const struct__zend_ini_entry = extern struct {
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    on_modify: ?*const fn ([*c]zend_ini_entry, [*c]zend_string, ?*anyopaque, ?*anyopaque, ?*anyopaque, c_int) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]zend_ini_entry, [*c]zend_string, ?*anyopaque, ?*anyopaque, ?*anyopaque, c_int) callconv(.c) c_int),
    mh_arg1: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    mh_arg2: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    mh_arg3: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    value: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    orig_value: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    displayer: ?*const fn ([*c]zend_ini_entry, c_int) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]zend_ini_entry, c_int) callconv(.c) void),
    module_number: c_int = @import("std").mem.zeroes(c_int),
    modifiable: u8 = @import("std").mem.zeroes(u8),
    orig_modifiable: u8 = @import("std").mem.zeroes(u8),
    modified: u8 = @import("std").mem.zeroes(u8),
};
pub const struct__zend_module_dep = extern struct {
    name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    rel: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    version: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    type: u8 = @import("std").mem.zeroes(u8),
};
pub const struct__zend_function_entry = extern struct {
    fname: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    handler: zif_handler = @import("std").mem.zeroes(zif_handler),
    arg_info: [*c]const struct__zend_internal_arg_info = @import("std").mem.zeroes([*c]const struct__zend_internal_arg_info),
    num_args: u32 = @import("std").mem.zeroes(u32),
    flags: u32 = @import("std").mem.zeroes(u32),
    frameless_function_infos: [*c]const zend_frameless_function_info = @import("std").mem.zeroes([*c]const zend_frameless_function_info),
    doc_comment: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const zend_module_entry = struct__zend_module_entry;
pub const struct__zend_module_entry = extern struct {
    size: c_ushort = @import("std").mem.zeroes(c_ushort),
    zend_api: c_uint = @import("std").mem.zeroes(c_uint),
    zend_debug: u8 = @import("std").mem.zeroes(u8),
    zts: u8 = @import("std").mem.zeroes(u8),
    ini_entry: [*c]const struct__zend_ini_entry = @import("std").mem.zeroes([*c]const struct__zend_ini_entry),
    deps: [*c]const struct__zend_module_dep = @import("std").mem.zeroes([*c]const struct__zend_module_dep),
    name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    functions: [*c]const struct__zend_function_entry = @import("std").mem.zeroes([*c]const struct__zend_function_entry),
    module_startup_func: ?*const fn (c_int, c_int) callconv(.c) zend_result = @import("std").mem.zeroes(?*const fn (c_int, c_int) callconv(.c) zend_result),
    module_shutdown_func: ?*const fn (c_int, c_int) callconv(.c) zend_result = @import("std").mem.zeroes(?*const fn (c_int, c_int) callconv(.c) zend_result),
    request_startup_func: ?*const fn (c_int, c_int) callconv(.c) zend_result = @import("std").mem.zeroes(?*const fn (c_int, c_int) callconv(.c) zend_result),
    request_shutdown_func: ?*const fn (c_int, c_int) callconv(.c) zend_result = @import("std").mem.zeroes(?*const fn (c_int, c_int) callconv(.c) zend_result),
    info_func: ?*const fn ([*c]zend_module_entry) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]zend_module_entry) callconv(.c) void),
    version: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    globals_size: usize = @import("std").mem.zeroes(usize),
    globals_ptr: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    globals_ctor: ?*const fn (?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) void),
    globals_dtor: ?*const fn (?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) void),
    post_deactivate_func: ?*const fn () callconv(.c) zend_result = @import("std").mem.zeroes(?*const fn () callconv(.c) zend_result),
    module_started: c_int = @import("std").mem.zeroes(c_int),
    type: u8 = @import("std").mem.zeroes(u8),
    handle: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    module_number: c_int = @import("std").mem.zeroes(c_int),
    build_id: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const struct__zend_internal_function = extern struct {
    type: u8 = @import("std").mem.zeroes(u8),
    arg_flags: [3]u8 = @import("std").mem.zeroes([3]u8),
    fn_flags: u32 = @import("std").mem.zeroes(u32),
    function_name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    scope: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    prototype: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    num_args: u32 = @import("std").mem.zeroes(u32),
    required_num_args: u32 = @import("std").mem.zeroes(u32),
    arg_info: [*c]zend_internal_arg_info = @import("std").mem.zeroes([*c]zend_internal_arg_info),
    attributes: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    run_time_cache__ptr: [*c]?*anyopaque = @import("std").mem.zeroes([*c]?*anyopaque),
    doc_comment: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    T: u32 = @import("std").mem.zeroes(u32),
    prop_info: [*c]const zend_property_info = @import("std").mem.zeroes([*c]const zend_property_info),
    handler: zif_handler = @import("std").mem.zeroes(zif_handler),
    module: [*c]struct__zend_module_entry = @import("std").mem.zeroes([*c]struct__zend_module_entry),
    frameless_function_infos: [*c]const zend_frameless_function_info = @import("std").mem.zeroes([*c]const zend_frameless_function_info),
    reserved: [6]?*anyopaque = @import("std").mem.zeroes([6]?*anyopaque),
};
pub const zend_internal_function = struct__zend_internal_function;
pub const union__zend_function = extern union {
    type: u8,
    quick_arg_flags: u32,
    common: struct_unnamed_11,
    op_array: zend_op_array,
    internal_function: zend_internal_function,
};
pub const zend_function = union__zend_function;
const struct_unnamed_12 = extern struct {
    w1: u32 = @import("std").mem.zeroes(u32),
    w2: u32 = @import("std").mem.zeroes(u32),
};
pub const union__zend_value = extern union {
    lval: zend_long,
    dval: f64,
    counted: [*c]zend_refcounted,
    str: [*c]zend_string,
    arr: [*c]zend_array,
    obj: [*c]zend_object,
    res: [*c]zend_resource,
    ref: [*c]zend_reference,
    ast: [*c]zend_ast_ref,
    zv: [*c]zval,
    ptr: ?*anyopaque,
    ce: [*c]zend_class_entry,
    func: [*c]zend_function,
    ww: struct_unnamed_12,
};
pub const zend_value = union__zend_value;
const union_unnamed_15 = extern union {
    extra: u16,
};
const struct_unnamed_14 = extern struct {
    type: u8 = @import("std").mem.zeroes(u8),
    type_flags: u8 = @import("std").mem.zeroes(u8),
    u: union_unnamed_15 = @import("std").mem.zeroes(union_unnamed_15),
};
const union_unnamed_13 = extern union {
    type_info: u32,
    v: struct_unnamed_14,
};
const union_unnamed_16 = extern union {
    next: u32,
    cache_slot: u32,
    opline_num: u32,
    lineno: u32,
    num_args: u32,
    fe_pos: u32,
    fe_iter_idx: u32,
    guard: u32,
    constant_flags: u32,
    extra: u32,
};
pub const struct__zval_struct = extern struct {
    value: zend_value = @import("std").mem.zeroes(zend_value),
    u1: union_unnamed_13 = @import("std").mem.zeroes(union_unnamed_13),
    u2: union_unnamed_16 = @import("std").mem.zeroes(union_unnamed_16),
};
pub const zval = struct__zval_struct;
pub const struct__zend_class_mutable_data = extern struct {
    default_properties_table: [*c]zval = @import("std").mem.zeroes([*c]zval),
    constants_table: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    ce_flags: u32 = @import("std").mem.zeroes(u32),
    backed_enum_table: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
};
pub const zend_class_mutable_data = struct__zend_class_mutable_data;
pub const struct__zend_class_dependency = extern struct {
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    ce: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
};
pub const zend_class_dependency = struct__zend_class_dependency;
pub const struct__zend_error_info = extern struct {
    type: c_int = @import("std").mem.zeroes(c_int),
    lineno: u32 = @import("std").mem.zeroes(u32),
    filename: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    message: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
};
pub const zend_error_info = struct__zend_error_info;
pub const struct__zend_inheritance_cache_entry = extern struct {
    next: [*c]zend_inheritance_cache_entry = @import("std").mem.zeroes([*c]zend_inheritance_cache_entry),
    ce: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    parent: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    dependencies: [*c]zend_class_dependency = @import("std").mem.zeroes([*c]zend_class_dependency),
    dependencies_count: u32 = @import("std").mem.zeroes(u32),
    num_warnings: u32 = @import("std").mem.zeroes(u32),
    warnings: [*c][*c]zend_error_info = @import("std").mem.zeroes([*c][*c]zend_error_info),
    traits_and_interfaces: [1][*c]zend_class_entry = @import("std").mem.zeroes([1][*c]zend_class_entry),
};
pub const zend_inheritance_cache_entry = struct__zend_inheritance_cache_entry;
pub const zend_object_handlers = struct__zend_object_handlers;
pub const struct__zend_class_iterator_funcs = extern struct {
    zf_new_iterator: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    zf_valid: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    zf_current: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    zf_key: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    zf_next: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    zf_rewind: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
};
pub const zend_class_iterator_funcs = struct__zend_class_iterator_funcs;
pub const struct__zend_class_arrayaccess_funcs = extern struct {
    zf_offsetget: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    zf_offsetexists: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    zf_offsetset: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    zf_offsetunset: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
};
pub const zend_class_arrayaccess_funcs = struct__zend_class_arrayaccess_funcs;
const union_unnamed_17 = extern union {
    create_object: ?*const fn ([*c]zend_class_entry) callconv(.c) [*c]zend_object,
    interface_gets_implemented: ?*const fn ([*c]zend_class_entry, [*c]zend_class_entry) callconv(.c) c_int,
};
pub const struct__zend_object_iterator_funcs = extern struct {
    dtor: ?*const fn ([*c]zend_object_iterator) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]zend_object_iterator) callconv(.c) void),
    valid: ?*const fn ([*c]zend_object_iterator) callconv(.c) zend_result = @import("std").mem.zeroes(?*const fn ([*c]zend_object_iterator) callconv(.c) zend_result),
    get_current_data: ?*const fn ([*c]zend_object_iterator) callconv(.c) [*c]zval = @import("std").mem.zeroes(?*const fn ([*c]zend_object_iterator) callconv(.c) [*c]zval),
    get_current_key: ?*const fn ([*c]zend_object_iterator, [*c]zval) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]zend_object_iterator, [*c]zval) callconv(.c) void),
    move_forward: ?*const fn ([*c]zend_object_iterator) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]zend_object_iterator) callconv(.c) void),
    rewind: ?*const fn ([*c]zend_object_iterator) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]zend_object_iterator) callconv(.c) void),
    invalidate_current: ?*const fn ([*c]zend_object_iterator) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]zend_object_iterator) callconv(.c) void),
    get_gc: ?*const fn ([*c]zend_object_iterator, [*c][*c]zval, [*c]c_int) callconv(.c) [*c]HashTable = @import("std").mem.zeroes(?*const fn ([*c]zend_object_iterator, [*c][*c]zval, [*c]c_int) callconv(.c) [*c]HashTable),
};
pub const zend_object_iterator_funcs = struct__zend_object_iterator_funcs;
pub const struct__zend_object_iterator = extern struct {
    std: zend_object = @import("std").mem.zeroes(zend_object),
    data: zval = @import("std").mem.zeroes(zval),
    funcs: [*c]const zend_object_iterator_funcs = @import("std").mem.zeroes([*c]const zend_object_iterator_funcs),
    index: zend_ulong = @import("std").mem.zeroes(zend_ulong),
};
pub const zend_object_iterator = struct__zend_object_iterator;
pub const struct__zend_serialize_data = opaque {};
pub const zend_serialize_data = struct__zend_serialize_data;
pub const struct__zend_unserialize_data = opaque {};
pub const zend_unserialize_data = struct__zend_unserialize_data;
pub const struct__zend_class_name = extern struct {
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    lc_name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
};
pub const zend_class_name = struct__zend_class_name;
const union_unnamed_18 = extern union {
    interfaces: [*c][*c]zend_class_entry,
    interface_names: [*c]zend_class_name,
};
pub const struct__zend_trait_method_reference = extern struct {
    method_name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    class_name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
};
pub const zend_trait_method_reference = struct__zend_trait_method_reference;
pub const struct__zend_trait_alias = extern struct {
    trait_method: zend_trait_method_reference = @import("std").mem.zeroes(zend_trait_method_reference),
    alias: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    modifiers: u32 = @import("std").mem.zeroes(u32),
};
pub const zend_trait_alias = struct__zend_trait_alias;
pub const struct__zend_trait_precedence = extern struct {
    trait_method: zend_trait_method_reference = @import("std").mem.zeroes(zend_trait_method_reference),
    num_excludes: u32 = @import("std").mem.zeroes(u32),
    exclude_class_names: [1][*c]zend_string = @import("std").mem.zeroes([1][*c]zend_string),
};
pub const zend_trait_precedence = struct__zend_trait_precedence;
const struct_unnamed_20 = extern struct {
    filename: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    line_start: u32 = @import("std").mem.zeroes(u32),
    line_end: u32 = @import("std").mem.zeroes(u32),
};
const struct_unnamed_21 = extern struct {
    builtin_functions: [*c]const struct__zend_function_entry = @import("std").mem.zeroes([*c]const struct__zend_function_entry),
    module: [*c]struct__zend_module_entry = @import("std").mem.zeroes([*c]struct__zend_module_entry),
};
const union_unnamed_19 = extern union {
    user: struct_unnamed_20,
    internal: struct_unnamed_21,
};
pub const struct__zend_class_entry = extern struct {
    type: u8 = @import("std").mem.zeroes(u8),
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    unnamed_0: union_unnamed_7 = @import("std").mem.zeroes(union_unnamed_7),
    refcount: c_int = @import("std").mem.zeroes(c_int),
    ce_flags: u32 = @import("std").mem.zeroes(u32),
    default_properties_count: c_int = @import("std").mem.zeroes(c_int),
    default_static_members_count: c_int = @import("std").mem.zeroes(c_int),
    default_properties_table: [*c]zval = @import("std").mem.zeroes([*c]zval),
    default_static_members_table: [*c]zval = @import("std").mem.zeroes([*c]zval),
    static_members_table__ptr: [*c]zval = @import("std").mem.zeroes([*c]zval),
    function_table: HashTable = @import("std").mem.zeroes(HashTable),
    properties_info: HashTable = @import("std").mem.zeroes(HashTable),
    constants_table: HashTable = @import("std").mem.zeroes(HashTable),
    mutable_data__ptr: [*c]zend_class_mutable_data = @import("std").mem.zeroes([*c]zend_class_mutable_data),
    inheritance_cache: [*c]zend_inheritance_cache_entry = @import("std").mem.zeroes([*c]zend_inheritance_cache_entry),
    properties_info_table: [*c][*c]struct__zend_property_info = @import("std").mem.zeroes([*c][*c]struct__zend_property_info),
    constructor: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    destructor: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    clone: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __get: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __set: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __unset: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __isset: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __call: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __callstatic: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __tostring: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __debugInfo: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __serialize: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    __unserialize: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    default_object_handlers: [*c]const zend_object_handlers = @import("std").mem.zeroes([*c]const zend_object_handlers),
    iterator_funcs_ptr: [*c]zend_class_iterator_funcs = @import("std").mem.zeroes([*c]zend_class_iterator_funcs),
    arrayaccess_funcs_ptr: [*c]zend_class_arrayaccess_funcs = @import("std").mem.zeroes([*c]zend_class_arrayaccess_funcs),
    unnamed_1: union_unnamed_17 = @import("std").mem.zeroes(union_unnamed_17),
    get_iterator: ?*const fn ([*c]zend_class_entry, [*c]zval, c_int) callconv(.c) [*c]zend_object_iterator = @import("std").mem.zeroes(?*const fn ([*c]zend_class_entry, [*c]zval, c_int) callconv(.c) [*c]zend_object_iterator),
    get_static_method: ?*const fn ([*c]zend_class_entry, [*c]zend_string) callconv(.c) [*c]zend_function = @import("std").mem.zeroes(?*const fn ([*c]zend_class_entry, [*c]zend_string) callconv(.c) [*c]zend_function),
    serialize: ?*const fn ([*c]zval, [*c][*c]u8, [*c]usize, ?*zend_serialize_data) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]zval, [*c][*c]u8, [*c]usize, ?*zend_serialize_data) callconv(.c) c_int),
    unserialize: ?*const fn ([*c]zval, [*c]zend_class_entry, [*c]const u8, usize, ?*zend_unserialize_data) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]zval, [*c]zend_class_entry, [*c]const u8, usize, ?*zend_unserialize_data) callconv(.c) c_int),
    num_interfaces: u32 = @import("std").mem.zeroes(u32),
    num_traits: u32 = @import("std").mem.zeroes(u32),
    num_hooked_props: u32 = @import("std").mem.zeroes(u32),
    num_hooked_prop_variance_checks: u32 = @import("std").mem.zeroes(u32),
    unnamed_2: union_unnamed_18 = @import("std").mem.zeroes(union_unnamed_18),
    trait_names: [*c]zend_class_name = @import("std").mem.zeroes([*c]zend_class_name),
    trait_aliases: [*c][*c]zend_trait_alias = @import("std").mem.zeroes([*c][*c]zend_trait_alias),
    trait_precedences: [*c][*c]zend_trait_precedence = @import("std").mem.zeroes([*c][*c]zend_trait_precedence),
    attributes: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    enum_backing_type: u32 = @import("std").mem.zeroes(u32),
    backed_enum_table: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    doc_comment: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    info: union_unnamed_19 = @import("std").mem.zeroes(union_unnamed_19),
};
pub const zend_class_entry = struct__zend_class_entry;
pub const struct__zend_object = extern struct {
    gc: zend_refcounted_h = @import("std").mem.zeroes(zend_refcounted_h),
    handle: u32 = @import("std").mem.zeroes(u32),
    extra_flags: u32 = @import("std").mem.zeroes(u32),
    ce: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    handlers: [*c]const zend_object_handlers = @import("std").mem.zeroes([*c]const zend_object_handlers),
    properties: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    properties_table: [1]zval = @import("std").mem.zeroes([1]zval),
};
pub const zend_object = struct__zend_object;
pub const zend_object_free_obj_t = ?*const fn ([*c]zend_object) callconv(.c) void;
pub const zend_object_dtor_obj_t = ?*const fn ([*c]zend_object) callconv(.c) void;
pub const zend_object_clone_obj_t = ?*const fn ([*c]zend_object) callconv(.c) [*c]zend_object;
pub const zend_object_read_property_t = ?*const fn ([*c]zend_object, [*c]zend_string, c_int, [*c]?*anyopaque, [*c]zval) callconv(.c) [*c]zval;
pub const zend_object_write_property_t = ?*const fn ([*c]zend_object, [*c]zend_string, [*c]zval, [*c]?*anyopaque) callconv(.c) [*c]zval;
pub const zend_object_read_dimension_t = ?*const fn ([*c]zend_object, [*c]zval, c_int, [*c]zval) callconv(.c) [*c]zval;
pub const zend_object_write_dimension_t = ?*const fn ([*c]zend_object, [*c]zval, [*c]zval) callconv(.c) void;
pub const zend_object_get_property_ptr_ptr_t = ?*const fn ([*c]zend_object, [*c]zend_string, c_int, [*c]?*anyopaque) callconv(.c) [*c]zval;
pub const zend_object_has_property_t = ?*const fn ([*c]zend_object, [*c]zend_string, c_int, [*c]?*anyopaque) callconv(.c) c_int;
pub const zend_object_unset_property_t = ?*const fn ([*c]zend_object, [*c]zend_string, [*c]?*anyopaque) callconv(.c) void;
pub const zend_object_has_dimension_t = ?*const fn ([*c]zend_object, [*c]zval, c_int) callconv(.c) c_int;
pub const zend_object_unset_dimension_t = ?*const fn ([*c]zend_object, [*c]zval) callconv(.c) void;
pub const zend_object_get_properties_t = ?*const fn ([*c]zend_object) callconv(.c) [*c]HashTable;
pub const zend_object_get_method_t = ?*const fn ([*c][*c]zend_object, [*c]zend_string, [*c]const zval) callconv(.c) [*c]zend_function;
pub const zend_object_get_constructor_t = ?*const fn ([*c]zend_object) callconv(.c) [*c]zend_function;
pub const zend_object_get_class_name_t = ?*const fn ([*c]const zend_object) callconv(.c) [*c]zend_string;
pub const zend_object_cast_t = ?*const fn ([*c]zend_object, [*c]zval, c_int) callconv(.c) zend_result;
pub const zend_object_count_elements_t = ?*const fn ([*c]zend_object, [*c]zend_long) callconv(.c) zend_result;
pub const zend_object_get_debug_info_t = ?*const fn ([*c]zend_object, [*c]c_int) callconv(.c) [*c]HashTable;
pub const zend_object_get_closure_t = ?*const fn ([*c]zend_object, [*c][*c]zend_class_entry, [*c][*c]zend_function, [*c][*c]zend_object, bool) callconv(.c) zend_result;
pub const zend_object_get_gc_t = ?*const fn ([*c]zend_object, [*c][*c]zval, [*c]c_int) callconv(.c) [*c]HashTable;
pub const zend_object_do_operation_t = ?*const fn (u8, [*c]zval, [*c]zval, [*c]zval) callconv(.c) zend_result;
pub const zend_object_compare_t = ?*const fn ([*c]zval, [*c]zval) callconv(.c) c_int;
pub const ZEND_PROP_PURPOSE_DEBUG: c_int = 0;
pub const ZEND_PROP_PURPOSE_ARRAY_CAST: c_int = 1;
pub const ZEND_PROP_PURPOSE_SERIALIZE: c_int = 2;
pub const ZEND_PROP_PURPOSE_VAR_EXPORT: c_int = 3;
pub const ZEND_PROP_PURPOSE_JSON: c_int = 4;
pub const ZEND_PROP_PURPOSE_GET_OBJECT_VARS: c_int = 5;
pub const _ZEND_PROP_PURPOSE_NON_EXHAUSTIVE_ENUM: c_int = 6;
pub const enum__zend_prop_purpose = c_uint;
pub const zend_prop_purpose = enum__zend_prop_purpose;
pub const zend_object_get_properties_for_t = ?*const fn ([*c]zend_object, zend_prop_purpose) callconv(.c) [*c]zend_array;
pub const struct__zend_object_handlers = extern struct {
    offset: c_int = @import("std").mem.zeroes(c_int),
    free_obj: zend_object_free_obj_t = @import("std").mem.zeroes(zend_object_free_obj_t),
    dtor_obj: zend_object_dtor_obj_t = @import("std").mem.zeroes(zend_object_dtor_obj_t),
    clone_obj: zend_object_clone_obj_t = @import("std").mem.zeroes(zend_object_clone_obj_t),
    read_property: zend_object_read_property_t = @import("std").mem.zeroes(zend_object_read_property_t),
    write_property: zend_object_write_property_t = @import("std").mem.zeroes(zend_object_write_property_t),
    read_dimension: zend_object_read_dimension_t = @import("std").mem.zeroes(zend_object_read_dimension_t),
    write_dimension: zend_object_write_dimension_t = @import("std").mem.zeroes(zend_object_write_dimension_t),
    get_property_ptr_ptr: zend_object_get_property_ptr_ptr_t = @import("std").mem.zeroes(zend_object_get_property_ptr_ptr_t),
    has_property: zend_object_has_property_t = @import("std").mem.zeroes(zend_object_has_property_t),
    unset_property: zend_object_unset_property_t = @import("std").mem.zeroes(zend_object_unset_property_t),
    has_dimension: zend_object_has_dimension_t = @import("std").mem.zeroes(zend_object_has_dimension_t),
    unset_dimension: zend_object_unset_dimension_t = @import("std").mem.zeroes(zend_object_unset_dimension_t),
    get_properties: zend_object_get_properties_t = @import("std").mem.zeroes(zend_object_get_properties_t),
    get_method: zend_object_get_method_t = @import("std").mem.zeroes(zend_object_get_method_t),
    get_constructor: zend_object_get_constructor_t = @import("std").mem.zeroes(zend_object_get_constructor_t),
    get_class_name: zend_object_get_class_name_t = @import("std").mem.zeroes(zend_object_get_class_name_t),
    cast_object: zend_object_cast_t = @import("std").mem.zeroes(zend_object_cast_t),
    count_elements: zend_object_count_elements_t = @import("std").mem.zeroes(zend_object_count_elements_t),
    get_debug_info: zend_object_get_debug_info_t = @import("std").mem.zeroes(zend_object_get_debug_info_t),
    get_closure: zend_object_get_closure_t = @import("std").mem.zeroes(zend_object_get_closure_t),
    get_gc: zend_object_get_gc_t = @import("std").mem.zeroes(zend_object_get_gc_t),
    do_operation: zend_object_do_operation_t = @import("std").mem.zeroes(zend_object_do_operation_t),
    compare: zend_object_compare_t = @import("std").mem.zeroes(zend_object_compare_t),
    get_properties_for: zend_object_get_properties_for_t = @import("std").mem.zeroes(zend_object_get_properties_for_t),
};
pub const zend_ast_kind = u16;
pub const zend_ast_attr = u16;
pub const zend_ast = struct__zend_ast;
pub const struct__zend_ast = extern struct {
    kind: zend_ast_kind = @import("std").mem.zeroes(zend_ast_kind),
    attr: zend_ast_attr = @import("std").mem.zeroes(zend_ast_attr),
    lineno: u32 = @import("std").mem.zeroes(u32),
    child: [1][*c]zend_ast = @import("std").mem.zeroes([1][*c]zend_ast),
};
pub const compare_func_t = ?*const fn (?*const anyopaque, ?*const anyopaque) callconv(.c) c_int;
pub const swap_func_t = ?*const fn (?*anyopaque, ?*anyopaque) callconv(.c) void;
pub const sort_func_t = ?*const fn (?*anyopaque, usize, usize, compare_func_t, swap_func_t) callconv(.c) void;
pub const copy_ctor_func_t = ?*const fn ([*c]zval) callconv(.c) void;
pub const zend_type = extern struct {
    ptr: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    type_mask: u32 = @import("std").mem.zeroes(u32),
};
pub const zend_type_list = extern struct {
    num_types: u32 = @import("std").mem.zeroes(u32),
    types: [1]zend_type = @import("std").mem.zeroes([1]zend_type),
};
pub const HashPosition = u32;
pub const struct__HashTableIterator = extern struct {
    ht: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    pos: HashPosition = @import("std").mem.zeroes(HashPosition),
    next_copy: u32 = @import("std").mem.zeroes(u32),
};
pub const HashTableIterator = struct__HashTableIterator;
pub const zend_property_info_list = extern struct {
    num: usize = @import("std").mem.zeroes(usize),
    num_allocated: usize = @import("std").mem.zeroes(usize),
    ptr: [1][*c]struct__zend_property_info = @import("std").mem.zeroes([1][*c]struct__zend_property_info),
};
pub const zend_property_info_source_list = extern union {
    ptr: [*c]struct__zend_property_info,
    list: usize,
};
pub inline fn zval_get_type(arg_pz: [*c]const zval) u8 {
    var pz = arg_pz;
    _ = &pz;
    return pz.*.u1.v.type;
}
pub inline fn zval_gc_type(arg_gc_type_info: u32) u8 {
    var gc_type_info = arg_gc_type_info;
    _ = &gc_type_info;
    return @as(u8, @bitCast(@as(u8, @truncate(gc_type_info & @as(u32, @bitCast(@as(c_int, 15)))))));
}
pub inline fn zval_gc_flags(arg_gc_type_info: u32) u32 {
    var gc_type_info = arg_gc_type_info;
    _ = &gc_type_info;
    return (gc_type_info >> @intCast(0)) & @as(u32, @bitCast(@as(c_int, 1008) >> @intCast(0)));
}
pub inline fn zval_gc_info(arg_gc_type_info: u32) u32 {
    var gc_type_info = arg_gc_type_info;
    _ = &gc_type_info;
    return gc_type_info >> @intCast(10);
}
pub inline fn zend_gc_refcount(arg_p: [*c]const zend_refcounted_h) u32 {
    var p = arg_p;
    _ = &p;
    return p.*.refcount;
}
pub inline fn zend_gc_set_refcount(arg_p: [*c]zend_refcounted_h, arg_rc: u32) u32 {
    var p = arg_p;
    _ = &p;
    var rc = arg_rc;
    _ = &rc;
    p.*.refcount = rc;
    return p.*.refcount;
}
pub inline fn zend_gc_addref(arg_p: [*c]zend_refcounted_h) u32 {
    var p = arg_p;
    _ = &p;
    while (true) {
        if (!false) break;
    }
    return blk: {
        const ref = &p.*.refcount;
        ref.* +%= 1;
        break :blk ref.*;
    };
}
pub inline fn zend_gc_try_addref(arg_p: [*c]zend_refcounted_h) void {
    var p = arg_p;
    _ = &p;
    if (!((p.*.u.type_info & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        while (true) {
            if (!false) break;
        }
        p.*.refcount +%= 1;
    }
}
pub inline fn zend_gc_try_delref(arg_p: [*c]zend_refcounted_h) void {
    var p = arg_p;
    _ = &p;
    if (!((p.*.u.type_info & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        while (true) {
            if (!false) break;
        }
        p.*.refcount -%= 1;
    }
}
pub inline fn zend_gc_delref(arg_p: [*c]zend_refcounted_h) u32 {
    var p = arg_p;
    _ = &p;
    __builtin_assume(p.*.refcount > @as(u32, @bitCast(@as(c_int, 0))));
    while (true) {
        if (!false) break;
    }
    return blk: {
        const ref = &p.*.refcount;
        ref.* -%= 1;
        break :blk ref.*;
    };
}
pub inline fn zend_gc_addref_ex(arg_p: [*c]zend_refcounted_h, arg_rc: u32) u32 {
    var p = arg_p;
    _ = &p;
    var rc = arg_rc;
    _ = &rc;
    while (true) {
        if (!false) break;
    }
    p.*.refcount +%= rc;
    return p.*.refcount;
}
pub inline fn zend_gc_delref_ex(arg_p: [*c]zend_refcounted_h, arg_rc: u32) u32 {
    var p = arg_p;
    _ = &p;
    var rc = arg_rc;
    _ = &rc;
    while (true) {
        if (!false) break;
    }
    p.*.refcount -%= rc;
    return p.*.refcount;
}
pub inline fn zval_refcount_p(arg_pz: [*c]const zval) u32 {
    var pz = arg_pz;
    _ = &pz;
    return zend_gc_refcount(&pz.*.value.counted.*.gc);
}
pub inline fn zval_set_refcount_p(arg_pz: [*c]zval, arg_rc: u32) u32 {
    var pz = arg_pz;
    _ = &pz;
    var rc = arg_rc;
    _ = &rc;
    __builtin_assume(@as(c_int, @bitCast(@as(c_uint, pz.*.u1.v.type_flags))) != @as(c_int, 0));
    return zend_gc_set_refcount(&pz.*.value.counted.*.gc, rc);
}
pub inline fn zval_addref_p(arg_pz: [*c]zval) u32 {
    var pz = arg_pz;
    _ = &pz;
    __builtin_assume(@as(c_int, @bitCast(@as(c_uint, pz.*.u1.v.type_flags))) != @as(c_int, 0));
    return zend_gc_addref(&pz.*.value.counted.*.gc);
}
pub inline fn zval_delref_p(arg_pz: [*c]zval) u32 {
    var pz = arg_pz;
    _ = &pz;
    __builtin_assume(@as(c_int, @bitCast(@as(c_uint, pz.*.u1.v.type_flags))) != @as(c_int, 0));
    return zend_gc_delref(&pz.*.value.counted.*.gc);
}
pub inline fn zend_may_modify_arg_in_place(arg_arg: [*c]const zval) bool {
    var arg = arg_arg;
    _ = &arg;
    return ((@as(c_int, @bitCast(@as(c_uint, arg.*.u1.v.type_flags))) != @as(c_int, 0)) and !((zval_gc_flags(arg.*.value.counted.*.gc.u.type_info) & @as(u32, @bitCast((@as(c_int, 1) << @intCast(6)) | (@as(c_int, 1) << @intCast(7))))) != 0)) and (zval_refcount_p(arg) == @as(u32, @bitCast(@as(c_int, 1))));
}
pub extern fn zend_map_ptr_reset() void;
pub extern fn zend_map_ptr_new() ?*anyopaque;
pub extern fn zend_map_ptr_new_static() ?*anyopaque;
pub extern fn zend_map_ptr_extend(last: usize) void;
pub extern fn zend_alloc_ce_cache(type_name: [*c]zend_string) void;
pub extern var zend_map_ptr_static_last: usize;
pub extern var zend_map_ptr_static_size: usize;
pub const struct__zend_leak_info = extern struct {
    addr: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    size: usize = @import("std").mem.zeroes(usize),
    filename: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    orig_filename: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    lineno: u32 = @import("std").mem.zeroes(u32),
    orig_lineno: u32 = @import("std").mem.zeroes(u32),
};
pub const zend_leak_info = struct__zend_leak_info;
pub extern fn zend_strndup(s: [*c]const u8, length: usize) [*c]u8;
pub extern fn _emalloc(size: usize) ?*anyopaque;
pub extern fn _safe_emalloc(nmemb: usize, size: usize, offset: usize) ?*anyopaque;
pub extern fn _safe_malloc(nmemb: usize, size: usize, offset: usize) ?*anyopaque;
pub extern fn _efree(ptr: ?*anyopaque) void;
pub extern fn _ecalloc(nmemb: usize, size: usize) ?*anyopaque;
pub extern fn _erealloc(ptr: ?*anyopaque, size: usize) ?*anyopaque;
pub extern fn _erealloc2(ptr: ?*anyopaque, size: usize, copy_size: usize) ?*anyopaque;
pub extern fn _safe_erealloc(ptr: ?*anyopaque, nmemb: usize, size: usize, offset: usize) ?*anyopaque;
pub extern fn _safe_realloc(ptr: ?*anyopaque, nmemb: usize, size: usize, offset: usize) ?*anyopaque;
pub extern fn _estrdup(s: [*c]const u8) [*c]u8;
pub extern fn _estrndup(s: [*c]const u8, length: usize) [*c]u8;
pub extern fn _zend_mem_block_size(ptr: ?*anyopaque) usize;
pub extern fn _emalloc_8() ?*anyopaque;
pub extern fn _emalloc_16() ?*anyopaque;
pub extern fn _emalloc_24() ?*anyopaque;
pub extern fn _emalloc_32() ?*anyopaque;
pub extern fn _emalloc_40() ?*anyopaque;
pub extern fn _emalloc_48() ?*anyopaque;
pub extern fn _emalloc_56() ?*anyopaque;
pub extern fn _emalloc_64() ?*anyopaque;
pub extern fn _emalloc_80() ?*anyopaque;
pub extern fn _emalloc_96() ?*anyopaque;
pub extern fn _emalloc_112() ?*anyopaque;
pub extern fn _emalloc_128() ?*anyopaque;
pub extern fn _emalloc_160() ?*anyopaque;
pub extern fn _emalloc_192() ?*anyopaque;
pub extern fn _emalloc_224() ?*anyopaque;
pub extern fn _emalloc_256() ?*anyopaque;
pub extern fn _emalloc_320() ?*anyopaque;
pub extern fn _emalloc_384() ?*anyopaque;
pub extern fn _emalloc_448() ?*anyopaque;
pub extern fn _emalloc_512() ?*anyopaque;
pub extern fn _emalloc_640() ?*anyopaque;
pub extern fn _emalloc_768() ?*anyopaque;
pub extern fn _emalloc_896() ?*anyopaque;
pub extern fn _emalloc_1024() ?*anyopaque;
pub extern fn _emalloc_1280() ?*anyopaque;
pub extern fn _emalloc_1536() ?*anyopaque;
pub extern fn _emalloc_1792() ?*anyopaque;
pub extern fn _emalloc_2048() ?*anyopaque;
pub extern fn _emalloc_2560() ?*anyopaque;
pub extern fn _emalloc_3072() ?*anyopaque;
pub extern fn _emalloc_large(size: usize) ?*anyopaque;
pub extern fn _emalloc_huge(size: usize) ?*anyopaque;
pub extern fn _efree_8(?*anyopaque) void;
pub extern fn _efree_16(?*anyopaque) void;
pub extern fn _efree_24(?*anyopaque) void;
pub extern fn _efree_32(?*anyopaque) void;
pub extern fn _efree_40(?*anyopaque) void;
pub extern fn _efree_48(?*anyopaque) void;
pub extern fn _efree_56(?*anyopaque) void;
pub extern fn _efree_64(?*anyopaque) void;
pub extern fn _efree_80(?*anyopaque) void;
pub extern fn _efree_96(?*anyopaque) void;
pub extern fn _efree_112(?*anyopaque) void;
pub extern fn _efree_128(?*anyopaque) void;
pub extern fn _efree_160(?*anyopaque) void;
pub extern fn _efree_192(?*anyopaque) void;
pub extern fn _efree_224(?*anyopaque) void;
pub extern fn _efree_256(?*anyopaque) void;
pub extern fn _efree_320(?*anyopaque) void;
pub extern fn _efree_384(?*anyopaque) void;
pub extern fn _efree_448(?*anyopaque) void;
pub extern fn _efree_512(?*anyopaque) void;
pub extern fn _efree_640(?*anyopaque) void;
pub extern fn _efree_768(?*anyopaque) void;
pub extern fn _efree_896(?*anyopaque) void;
pub extern fn _efree_1024(?*anyopaque) void;
pub extern fn _efree_1280(?*anyopaque) void;
pub extern fn _efree_1536(?*anyopaque) void;
pub extern fn _efree_1792(?*anyopaque) void;
pub extern fn _efree_2048(?*anyopaque) void;
pub extern fn _efree_2560(?*anyopaque) void;
pub extern fn _efree_3072(?*anyopaque) void;
pub extern fn _efree_large(?*anyopaque, size: usize) void;
pub extern fn _efree_huge(?*anyopaque, size: usize) void;
pub extern fn __zend_malloc(len: usize) ?*anyopaque;
pub extern fn __zend_calloc(nmemb: usize, len: usize) ?*anyopaque;
pub extern fn __zend_realloc(p: ?*anyopaque, len: usize) ?*anyopaque;
pub extern fn __zend_free(p: ?*anyopaque) void;
pub extern fn __zend_strdup(s: [*c]const u8) [*c]u8;
pub extern fn zend_set_memory_limit(memory_limit: usize) zend_result;
pub extern fn zend_alloc_in_memory_limit_error_reporting() bool;
pub extern fn start_memory_manager() void;
pub extern fn shutdown_memory_manager(silent: bool, full_shutdown: bool) void;
pub extern fn is_zend_mm() bool;
pub extern fn is_zend_ptr(ptr: ?*const anyopaque) bool;
pub extern fn zend_memory_usage(real_usage: bool) usize;
pub extern fn zend_memory_peak_usage(real_usage: bool) usize;
pub extern fn zend_memory_reset_peak_usage() void;
pub const struct__zend_mm_heap = opaque {};
pub const zend_mm_heap = struct__zend_mm_heap;
pub extern fn zend_mm_startup() ?*zend_mm_heap;
pub extern fn zend_mm_shutdown(heap: ?*zend_mm_heap, full_shutdown: bool, silent: bool) void;
pub extern fn _zend_mm_alloc(heap: ?*zend_mm_heap, size: usize) ?*anyopaque;
pub extern fn _zend_mm_free(heap: ?*zend_mm_heap, p: ?*anyopaque) void;
pub extern fn _zend_mm_realloc(heap: ?*zend_mm_heap, p: ?*anyopaque, size: usize) ?*anyopaque;
pub extern fn _zend_mm_realloc2(heap: ?*zend_mm_heap, p: ?*anyopaque, size: usize, copy_size: usize) ?*anyopaque;
pub extern fn _zend_mm_block_size(heap: ?*zend_mm_heap, p: ?*anyopaque) usize;
pub extern fn zend_mm_set_heap(new_heap: ?*zend_mm_heap) ?*zend_mm_heap;
pub extern fn zend_mm_get_heap() ?*zend_mm_heap;
pub extern fn zend_mm_gc(heap: ?*zend_mm_heap) usize;
pub extern fn zend_mm_is_custom_heap(new_heap: ?*zend_mm_heap) bool;
pub extern fn zend_mm_set_custom_handlers(heap: ?*zend_mm_heap, _malloc: ?*const fn (usize) callconv(.c) ?*anyopaque, _free: ?*const fn (?*anyopaque) callconv(.c) void, _realloc: ?*const fn (?*anyopaque, usize) callconv(.c) ?*anyopaque) void;
pub extern fn zend_mm_set_custom_handlers_ex(heap: ?*zend_mm_heap, _malloc: ?*const fn (usize) callconv(.c) ?*anyopaque, _free: ?*const fn (?*anyopaque) callconv(.c) void, _realloc: ?*const fn (?*anyopaque, usize) callconv(.c) ?*anyopaque, _gc: ?*const fn () callconv(.c) usize, _shutdown: ?*const fn (bool, bool) callconv(.c) void) void;
pub extern fn zend_mm_get_custom_handlers(heap: ?*zend_mm_heap, _malloc: [*c]?*const fn (usize) callconv(.c) ?*anyopaque, _free: [*c]?*const fn (?*anyopaque) callconv(.c) void, _realloc: [*c]?*const fn (?*anyopaque, usize) callconv(.c) ?*anyopaque) void;
pub extern fn zend_mm_get_custom_handlers_ex(heap: ?*zend_mm_heap, _malloc: [*c]?*const fn (usize) callconv(.c) ?*anyopaque, _free: [*c]?*const fn (?*anyopaque) callconv(.c) void, _realloc: [*c]?*const fn (?*anyopaque, usize) callconv(.c) ?*anyopaque, _gc: [*c]?*const fn () callconv(.c) usize, _shutdown: [*c]?*const fn (bool, bool) callconv(.c) void) void;
pub const zend_mm_storage = struct__zend_mm_storage;
pub const zend_mm_chunk_alloc_t = ?*const fn ([*c]zend_mm_storage, usize, usize) callconv(.c) ?*anyopaque;
pub const zend_mm_chunk_free_t = ?*const fn ([*c]zend_mm_storage, ?*anyopaque, usize) callconv(.c) void;
pub const zend_mm_chunk_truncate_t = ?*const fn ([*c]zend_mm_storage, ?*anyopaque, usize, usize) callconv(.c) bool;
pub const zend_mm_chunk_extend_t = ?*const fn ([*c]zend_mm_storage, ?*anyopaque, usize, usize) callconv(.c) bool;
pub const struct__zend_mm_handlers = extern struct {
    chunk_alloc: zend_mm_chunk_alloc_t = @import("std").mem.zeroes(zend_mm_chunk_alloc_t),
    chunk_free: zend_mm_chunk_free_t = @import("std").mem.zeroes(zend_mm_chunk_free_t),
    chunk_truncate: zend_mm_chunk_truncate_t = @import("std").mem.zeroes(zend_mm_chunk_truncate_t),
    chunk_extend: zend_mm_chunk_extend_t = @import("std").mem.zeroes(zend_mm_chunk_extend_t),
};
pub const zend_mm_handlers = struct__zend_mm_handlers;
pub const struct__zend_mm_storage = extern struct {
    handlers: zend_mm_handlers = @import("std").mem.zeroes(zend_mm_handlers),
    data: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub extern fn zend_mm_get_storage(heap: ?*zend_mm_heap) [*c]zend_mm_storage;
pub extern fn zend_mm_startup_ex(handlers: [*c]const zend_mm_handlers, data: ?*anyopaque, data_size: usize) ?*zend_mm_heap;
pub const struct__zend_llist_element = extern struct {
    next: [*c]struct__zend_llist_element = @import("std").mem.zeroes([*c]struct__zend_llist_element),
    prev: [*c]struct__zend_llist_element = @import("std").mem.zeroes([*c]struct__zend_llist_element),
    data: [1]u8 = @import("std").mem.zeroes([1]u8),
};
pub const zend_llist_element = struct__zend_llist_element;
pub const llist_dtor_func_t = ?*const fn (?*anyopaque) callconv(.c) void;
pub const llist_compare_func_t = ?*const fn ([*c][*c]const zend_llist_element, [*c][*c]const zend_llist_element) callconv(.c) c_int;
pub const llist_apply_with_args_func_t = ?*const fn (?*anyopaque, c_int, va_list) callconv(.c) void;
pub const llist_apply_with_arg_func_t = ?*const fn (?*anyopaque, ?*anyopaque) callconv(.c) void;
pub const llist_apply_func_t = ?*const fn (?*anyopaque) callconv(.c) void;
pub const struct__zend_llist = extern struct {
    head: [*c]zend_llist_element = @import("std").mem.zeroes([*c]zend_llist_element),
    tail: [*c]zend_llist_element = @import("std").mem.zeroes([*c]zend_llist_element),
    count: usize = @import("std").mem.zeroes(usize),
    size: usize = @import("std").mem.zeroes(usize),
    dtor: llist_dtor_func_t = @import("std").mem.zeroes(llist_dtor_func_t),
    persistent: u8 = @import("std").mem.zeroes(u8),
    traverse_ptr: [*c]zend_llist_element = @import("std").mem.zeroes([*c]zend_llist_element),
};
pub const zend_llist = struct__zend_llist;
pub const zend_llist_position = [*c]zend_llist_element;
pub extern fn zend_llist_init(l: [*c]zend_llist, size: usize, dtor: llist_dtor_func_t, persistent: u8) void;
pub extern fn zend_llist_add_element(l: [*c]zend_llist, element: ?*const anyopaque) void;
pub extern fn zend_llist_prepend_element(l: [*c]zend_llist, element: ?*const anyopaque) void;
pub extern fn zend_llist_del_element(l: [*c]zend_llist, element: ?*anyopaque, compare: ?*const fn (?*anyopaque, ?*anyopaque) callconv(.c) c_int) void;
pub extern fn zend_llist_destroy(l: [*c]zend_llist) void;
pub extern fn zend_llist_clean(l: [*c]zend_llist) void;
pub extern fn zend_llist_remove_tail(l: [*c]zend_llist) void;
pub extern fn zend_llist_copy(dst: [*c]zend_llist, src: [*c]zend_llist) void;
pub extern fn zend_llist_apply(l: [*c]zend_llist, func: llist_apply_func_t) void;
pub extern fn zend_llist_apply_with_del(l: [*c]zend_llist, func: ?*const fn (?*anyopaque) callconv(.c) c_int) void;
pub extern fn zend_llist_apply_with_argument(l: [*c]zend_llist, func: llist_apply_with_arg_func_t, arg: ?*anyopaque) void;
pub extern fn zend_llist_apply_with_arguments(l: [*c]zend_llist, func: llist_apply_with_args_func_t, num_args: c_int, ...) void;
pub extern fn zend_llist_count(l: [*c]zend_llist) usize;
pub extern fn zend_llist_sort(l: [*c]zend_llist, comp_func: llist_compare_func_t) void;
pub extern fn zend_llist_get_first_ex(l: [*c]zend_llist, pos: [*c]zend_llist_position) ?*anyopaque;
pub extern fn zend_llist_get_last_ex(l: [*c]zend_llist, pos: [*c]zend_llist_position) ?*anyopaque;
pub extern fn zend_llist_get_next_ex(l: [*c]zend_llist, pos: [*c]zend_llist_position) ?*anyopaque;
pub extern fn zend_llist_get_prev_ex(l: [*c]zend_llist, pos: [*c]zend_llist_position) ?*anyopaque;
pub inline fn zend_llist_get_first(arg_l: [*c]zend_llist) ?*anyopaque {
    var l = arg_l;
    _ = &l;
    return zend_llist_get_first_ex(l, null);
}
pub inline fn zend_llist_get_last(arg_l: [*c]zend_llist) ?*anyopaque {
    var l = arg_l;
    _ = &l;
    return zend_llist_get_last_ex(l, null);
}
pub inline fn zend_llist_get_next(arg_l: [*c]zend_llist) ?*anyopaque {
    var l = arg_l;
    _ = &l;
    return zend_llist_get_next_ex(l, null);
}
pub inline fn zend_llist_get_prev(arg_l: [*c]zend_llist) ?*anyopaque {
    var l = arg_l;
    _ = &l;
    return zend_llist_get_prev_ex(l, null);
}
pub const struct_accessx_descriptor = extern struct {
    ad_name_offset: c_uint = @import("std").mem.zeroes(c_uint),
    ad_flags: c_int = @import("std").mem.zeroes(c_int),
    ad_pad: [2]c_int = @import("std").mem.zeroes([2]c_int),
};
pub extern fn getattrlistbulk(c_int, ?*anyopaque, ?*anyopaque, usize, u64) c_int;
pub extern fn getattrlistat(c_int, [*c]const u8, ?*anyopaque, ?*anyopaque, usize, c_ulong) c_int;
pub extern fn setattrlistat(c_int, [*c]const u8, ?*anyopaque, ?*anyopaque, usize, u32) c_int;
pub extern fn freadlink(c_int, noalias [*c]u8, usize) isize;
pub extern fn faccessat(c_int, [*c]const u8, c_int, c_int) c_int;
pub extern fn fchownat(c_int, [*c]const u8, uid_t, gid_t, c_int) c_int;
pub extern fn linkat(c_int, [*c]const u8, c_int, [*c]const u8, c_int) c_int;
pub extern fn readlinkat(c_int, [*c]const u8, [*c]u8, usize) isize;
pub extern fn symlinkat([*c]const u8, c_int, [*c]const u8) c_int;
pub extern fn unlinkat(c_int, [*c]const u8, c_int) c_int;
pub extern fn _exit(c_int) noreturn;
pub extern fn access([*c]const u8, c_int) c_int;
pub extern fn alarm(c_uint) c_uint;
pub extern fn chdir([*c]const u8) c_int;
pub extern fn chown([*c]const u8, uid_t, gid_t) c_int;
pub extern fn close(c_int) c_int;
pub extern fn dup(c_int) c_int;
pub extern fn dup2(c_int, c_int) c_int;
pub extern fn execl(__path: [*c]const u8, __arg0: [*c]const u8, ...) c_int;
pub extern fn execle(__path: [*c]const u8, __arg0: [*c]const u8, ...) c_int;
pub extern fn execlp(__file: [*c]const u8, __arg0: [*c]const u8, ...) c_int;
pub extern fn execv(__path: [*c]const u8, __argv: [*c]const [*c]u8) c_int;
pub extern fn execve(__file: [*c]const u8, __argv: [*c]const [*c]u8, __envp: [*c]const [*c]u8) c_int;
pub extern fn execvp(__file: [*c]const u8, __argv: [*c]const [*c]u8) c_int;
pub extern fn fork() pid_t;
pub extern fn fpathconf(c_int, c_int) c_long;
pub extern fn getcwd([*c]u8, __size: usize) [*c]u8;
pub extern fn getegid() gid_t;
pub extern fn geteuid() uid_t;
pub extern fn getgid() gid_t;
pub extern fn getgroups(__gidsetsize: c_int, [*c]gid_t) c_int;
pub extern fn getlogin() [*c]u8;
pub extern fn getpgrp() pid_t;
pub extern fn getpid() pid_t;
pub extern fn getppid() pid_t;
pub extern fn getuid() uid_t;
pub extern fn isatty(c_int) c_int;
pub extern fn link([*c]const u8, [*c]const u8) c_int;
pub extern fn lseek(c_int, off_t, c_int) off_t;
pub extern fn pathconf([*c]const u8, c_int) c_long;
pub extern fn pause() c_int;
pub extern fn pipe([*c]c_int) c_int;
pub extern fn read(c_int, ?*anyopaque, __nbyte: usize) isize;
pub extern fn rmdir([*c]const u8) c_int;
pub extern fn setgid(gid_t) c_int;
pub extern fn setpgid(pid_t, pid_t) c_int;
pub extern fn setsid() pid_t;
pub extern fn setuid(uid_t) c_int;
pub extern fn sleep(c_uint) c_uint;
pub extern fn sysconf(c_int) c_long;
pub extern fn tcgetpgrp(c_int) pid_t;
pub extern fn tcsetpgrp(c_int, pid_t) c_int;
pub extern fn ttyname(c_int) [*c]u8;
pub extern fn ttyname_r(c_int, [*c]u8, __len: usize) c_int;
pub extern fn unlink([*c]const u8) c_int;
pub extern fn write(__fd: c_int, __buf: ?*const anyopaque, __nbyte: usize) isize;
pub extern fn confstr(c_int, [*c]u8, __len: usize) usize;
pub extern fn getopt(__argc: c_int, [*c]const [*c]u8, [*c]const u8) c_int;
pub extern var optarg: [*c]u8;
pub extern var optind: c_int;
pub extern var opterr: c_int;
pub extern var optopt: c_int;
pub extern fn brk(?*const anyopaque) ?*anyopaque;
pub extern fn chroot([*c]const u8) c_int;
pub extern fn crypt([*c]const u8, [*c]const u8) [*c]u8;
pub extern fn encrypt([*c]u8, c_int) void;
pub extern fn fchdir(c_int) c_int;
pub extern fn gethostid() c_long;
pub extern fn getpgid(pid_t) pid_t;
pub extern fn getsid(pid_t) pid_t;
pub extern fn getdtablesize() c_int;
pub extern fn getpagesize() c_int;
pub extern fn getpass([*c]const u8) [*c]u8;
pub extern fn getwd([*c]u8) [*c]u8;
pub extern fn lchown([*c]const u8, uid_t, gid_t) c_int;
pub extern fn lockf(c_int, c_int, off_t) c_int;
pub extern fn nice(c_int) c_int;
pub extern fn pread(__fd: c_int, __buf: ?*anyopaque, __nbyte: usize, __offset: off_t) isize;
pub extern fn pwrite(__fd: c_int, __buf: ?*const anyopaque, __nbyte: usize, __offset: off_t) isize;
pub extern fn sbrk(c_int) ?*anyopaque;
pub extern fn setpgrp() pid_t;
pub extern fn setregid(gid_t, gid_t) c_int;
pub extern fn setreuid(uid_t, uid_t) c_int;
pub extern fn sync() void;
pub extern fn truncate([*c]const u8, off_t) c_int;
pub extern fn ualarm(useconds_t, useconds_t) useconds_t;
pub extern fn usleep(useconds_t) c_int;
pub extern fn vfork() c_int;
pub extern fn fsync(c_int) c_int;
pub extern fn ftruncate(c_int, off_t) c_int;
pub extern fn getlogin_r([*c]u8, __namelen: usize) c_int;
pub extern fn fchown(c_int, uid_t, gid_t) c_int;
pub extern fn gethostname([*c]u8, __namelen: usize) c_int;
pub extern fn readlink(noalias [*c]const u8, noalias [*c]u8, __bufsize: usize) isize;
pub extern fn setegid(gid_t) c_int;
pub extern fn seteuid(uid_t) c_int;
pub extern fn symlink([*c]const u8, [*c]const u8) c_int;
pub const uuid_t = __darwin_uuid_t;
pub extern fn accessx_np([*c]const struct_accessx_descriptor, __sz: usize, [*c]c_int, uid_t) c_int;
pub extern fn acct([*c]const u8) c_int;
pub extern fn add_profil([*c]u8, __bufsiz: usize, c_ulong, c_uint) c_int;
pub extern fn endusershell() void;
pub extern fn execvP(__file: [*c]const u8, __searchpath: [*c]const u8, __argv: [*c]const [*c]u8) c_int;
pub extern fn fflagstostr(c_ulong) [*c]u8;
pub extern fn getdomainname([*c]u8, __namelen: c_int) c_int;
pub extern fn getgrouplist([*c]const u8, c_int, [*c]c_int, __ngroups: [*c]c_int) c_int;
pub extern fn gethostuuid([*c]u8, [*c]const struct_timespec) c_int;
pub extern fn getmode(?*const anyopaque, mode_t) mode_t;
pub extern fn getpeereid(c_int, [*c]uid_t, [*c]gid_t) c_int;
pub extern fn getsgroups_np([*c]c_int, [*c]u8) c_int;
pub extern fn getusershell() [*c]u8;
pub extern fn getwgroups_np([*c]c_int, [*c]u8) c_int;
pub extern fn initgroups([*c]const u8, c_int) c_int;
pub extern fn issetugid() c_int;
pub extern fn mkdtemp([*c]u8) [*c]u8;
pub extern fn mknod([*c]const u8, mode_t, dev_t) c_int;
pub extern fn mkpath_np(path: [*c]const u8, omode: mode_t) c_int;
pub extern fn mkpathat_np(dfd: c_int, path: [*c]const u8, omode: mode_t) c_int;
pub extern fn mkstemps([*c]u8, c_int) c_int;
pub extern fn mkostemp(path: [*c]u8, oflags: c_int) c_int;
pub extern fn mkostemps(path: [*c]u8, slen: c_int, oflags: c_int) c_int;
pub extern fn mkstemp_dprotected_np(path: [*c]u8, dpclass: c_int, dpflags: c_int) c_int;
pub extern fn mkdtempat_np(dfd: c_int, path: [*c]u8) [*c]u8;
pub extern fn mkstempsat_np(dfd: c_int, path: [*c]u8, slen: c_int) c_int;
pub extern fn mkostempsat_np(dfd: c_int, path: [*c]u8, slen: c_int, oflags: c_int) c_int;
pub extern fn nfssvc(c_int, ?*anyopaque) c_int;
pub extern fn profil([*c]u8, __bufsiz: usize, c_ulong, c_uint) c_int;
pub extern fn pthread_setugid_np(uid_t, gid_t) c_int;
pub extern fn pthread_getugid_np([*c]uid_t, [*c]gid_t) c_int;
pub extern fn reboot(c_int) c_int;
pub extern fn revoke([*c]const u8) c_int;
pub extern fn rcmd([*c][*c]u8, c_int, [*c]const u8, [*c]const u8, [*c]const u8, [*c]c_int) c_int;
pub extern fn rcmd_af([*c][*c]u8, c_int, [*c]const u8, [*c]const u8, [*c]const u8, [*c]c_int, c_int) c_int;
pub extern fn rresvport([*c]c_int) c_int;
pub extern fn rresvport_af([*c]c_int, c_int) c_int;
pub extern fn iruserok(c_ulong, c_int, [*c]const u8, [*c]const u8) c_int;
pub extern fn iruserok_sa(?*const anyopaque, c_int, c_int, [*c]const u8, [*c]const u8) c_int;
pub extern fn ruserok([*c]const u8, c_int, [*c]const u8, [*c]const u8) c_int;
pub extern fn setdomainname([*c]const u8, __namelen: c_int) c_int;
pub extern fn setgroups(c_int, [*c]const gid_t) c_int;
pub extern fn sethostid(c_long) void;
pub extern fn sethostname([*c]const u8, __namelen: c_int) c_int;
pub extern fn setlogin([*c]const u8) c_int;
pub extern fn setmode([*c]const u8) ?*anyopaque;
pub extern fn setrgid(gid_t) c_int;
pub extern fn setruid(uid_t) c_int;
pub extern fn setsgroups_np(c_int, [*c]const u8) c_int;
pub extern fn setusershell() void;
pub extern fn setwgroups_np(c_int, [*c]const u8) c_int;
pub extern fn strtofflags([*c][*c]u8, [*c]c_ulong, [*c]c_ulong) c_int;
pub extern fn swapon([*c]const u8) c_int;
pub extern fn ttyslot() c_int;
pub extern fn undelete([*c]const u8) c_int;
pub extern fn unwhiteout([*c]const u8) c_int;
pub extern fn syscall(c_int, ...) c_int;
pub extern fn fgetattrlist(c_int, ?*anyopaque, ?*anyopaque, __attrBufSize: usize, c_uint) c_int;
pub extern fn fsetattrlist(c_int, ?*anyopaque, ?*anyopaque, __attrBufSize: usize, c_uint) c_int;
pub extern fn getattrlist([*c]const u8, ?*anyopaque, ?*anyopaque, __attrBufSize: usize, c_uint) c_int;
pub extern fn setattrlist([*c]const u8, ?*anyopaque, ?*anyopaque, __attrBufSize: usize, c_uint) c_int;
pub extern fn exchangedata([*c]const u8, [*c]const u8, c_uint) c_int;
pub extern fn getdirentriesattr(c_int, ?*anyopaque, ?*anyopaque, __attrBufSize: usize, [*c]c_uint, [*c]c_uint, [*c]c_uint, c_uint) c_int;
pub const struct_fssearchblock = opaque {};
pub const struct_searchstate = opaque {};
pub extern fn searchfs([*c]const u8, ?*struct_fssearchblock, [*c]c_ulong, c_uint, c_uint, ?*struct_searchstate) c_int;
pub extern fn fsctl([*c]const u8, c_ulong, ?*anyopaque, c_uint) c_int;
pub extern fn ffsctl(c_int, c_ulong, ?*anyopaque, c_uint) c_int;
pub extern fn fsync_volume_np(c_int, c_int) c_int;
pub extern fn sync_volume_np([*c]const u8, c_int) c_int;
pub extern var optreset: c_int;
pub const struct_tm = extern struct {
    tm_sec: c_int = @import("std").mem.zeroes(c_int),
    tm_min: c_int = @import("std").mem.zeroes(c_int),
    tm_hour: c_int = @import("std").mem.zeroes(c_int),
    tm_mday: c_int = @import("std").mem.zeroes(c_int),
    tm_mon: c_int = @import("std").mem.zeroes(c_int),
    tm_year: c_int = @import("std").mem.zeroes(c_int),
    tm_wday: c_int = @import("std").mem.zeroes(c_int),
    tm_yday: c_int = @import("std").mem.zeroes(c_int),
    tm_isdst: c_int = @import("std").mem.zeroes(c_int),
    tm_gmtoff: c_long = @import("std").mem.zeroes(c_long),
    tm_zone: [*c]u8 = @import("std").mem.zeroes([*c]u8),
};
pub const tzname: [*c][*c]u8 = @extern([*c][*c]u8, .{
    .name = "tzname",
});
pub extern var getdate_err: c_int;
pub extern var timezone: c_long;
pub extern var daylight: c_int;
pub extern fn asctime([*c]const struct_tm) [*c]u8;
pub extern fn clock() clock_t;
pub extern fn ctime([*c]const time_t) [*c]u8;
pub extern fn difftime(time_t, time_t) f64;
pub extern fn getdate([*c]const u8) [*c]struct_tm;
pub extern fn gmtime([*c]const time_t) [*c]struct_tm;
pub extern fn localtime([*c]const time_t) [*c]struct_tm;
pub extern fn mktime([*c]struct_tm) time_t;
pub extern fn strftime(noalias [*c]u8, __maxsize: usize, noalias [*c]const u8, noalias [*c]const struct_tm) usize;
pub extern fn strptime(noalias [*c]const u8, noalias [*c]const u8, noalias [*c]struct_tm) [*c]u8;
pub extern fn time([*c]time_t) time_t;
pub extern fn tzset() void;
pub extern fn asctime_r(noalias [*c]const struct_tm, noalias [*c]u8) [*c]u8;
pub extern fn ctime_r([*c]const time_t, [*c]u8) [*c]u8;
pub extern fn gmtime_r(noalias [*c]const time_t, noalias [*c]struct_tm) [*c]struct_tm;
pub extern fn localtime_r(noalias [*c]const time_t, noalias [*c]struct_tm) [*c]struct_tm;
pub extern fn posix2time(time_t) time_t;
pub extern fn tzsetwall() void;
pub extern fn time2posix(time_t) time_t;
pub extern fn timelocal([*c]struct_tm) time_t;
pub extern fn timegm([*c]struct_tm) time_t;
pub extern fn nanosleep(__rqtp: [*c]const struct_timespec, __rmtp: [*c]struct_timespec) c_int;
pub const _CLOCK_REALTIME: c_int = 0;
pub const _CLOCK_MONOTONIC: c_int = 6;
pub const _CLOCK_MONOTONIC_RAW: c_int = 4;
pub const _CLOCK_MONOTONIC_RAW_APPROX: c_int = 5;
pub const _CLOCK_UPTIME_RAW: c_int = 8;
pub const _CLOCK_UPTIME_RAW_APPROX: c_int = 9;
pub const _CLOCK_PROCESS_CPUTIME_ID: c_int = 12;
pub const _CLOCK_THREAD_CPUTIME_ID: c_int = 16;
pub const clockid_t = c_uint;
pub extern fn clock_getres(__clock_id: clockid_t, __res: [*c]struct_timespec) c_int;
pub extern fn clock_gettime(__clock_id: clockid_t, __tp: [*c]struct_timespec) c_int;
pub extern fn clock_gettime_nsec_np(__clock_id: clockid_t) __uint64_t;
pub extern fn clock_settime(__clock_id: clockid_t, __tp: [*c]const struct_timespec) c_int;
pub extern fn timespec_get(ts: [*c]struct_timespec, base: c_int) c_int;
pub const boolean_t = c_int;
pub const natural_t = __darwin_natural_t;
pub const integer_t = c_int;
pub const vm_offset_t = usize;
pub const vm_size_t = usize;
pub const mach_vm_address_t = u64;
pub const mach_vm_offset_t = u64;
pub const mach_vm_size_t = u64;
pub const vm_map_offset_t = u64;
pub const vm_map_address_t = u64;
pub const vm_map_size_t = u64;
pub const vm32_offset_t = u32;
pub const vm32_address_t = u32;
pub const vm32_size_t = u32;
pub const mach_port_context_t = vm_offset_t;
pub const mach_port_name_t = natural_t;
pub const mach_port_name_array_t = [*c]mach_port_name_t;
pub const mach_port_t = __darwin_mach_port_t;
pub const mach_port_array_t = [*c]mach_port_t;
pub const mach_port_right_t = natural_t;
pub const mach_port_type_t = natural_t;
pub const mach_port_type_array_t = [*c]mach_port_type_t;
pub const mach_port_urefs_t = natural_t;
pub const mach_port_delta_t = integer_t;
pub const mach_port_seqno_t = natural_t;
pub const mach_port_mscount_t = natural_t;
pub const mach_port_msgcount_t = natural_t;
pub const mach_port_rights_t = natural_t;
pub const mach_port_srights_t = c_uint;
pub const struct_mach_port_status = extern struct {
    mps_pset: mach_port_rights_t = @import("std").mem.zeroes(mach_port_rights_t),
    mps_seqno: mach_port_seqno_t = @import("std").mem.zeroes(mach_port_seqno_t),
    mps_mscount: mach_port_mscount_t = @import("std").mem.zeroes(mach_port_mscount_t),
    mps_qlimit: mach_port_msgcount_t = @import("std").mem.zeroes(mach_port_msgcount_t),
    mps_msgcount: mach_port_msgcount_t = @import("std").mem.zeroes(mach_port_msgcount_t),
    mps_sorights: mach_port_rights_t = @import("std").mem.zeroes(mach_port_rights_t),
    mps_srights: boolean_t = @import("std").mem.zeroes(boolean_t),
    mps_pdrequest: boolean_t = @import("std").mem.zeroes(boolean_t),
    mps_nsrequest: boolean_t = @import("std").mem.zeroes(boolean_t),
    mps_flags: natural_t = @import("std").mem.zeroes(natural_t),
};
pub const mach_port_status_t = struct_mach_port_status;
pub const struct_mach_port_limits = extern struct {
    mpl_qlimit: mach_port_msgcount_t = @import("std").mem.zeroes(mach_port_msgcount_t),
};
pub const mach_port_limits_t = struct_mach_port_limits;
pub const struct_mach_port_info_ext = extern struct {
    mpie_status: mach_port_status_t = @import("std").mem.zeroes(mach_port_status_t),
    mpie_boost_cnt: mach_port_msgcount_t = @import("std").mem.zeroes(mach_port_msgcount_t),
    reserved: [6]u32 = @import("std").mem.zeroes([6]u32),
};
pub const mach_port_info_ext_t = struct_mach_port_info_ext;
pub const struct_mach_port_guard_info = extern struct {
    mpgi_guard: u64 = @import("std").mem.zeroes(u64),
};
pub const mach_port_guard_info_t = struct_mach_port_guard_info;
pub const mach_port_info_t = [*c]integer_t;
pub const mach_port_flavor_t = c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/port.h:326:26: warning: struct demoted to opaque type - has bitfield
pub const struct_mach_port_qos = opaque {};
pub const mach_port_qos_t = struct_mach_port_qos;
pub const struct_mach_service_port_info = extern struct {
    mspi_string_name: [255]u8 = @import("std").mem.zeroes([255]u8),
    mspi_domain_type: u8 = @import("std").mem.zeroes(u8),
};
pub const mach_service_port_info_data_t = struct_mach_service_port_info;
pub const mach_service_port_info_t = [*c]struct_mach_service_port_info;
const union_unnamed_22 = extern union {
    reserved: [2]u64,
    work_interval_port: mach_port_name_t,
    service_port_info: mach_service_port_info_t,
    service_port_name: mach_port_name_t,
};
pub const struct_mach_port_options = extern struct {
    flags: u32 = @import("std").mem.zeroes(u32),
    mpl: mach_port_limits_t = @import("std").mem.zeroes(mach_port_limits_t),
    unnamed_0: union_unnamed_22 = @import("std").mem.zeroes(union_unnamed_22),
};
pub const mach_port_options_t = struct_mach_port_options;
pub const mach_port_options_ptr_t = [*c]mach_port_options_t;
pub const kGUARD_EXC_DESTROY: c_int = 1;
pub const kGUARD_EXC_MOD_REFS: c_int = 2;
pub const kGUARD_EXC_INVALID_OPTIONS: c_int = 3;
pub const kGUARD_EXC_SET_CONTEXT: c_int = 4;
pub const kGUARD_EXC_THREAD_SET_STATE: c_int = 5;
pub const kGUARD_EXC_EXCEPTION_BEHAVIOR_ENFORCE: c_int = 6;
pub const kGUARD_EXC_SERVICE_PORT_VIOLATION_FATAL: c_int = 7;
pub const kGUARD_EXC_UNGUARDED: c_int = 8;
pub const kGUARD_EXC_INCORRECT_GUARD: c_int = 16;
pub const kGUARD_EXC_IMMOVABLE: c_int = 32;
pub const kGUARD_EXC_STRICT_REPLY: c_int = 64;
pub const kGUARD_EXC_MSG_FILTERED: c_int = 128;
pub const kGUARD_EXC_INVALID_RIGHT: c_int = 256;
pub const kGUARD_EXC_INVALID_NAME: c_int = 512;
pub const kGUARD_EXC_INVALID_VALUE: c_int = 1024;
pub const kGUARD_EXC_INVALID_ARGUMENT: c_int = 2048;
pub const kGUARD_EXC_RIGHT_EXISTS: c_int = 4096;
pub const kGUARD_EXC_KERN_NO_SPACE: c_int = 8192;
pub const kGUARD_EXC_KERN_FAILURE: c_int = 16384;
pub const kGUARD_EXC_KERN_RESOURCE: c_int = 32768;
pub const kGUARD_EXC_SEND_INVALID_REPLY: c_int = 65536;
pub const kGUARD_EXC_SEND_INVALID_VOUCHER: c_int = 131072;
pub const kGUARD_EXC_SEND_INVALID_RIGHT: c_int = 262144;
pub const kGUARD_EXC_RCV_INVALID_NAME: c_int = 524288;
pub const kGUARD_EXC_RCV_GUARDED_DESC: c_int = 1048576;
pub const kGUARD_EXC_SERVICE_PORT_VIOLATION_NON_FATAL: c_int = 1048577;
pub const kGUARD_EXC_PROVISIONAL_REPLY_PORT: c_int = 1048578;
pub const kGUARD_EXC_MOD_REFS_NON_FATAL: c_int = 2097152;
pub const kGUARD_EXC_IMMOVABLE_NON_FATAL: c_int = 4194304;
pub const kGUARD_EXC_REQUIRE_REPLY_PORT_SEMANTICS: c_int = 8388608;
pub const enum_mach_port_guard_exception_codes = c_uint;
pub const kern_return_t = c_int;
pub const mach_msg_timeout_t = natural_t;
pub const mach_msg_bits_t = c_uint;
pub const mach_msg_size_t = natural_t;
pub const mach_msg_id_t = integer_t;
pub const mach_msg_priority_t = c_uint;
pub const mach_msg_type_name_t = c_uint;
pub const mach_msg_copy_options_t = c_uint;
pub const mach_msg_guard_flags_t = c_uint;
pub const mach_msg_descriptor_type_t = c_uint;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:296:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_type_descriptor_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:303:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_port_descriptor_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:312:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_ool_descriptor32_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:320:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_ool_descriptor64_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:332:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_ool_descriptor_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:344:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_ool_ports_descriptor32_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:352:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_ool_ports_descriptor64_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:364:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_ool_ports_descriptor_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:376:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_guarded_port_descriptor32_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:383:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_guarded_port_descriptor64_t = opaque {};
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:394:32: warning: struct demoted to opaque type - has bitfield
pub const mach_msg_guarded_port_descriptor_t = opaque {};
pub const mach_msg_descriptor_t = extern union {
    port: mach_msg_port_descriptor_t,
    out_of_line: mach_msg_ool_descriptor_t,
    ool_ports: mach_msg_ool_ports_descriptor_t,
    type: mach_msg_type_descriptor_t,
    guarded_port: mach_msg_guarded_port_descriptor_t,
};
pub const mach_msg_body_t = extern struct {
    msgh_descriptor_count: mach_msg_size_t = @import("std").mem.zeroes(mach_msg_size_t),
};
pub const mach_msg_header_t = extern struct {
    msgh_bits: mach_msg_bits_t = @import("std").mem.zeroes(mach_msg_bits_t),
    msgh_size: mach_msg_size_t = @import("std").mem.zeroes(mach_msg_size_t),
    msgh_remote_port: mach_port_t = @import("std").mem.zeroes(mach_port_t),
    msgh_local_port: mach_port_t = @import("std").mem.zeroes(mach_port_t),
    msgh_voucher_port: mach_port_name_t = @import("std").mem.zeroes(mach_port_name_t),
    msgh_id: mach_msg_id_t = @import("std").mem.zeroes(mach_msg_id_t),
};
pub const mach_msg_base_t = extern struct {
    header: mach_msg_header_t = @import("std").mem.zeroes(mach_msg_header_t),
    body: mach_msg_body_t = @import("std").mem.zeroes(mach_msg_body_t),
};
pub const mach_msg_trailer_type_t = c_uint;
pub const mach_msg_trailer_size_t = c_uint;
pub const mach_msg_trailer_info_t = [*c]u8;
pub const mach_msg_trailer_t = extern struct {
    msgh_trailer_type: mach_msg_trailer_type_t = @import("std").mem.zeroes(mach_msg_trailer_type_t),
    msgh_trailer_size: mach_msg_trailer_size_t = @import("std").mem.zeroes(mach_msg_trailer_size_t),
};
pub const mach_msg_seqno_trailer_t = extern struct {
    msgh_trailer_type: mach_msg_trailer_type_t = @import("std").mem.zeroes(mach_msg_trailer_type_t),
    msgh_trailer_size: mach_msg_trailer_size_t = @import("std").mem.zeroes(mach_msg_trailer_size_t),
    msgh_seqno: mach_port_seqno_t = @import("std").mem.zeroes(mach_port_seqno_t),
};
pub const security_token_t = extern struct {
    val: [2]c_uint = @import("std").mem.zeroes([2]c_uint),
};
pub const mach_msg_security_trailer_t = extern struct {
    msgh_trailer_type: mach_msg_trailer_type_t = @import("std").mem.zeroes(mach_msg_trailer_type_t),
    msgh_trailer_size: mach_msg_trailer_size_t = @import("std").mem.zeroes(mach_msg_trailer_size_t),
    msgh_seqno: mach_port_seqno_t = @import("std").mem.zeroes(mach_port_seqno_t),
    msgh_sender: security_token_t = @import("std").mem.zeroes(security_token_t),
};
pub const audit_token_t = extern struct {
    val: [8]c_uint = @import("std").mem.zeroes([8]c_uint),
};
pub const mach_msg_audit_trailer_t = extern struct {
    msgh_trailer_type: mach_msg_trailer_type_t = @import("std").mem.zeroes(mach_msg_trailer_type_t),
    msgh_trailer_size: mach_msg_trailer_size_t = @import("std").mem.zeroes(mach_msg_trailer_size_t),
    msgh_seqno: mach_port_seqno_t = @import("std").mem.zeroes(mach_port_seqno_t),
    msgh_sender: security_token_t = @import("std").mem.zeroes(security_token_t),
    msgh_audit: audit_token_t = @import("std").mem.zeroes(audit_token_t),
};
pub const mach_msg_context_trailer_t = extern struct {
    msgh_trailer_type: mach_msg_trailer_type_t = @import("std").mem.zeroes(mach_msg_trailer_type_t),
    msgh_trailer_size: mach_msg_trailer_size_t = @import("std").mem.zeroes(mach_msg_trailer_size_t),
    msgh_seqno: mach_port_seqno_t = @import("std").mem.zeroes(mach_port_seqno_t),
    msgh_sender: security_token_t = @import("std").mem.zeroes(security_token_t),
    msgh_audit: audit_token_t = @import("std").mem.zeroes(audit_token_t),
    msgh_context: mach_port_context_t = @import("std").mem.zeroes(mach_port_context_t),
};
pub const msg_labels_t = extern struct {
    sender: mach_port_name_t = @import("std").mem.zeroes(mach_port_name_t),
};
pub const mach_msg_filter_id = c_int;
pub const mach_msg_mac_trailer_t = extern struct {
    msgh_trailer_type: mach_msg_trailer_type_t = @import("std").mem.zeroes(mach_msg_trailer_type_t),
    msgh_trailer_size: mach_msg_trailer_size_t = @import("std").mem.zeroes(mach_msg_trailer_size_t),
    msgh_seqno: mach_port_seqno_t = @import("std").mem.zeroes(mach_port_seqno_t),
    msgh_sender: security_token_t = @import("std").mem.zeroes(security_token_t),
    msgh_audit: audit_token_t = @import("std").mem.zeroes(audit_token_t),
    msgh_context: mach_port_context_t = @import("std").mem.zeroes(mach_port_context_t),
    msgh_ad: mach_msg_filter_id = @import("std").mem.zeroes(mach_msg_filter_id),
    msgh_labels: msg_labels_t = @import("std").mem.zeroes(msg_labels_t),
};
pub const mach_msg_max_trailer_t = mach_msg_mac_trailer_t;
pub const mach_msg_format_0_trailer_t = mach_msg_security_trailer_t;
pub extern const KERNEL_SECURITY_TOKEN: security_token_t;
pub extern const KERNEL_AUDIT_TOKEN: audit_token_t;
pub const mach_msg_options_t = integer_t;
pub const mach_msg_empty_send_t = extern struct {
    header: mach_msg_header_t = @import("std").mem.zeroes(mach_msg_header_t),
};
pub const mach_msg_empty_rcv_t = extern struct {
    header: mach_msg_header_t = @import("std").mem.zeroes(mach_msg_header_t),
    trailer: mach_msg_trailer_t = @import("std").mem.zeroes(mach_msg_trailer_t),
};
pub const mach_msg_empty_t = extern union {
    send: mach_msg_empty_send_t,
    rcv: mach_msg_empty_rcv_t,
};
pub const mach_msg_type_size_t = natural_t;
pub const mach_msg_type_number_t = natural_t;
pub const mach_msg_option_t = integer_t;
pub const mach_msg_return_t = kern_return_t;
pub extern fn mach_msg_overwrite(msg: [*c]mach_msg_header_t, option: mach_msg_option_t, send_size: mach_msg_size_t, rcv_size: mach_msg_size_t, rcv_name: mach_port_name_t, timeout: mach_msg_timeout_t, notify: mach_port_name_t, rcv_msg: [*c]mach_msg_header_t, rcv_limit: mach_msg_size_t) mach_msg_return_t;
pub extern fn mach_msg(msg: [*c]mach_msg_header_t, option: mach_msg_option_t, send_size: mach_msg_size_t, rcv_size: mach_msg_size_t, rcv_name: mach_port_name_t, timeout: mach_msg_timeout_t, notify: mach_port_name_t) mach_msg_return_t;
pub extern fn mach_voucher_deallocate(voucher: mach_port_name_t) kern_return_t;
pub const struct_vm_statistics = extern struct {
    free_count: natural_t = @import("std").mem.zeroes(natural_t),
    active_count: natural_t = @import("std").mem.zeroes(natural_t),
    inactive_count: natural_t = @import("std").mem.zeroes(natural_t),
    wire_count: natural_t = @import("std").mem.zeroes(natural_t),
    zero_fill_count: natural_t = @import("std").mem.zeroes(natural_t),
    reactivations: natural_t = @import("std").mem.zeroes(natural_t),
    pageins: natural_t = @import("std").mem.zeroes(natural_t),
    pageouts: natural_t = @import("std").mem.zeroes(natural_t),
    faults: natural_t = @import("std").mem.zeroes(natural_t),
    cow_faults: natural_t = @import("std").mem.zeroes(natural_t),
    lookups: natural_t = @import("std").mem.zeroes(natural_t),
    hits: natural_t = @import("std").mem.zeroes(natural_t),
    purgeable_count: natural_t = @import("std").mem.zeroes(natural_t),
    purges: natural_t = @import("std").mem.zeroes(natural_t),
    speculative_count: natural_t = @import("std").mem.zeroes(natural_t),
};
pub const vm_statistics_t = [*c]struct_vm_statistics;
pub const vm_statistics_data_t = struct_vm_statistics;
pub const struct_vm_statistics64 = extern struct {
    free_count: natural_t = @import("std").mem.zeroes(natural_t),
    active_count: natural_t = @import("std").mem.zeroes(natural_t),
    inactive_count: natural_t = @import("std").mem.zeroes(natural_t),
    wire_count: natural_t = @import("std").mem.zeroes(natural_t),
    zero_fill_count: u64 = @import("std").mem.zeroes(u64),
    reactivations: u64 = @import("std").mem.zeroes(u64),
    pageins: u64 = @import("std").mem.zeroes(u64),
    pageouts: u64 = @import("std").mem.zeroes(u64),
    faults: u64 = @import("std").mem.zeroes(u64),
    cow_faults: u64 = @import("std").mem.zeroes(u64),
    lookups: u64 = @import("std").mem.zeroes(u64),
    hits: u64 = @import("std").mem.zeroes(u64),
    purges: u64 = @import("std").mem.zeroes(u64),
    purgeable_count: natural_t = @import("std").mem.zeroes(natural_t),
    speculative_count: natural_t = @import("std").mem.zeroes(natural_t),
    decompressions: u64 = @import("std").mem.zeroes(u64),
    compressions: u64 = @import("std").mem.zeroes(u64),
    swapins: u64 = @import("std").mem.zeroes(u64),
    swapouts: u64 = @import("std").mem.zeroes(u64),
    compressor_page_count: natural_t = @import("std").mem.zeroes(natural_t),
    throttled_count: natural_t = @import("std").mem.zeroes(natural_t),
    external_page_count: natural_t = @import("std").mem.zeroes(natural_t),
    internal_page_count: natural_t = @import("std").mem.zeroes(natural_t),
    total_uncompressed_pages_in_compressor: u64 = @import("std").mem.zeroes(u64),
};
pub const vm_statistics64_t = [*c]struct_vm_statistics64;
pub const vm_statistics64_data_t = struct_vm_statistics64;
pub extern fn vm_stats(info: ?*anyopaque, count: [*c]c_uint) kern_return_t;
pub const struct_vm_extmod_statistics = extern struct {
    task_for_pid_count: i64 = @import("std").mem.zeroes(i64),
    task_for_pid_caller_count: i64 = @import("std").mem.zeroes(i64),
    thread_creation_count: i64 = @import("std").mem.zeroes(i64),
    thread_creation_caller_count: i64 = @import("std").mem.zeroes(i64),
    thread_set_state_count: i64 = @import("std").mem.zeroes(i64),
    thread_set_state_caller_count: i64 = @import("std").mem.zeroes(i64),
};
pub const vm_extmod_statistics_t = [*c]struct_vm_extmod_statistics;
pub const vm_extmod_statistics_data_t = struct_vm_extmod_statistics;
pub const struct_vm_purgeable_stat = extern struct {
    count: u64 = @import("std").mem.zeroes(u64),
    size: u64 = @import("std").mem.zeroes(u64),
};
pub const vm_purgeable_stat_t = struct_vm_purgeable_stat;
pub const struct_vm_purgeable_info = extern struct {
    fifo_data: [8]vm_purgeable_stat_t = @import("std").mem.zeroes([8]vm_purgeable_stat_t),
    obsolete_data: vm_purgeable_stat_t = @import("std").mem.zeroes(vm_purgeable_stat_t),
    lifo_data: [8]vm_purgeable_stat_t = @import("std").mem.zeroes([8]vm_purgeable_stat_t),
};
pub const vm_purgeable_info_t = [*c]struct_vm_purgeable_info;
pub const kGUARD_EXC_DEALLOC_GAP: u32 = 1;
pub const kGUARD_EXC_RECLAIM_COPYIO_FAILURE: u32 = 2;
pub const kGUARD_EXC_SEC_LOOKUP_DENIED: u32 = 3;
pub const kGUARD_EXC_RECLAIM_INDEX_FAILURE: u32 = 4;
pub const kGUARD_EXC_SEC_RANGE_DENIED: u32 = 6;
pub const kGUARD_EXC_SEC_ACCESS_FAULT: u32 = 7;
pub const kGUARD_EXC_RECLAIM_DEALLOCATE_FAILURE: u32 = 8;
pub const kGUARD_EXC_SEC_COPY_DENIED: u32 = 16;
pub const kGUARD_EXC_SEC_SHARING_DENIED: u32 = 32;
pub const kGUARD_EXC_SEC_ASYNC_ACCESS_FAULT: u32 = 64;
pub const virtual_memory_guard_exception_code_t = u32;
pub const cpu_type_t = integer_t;
pub const cpu_subtype_t = integer_t;
pub const cpu_threadtype_t = integer_t;
pub const struct_time_value = extern struct {
    seconds: integer_t = @import("std").mem.zeroes(integer_t),
    microseconds: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const time_value_t = struct_time_value;
pub const host_info_t = [*c]integer_t;
pub const host_info64_t = [*c]integer_t;
pub const host_info_data_t = [1024]integer_t;
pub const kernel_version_t = [512]u8;
pub const kernel_boot_info_t = [4096]u8;
pub const host_flavor_t = integer_t;
pub const struct_host_can_has_debugger_info = extern struct {
    can_has_debugger: boolean_t = @import("std").mem.zeroes(boolean_t),
};
pub const host_can_has_debugger_info_data_t = struct_host_can_has_debugger_info;
pub const host_can_has_debugger_info_t = [*c]struct_host_can_has_debugger_info;
pub const struct_host_basic_info = extern struct {
    max_cpus: integer_t = @import("std").mem.zeroes(integer_t),
    avail_cpus: integer_t = @import("std").mem.zeroes(integer_t),
    memory_size: natural_t = @import("std").mem.zeroes(natural_t),
    cpu_type: cpu_type_t = @import("std").mem.zeroes(cpu_type_t),
    cpu_subtype: cpu_subtype_t = @import("std").mem.zeroes(cpu_subtype_t),
    cpu_threadtype: cpu_threadtype_t = @import("std").mem.zeroes(cpu_threadtype_t),
    physical_cpu: integer_t = @import("std").mem.zeroes(integer_t),
    physical_cpu_max: integer_t = @import("std").mem.zeroes(integer_t),
    logical_cpu: integer_t = @import("std").mem.zeroes(integer_t),
    logical_cpu_max: integer_t = @import("std").mem.zeroes(integer_t),
    max_mem: u64 = @import("std").mem.zeroes(u64),
};
pub const host_basic_info_data_t = struct_host_basic_info;
pub const host_basic_info_t = [*c]struct_host_basic_info;
pub const struct_host_sched_info = extern struct {
    min_timeout: integer_t = @import("std").mem.zeroes(integer_t),
    min_quantum: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const host_sched_info_data_t = struct_host_sched_info;
pub const host_sched_info_t = [*c]struct_host_sched_info;
pub const struct_kernel_resource_sizes = extern struct {
    task: natural_t = @import("std").mem.zeroes(natural_t),
    thread: natural_t = @import("std").mem.zeroes(natural_t),
    port: natural_t = @import("std").mem.zeroes(natural_t),
    memory_region: natural_t = @import("std").mem.zeroes(natural_t),
    memory_object: natural_t = @import("std").mem.zeroes(natural_t),
};
pub const kernel_resource_sizes_data_t = struct_kernel_resource_sizes;
pub const kernel_resource_sizes_t = [*c]struct_kernel_resource_sizes;
pub const struct_host_priority_info = extern struct {
    kernel_priority: integer_t = @import("std").mem.zeroes(integer_t),
    system_priority: integer_t = @import("std").mem.zeroes(integer_t),
    server_priority: integer_t = @import("std").mem.zeroes(integer_t),
    user_priority: integer_t = @import("std").mem.zeroes(integer_t),
    depress_priority: integer_t = @import("std").mem.zeroes(integer_t),
    idle_priority: integer_t = @import("std").mem.zeroes(integer_t),
    minimum_priority: integer_t = @import("std").mem.zeroes(integer_t),
    maximum_priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const host_priority_info_data_t = struct_host_priority_info;
pub const host_priority_info_t = [*c]struct_host_priority_info;
pub const struct_host_load_info = extern struct {
    avenrun: [3]integer_t = @import("std").mem.zeroes([3]integer_t),
    mach_factor: [3]integer_t = @import("std").mem.zeroes([3]integer_t),
};
pub const host_load_info_data_t = struct_host_load_info;
pub const host_load_info_t = [*c]struct_host_load_info;
pub const host_purgable_info_data_t = struct_vm_purgeable_info;
pub const host_purgable_info_t = [*c]struct_vm_purgeable_info;
pub const struct_host_cpu_load_info = extern struct {
    cpu_ticks: [4]natural_t = @import("std").mem.zeroes([4]natural_t),
};
pub const host_cpu_load_info_data_t = struct_host_cpu_load_info;
pub const host_cpu_load_info_t = [*c]struct_host_cpu_load_info;
pub const struct_host_preferred_user_arch = extern struct {
    cpu_type: cpu_type_t = @import("std").mem.zeroes(cpu_type_t),
    cpu_subtype: cpu_subtype_t = @import("std").mem.zeroes(cpu_subtype_t),
};
pub const host_preferred_user_arch_data_t = struct_host_preferred_user_arch;
pub const host_preferred_user_arch_t = [*c]struct_host_preferred_user_arch;
pub const vm_prot_t = c_int;
pub const vm_sync_t = c_uint;
pub const pointer_t = vm_offset_t;
pub const vm_address_t = vm_offset_t;
pub const addr64_t = u64;
pub const reg64_t = u32;
pub const ppnum_t = u32;
pub const vm_map_t = mach_port_t;
pub const vm_map_read_t = mach_port_t;
pub const vm_map_inspect_t = mach_port_t;
pub const upl_t = mach_port_t;
pub const vm_named_entry_t = mach_port_t;
pub const mach_vm_offset_list_t = [*c]mach_vm_offset_t;
pub const vm_object_offset_t = u64;
pub const vm_object_size_t = u64;
pub const struct_mach_vm_range = extern struct {
    min_address: mach_vm_offset_t = @import("std").mem.zeroes(mach_vm_offset_t),
    max_address: mach_vm_offset_t = @import("std").mem.zeroes(mach_vm_offset_t),
};
pub const mach_vm_range_t = [*c]struct_mach_vm_range;
pub const MACH_VM_RANGE_FLAVOR_INVALID: u32 = 0;
pub const MACH_VM_RANGE_FLAVOR_V1: u32 = 1;
pub const mach_vm_range_flavor_t = u32;
pub const MACH_VM_RANGE_NONE: u64 = 0;
pub const mach_vm_range_flags_t = u64;
pub const MACH_VM_RANGE_DEFAULT: u16 = 0;
pub const MACH_VM_RANGE_DATA: u16 = 1;
pub const MACH_VM_RANGE_FIXED: u16 = 2;
pub const mach_vm_range_tag_t = u16;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/vm_types.h:167:26: warning: struct demoted to opaque type - has bitfield
pub const mach_vm_range_recipe_v1_t = opaque {};
pub const mach_vm_range_recipe_t = mach_vm_range_recipe_v1_t;
pub const mach_vm_range_recipes_raw_t = [*c]u8;
pub const memory_object_offset_t = c_ulonglong;
pub const memory_object_size_t = c_ulonglong;
pub const memory_object_cluster_size_t = natural_t;
pub const memory_object_fault_info_t = [*c]natural_t;
pub const vm_object_id_t = c_ulonglong;
pub const memory_object_t = mach_port_t;
pub const memory_object_control_t = mach_port_t;
pub const memory_object_array_t = [*c]memory_object_t;
pub const memory_object_name_t = mach_port_t;
pub const memory_object_default_t = mach_port_t;
pub const memory_object_copy_strategy_t = c_int;
pub const memory_object_return_t = c_int;
pub const memory_object_info_t = [*c]c_int;
pub const memory_object_flavor_t = c_int;
pub const memory_object_info_data_t = [1024]c_int;
pub const struct_memory_object_perf_info = extern struct {
    cluster_size: memory_object_cluster_size_t = @import("std").mem.zeroes(memory_object_cluster_size_t),
    may_cache: boolean_t = @import("std").mem.zeroes(boolean_t),
};
pub const struct_memory_object_attr_info = extern struct {
    copy_strategy: memory_object_copy_strategy_t = @import("std").mem.zeroes(memory_object_copy_strategy_t),
    cluster_size: memory_object_cluster_size_t = @import("std").mem.zeroes(memory_object_cluster_size_t),
    may_cache_object: boolean_t = @import("std").mem.zeroes(boolean_t),
    temporary: boolean_t = @import("std").mem.zeroes(boolean_t),
};
pub const struct_memory_object_behave_info = extern struct {
    copy_strategy: memory_object_copy_strategy_t = @import("std").mem.zeroes(memory_object_copy_strategy_t),
    temporary: boolean_t = @import("std").mem.zeroes(boolean_t),
    invalidate: boolean_t = @import("std").mem.zeroes(boolean_t),
    silent_overwrite: boolean_t = @import("std").mem.zeroes(boolean_t),
    advisory_pageout: boolean_t = @import("std").mem.zeroes(boolean_t),
};
pub const memory_object_behave_info_t = [*c]struct_memory_object_behave_info;
pub const memory_object_behave_info_data_t = struct_memory_object_behave_info;
pub const memory_object_perf_info_t = [*c]struct_memory_object_perf_info;
pub const memory_object_perf_info_data_t = struct_memory_object_perf_info;
pub const memory_object_attr_info_t = [*c]struct_memory_object_attr_info;
pub const memory_object_attr_info_data_t = struct_memory_object_attr_info;
pub const struct_arm_state_hdr = extern struct {
    flavor: u32 = @import("std").mem.zeroes(u32),
    count: u32 = @import("std").mem.zeroes(u32),
};
pub const arm_state_hdr_t = struct_arm_state_hdr;
pub const arm_thread_state_t = struct___darwin_arm_thread_state;
pub const arm_thread_state32_t = struct___darwin_arm_thread_state;
pub const arm_thread_state64_t = struct___darwin_arm_thread_state64;
const union_unnamed_23 = extern union {
    ts_32: arm_thread_state32_t,
    ts_64: arm_thread_state64_t,
};
pub const struct_arm_unified_thread_state = extern struct {
    ash: arm_state_hdr_t = @import("std").mem.zeroes(arm_state_hdr_t),
    uts: union_unnamed_23 = @import("std").mem.zeroes(union_unnamed_23),
};
pub const arm_unified_thread_state_t = struct_arm_unified_thread_state;
pub const arm_vfp_state_t = struct___darwin_arm_vfp_state;
pub const arm_neon_state_t = struct___darwin_arm_neon_state;
pub const arm_neon_state32_t = struct___darwin_arm_neon_state;
pub const arm_neon_state64_t = struct___darwin_arm_neon_state64;
pub const arm_exception_state_t = struct___darwin_arm_exception_state;
pub const arm_exception_state32_t = struct___darwin_arm_exception_state;
pub const arm_exception_state64_t = struct___darwin_arm_exception_state64;
pub const arm_exception_state64_v2_t = struct___darwin_arm_exception_state64_v2;
pub const arm_debug_state32_t = struct___darwin_arm_debug_state32;
pub const arm_debug_state64_t = struct___darwin_arm_debug_state64;
pub const arm_pagein_state_t = struct___arm_pagein_state;
pub const arm_sme_state_t = struct___darwin_arm_sme_state;
pub const arm_sve_z_state_t = struct___darwin_arm_sve_z_state;
pub const arm_sve_p_state_t = struct___darwin_arm_sve_p_state;
pub const arm_sme_za_state_t = struct___darwin_arm_sme_za_state;
pub const arm_sme2_state_t = struct___darwin_arm_sme2_state;
pub const arm_debug_state_t = struct___arm_legacy_debug_state;
pub const thread_state_t = [*c]natural_t;
pub const thread_state_data_t = [1296]natural_t;
pub const thread_state_flavor_t = c_int;
pub const thread_state_flavor_array_t = [*c]thread_state_flavor_t;
pub const struct_ipc_info_space = extern struct {
    iis_genno_mask: natural_t = @import("std").mem.zeroes(natural_t),
    iis_table_size: natural_t = @import("std").mem.zeroes(natural_t),
    iis_table_next: natural_t = @import("std").mem.zeroes(natural_t),
    iis_tree_size: natural_t = @import("std").mem.zeroes(natural_t),
    iis_tree_small: natural_t = @import("std").mem.zeroes(natural_t),
    iis_tree_hash: natural_t = @import("std").mem.zeroes(natural_t),
};
pub const ipc_info_space_t = struct_ipc_info_space;
pub const struct_ipc_info_space_basic = extern struct {
    iisb_genno_mask: natural_t = @import("std").mem.zeroes(natural_t),
    iisb_table_size: natural_t = @import("std").mem.zeroes(natural_t),
    iisb_table_next: natural_t = @import("std").mem.zeroes(natural_t),
    iisb_table_inuse: natural_t = @import("std").mem.zeroes(natural_t),
    iisb_reserved: [2]natural_t = @import("std").mem.zeroes([2]natural_t),
};
pub const ipc_info_space_basic_t = struct_ipc_info_space_basic;
pub const struct_ipc_info_name = extern struct {
    iin_name: mach_port_name_t = @import("std").mem.zeroes(mach_port_name_t),
    iin_collision: integer_t = @import("std").mem.zeroes(integer_t),
    iin_type: mach_port_type_t = @import("std").mem.zeroes(mach_port_type_t),
    iin_urefs: mach_port_urefs_t = @import("std").mem.zeroes(mach_port_urefs_t),
    iin_object: natural_t = @import("std").mem.zeroes(natural_t),
    iin_next: natural_t = @import("std").mem.zeroes(natural_t),
    iin_hash: natural_t = @import("std").mem.zeroes(natural_t),
};
pub const ipc_info_name_t = struct_ipc_info_name;
pub const ipc_info_name_array_t = [*c]ipc_info_name_t;
pub const struct_ipc_info_tree_name = extern struct {
    iitn_name: ipc_info_name_t = @import("std").mem.zeroes(ipc_info_name_t),
    iitn_lchild: mach_port_name_t = @import("std").mem.zeroes(mach_port_name_t),
    iitn_rchild: mach_port_name_t = @import("std").mem.zeroes(mach_port_name_t),
};
pub const ipc_info_tree_name_t = struct_ipc_info_tree_name;
pub const ipc_info_tree_name_array_t = [*c]ipc_info_tree_name_t;
pub const struct_ipc_info_port = extern struct {
    iip_port_object: natural_t = @import("std").mem.zeroes(natural_t),
    iip_receiver_object: natural_t = @import("std").mem.zeroes(natural_t),
};
pub const ipc_info_port_t = struct_ipc_info_port;
pub const exception_handler_info_array_t = [*c]ipc_info_port_t;
pub const exception_type_t = c_int;
pub const exception_data_type_t = integer_t;
pub const mach_exception_data_type_t = i64;
pub const exception_behavior_t = c_int;
pub const exception_data_t = [*c]exception_data_type_t;
pub const mach_exception_data_t = [*c]mach_exception_data_type_t;
pub const exception_mask_t = c_uint;
pub const exception_mask_array_t = [*c]exception_mask_t;
pub const exception_behavior_array_t = [*c]exception_behavior_t;
pub const exception_flavor_array_t = [*c]thread_state_flavor_t;
pub const exception_port_array_t = [*c]mach_port_t;
pub const exception_port_info_array_t = [*c]ipc_info_port_t;
pub const mach_exception_code_t = mach_exception_data_type_t;
pub const mach_exception_subcode_t = mach_exception_data_type_t;
pub const mach_voucher_t = mach_port_t;
pub const mach_voucher_name_t = mach_port_name_t;
pub const mach_voucher_name_array_t = [*c]mach_voucher_name_t;
pub const ipc_voucher_t = mach_voucher_t;
pub const mach_voucher_selector_t = u32;
pub const mach_voucher_attr_key_t = u32;
pub const mach_voucher_attr_key_array_t = [*c]mach_voucher_attr_key_t;
pub const mach_voucher_attr_content_t = [*c]u8;
pub const mach_voucher_attr_content_size_t = u32;
pub const mach_voucher_attr_command_t = u32;
pub const mach_voucher_attr_recipe_command_t = u32;
pub const mach_voucher_attr_recipe_command_array_t = [*c]mach_voucher_attr_recipe_command_t;
pub const struct_mach_voucher_attr_recipe_data = extern struct {
    key: mach_voucher_attr_key_t align(1) = @import("std").mem.zeroes(mach_voucher_attr_key_t),
    command: mach_voucher_attr_recipe_command_t = @import("std").mem.zeroes(mach_voucher_attr_recipe_command_t),
    previous_voucher: mach_voucher_name_t = @import("std").mem.zeroes(mach_voucher_name_t),
    content_size: mach_voucher_attr_content_size_t = @import("std").mem.zeroes(mach_voucher_attr_content_size_t),
    pub fn content(self: anytype) @import("std").zig.c_translation.FlexibleArrayType(@TypeOf(self), u8) {
        const Intermediate = @import("std").zig.c_translation.FlexibleArrayType(@TypeOf(self), u8);
        const ReturnType = @import("std").zig.c_translation.FlexibleArrayType(@TypeOf(self), u8);
        return @as(ReturnType, @ptrCast(@alignCast(@as(Intermediate, @ptrCast(self)) + 16)));
    }
};
pub const mach_voucher_attr_recipe_data_t = struct_mach_voucher_attr_recipe_data;
pub const mach_voucher_attr_recipe_t = [*c]mach_voucher_attr_recipe_data_t;
pub const mach_voucher_attr_recipe_size_t = mach_msg_type_number_t;
pub const mach_voucher_attr_raw_recipe_t = [*c]u8;
pub const mach_voucher_attr_raw_recipe_array_t = mach_voucher_attr_raw_recipe_t;
pub const mach_voucher_attr_raw_recipe_size_t = mach_msg_type_number_t;
pub const mach_voucher_attr_raw_recipe_array_size_t = mach_msg_type_number_t;
pub const mach_voucher_attr_manager_t = mach_port_t;
pub const mach_voucher_attr_control_t = mach_port_t;
pub const ipc_voucher_attr_manager_t = mach_port_t;
pub const ipc_voucher_attr_control_t = mach_port_t;
pub const mach_voucher_attr_value_handle_t = u64;
pub const mach_voucher_attr_value_handle_array_t = [*c]mach_voucher_attr_value_handle_t;
pub const mach_voucher_attr_value_handle_array_size_t = mach_msg_type_number_t;
pub const mach_voucher_attr_value_reference_t = u32;
pub const mach_voucher_attr_value_flags_t = u32;
pub const mach_voucher_attr_control_flags_t = u32;
pub const mach_voucher_attr_importance_refs = u32;
pub const struct_processor_cpu_stat = extern struct {
    irq_ex_cnt: u32 = @import("std").mem.zeroes(u32),
    ipi_cnt: u32 = @import("std").mem.zeroes(u32),
    timer_cnt: u32 = @import("std").mem.zeroes(u32),
    undef_ex_cnt: u32 = @import("std").mem.zeroes(u32),
    unaligned_cnt: u32 = @import("std").mem.zeroes(u32),
    vfp_cnt: u32 = @import("std").mem.zeroes(u32),
    vfp_shortv_cnt: u32 = @import("std").mem.zeroes(u32),
    data_ex_cnt: u32 = @import("std").mem.zeroes(u32),
    instr_ex_cnt: u32 = @import("std").mem.zeroes(u32),
};
pub const processor_cpu_stat_data_t = struct_processor_cpu_stat;
pub const processor_cpu_stat_t = [*c]struct_processor_cpu_stat;
pub const struct_processor_cpu_stat64 = extern struct {
    irq_ex_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
    ipi_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
    timer_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
    undef_ex_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
    unaligned_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
    vfp_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
    vfp_shortv_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
    data_ex_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
    instr_ex_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
    pmi_cnt: u64 align(1) = @import("std").mem.zeroes(u64),
};
pub const processor_cpu_stat64_data_t = struct_processor_cpu_stat64;
pub const processor_cpu_stat64_t = [*c]struct_processor_cpu_stat64;
pub const processor_info_t = [*c]integer_t;
pub const processor_info_array_t = [*c]integer_t;
pub const processor_info_data_t = [1024]integer_t;
pub const processor_set_info_t = [*c]integer_t;
pub const processor_set_info_data_t = [1024]integer_t;
pub const processor_flavor_t = c_int;
const union_unnamed_24 = extern union {
    is_master: boolean_t,
    is_main: boolean_t,
};
pub const struct_processor_basic_info = extern struct {
    cpu_type: cpu_type_t = @import("std").mem.zeroes(cpu_type_t),
    cpu_subtype: cpu_subtype_t = @import("std").mem.zeroes(cpu_subtype_t),
    running: boolean_t = @import("std").mem.zeroes(boolean_t),
    slot_num: c_int = @import("std").mem.zeroes(c_int),
    unnamed_0: union_unnamed_24 = @import("std").mem.zeroes(union_unnamed_24),
};
pub const processor_basic_info_data_t = struct_processor_basic_info;
pub const processor_basic_info_t = [*c]struct_processor_basic_info;
pub const struct_processor_cpu_load_info = extern struct {
    cpu_ticks: [4]c_uint = @import("std").mem.zeroes([4]c_uint),
};
pub const processor_cpu_load_info_data_t = struct_processor_cpu_load_info;
pub const processor_cpu_load_info_t = [*c]struct_processor_cpu_load_info;
pub const processor_set_flavor_t = c_int;
pub const struct_processor_set_basic_info = extern struct {
    processor_count: c_int = @import("std").mem.zeroes(c_int),
    default_policy: c_int = @import("std").mem.zeroes(c_int),
};
pub const processor_set_basic_info_data_t = struct_processor_set_basic_info;
pub const processor_set_basic_info_t = [*c]struct_processor_set_basic_info;
pub const struct_processor_set_load_info = extern struct {
    task_count: c_int = @import("std").mem.zeroes(c_int),
    thread_count: c_int = @import("std").mem.zeroes(c_int),
    load_average: integer_t = @import("std").mem.zeroes(integer_t),
    mach_factor: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const processor_set_load_info_data_t = struct_processor_set_load_info;
pub const processor_set_load_info_t = [*c]struct_processor_set_load_info;
pub const policy_t = c_int;
pub const policy_info_t = [*c]integer_t;
pub const policy_base_t = [*c]integer_t;
pub const policy_limit_t = [*c]integer_t;
pub const struct_policy_timeshare_base = extern struct {
    base_priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const struct_policy_timeshare_limit = extern struct {
    max_priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const struct_policy_timeshare_info = extern struct {
    max_priority: integer_t = @import("std").mem.zeroes(integer_t),
    base_priority: integer_t = @import("std").mem.zeroes(integer_t),
    cur_priority: integer_t = @import("std").mem.zeroes(integer_t),
    depressed: boolean_t = @import("std").mem.zeroes(boolean_t),
    depress_priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const policy_timeshare_base_t = [*c]struct_policy_timeshare_base;
pub const policy_timeshare_limit_t = [*c]struct_policy_timeshare_limit;
pub const policy_timeshare_info_t = [*c]struct_policy_timeshare_info;
pub const policy_timeshare_base_data_t = struct_policy_timeshare_base;
pub const policy_timeshare_limit_data_t = struct_policy_timeshare_limit;
pub const policy_timeshare_info_data_t = struct_policy_timeshare_info;
pub const struct_policy_rr_base = extern struct {
    base_priority: integer_t = @import("std").mem.zeroes(integer_t),
    quantum: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const struct_policy_rr_limit = extern struct {
    max_priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const struct_policy_rr_info = extern struct {
    max_priority: integer_t = @import("std").mem.zeroes(integer_t),
    base_priority: integer_t = @import("std").mem.zeroes(integer_t),
    quantum: integer_t = @import("std").mem.zeroes(integer_t),
    depressed: boolean_t = @import("std").mem.zeroes(boolean_t),
    depress_priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const policy_rr_base_t = [*c]struct_policy_rr_base;
pub const policy_rr_limit_t = [*c]struct_policy_rr_limit;
pub const policy_rr_info_t = [*c]struct_policy_rr_info;
pub const policy_rr_base_data_t = struct_policy_rr_base;
pub const policy_rr_limit_data_t = struct_policy_rr_limit;
pub const policy_rr_info_data_t = struct_policy_rr_info;
pub const struct_policy_fifo_base = extern struct {
    base_priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const struct_policy_fifo_limit = extern struct {
    max_priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const struct_policy_fifo_info = extern struct {
    max_priority: integer_t = @import("std").mem.zeroes(integer_t),
    base_priority: integer_t = @import("std").mem.zeroes(integer_t),
    depressed: boolean_t = @import("std").mem.zeroes(boolean_t),
    depress_priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const policy_fifo_base_t = [*c]struct_policy_fifo_base;
pub const policy_fifo_limit_t = [*c]struct_policy_fifo_limit;
pub const policy_fifo_info_t = [*c]struct_policy_fifo_info;
pub const policy_fifo_base_data_t = struct_policy_fifo_base;
pub const policy_fifo_limit_data_t = struct_policy_fifo_limit;
pub const policy_fifo_info_data_t = struct_policy_fifo_info;
pub const struct_policy_bases = extern struct {
    ts: policy_timeshare_base_data_t = @import("std").mem.zeroes(policy_timeshare_base_data_t),
    rr: policy_rr_base_data_t = @import("std").mem.zeroes(policy_rr_base_data_t),
    fifo: policy_fifo_base_data_t = @import("std").mem.zeroes(policy_fifo_base_data_t),
};
pub const struct_policy_limits = extern struct {
    ts: policy_timeshare_limit_data_t = @import("std").mem.zeroes(policy_timeshare_limit_data_t),
    rr: policy_rr_limit_data_t = @import("std").mem.zeroes(policy_rr_limit_data_t),
    fifo: policy_fifo_limit_data_t = @import("std").mem.zeroes(policy_fifo_limit_data_t),
};
pub const struct_policy_infos = extern struct {
    ts: policy_timeshare_info_data_t = @import("std").mem.zeroes(policy_timeshare_info_data_t),
    rr: policy_rr_info_data_t = @import("std").mem.zeroes(policy_rr_info_data_t),
    fifo: policy_fifo_info_data_t = @import("std").mem.zeroes(policy_fifo_info_data_t),
};
pub const policy_base_data_t = struct_policy_bases;
pub const policy_limit_data_t = struct_policy_limits;
pub const policy_info_data_t = struct_policy_infos;
pub const task_flavor_t = natural_t;
pub const task_info_t = [*c]integer_t;
pub const task_info_data_t = [1024]integer_t;
pub const struct_task_basic_info_32 = extern struct {
    suspend_count: integer_t = @import("std").mem.zeroes(integer_t),
    virtual_size: natural_t = @import("std").mem.zeroes(natural_t),
    resident_size: natural_t = @import("std").mem.zeroes(natural_t),
    user_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    system_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    policy: policy_t = @import("std").mem.zeroes(policy_t),
};
pub const task_basic_info_32_data_t = struct_task_basic_info_32;
pub const task_basic_info_32_t = [*c]struct_task_basic_info_32;
pub const struct_task_basic_info_64 = extern struct {
    suspend_count: integer_t = @import("std").mem.zeroes(integer_t),
    virtual_size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    resident_size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    user_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    system_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    policy: policy_t = @import("std").mem.zeroes(policy_t),
};
pub const task_basic_info_64_data_t = struct_task_basic_info_64;
pub const task_basic_info_64_t = [*c]struct_task_basic_info_64;
pub const struct_task_basic_info = extern struct {
    suspend_count: integer_t = @import("std").mem.zeroes(integer_t),
    virtual_size: vm_size_t = @import("std").mem.zeroes(vm_size_t),
    resident_size: vm_size_t = @import("std").mem.zeroes(vm_size_t),
    user_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    system_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    policy: policy_t = @import("std").mem.zeroes(policy_t),
};
pub const task_basic_info_data_t = struct_task_basic_info;
pub const task_basic_info_t = [*c]struct_task_basic_info;
pub const struct_task_events_info = extern struct {
    faults: integer_t = @import("std").mem.zeroes(integer_t),
    pageins: integer_t = @import("std").mem.zeroes(integer_t),
    cow_faults: integer_t = @import("std").mem.zeroes(integer_t),
    messages_sent: integer_t = @import("std").mem.zeroes(integer_t),
    messages_received: integer_t = @import("std").mem.zeroes(integer_t),
    syscalls_mach: integer_t = @import("std").mem.zeroes(integer_t),
    syscalls_unix: integer_t = @import("std").mem.zeroes(integer_t),
    csw: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const task_events_info_data_t = struct_task_events_info;
pub const task_events_info_t = [*c]struct_task_events_info;
pub const struct_task_thread_times_info = extern struct {
    user_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    system_time: time_value_t = @import("std").mem.zeroes(time_value_t),
};
pub const task_thread_times_info_data_t = struct_task_thread_times_info;
pub const task_thread_times_info_t = [*c]struct_task_thread_times_info;
pub const struct_task_absolutetime_info = extern struct {
    total_user: u64 = @import("std").mem.zeroes(u64),
    total_system: u64 = @import("std").mem.zeroes(u64),
    threads_user: u64 = @import("std").mem.zeroes(u64),
    threads_system: u64 = @import("std").mem.zeroes(u64),
};
pub const task_absolutetime_info_data_t = struct_task_absolutetime_info;
pub const task_absolutetime_info_t = [*c]struct_task_absolutetime_info;
pub const struct_task_kernelmemory_info = extern struct {
    total_palloc: u64 = @import("std").mem.zeroes(u64),
    total_pfree: u64 = @import("std").mem.zeroes(u64),
    total_salloc: u64 = @import("std").mem.zeroes(u64),
    total_sfree: u64 = @import("std").mem.zeroes(u64),
};
pub const task_kernelmemory_info_data_t = struct_task_kernelmemory_info;
pub const task_kernelmemory_info_t = [*c]struct_task_kernelmemory_info;
pub const struct_task_affinity_tag_info = extern struct {
    set_count: integer_t = @import("std").mem.zeroes(integer_t),
    min: integer_t = @import("std").mem.zeroes(integer_t),
    max: integer_t = @import("std").mem.zeroes(integer_t),
    task_count: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const task_affinity_tag_info_data_t = struct_task_affinity_tag_info;
pub const task_affinity_tag_info_t = [*c]struct_task_affinity_tag_info;
pub const struct_task_dyld_info = extern struct {
    all_image_info_addr: mach_vm_address_t = @import("std").mem.zeroes(mach_vm_address_t),
    all_image_info_size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    all_image_info_format: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const task_dyld_info_data_t = struct_task_dyld_info;
pub const task_dyld_info_t = [*c]struct_task_dyld_info;
pub const struct_task_basic_info_64_2 = extern struct {
    suspend_count: integer_t = @import("std").mem.zeroes(integer_t),
    virtual_size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    resident_size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    user_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    system_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    policy: policy_t = @import("std").mem.zeroes(policy_t),
};
pub const task_basic_info_64_2_data_t = struct_task_basic_info_64_2;
pub const task_basic_info_64_2_t = [*c]struct_task_basic_info_64_2;
pub const struct_task_extmod_info = extern struct {
    task_uuid: [16]u8 = @import("std").mem.zeroes([16]u8),
    extmod_statistics: vm_extmod_statistics_data_t = @import("std").mem.zeroes(vm_extmod_statistics_data_t),
};
pub const task_extmod_info_data_t = struct_task_extmod_info;
pub const task_extmod_info_t = [*c]struct_task_extmod_info;
pub const struct_mach_task_basic_info = extern struct {
    virtual_size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    resident_size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    resident_size_max: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    user_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    system_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    policy: policy_t = @import("std").mem.zeroes(policy_t),
    suspend_count: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const mach_task_basic_info_data_t = struct_mach_task_basic_info;
pub const mach_task_basic_info_t = [*c]struct_mach_task_basic_info;
pub const struct_task_power_info = extern struct {
    total_user: u64 = @import("std").mem.zeroes(u64),
    total_system: u64 = @import("std").mem.zeroes(u64),
    task_interrupt_wakeups: u64 = @import("std").mem.zeroes(u64),
    task_platform_idle_wakeups: u64 = @import("std").mem.zeroes(u64),
    task_timer_wakeups_bin_1: u64 = @import("std").mem.zeroes(u64),
    task_timer_wakeups_bin_2: u64 = @import("std").mem.zeroes(u64),
};
pub const task_power_info_data_t = struct_task_power_info;
pub const task_power_info_t = [*c]struct_task_power_info;
pub const struct_task_vm_info = extern struct {
    virtual_size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    region_count: integer_t = @import("std").mem.zeroes(integer_t),
    page_size: integer_t = @import("std").mem.zeroes(integer_t),
    resident_size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    resident_size_peak: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    device: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    device_peak: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    internal: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    internal_peak: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    external: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    external_peak: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    reusable: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    reusable_peak: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    purgeable_volatile_pmap: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    purgeable_volatile_resident: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    purgeable_volatile_virtual: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    compressed: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    compressed_peak: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    compressed_lifetime: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    phys_footprint: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
    min_address: mach_vm_address_t = @import("std").mem.zeroes(mach_vm_address_t),
    max_address: mach_vm_address_t = @import("std").mem.zeroes(mach_vm_address_t),
    ledger_phys_footprint_peak: i64 = @import("std").mem.zeroes(i64),
    ledger_purgeable_nonvolatile: i64 = @import("std").mem.zeroes(i64),
    ledger_purgeable_novolatile_compressed: i64 = @import("std").mem.zeroes(i64),
    ledger_purgeable_volatile: i64 = @import("std").mem.zeroes(i64),
    ledger_purgeable_volatile_compressed: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_network_nonvolatile: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_network_nonvolatile_compressed: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_network_volatile: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_network_volatile_compressed: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_media_footprint: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_media_footprint_compressed: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_media_nofootprint: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_media_nofootprint_compressed: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_graphics_footprint: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_graphics_footprint_compressed: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_graphics_nofootprint: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_graphics_nofootprint_compressed: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_neural_footprint: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_neural_footprint_compressed: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_neural_nofootprint: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_neural_nofootprint_compressed: i64 = @import("std").mem.zeroes(i64),
    limit_bytes_remaining: u64 = @import("std").mem.zeroes(u64),
    decompressions: integer_t = @import("std").mem.zeroes(integer_t),
    ledger_swapins: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_neural_nofootprint_total: i64 = @import("std").mem.zeroes(i64),
    ledger_tag_neural_nofootprint_peak: i64 = @import("std").mem.zeroes(i64),
};
pub const task_vm_info_data_t = struct_task_vm_info;
pub const task_vm_info_t = [*c]struct_task_vm_info;
pub const task_purgable_info_t = struct_vm_purgeable_info;
pub const struct_task_trace_memory_info = extern struct {
    user_memory_address: u64 = @import("std").mem.zeroes(u64),
    buffer_size: u64 = @import("std").mem.zeroes(u64),
    mailbox_array_size: u64 = @import("std").mem.zeroes(u64),
};
pub const task_trace_memory_info_data_t = struct_task_trace_memory_info;
pub const task_trace_memory_info_t = [*c]struct_task_trace_memory_info;
pub const struct_task_wait_state_info = extern struct {
    total_wait_state_time: u64 = @import("std").mem.zeroes(u64),
    total_wait_sfi_state_time: u64 = @import("std").mem.zeroes(u64),
    _reserved: [4]u32 = @import("std").mem.zeroes([4]u32),
};
pub const task_wait_state_info_data_t = struct_task_wait_state_info;
pub const task_wait_state_info_t = [*c]struct_task_wait_state_info;
pub const gpu_energy_data = extern struct {
    task_gpu_utilisation: u64 = @import("std").mem.zeroes(u64),
    task_gpu_stat_reserved0: u64 = @import("std").mem.zeroes(u64),
    task_gpu_stat_reserved1: u64 = @import("std").mem.zeroes(u64),
    task_gpu_stat_reserved2: u64 = @import("std").mem.zeroes(u64),
};
pub const gpu_energy_data_t = [*c]gpu_energy_data;
pub const struct_task_power_info_v2 = extern struct {
    cpu_energy: task_power_info_data_t = @import("std").mem.zeroes(task_power_info_data_t),
    gpu_energy: gpu_energy_data = @import("std").mem.zeroes(gpu_energy_data),
    task_energy: u64 = @import("std").mem.zeroes(u64),
    task_ptime: u64 = @import("std").mem.zeroes(u64),
    task_pset_switches: u64 = @import("std").mem.zeroes(u64),
};
pub const task_power_info_v2_data_t = struct_task_power_info_v2;
pub const task_power_info_v2_t = [*c]struct_task_power_info_v2;
pub const struct_task_flags_info = extern struct {
    flags: u32 = @import("std").mem.zeroes(u32),
};
pub const task_flags_info_data_t = struct_task_flags_info;
pub const task_flags_info_t = [*c]struct_task_flags_info;
pub const struct_task_security_config_info = extern struct {
    config: u32 = @import("std").mem.zeroes(u32),
};
pub const task_security_config_info_t = [*c]struct_task_security_config_info;
pub const task_exc_guard_behavior_t = u32;
pub const task_corpse_forking_behavior_t = u32;
pub const task_inspect_flavor_t = natural_t;
pub const TASK_INSPECT_BASIC_COUNTS: c_int = 1;
pub const enum_task_inspect_flavor = c_uint;
pub const struct_task_inspect_basic_counts = extern struct {
    instructions: u64 = @import("std").mem.zeroes(u64),
    cycles: u64 = @import("std").mem.zeroes(u64),
};
pub const task_inspect_basic_counts_data_t = struct_task_inspect_basic_counts;
pub const task_inspect_basic_counts_t = [*c]struct_task_inspect_basic_counts;
pub const task_inspect_info_t = [*c]integer_t;
pub const task_policy_flavor_t = natural_t;
pub const task_policy_t = [*c]integer_t;
pub const TASK_RENICED: c_int = -1;
pub const TASK_UNSPECIFIED: c_int = 0;
pub const TASK_FOREGROUND_APPLICATION: c_int = 1;
pub const TASK_BACKGROUND_APPLICATION: c_int = 2;
pub const TASK_CONTROL_APPLICATION: c_int = 3;
pub const TASK_GRAPHICS_SERVER: c_int = 4;
pub const TASK_THROTTLE_APPLICATION: c_int = 5;
pub const TASK_NONUI_APPLICATION: c_int = 6;
pub const TASK_DEFAULT_APPLICATION: c_int = 7;
pub const TASK_DARWINBG_APPLICATION: c_int = 8;
pub const enum_task_role = c_int;
pub const task_role_t = enum_task_role;
pub const struct_task_category_policy = extern struct {
    role: task_role_t = @import("std").mem.zeroes(task_role_t),
};
pub const task_category_policy_data_t = struct_task_category_policy;
pub const task_category_policy_t = [*c]struct_task_category_policy;
pub const LATENCY_QOS_TIER_UNSPECIFIED: c_int = 0;
pub const LATENCY_QOS_TIER_0: c_int = 16711681;
pub const LATENCY_QOS_TIER_1: c_int = 16711682;
pub const LATENCY_QOS_TIER_2: c_int = 16711683;
pub const LATENCY_QOS_TIER_3: c_int = 16711684;
pub const LATENCY_QOS_TIER_4: c_int = 16711685;
pub const LATENCY_QOS_TIER_5: c_int = 16711686;
pub const enum_task_latency_qos = c_uint;
pub const task_latency_qos_t = integer_t;
pub const THROUGHPUT_QOS_TIER_UNSPECIFIED: c_int = 0;
pub const THROUGHPUT_QOS_TIER_0: c_int = 16646145;
pub const THROUGHPUT_QOS_TIER_1: c_int = 16646146;
pub const THROUGHPUT_QOS_TIER_2: c_int = 16646147;
pub const THROUGHPUT_QOS_TIER_3: c_int = 16646148;
pub const THROUGHPUT_QOS_TIER_4: c_int = 16646149;
pub const THROUGHPUT_QOS_TIER_5: c_int = 16646150;
pub const enum_task_throughput_qos = c_uint;
pub const task_throughput_qos_t = integer_t;
pub const struct_task_qos_policy = extern struct {
    task_latency_qos_tier: task_latency_qos_t = @import("std").mem.zeroes(task_latency_qos_t),
    task_throughput_qos_tier: task_throughput_qos_t = @import("std").mem.zeroes(task_throughput_qos_t),
};
pub const task_qos_policy_t = [*c]struct_task_qos_policy;
pub const task_special_port_t = c_int;
pub const thread_flavor_t = natural_t;
pub const thread_info_t = [*c]integer_t;
pub const thread_info_data_t = [32]integer_t;
pub const struct_thread_basic_info = extern struct {
    user_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    system_time: time_value_t = @import("std").mem.zeroes(time_value_t),
    cpu_usage: integer_t = @import("std").mem.zeroes(integer_t),
    policy: policy_t = @import("std").mem.zeroes(policy_t),
    run_state: integer_t = @import("std").mem.zeroes(integer_t),
    flags: integer_t = @import("std").mem.zeroes(integer_t),
    suspend_count: integer_t = @import("std").mem.zeroes(integer_t),
    sleep_time: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const thread_basic_info_data_t = struct_thread_basic_info;
pub const thread_basic_info_t = [*c]struct_thread_basic_info;
pub const struct_thread_identifier_info = extern struct {
    thread_id: u64 = @import("std").mem.zeroes(u64),
    thread_handle: u64 = @import("std").mem.zeroes(u64),
    dispatch_qaddr: u64 = @import("std").mem.zeroes(u64),
};
pub const thread_identifier_info_data_t = struct_thread_identifier_info;
pub const thread_identifier_info_t = [*c]struct_thread_identifier_info;
pub const struct_thread_extended_info = extern struct {
    pth_user_time: u64 = @import("std").mem.zeroes(u64),
    pth_system_time: u64 = @import("std").mem.zeroes(u64),
    pth_cpu_usage: i32 = @import("std").mem.zeroes(i32),
    pth_policy: i32 = @import("std").mem.zeroes(i32),
    pth_run_state: i32 = @import("std").mem.zeroes(i32),
    pth_flags: i32 = @import("std").mem.zeroes(i32),
    pth_sleep_time: i32 = @import("std").mem.zeroes(i32),
    pth_curpri: i32 = @import("std").mem.zeroes(i32),
    pth_priority: i32 = @import("std").mem.zeroes(i32),
    pth_maxpriority: i32 = @import("std").mem.zeroes(i32),
    pth_name: [64]u8 = @import("std").mem.zeroes([64]u8),
};
pub const thread_extended_info_data_t = struct_thread_extended_info;
pub const thread_extended_info_t = [*c]struct_thread_extended_info;
pub const struct_io_stat_entry = extern struct {
    count: u64 = @import("std").mem.zeroes(u64),
    size: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_io_stat_info = extern struct {
    disk_reads: struct_io_stat_entry = @import("std").mem.zeroes(struct_io_stat_entry),
    io_priority: [4]struct_io_stat_entry = @import("std").mem.zeroes([4]struct_io_stat_entry),
    paging: struct_io_stat_entry = @import("std").mem.zeroes(struct_io_stat_entry),
    metadata: struct_io_stat_entry = @import("std").mem.zeroes(struct_io_stat_entry),
    total_io: struct_io_stat_entry = @import("std").mem.zeroes(struct_io_stat_entry),
};
pub const io_stat_info_t = [*c]struct_io_stat_info;
pub const thread_policy_flavor_t = natural_t;
pub const thread_policy_t = [*c]integer_t;
pub const struct_thread_standard_policy = extern struct {
    no_data: natural_t = @import("std").mem.zeroes(natural_t),
};
pub const thread_standard_policy_data_t = struct_thread_standard_policy;
pub const thread_standard_policy_t = [*c]struct_thread_standard_policy;
pub const struct_thread_extended_policy = extern struct {
    timeshare: boolean_t = @import("std").mem.zeroes(boolean_t),
};
pub const thread_extended_policy_data_t = struct_thread_extended_policy;
pub const thread_extended_policy_t = [*c]struct_thread_extended_policy;
pub const struct_thread_time_constraint_policy = extern struct {
    period: u32 = @import("std").mem.zeroes(u32),
    computation: u32 = @import("std").mem.zeroes(u32),
    constraint: u32 = @import("std").mem.zeroes(u32),
    preemptible: boolean_t = @import("std").mem.zeroes(boolean_t),
};
pub const thread_time_constraint_policy_data_t = struct_thread_time_constraint_policy;
pub const thread_time_constraint_policy_t = [*c]struct_thread_time_constraint_policy;
pub const struct_thread_precedence_policy = extern struct {
    importance: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const thread_precedence_policy_data_t = struct_thread_precedence_policy;
pub const thread_precedence_policy_t = [*c]struct_thread_precedence_policy;
pub const struct_thread_affinity_policy = extern struct {
    affinity_tag: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const thread_affinity_policy_data_t = struct_thread_affinity_policy;
pub const thread_affinity_policy_t = [*c]struct_thread_affinity_policy;
pub const struct_thread_background_policy = extern struct {
    priority: integer_t = @import("std").mem.zeroes(integer_t),
};
pub const thread_background_policy_data_t = struct_thread_background_policy;
pub const thread_background_policy_t = [*c]struct_thread_background_policy;
pub const thread_latency_qos_t = integer_t;
pub const struct_thread_latency_qos_policy = extern struct {
    thread_latency_qos_tier: thread_latency_qos_t = @import("std").mem.zeroes(thread_latency_qos_t),
};
pub const thread_latency_qos_policy_data_t = struct_thread_latency_qos_policy;
pub const thread_latency_qos_policy_t = [*c]struct_thread_latency_qos_policy;
pub const thread_throughput_qos_t = integer_t;
pub const struct_thread_throughput_qos_policy = extern struct {
    thread_throughput_qos_tier: thread_throughput_qos_t = @import("std").mem.zeroes(thread_throughput_qos_t),
};
pub const thread_throughput_qos_policy_data_t = struct_thread_throughput_qos_policy;
pub const thread_throughput_qos_policy_t = [*c]struct_thread_throughput_qos_policy;
pub const alarm_type_t = c_int;
pub const sleep_type_t = c_int;
pub const clock_id_t = c_int;
pub const clock_flavor_t = c_int;
pub const clock_attr_t = [*c]c_int;
pub const clock_res_t = c_int;
pub const struct_mach_timespec = extern struct {
    tv_sec: c_uint = @import("std").mem.zeroes(c_uint),
    tv_nsec: clock_res_t = @import("std").mem.zeroes(clock_res_t),
};
pub const mach_timespec_t = struct_mach_timespec;
pub const vm_machine_attribute_t = c_uint;
pub const vm_machine_attribute_val_t = c_int;
pub const vm_inherit_t = c_uint;
pub const vm_purgable_t = c_int;
pub const vm_behavior_t = c_int;
pub extern var vm_page_size: vm_size_t;
pub extern var vm_page_mask: vm_size_t;
pub extern var vm_page_shift: c_int;
pub extern var vm_kernel_page_size: vm_size_t;
pub extern var vm_kernel_page_mask: vm_size_t;
pub extern var vm_kernel_page_shift: c_int;
pub const vm32_object_id_t = u32;
pub const vm_region_info_t = [*c]c_int;
pub const vm_region_info_64_t = [*c]c_int;
pub const vm_region_recurse_info_t = [*c]c_int;
pub const vm_region_recurse_info_64_t = [*c]c_int;
pub const vm_region_flavor_t = c_int;
pub const vm_region_info_data_t = [1024]c_int;
pub const struct_vm_region_basic_info_64 = extern struct {
    protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    max_protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    inheritance: vm_inherit_t = @import("std").mem.zeroes(vm_inherit_t),
    shared: boolean_t = @import("std").mem.zeroes(boolean_t),
    reserved: boolean_t = @import("std").mem.zeroes(boolean_t),
    offset: memory_object_offset_t = @import("std").mem.zeroes(memory_object_offset_t),
    behavior: vm_behavior_t = @import("std").mem.zeroes(vm_behavior_t),
    user_wired_count: c_ushort = @import("std").mem.zeroes(c_ushort),
};
pub const vm_region_basic_info_64_t = [*c]struct_vm_region_basic_info_64;
pub const vm_region_basic_info_data_64_t = struct_vm_region_basic_info_64;
pub const struct_vm_region_basic_info = extern struct {
    protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    max_protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    inheritance: vm_inherit_t = @import("std").mem.zeroes(vm_inherit_t),
    shared: boolean_t = @import("std").mem.zeroes(boolean_t),
    reserved: boolean_t = @import("std").mem.zeroes(boolean_t),
    offset: u32 = @import("std").mem.zeroes(u32),
    behavior: vm_behavior_t = @import("std").mem.zeroes(vm_behavior_t),
    user_wired_count: c_ushort = @import("std").mem.zeroes(c_ushort),
};
pub const vm_region_basic_info_t = [*c]struct_vm_region_basic_info;
pub const vm_region_basic_info_data_t = struct_vm_region_basic_info;
pub const struct_vm_region_extended_info = extern struct {
    protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    user_tag: c_uint = @import("std").mem.zeroes(c_uint),
    pages_resident: c_uint = @import("std").mem.zeroes(c_uint),
    pages_shared_now_private: c_uint = @import("std").mem.zeroes(c_uint),
    pages_swapped_out: c_uint = @import("std").mem.zeroes(c_uint),
    pages_dirtied: c_uint = @import("std").mem.zeroes(c_uint),
    ref_count: c_uint = @import("std").mem.zeroes(c_uint),
    shadow_depth: c_ushort = @import("std").mem.zeroes(c_ushort),
    external_pager: u8 = @import("std").mem.zeroes(u8),
    share_mode: u8 = @import("std").mem.zeroes(u8),
    pages_reusable: c_uint = @import("std").mem.zeroes(c_uint),
};
pub const vm_region_extended_info_t = [*c]struct_vm_region_extended_info;
pub const vm_region_extended_info_data_t = struct_vm_region_extended_info;
pub const struct_vm_region_top_info = extern struct {
    obj_id: c_uint = @import("std").mem.zeroes(c_uint),
    ref_count: c_uint = @import("std").mem.zeroes(c_uint),
    private_pages_resident: c_uint = @import("std").mem.zeroes(c_uint),
    shared_pages_resident: c_uint = @import("std").mem.zeroes(c_uint),
    share_mode: u8 = @import("std").mem.zeroes(u8),
};
pub const vm_region_top_info_t = [*c]struct_vm_region_top_info;
pub const vm_region_top_info_data_t = struct_vm_region_top_info;
pub const struct_vm_region_submap_info = extern struct {
    protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    max_protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    inheritance: vm_inherit_t = @import("std").mem.zeroes(vm_inherit_t),
    offset: u32 = @import("std").mem.zeroes(u32),
    user_tag: c_uint = @import("std").mem.zeroes(c_uint),
    pages_resident: c_uint = @import("std").mem.zeroes(c_uint),
    pages_shared_now_private: c_uint = @import("std").mem.zeroes(c_uint),
    pages_swapped_out: c_uint = @import("std").mem.zeroes(c_uint),
    pages_dirtied: c_uint = @import("std").mem.zeroes(c_uint),
    ref_count: c_uint = @import("std").mem.zeroes(c_uint),
    shadow_depth: c_ushort = @import("std").mem.zeroes(c_ushort),
    external_pager: u8 = @import("std").mem.zeroes(u8),
    share_mode: u8 = @import("std").mem.zeroes(u8),
    is_submap: boolean_t = @import("std").mem.zeroes(boolean_t),
    behavior: vm_behavior_t = @import("std").mem.zeroes(vm_behavior_t),
    object_id: vm32_object_id_t = @import("std").mem.zeroes(vm32_object_id_t),
    user_wired_count: c_ushort = @import("std").mem.zeroes(c_ushort),
};
pub const vm_region_submap_info_t = [*c]struct_vm_region_submap_info;
pub const vm_region_submap_info_data_t = struct_vm_region_submap_info;
pub const struct_vm_region_submap_info_64 = extern struct {
    protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    max_protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    inheritance: vm_inherit_t = @import("std").mem.zeroes(vm_inherit_t),
    offset: memory_object_offset_t = @import("std").mem.zeroes(memory_object_offset_t),
    user_tag: c_uint = @import("std").mem.zeroes(c_uint),
    pages_resident: c_uint = @import("std").mem.zeroes(c_uint),
    pages_shared_now_private: c_uint = @import("std").mem.zeroes(c_uint),
    pages_swapped_out: c_uint = @import("std").mem.zeroes(c_uint),
    pages_dirtied: c_uint = @import("std").mem.zeroes(c_uint),
    ref_count: c_uint = @import("std").mem.zeroes(c_uint),
    shadow_depth: c_ushort = @import("std").mem.zeroes(c_ushort),
    external_pager: u8 = @import("std").mem.zeroes(u8),
    share_mode: u8 = @import("std").mem.zeroes(u8),
    is_submap: boolean_t = @import("std").mem.zeroes(boolean_t),
    behavior: vm_behavior_t = @import("std").mem.zeroes(vm_behavior_t),
    object_id: vm32_object_id_t = @import("std").mem.zeroes(vm32_object_id_t),
    user_wired_count: c_ushort = @import("std").mem.zeroes(c_ushort),
    pages_reusable: c_uint = @import("std").mem.zeroes(c_uint),
    object_id_full: vm_object_id_t = @import("std").mem.zeroes(vm_object_id_t),
};
pub const vm_region_submap_info_64_t = [*c]struct_vm_region_submap_info_64;
pub const vm_region_submap_info_data_64_t = struct_vm_region_submap_info_64;
pub const struct_vm_region_submap_short_info_64 = extern struct {
    protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    max_protection: vm_prot_t = @import("std").mem.zeroes(vm_prot_t),
    inheritance: vm_inherit_t = @import("std").mem.zeroes(vm_inherit_t),
    offset: memory_object_offset_t = @import("std").mem.zeroes(memory_object_offset_t),
    user_tag: c_uint = @import("std").mem.zeroes(c_uint),
    ref_count: c_uint = @import("std").mem.zeroes(c_uint),
    shadow_depth: c_ushort = @import("std").mem.zeroes(c_ushort),
    external_pager: u8 = @import("std").mem.zeroes(u8),
    share_mode: u8 = @import("std").mem.zeroes(u8),
    is_submap: boolean_t = @import("std").mem.zeroes(boolean_t),
    behavior: vm_behavior_t = @import("std").mem.zeroes(vm_behavior_t),
    object_id: vm32_object_id_t = @import("std").mem.zeroes(vm32_object_id_t),
    user_wired_count: c_ushort = @import("std").mem.zeroes(c_ushort),
};
pub const vm_region_submap_short_info_64_t = [*c]struct_vm_region_submap_short_info_64;
pub const vm_region_submap_short_info_data_64_t = struct_vm_region_submap_short_info_64;
pub const struct_mach_vm_read_entry = extern struct {
    address: mach_vm_address_t = @import("std").mem.zeroes(mach_vm_address_t),
    size: mach_vm_size_t = @import("std").mem.zeroes(mach_vm_size_t),
};
pub const struct_vm_read_entry = extern struct {
    address: vm_address_t = @import("std").mem.zeroes(vm_address_t),
    size: vm_size_t = @import("std").mem.zeroes(vm_size_t),
};
pub const mach_vm_read_entry_t = [256]struct_mach_vm_read_entry;
pub const vm_read_entry_t = [256]struct_vm_read_entry;
pub const vm_page_info_t = [*c]c_int;
pub const vm_page_info_data_t = [*c]c_int;
pub const vm_page_info_flavor_t = c_int;
pub const struct_vm_page_info_basic = extern struct {
    disposition: c_int = @import("std").mem.zeroes(c_int),
    ref_count: c_int = @import("std").mem.zeroes(c_int),
    object_id: vm_object_id_t = @import("std").mem.zeroes(vm_object_id_t),
    offset: memory_object_offset_t = @import("std").mem.zeroes(memory_object_offset_t),
    depth: c_int = @import("std").mem.zeroes(c_int),
    __pad: c_int = @import("std").mem.zeroes(c_int),
};
pub const vm_page_info_basic_t = [*c]struct_vm_page_info_basic;
pub const vm_page_info_basic_data_t = struct_vm_page_info_basic;
pub const kmod_t = c_int;
pub const struct_kmod_reference = extern struct {
    next: [*c]struct_kmod_reference = @import("std").mem.zeroes([*c]struct_kmod_reference),
    info: [*c]struct_kmod_info = @import("std").mem.zeroes([*c]struct_kmod_info),
};
pub const kmod_reference_t = struct_kmod_reference;
pub const kmod_start_func_t = fn ([*c]struct_kmod_info, ?*anyopaque) callconv(.c) kern_return_t;
pub const kmod_stop_func_t = fn ([*c]struct_kmod_info, ?*anyopaque) callconv(.c) kern_return_t;
pub const struct_kmod_info = extern struct {
    next: [*c]struct_kmod_info = @import("std").mem.zeroes([*c]struct_kmod_info),
    info_version: i32 = @import("std").mem.zeroes(i32),
    id: u32 = @import("std").mem.zeroes(u32),
    name: [64]u8 = @import("std").mem.zeroes([64]u8),
    version: [64]u8 = @import("std").mem.zeroes([64]u8),
    reference_count: i32 = @import("std").mem.zeroes(i32),
    reference_list: [*c]kmod_reference_t = @import("std").mem.zeroes([*c]kmod_reference_t),
    address: vm_address_t = @import("std").mem.zeroes(vm_address_t),
    size: vm_size_t = @import("std").mem.zeroes(vm_size_t),
    hdr_size: vm_size_t = @import("std").mem.zeroes(vm_size_t),
    start: ?*const kmod_start_func_t = @import("std").mem.zeroes(?*const kmod_start_func_t),
    stop: ?*const kmod_stop_func_t = @import("std").mem.zeroes(?*const kmod_stop_func_t),
};
pub const kmod_info_t = struct_kmod_info;
pub const struct_kmod_info_32_v1 = extern struct {
    next_addr: u32 = @import("std").mem.zeroes(u32),
    info_version: i32 = @import("std").mem.zeroes(i32),
    id: u32 = @import("std").mem.zeroes(u32),
    name: [64]u8 = @import("std").mem.zeroes([64]u8),
    version: [64]u8 = @import("std").mem.zeroes([64]u8),
    reference_count: i32 = @import("std").mem.zeroes(i32),
    reference_list_addr: u32 = @import("std").mem.zeroes(u32),
    address: u32 = @import("std").mem.zeroes(u32),
    size: u32 = @import("std").mem.zeroes(u32),
    hdr_size: u32 = @import("std").mem.zeroes(u32),
    start_addr: u32 = @import("std").mem.zeroes(u32),
    stop_addr: u32 = @import("std").mem.zeroes(u32),
};
pub const kmod_info_32_v1_t = struct_kmod_info_32_v1;
pub const struct_kmod_info_64_v1 = extern struct {
    next_addr: u64 = @import("std").mem.zeroes(u64),
    info_version: i32 = @import("std").mem.zeroes(i32),
    id: u32 = @import("std").mem.zeroes(u32),
    name: [64]u8 = @import("std").mem.zeroes([64]u8),
    version: [64]u8 = @import("std").mem.zeroes([64]u8),
    reference_count: i32 = @import("std").mem.zeroes(i32),
    reference_list_addr: u64 = @import("std").mem.zeroes(u64),
    address: u64 = @import("std").mem.zeroes(u64),
    size: u64 = @import("std").mem.zeroes(u64),
    hdr_size: u64 = @import("std").mem.zeroes(u64),
    start_addr: u64 = @import("std").mem.zeroes(u64),
    stop_addr: u64 = @import("std").mem.zeroes(u64),
};
pub const kmod_info_64_v1_t = struct_kmod_info_64_v1;
pub const kmod_args_t = ?*anyopaque;
pub const kmod_control_flavor_t = c_int;
pub const kmod_info_array_t = [*c]kmod_info_t;
pub const struct_fsid = extern struct {
    val: [2]i32 = @import("std").mem.zeroes([2]i32),
};
pub const fsid_t = struct_fsid;
pub const struct_fsobj_id = extern struct {
    fid_objno: u_int32_t = @import("std").mem.zeroes(u_int32_t),
    fid_generation: u_int32_t = @import("std").mem.zeroes(u_int32_t),
};
pub const fsobj_id_t = struct_fsobj_id;
pub const struct_dyld_kernel_image_info = extern struct {
    uuid: uuid_t = @import("std").mem.zeroes(uuid_t),
    fsobjid: fsobj_id_t = @import("std").mem.zeroes(fsobj_id_t),
    fsid: fsid_t = @import("std").mem.zeroes(fsid_t),
    load_addr: u64 = @import("std").mem.zeroes(u64),
};
pub const struct_dyld_kernel_process_info = extern struct {
    cache_image_info: struct_dyld_kernel_image_info = @import("std").mem.zeroes(struct_dyld_kernel_image_info),
    timestamp: u64 = @import("std").mem.zeroes(u64),
    imageCount: u32 = @import("std").mem.zeroes(u32),
    initialImageCount: u32 = @import("std").mem.zeroes(u32),
    dyldState: u8 = @import("std").mem.zeroes(u8),
    no_cache: boolean_t = @import("std").mem.zeroes(boolean_t),
    private_cache: boolean_t = @import("std").mem.zeroes(boolean_t),
};
pub const dyld_kernel_image_info_t = struct_dyld_kernel_image_info;
pub const dyld_kernel_process_info_t = struct_dyld_kernel_process_info;
pub const dyld_kernel_image_info_array_t = [*c]dyld_kernel_image_info_t;
pub const task_t = mach_port_t;
pub const task_name_t = mach_port_t;
pub const task_policy_set_t = mach_port_t;
pub const task_policy_get_t = mach_port_t;
pub const task_inspect_t = mach_port_t;
pub const task_read_t = mach_port_t;
pub const task_suspension_token_t = mach_port_t;
pub const thread_t = mach_port_t;
pub const thread_act_t = mach_port_t;
pub const thread_inspect_t = mach_port_t;
pub const thread_read_t = mach_port_t;
pub const ipc_space_t = mach_port_t;
pub const ipc_space_read_t = mach_port_t;
pub const ipc_space_inspect_t = mach_port_t;
pub const coalition_t = mach_port_t;
pub const host_t = mach_port_t;
pub const host_priv_t = mach_port_t;
pub const host_security_t = mach_port_t;
pub const processor_t = mach_port_t;
pub const processor_set_t = mach_port_t;
pub const processor_set_control_t = mach_port_t;
pub const semaphore_t = mach_port_t;
pub const lock_set_t = mach_port_t;
pub const ledger_t = mach_port_t;
pub const alarm_t = mach_port_t;
pub const clock_serv_t = mach_port_t;
pub const clock_ctrl_t = mach_port_t;
pub const arcade_register_t = mach_port_t;
pub const ipc_eventlink_t = mach_port_t;
pub const eventlink_port_pair_t = [2]mach_port_t;
pub const task_id_token_t = mach_port_t;
pub const kcdata_object_t = mach_port_t;
pub const processor_set_name_t = processor_set_t;
pub const clock_reply_t = mach_port_t;
pub const bootstrap_t = mach_port_t;
pub const mem_entry_name_port_t = mach_port_t;
pub const exception_handler_t = mach_port_t;
pub const exception_handler_array_t = [*c]exception_handler_t;
pub const vm_task_entry_t = mach_port_t;
pub const io_main_t = mach_port_t;
pub const UNDServerRef = mach_port_t;
pub const mach_eventlink_t = mach_port_t;
pub const exception_handler_info_t = ipc_info_port_t;
pub const task_array_t = [*c]task_t;
pub const thread_array_t = [*c]thread_t;
pub const processor_set_array_t = [*c]processor_set_t;
pub const processor_set_name_array_t = [*c]processor_set_t;
pub const processor_array_t = [*c]processor_t;
pub const thread_act_array_t = [*c]thread_act_t;
pub const ledger_array_t = [*c]ledger_t;
pub const task_port_t = task_t;
pub const task_port_array_t = task_array_t;
pub const thread_port_t = thread_t;
pub const thread_port_array_t = thread_array_t;
pub const ipc_space_port_t = ipc_space_t;
pub const host_name_t = host_t;
pub const host_name_port_t = host_t;
pub const processor_set_port_t = processor_set_t;
pub const processor_set_name_port_t = processor_set_t;
pub const processor_set_name_port_array_t = processor_set_array_t;
pub const processor_set_control_port_t = processor_set_t;
pub const processor_port_t = processor_t;
pub const processor_port_array_t = processor_array_t;
pub const thread_act_port_t = thread_act_t;
pub const thread_act_port_array_t = thread_act_array_t;
pub const semaphore_port_t = semaphore_t;
pub const lock_set_port_t = lock_set_t;
pub const ledger_port_t = ledger_t;
pub const ledger_port_array_t = ledger_array_t;
pub const alarm_port_t = alarm_t;
pub const clock_serv_port_t = clock_serv_t;
pub const clock_ctrl_port_t = clock_ctrl_t;
pub const exception_port_t = exception_handler_t;
pub const exception_port_arrary_t = exception_handler_array_t;
pub const vfs_path_t = [4096]u8;
pub const nspace_path_t = [8192]u8;
pub const nspace_name_t = [8192]u8;
pub const mach_task_flavor_t = c_uint;
pub const mach_thread_flavor_t = c_uint;
pub const ledger_item_t = natural_t;
pub const ledger_amount_t = i64;
pub const emulation_vector_t = [*c]mach_vm_offset_t;
pub const user_subsystem_t = [*c]u8;
pub const labelstr_t = [*c]u8;
pub const struct_mach_timebase_info = extern struct {
    numer: u32 = @import("std").mem.zeroes(u32),
    denom: u32 = @import("std").mem.zeroes(u32),
};
pub const mach_timebase_info_t = [*c]struct_mach_timebase_info;
pub const mach_timebase_info_data_t = struct_mach_timebase_info;
pub extern fn mach_timebase_info(info: mach_timebase_info_t) kern_return_t;
pub extern fn mach_wait_until(deadline: u64) kern_return_t;
pub extern fn mach_absolute_time() u64;
pub extern fn mach_approximate_time() u64;
pub extern fn mach_continuous_time() u64;
pub extern fn mach_continuous_approximate_time() u64;
pub extern var zend_hrtime_timerlib_info: mach_timebase_info_data_t;
pub const zend_hrtime_t = u64;
pub extern fn zend_startup_hrtime() void;
pub inline fn zend_hrtime() zend_hrtime_t {
    return (@as(zend_hrtime_t, @bitCast(mach_absolute_time())) *% @as(zend_hrtime_t, @bitCast(@as(c_ulonglong, zend_hrtime_timerlib_info.numer)))) / @as(zend_hrtime_t, @bitCast(@as(c_ulonglong, zend_hrtime_timerlib_info.denom)));
}
pub const struct__zend_gc_status = extern struct {
    active: bool = @import("std").mem.zeroes(bool),
    gc_protected: bool = @import("std").mem.zeroes(bool),
    full: bool = @import("std").mem.zeroes(bool),
    runs: u32 = @import("std").mem.zeroes(u32),
    collected: u32 = @import("std").mem.zeroes(u32),
    threshold: u32 = @import("std").mem.zeroes(u32),
    buf_size: u32 = @import("std").mem.zeroes(u32),
    num_roots: u32 = @import("std").mem.zeroes(u32),
    application_time: zend_hrtime_t = @import("std").mem.zeroes(zend_hrtime_t),
    collector_time: zend_hrtime_t = @import("std").mem.zeroes(zend_hrtime_t),
    dtor_time: zend_hrtime_t = @import("std").mem.zeroes(zend_hrtime_t),
    free_time: zend_hrtime_t = @import("std").mem.zeroes(zend_hrtime_t),
};
pub const zend_gc_status = struct__zend_gc_status;
pub extern var gc_collect_cycles: ?*const fn () callconv(.c) c_int;
pub extern fn gc_possible_root(ref: [*c]zend_refcounted) void;
pub extern fn gc_remove_from_buffer(ref: [*c]zend_refcounted) void;
pub extern fn gc_enable(enable: bool) bool;
pub extern fn gc_enabled() bool;
pub extern fn gc_protect(protect: bool) bool;
pub extern fn gc_protected() bool;
pub extern fn zend_gc_collect_cycles() c_int;
pub extern fn zend_gc_get_status(status: [*c]zend_gc_status) void;
pub extern fn gc_init() void;
pub extern fn gc_globals_ctor() void;
pub extern fn gc_globals_dtor() void;
pub extern fn gc_reset() void;
pub inline fn gc_check_possible_root(arg_ref: [*c]zend_refcounted) void {
    var ref = arg_ref;
    _ = &ref;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(ref.*.gc.u.type_info == @as(u32, @bitCast(@as(c_int, 10) | ((@as(c_int, 1) << @intCast(4)) << @intCast(0))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        var zv: [*c]zval = &@as([*c]zend_reference, @ptrCast(@alignCast(ref))).*.val;
        _ = &zv;
        if (!((@as(c_int, @bitCast(@as(c_uint, zv.*.u1.v.type_flags))) & (@as(c_int, 1) << @intCast(1))) != @as(c_int, 0))) {
            return;
        }
        ref = zv.*.value.counted;
    }
    if (__builtin_expect(@as(c_long, @intFromBool(!!((ref.*.gc.u.type_info & (@as(c_uint, 4294966272) | @as(c_uint, @bitCast((@as(c_int, 1) << @intCast(4)) << @intCast(0))))) == @as(c_uint, @bitCast(@as(c_int, 0)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        gc_possible_root(ref);
    }
}
pub inline fn gc_check_possible_root_no_ref(arg_ref: [*c]zend_refcounted) void {
    var ref = arg_ref;
    _ = &ref;
    __builtin_assume(ref.*.gc.u.type_info != @as(u32, @bitCast(@as(c_int, 10) | ((@as(c_int, 1) << @intCast(4)) << @intCast(0)))));
    if (__builtin_expect(@as(c_long, @intFromBool(!!((ref.*.gc.u.type_info & (@as(c_uint, 4294966272) | @as(c_uint, @bitCast((@as(c_int, 1) << @intCast(4)) << @intCast(0))))) == @as(c_uint, @bitCast(@as(c_int, 0)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        gc_possible_root(ref);
    }
}
pub const zend_get_gc_buffer = extern struct {
    cur: [*c]zval = @import("std").mem.zeroes([*c]zval),
    end: [*c]zval = @import("std").mem.zeroes([*c]zval),
    start: [*c]zval = @import("std").mem.zeroes([*c]zval),
};
pub extern fn zend_get_gc_buffer_create() [*c]zend_get_gc_buffer;
pub extern fn zend_get_gc_buffer_grow(gc_buffer: [*c]zend_get_gc_buffer) void;
pub inline fn zend_get_gc_buffer_add_zval(arg_gc_buffer: [*c]zend_get_gc_buffer, arg_zv: [*c]zval) void {
    var gc_buffer = arg_gc_buffer;
    _ = &gc_buffer;
    var zv = arg_zv;
    _ = &zv;
    if (@as(c_int, @bitCast(@as(c_uint, zv.*.u1.v.type_flags))) != @as(c_int, 0)) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(gc_buffer.*.cur == gc_buffer.*.end))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
            zend_get_gc_buffer_grow(gc_buffer);
        }
        while (true) {
            var _z1: [*c]zval = gc_buffer.*.cur;
            _ = &_z1;
            var _z2: [*c]const zval = zv;
            _ = &_z2;
            var _gc: [*c]zend_refcounted = _z2.*.value.counted;
            _ = &_gc;
            var _t: u32 = _z2.*.u1.type_info;
            _ = &_t;
            while (true) {
                _z1.*.value.counted = _gc;
                _z1.*.u1.type_info = _t;
                if (!false) break;
            }
            if (!false) break;
        }
        gc_buffer.*.cur += 1;
    }
}
pub inline fn zend_get_gc_buffer_add_obj(arg_gc_buffer: [*c]zend_get_gc_buffer, arg_obj: [*c]zend_object) void {
    var gc_buffer = arg_gc_buffer;
    _ = &gc_buffer;
    var obj = arg_obj;
    _ = &obj;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(gc_buffer.*.cur == gc_buffer.*.end))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        zend_get_gc_buffer_grow(gc_buffer);
    }
    while (true) {
        var __z: [*c]zval = gc_buffer.*.cur;
        _ = &__z;
        __z.*.value.obj = obj;
        __z.*.u1.type_info = @as(u32, @bitCast((@as(c_int, 8) | ((@as(c_int, 1) << @intCast(0)) << @intCast(8))) | ((@as(c_int, 1) << @intCast(1)) << @intCast(8))));
        if (!false) break;
    }
    gc_buffer.*.cur += 1;
}
pub inline fn zend_get_gc_buffer_add_ptr(arg_gc_buffer: [*c]zend_get_gc_buffer, arg_ptr: ?*anyopaque) void {
    var gc_buffer = arg_gc_buffer;
    _ = &gc_buffer;
    var ptr = arg_ptr;
    _ = &ptr;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(gc_buffer.*.cur == gc_buffer.*.end))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        zend_get_gc_buffer_grow(gc_buffer);
    }
    while (true) {
        gc_buffer.*.cur.*.value.ptr = ptr;
        gc_buffer.*.cur.*.u1.type_info = 13;
        if (!false) break;
    }
    gc_buffer.*.cur += 1;
}
pub inline fn zend_get_gc_buffer_use(arg_gc_buffer: [*c]zend_get_gc_buffer, arg_table: [*c][*c]zval, arg_n: [*c]c_int) void {
    var gc_buffer = arg_gc_buffer;
    _ = &gc_buffer;
    var table = arg_table;
    _ = &table;
    var n = arg_n;
    _ = &n;
    table.* = gc_buffer.*.start;
    n.* = @as(c_int, @bitCast(@as(c_int, @truncate(@divExact(@as(c_long, @bitCast(@intFromPtr(gc_buffer.*.cur) -% @intFromPtr(gc_buffer.*.start))), @sizeOf(zval))))));
}
pub const zend_string_copy_storage_func_t = ?*const fn () callconv(.c) void;
pub const zend_new_interned_string_func_t = ?*const fn ([*c]zend_string) callconv(.c) [*c]zend_string;
pub const zend_string_init_interned_func_t = ?*const fn ([*c]const u8, usize, bool) callconv(.c) [*c]zend_string;
pub const zend_string_init_existing_interned_func_t = ?*const fn ([*c]const u8, usize, bool) callconv(.c) [*c]zend_string;
pub extern var zend_new_interned_string: zend_new_interned_string_func_t;
pub extern var zend_string_init_interned: zend_string_init_interned_func_t;
pub extern var zend_string_init_existing_interned: zend_string_init_existing_interned_func_t;
pub extern fn zend_string_hash_func(str: [*c]zend_string) zend_ulong;
pub extern fn zend_hash_func(str: [*c]const u8, len: usize) zend_ulong;
pub extern fn zend_interned_string_find_permanent(str: [*c]zend_string) [*c]zend_string;
pub extern fn zend_string_concat2(str1: [*c]const u8, str1_len: usize, str2: [*c]const u8, str2_len: usize) [*c]zend_string;
pub extern fn zend_string_concat3(str1: [*c]const u8, str1_len: usize, str2: [*c]const u8, str2_len: usize, str3: [*c]const u8, str3_len: usize) [*c]zend_string;
pub extern fn zend_interned_strings_init() void;
pub extern fn zend_interned_strings_dtor() void;
pub extern fn zend_interned_strings_activate() void;
pub extern fn zend_interned_strings_deactivate() void;
pub extern fn zend_interned_strings_set_request_storage_handlers(handler: zend_new_interned_string_func_t, init_handler: zend_string_init_interned_func_t, init_existing_handler: zend_string_init_existing_interned_func_t) void;
pub extern fn zend_interned_strings_switch_storage(request: bool) void;
pub extern var zend_empty_string: [*c]zend_string;
pub extern var zend_one_char_string: [256][*c]zend_string;
pub extern var zend_known_strings: [*c][*c]zend_string;
pub inline fn zend_string_hash_val(arg_s: [*c]zend_string) zend_ulong {
    var s = arg_s;
    _ = &s;
    return if (s.*.h != 0) s.*.h else zend_string_hash_func(s);
}
pub inline fn zend_string_forget_hash_val(arg_s: [*c]zend_string) void {
    var s = arg_s;
    _ = &s;
    s.*.h = 0;
    while (true) {
        s.*.gc.u.type_info &= @as(u32, @bitCast(~((@as(c_int, 1) << @intCast(9)) << @intCast(0))));
        if (!false) break;
    }
}
pub inline fn zend_string_refcount(arg_s: [*c]const zend_string) u32 {
    var s = arg_s;
    _ = &s;
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        return zend_gc_refcount(&s.*.gc);
    }
    return 1;
}
pub inline fn zend_string_addref(arg_s: [*c]zend_string) u32 {
    var s = arg_s;
    _ = &s;
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        return zend_gc_addref(&s.*.gc);
    }
    return 1;
}
pub inline fn zend_string_delref(arg_s: [*c]zend_string) u32 {
    var s = arg_s;
    _ = &s;
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        return zend_gc_delref(&s.*.gc);
    }
    return 1;
}
pub inline fn zend_string_alloc(arg_len: usize, arg_persistent: bool) [*c]zend_string {
    var len = arg_len;
    _ = &len;
    var persistent = arg_persistent;
    _ = &persistent;
    var ret: [*c]zend_string = @as([*c]zend_string, @ptrCast(@alignCast(if (@as(c_int, @intFromBool(persistent)) != 0) __zend_malloc(((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) else if (__builtin_constant_p(((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) != 0) if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if ((((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) else _emalloc_huge(((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) else _emalloc(((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))))));
    _ = &ret;
    _ = zend_gc_set_refcount(&ret.*.gc, @as(u32, @bitCast(@as(c_int, 1))));
    ret.*.gc.u.type_info = @as(u32, @bitCast((@as(c_int, 6) | ((@as(c_int, 1) << @intCast(4)) << @intCast(0))) | ((if (@as(c_int, @intFromBool(persistent)) != 0) @as(c_int, 1) << @intCast(7) else @as(c_int, 0)) << @intCast(0))));
    ret.*.h = 0;
    ret.*.len = len;
    return ret;
}
pub inline fn zend_string_safe_alloc(arg_n: usize, arg_m: usize, arg_l: usize, arg_persistent: bool) [*c]zend_string {
    var n = arg_n;
    _ = &n;
    var m = arg_m;
    _ = &m;
    var l = arg_l;
    _ = &l;
    var persistent = arg_persistent;
    _ = &persistent;
    var ret: [*c]zend_string = @as([*c]zend_string, @ptrCast(@alignCast(if (@as(c_int, @intFromBool(persistent)) != 0) _safe_malloc(n, m, ((((@offsetOf(struct__zend_string, "val") +% l) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) else _safe_emalloc(n, m, ((((@offsetOf(struct__zend_string, "val") +% l) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))))));
    _ = &ret;
    _ = zend_gc_set_refcount(&ret.*.gc, @as(u32, @bitCast(@as(c_int, 1))));
    ret.*.gc.u.type_info = @as(u32, @bitCast((@as(c_int, 6) | ((@as(c_int, 1) << @intCast(4)) << @intCast(0))) | ((if (@as(c_int, @intFromBool(persistent)) != 0) @as(c_int, 1) << @intCast(7) else @as(c_int, 0)) << @intCast(0))));
    ret.*.h = 0;
    ret.*.len = (n *% m) +% l;
    return ret;
}
pub inline fn zend_string_init(arg_str: [*c]const u8, arg_len: usize, arg_persistent: bool) [*c]zend_string {
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var persistent = arg_persistent;
    _ = &persistent;
    var ret: [*c]zend_string = zend_string_alloc(len, persistent);
    _ = &ret;
    _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(?*const anyopaque, @ptrCast(str)), len, __builtin_object_size(@as(?*const anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(c_int, 0)));
    ret.*.val[len] = '\x00';
    return ret;
}
pub inline fn zend_string_init_fast(arg_str: [*c]const u8, arg_len: usize) [*c]zend_string {
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    if (len > @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))) {
        return zend_string_init(str, len, @as(c_int, 0) != 0);
    } else if (len == @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) {
        return zend_empty_string;
    } else {
        return zend_one_char_string[@as(zend_uchar, @bitCast(str.*))];
    }
    return null;
}
pub inline fn zend_string_copy(arg_s: [*c]zend_string) [*c]zend_string {
    var s = arg_s;
    _ = &s;
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        _ = zend_gc_addref(&s.*.gc);
    }
    return s;
}
pub inline fn zend_string_dup(arg_s: [*c]zend_string, arg_persistent: bool) [*c]zend_string {
    var s = arg_s;
    _ = &s;
    var persistent = arg_persistent;
    _ = &persistent;
    if ((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0) {
        return s;
    } else {
        return zend_string_init(@as([*c]u8, @ptrCast(@alignCast(&s.*.val[@as(usize, @intCast(0))]))), s.*.len, persistent);
    }
    return null;
}
pub inline fn zend_string_separate(arg_s: [*c]zend_string, arg_persistent: bool) [*c]zend_string {
    var s = arg_s;
    _ = &s;
    var persistent = arg_persistent;
    _ = &persistent;
    if (((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0) or (zend_gc_refcount(&s.*.gc) > @as(u32, @bitCast(@as(c_int, 1))))) {
        if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
            _ = zend_gc_delref(&s.*.gc);
        }
        return zend_string_init(@as([*c]u8, @ptrCast(@alignCast(&s.*.val[@as(usize, @intCast(0))]))), s.*.len, persistent);
    }
    zend_string_forget_hash_val(s);
    return s;
}
pub inline fn zend_string_realloc(arg_s: [*c]zend_string, arg_len: usize, arg_persistent: bool) [*c]zend_string {
    var s = arg_s;
    _ = &s;
    var len = arg_len;
    _ = &len;
    var persistent = arg_persistent;
    _ = &persistent;
    var ret: [*c]zend_string = undefined;
    _ = &ret;
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(zend_gc_refcount(&s.*.gc) == @as(u32, @bitCast(@as(c_int, 1)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
            ret = @as([*c]zend_string, @ptrCast(@alignCast(if (@as(c_int, @intFromBool(persistent)) != 0) __zend_realloc(@as(?*anyopaque, @ptrCast(s)), ((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) else _erealloc(@as(?*anyopaque, @ptrCast(s)), ((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))))));
            ret.*.len = len;
            zend_string_forget_hash_val(ret);
            return ret;
        }
    }
    ret = zend_string_alloc(len, persistent);
    _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(?*const anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&s.*.val[@as(usize, @intCast(0))]))))), (if (len < s.*.len) len else s.*.len) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))), __builtin_object_size(@as(?*const anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(c_int, 0)));
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        _ = zend_gc_delref(&s.*.gc);
    }
    return ret;
}
pub inline fn zend_string_extend(arg_s: [*c]zend_string, arg_len: usize, arg_persistent: bool) [*c]zend_string {
    var s = arg_s;
    _ = &s;
    var len = arg_len;
    _ = &len;
    var persistent = arg_persistent;
    _ = &persistent;
    var ret: [*c]zend_string = undefined;
    _ = &ret;
    __builtin_assume(len >= s.*.len);
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(zend_gc_refcount(&s.*.gc) == @as(u32, @bitCast(@as(c_int, 1)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
            ret = @as([*c]zend_string, @ptrCast(@alignCast(if (@as(c_int, @intFromBool(persistent)) != 0) __zend_realloc(@as(?*anyopaque, @ptrCast(s)), ((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) else _erealloc(@as(?*anyopaque, @ptrCast(s)), ((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))))));
            ret.*.len = len;
            zend_string_forget_hash_val(ret);
            return ret;
        }
    }
    ret = zend_string_alloc(len, persistent);
    _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(?*const anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&s.*.val[@as(usize, @intCast(0))]))))), s.*.len +% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))), __builtin_object_size(@as(?*const anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(c_int, 0)));
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        _ = zend_gc_delref(&s.*.gc);
    }
    return ret;
}
pub inline fn zend_string_truncate(arg_s: [*c]zend_string, arg_len: usize, arg_persistent: bool) [*c]zend_string {
    var s = arg_s;
    _ = &s;
    var len = arg_len;
    _ = &len;
    var persistent = arg_persistent;
    _ = &persistent;
    var ret: [*c]zend_string = undefined;
    _ = &ret;
    __builtin_assume(len <= s.*.len);
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(zend_gc_refcount(&s.*.gc) == @as(u32, @bitCast(@as(c_int, 1)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
            ret = @as([*c]zend_string, @ptrCast(@alignCast(if (@as(c_int, @intFromBool(persistent)) != 0) __zend_realloc(@as(?*anyopaque, @ptrCast(s)), ((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) else _erealloc(@as(?*anyopaque, @ptrCast(s)), ((((@offsetOf(struct__zend_string, "val") +% len) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))))));
            ret.*.len = len;
            zend_string_forget_hash_val(ret);
            return ret;
        }
    }
    ret = zend_string_alloc(len, persistent);
    _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(?*const anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&s.*.val[@as(usize, @intCast(0))]))))), len +% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))), __builtin_object_size(@as(?*const anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(c_int, 0)));
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        _ = zend_gc_delref(&s.*.gc);
    }
    return ret;
}
pub inline fn zend_string_safe_realloc(arg_s: [*c]zend_string, arg_n: usize, arg_m: usize, arg_l: usize, arg_persistent: bool) [*c]zend_string {
    var s = arg_s;
    _ = &s;
    var n = arg_n;
    _ = &n;
    var m = arg_m;
    _ = &m;
    var l = arg_l;
    _ = &l;
    var persistent = arg_persistent;
    _ = &persistent;
    var ret: [*c]zend_string = undefined;
    _ = &ret;
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        if (zend_gc_refcount(&s.*.gc) == @as(u32, @bitCast(@as(c_int, 1)))) {
            ret = @as([*c]zend_string, @ptrCast(@alignCast(if (@as(c_int, @intFromBool(persistent)) != 0) _safe_realloc(@as(?*anyopaque, @ptrCast(s)), n, m, ((((@offsetOf(struct__zend_string, "val") +% l) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) else _safe_erealloc(@as(?*anyopaque, @ptrCast(s)), n, m, ((((@offsetOf(struct__zend_string, "val") +% l) +% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))))));
            ret.*.len = (n *% m) +% l;
            zend_string_forget_hash_val(ret);
            return ret;
        }
    }
    ret = zend_string_safe_alloc(n, m, l, persistent);
    _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(?*const anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&s.*.val[@as(usize, @intCast(0))]))))), (if (((n *% m) +% l) < s.*.len) (n *% m) +% l else s.*.len) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))), __builtin_object_size(@as(?*const anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(&ret.*.val[@as(usize, @intCast(0))]))))), @as(c_int, 0)));
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        _ = zend_gc_delref(&s.*.gc);
    }
    return ret;
}
pub inline fn zend_string_free(arg_s: [*c]zend_string) void {
    var s = arg_s;
    _ = &s;
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        __builtin_assume(zend_gc_refcount(&s.*.gc) <= @as(u32, @bitCast(@as(c_int, 1))));
        _ = if ((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) free(@as(?*anyopaque, @ptrCast(s))) else _efree(@as(?*anyopaque, @ptrCast(s)));
    }
}
pub inline fn zend_string_efree(arg_s: [*c]zend_string) void {
    var s = arg_s;
    _ = &s;
    __builtin_assume(!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0));
    __builtin_assume(zend_gc_refcount(&s.*.gc) <= @as(u32, @bitCast(@as(c_int, 1))));
    __builtin_assume(!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0));
    _efree(@as(?*anyopaque, @ptrCast(s)));
}
pub inline fn zend_string_release(arg_s: [*c]zend_string) void {
    var s = arg_s;
    _ = &s;
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        if (zend_gc_delref(&s.*.gc) == @as(u32, @bitCast(@as(c_int, 0)))) {
            _ = if ((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) free(@as(?*anyopaque, @ptrCast(s))) else _efree(@as(?*anyopaque, @ptrCast(s)));
        }
    }
}
pub inline fn zend_string_release_ex(arg_s: [*c]zend_string, arg_persistent: bool) void {
    var s = arg_s;
    _ = &s;
    var persistent = arg_persistent;
    _ = &persistent;
    if (!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        if (zend_gc_delref(&s.*.gc) == @as(u32, @bitCast(@as(c_int, 0)))) {
            if (persistent) {
                __builtin_assume((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0);
                free(@as(?*anyopaque, @ptrCast(s)));
            } else {
                __builtin_assume(!((zval_gc_flags(s.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0));
                _efree(@as(?*anyopaque, @ptrCast(s)));
            }
        }
    }
}
pub inline fn zend_string_equals_cstr(arg_s1: [*c]const zend_string, arg_s2: [*c]const u8, arg_s2_length: usize) bool {
    var s1 = arg_s1;
    _ = &s1;
    var s2 = arg_s2;
    _ = &s2;
    var s2_length = arg_s2_length;
    _ = &s2_length;
    return (s1.*.len == s2_length) and !(memcmp(@as(?*const anyopaque, @ptrCast(@as([*c]const u8, @ptrCast(@alignCast(&s1.*.val[@as(usize, @intCast(0))]))))), @as(?*const anyopaque, @ptrCast(s2)), s2_length) != 0);
}
pub inline fn zend_string_equal_val(arg_s1: [*c]const zend_string, arg_s2: [*c]const zend_string) bool {
    var s1 = arg_s1;
    _ = &s1;
    var s2 = arg_s2;
    _ = &s2;
    return !(memcmp(@as(?*const anyopaque, @ptrCast(@as([*c]const u8, @ptrCast(@alignCast(&s1.*.val[@as(usize, @intCast(0))]))))), @as(?*const anyopaque, @ptrCast(@as([*c]const u8, @ptrCast(@alignCast(&s2.*.val[@as(usize, @intCast(0))]))))), s1.*.len) != 0);
}
pub inline fn zend_string_equal_content(arg_s1: [*c]const zend_string, arg_s2: [*c]const zend_string) bool {
    var s1 = arg_s1;
    _ = &s1;
    var s2 = arg_s2;
    _ = &s2;
    return (s1.*.len == s2.*.len) and (@as(c_int, @intFromBool(zend_string_equal_val(s1, s2))) != 0);
}
pub inline fn zend_string_equals(arg_s1: [*c]const zend_string, arg_s2: [*c]const zend_string) bool {
    var s1 = arg_s1;
    _ = &s1;
    var s2 = arg_s2;
    _ = &s2;
    return (s1 == s2) or (@as(c_int, @intFromBool(zend_string_equal_content(s1, s2))) != 0);
}
pub inline fn zend_string_starts_with_cstr(arg_str: [*c]const zend_string, arg_prefix: [*c]const u8, arg_prefix_length: usize) bool {
    var str = arg_str;
    _ = &str;
    var prefix = arg_prefix;
    _ = &prefix;
    var prefix_length = arg_prefix_length;
    _ = &prefix_length;
    return (str.*.len >= prefix_length) and !(memcmp(@as(?*const anyopaque, @ptrCast(@as([*c]const u8, @ptrCast(@alignCast(&str.*.val[@as(usize, @intCast(0))]))))), @as(?*const anyopaque, @ptrCast(prefix)), prefix_length) != 0);
}
pub inline fn zend_string_starts_with(arg_str: [*c]const zend_string, arg_prefix: [*c]const zend_string) bool {
    var str = arg_str;
    _ = &str;
    var prefix = arg_prefix;
    _ = &prefix;
    return zend_string_starts_with_cstr(str, @as([*c]const u8, @ptrCast(@alignCast(&prefix.*.val[@as(usize, @intCast(0))]))), prefix.*.len);
}
pub inline fn zend_string_starts_with_cstr_ci(arg_str: [*c]const zend_string, arg_prefix: [*c]const u8, arg_prefix_length: usize) bool {
    var str = arg_str;
    _ = &str;
    var prefix = arg_prefix;
    _ = &prefix;
    var prefix_length = arg_prefix_length;
    _ = &prefix_length;
    return (str.*.len >= prefix_length) and !(strncasecmp(@as([*c]const u8, @ptrCast(@alignCast(&str.*.val[@as(usize, @intCast(0))]))), prefix, prefix_length) != 0);
}
pub inline fn zend_string_starts_with_ci(arg_str: [*c]const zend_string, arg_prefix: [*c]const zend_string) bool {
    var str = arg_str;
    _ = &str;
    var prefix = arg_prefix;
    _ = &prefix;
    return zend_string_starts_with_cstr_ci(str, @as([*c]const u8, @ptrCast(@alignCast(&prefix.*.val[@as(usize, @intCast(0))]))), prefix.*.len);
}
pub inline fn zend_inline_hash_func(arg_str: [*c]const u8, arg_len: usize) zend_ulong {
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var hash: zend_ulong = @as(c_ulonglong, 5381);
    _ = &hash;
    while (len >= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) : (_ = blk: {
        len -%= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))));
        break :blk blk_1: {
            const ref = &str;
            ref.* += @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 8)))));
            break :blk_1 ref.*;
        };
    }) {
        var chunk: u64 = undefined;
        _ = &chunk;
        _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(&chunk)), @as(?*const anyopaque, @ptrCast(str)), @sizeOf(u64), __builtin_object_size(@as(?*const anyopaque, @ptrCast(&chunk)), @as(c_int, 0)));
        hash = (((((((hash *% @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 33))))) +% (((((chunk >> @intCast(@as(c_int, 8) * @as(c_int, 0))) & @as(u64, @bitCast(@as(c_longlong, @as(c_int, 255))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33)))))) +% ((((chunk >> @intCast(@as(c_int, 8) * @as(c_int, 1))) & @as(u64, @bitCast(@as(c_longlong, @as(c_int, 255))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33)))))) +% (((chunk >> @intCast(@as(c_int, 8) * @as(c_int, 2))) & @as(u64, @bitCast(@as(c_longlong, @as(c_int, 255))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33)))))) +% ((chunk >> @intCast(@as(c_int, 8) * @as(c_int, 3))) & @as(u64, @bitCast(@as(c_longlong, @as(c_int, 255)))));
        hash = (((((((hash *% @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 33))))) +% (((((chunk >> @intCast(@as(c_int, 8) * @as(c_int, 4))) & @as(u64, @bitCast(@as(c_longlong, @as(c_int, 255))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33)))))) +% ((((chunk >> @intCast(@as(c_int, 8) * @as(c_int, 5))) & @as(u64, @bitCast(@as(c_longlong, @as(c_int, 255))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33)))))) +% (((chunk >> @intCast(@as(c_int, 8) * @as(c_int, 6))) & @as(u64, @bitCast(@as(c_longlong, @as(c_int, 255))))) *% @as(u64, @bitCast(@as(c_longlong, @as(c_int, 33)))))) +% ((chunk >> @intCast(@as(c_int, 8) * @as(c_int, 7))) & @as(u64, @bitCast(@as(c_longlong, @as(c_int, 255)))));
    }
    if (len >= @as(usize, @bitCast(@as(c_long, @as(c_int, 4))))) {
        hash = ((((hash *% @as(zend_ulong, @bitCast(@as(c_longlong, @bitCast(@as(c_longlong, (@as(c_int, 33) * @as(c_int, 33)) * @as(c_int, 33)))) * @as(c_longlong, 33)))) +% @as(zend_ulong, @bitCast(@as(c_longlong, @bitCast(@as(c_ulonglong, str[@as(c_uint, @intCast(@as(c_int, 0)))]))) * (@as(c_longlong, @bitCast(@as(c_longlong, @as(c_int, 33) * @as(c_int, 33)))) * @as(c_longlong, 33))))) +% @as(zend_ulong, @bitCast(@as(c_longlong, @bitCast(@as(c_ulonglong, str[@as(c_uint, @intCast(@as(c_int, 1)))]))) * (@as(c_longlong, @bitCast(@as(c_longlong, @as(c_int, 33)))) * @as(c_longlong, 33))))) +% @as(zend_ulong, @bitCast(@as(c_longlong, @bitCast(@as(c_ulonglong, str[@as(c_uint, @intCast(@as(c_int, 2)))]))) * @as(c_longlong, 33)))) +% @as(zend_ulong, @bitCast(@as(c_ulonglong, str[@as(c_uint, @intCast(@as(c_int, 3)))])));
        len -%= @as(usize, @bitCast(@as(c_long, @as(c_int, 4))));
        str += @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 4)))));
    }
    if (len >= @as(usize, @bitCast(@as(c_long, @as(c_int, 2))))) {
        if (len > @as(usize, @bitCast(@as(c_long, @as(c_int, 2))))) {
            hash = (((hash *% @as(zend_ulong, @bitCast(@as(c_longlong, @bitCast(@as(c_longlong, @as(c_int, 33) * @as(c_int, 33)))) * @as(c_longlong, 33)))) +% @as(zend_ulong, @bitCast(@as(c_longlong, @bitCast(@as(c_ulonglong, str[@as(c_uint, @intCast(@as(c_int, 0)))]))) * (@as(c_longlong, @bitCast(@as(c_longlong, @as(c_int, 33)))) * @as(c_longlong, 33))))) +% @as(zend_ulong, @bitCast(@as(c_longlong, @bitCast(@as(c_ulonglong, str[@as(c_uint, @intCast(@as(c_int, 1)))]))) * @as(c_longlong, 33)))) +% @as(zend_ulong, @bitCast(@as(c_ulonglong, str[@as(c_uint, @intCast(@as(c_int, 2)))])));
        } else {
            hash = ((hash *% @as(zend_ulong, @bitCast(@as(c_longlong, @bitCast(@as(c_longlong, @as(c_int, 33)))) * @as(c_longlong, 33)))) +% @as(zend_ulong, @bitCast(@as(c_longlong, @bitCast(@as(c_ulonglong, str[@as(c_uint, @intCast(@as(c_int, 0)))]))) * @as(c_longlong, 33)))) +% @as(zend_ulong, @bitCast(@as(c_ulonglong, str[@as(c_uint, @intCast(@as(c_int, 1)))])));
        }
    } else if (len != @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) {
        hash = (hash *% @as(zend_ulong, @bitCast(@as(c_longlong, 33)))) +% @as(zend_ulong, @bitCast(@as(c_ulonglong, str.*)));
    }
    return hash | @as(c_ulonglong, 9223372036854775808);
}
pub const ZEND_STR_FILE: c_int = 0;
pub const ZEND_STR_LINE: c_int = 1;
pub const ZEND_STR_FUNCTION: c_int = 2;
pub const ZEND_STR_CLASS: c_int = 3;
pub const ZEND_STR_OBJECT: c_int = 4;
pub const ZEND_STR_TYPE: c_int = 5;
pub const ZEND_STR_OBJECT_OPERATOR: c_int = 6;
pub const ZEND_STR_PAAMAYIM_NEKUDOTAYIM: c_int = 7;
pub const ZEND_STR_ARGS: c_int = 8;
pub const ZEND_STR_UNKNOWN: c_int = 9;
pub const ZEND_STR_UNKNOWN_CAPITALIZED: c_int = 10;
pub const ZEND_STR_EXIT: c_int = 11;
pub const ZEND_STR_EVAL: c_int = 12;
pub const ZEND_STR_INCLUDE: c_int = 13;
pub const ZEND_STR_REQUIRE: c_int = 14;
pub const ZEND_STR_INCLUDE_ONCE: c_int = 15;
pub const ZEND_STR_REQUIRE_ONCE: c_int = 16;
pub const ZEND_STR_SCALAR: c_int = 17;
pub const ZEND_STR_ERROR_REPORTING: c_int = 18;
pub const ZEND_STR_STATIC: c_int = 19;
pub const ZEND_STR_THIS: c_int = 20;
pub const ZEND_STR_VALUE: c_int = 21;
pub const ZEND_STR_KEY: c_int = 22;
pub const ZEND_STR_MAGIC_INVOKE: c_int = 23;
pub const ZEND_STR_PREVIOUS: c_int = 24;
pub const ZEND_STR_CODE: c_int = 25;
pub const ZEND_STR_MESSAGE: c_int = 26;
pub const ZEND_STR_SEVERITY: c_int = 27;
pub const ZEND_STR_STRING: c_int = 28;
pub const ZEND_STR_TRACE: c_int = 29;
pub const ZEND_STR_SCHEME: c_int = 30;
pub const ZEND_STR_HOST: c_int = 31;
pub const ZEND_STR_PORT: c_int = 32;
pub const ZEND_STR_USER: c_int = 33;
pub const ZEND_STR_PASS: c_int = 34;
pub const ZEND_STR_PATH: c_int = 35;
pub const ZEND_STR_QUERY: c_int = 36;
pub const ZEND_STR_FRAGMENT: c_int = 37;
pub const ZEND_STR_NULL: c_int = 38;
pub const ZEND_STR_BOOLEAN: c_int = 39;
pub const ZEND_STR_INTEGER: c_int = 40;
pub const ZEND_STR_DOUBLE: c_int = 41;
pub const ZEND_STR_ARRAY: c_int = 42;
pub const ZEND_STR_RESOURCE: c_int = 43;
pub const ZEND_STR_CLOSED_RESOURCE: c_int = 44;
pub const ZEND_STR_NAME: c_int = 45;
pub const ZEND_STR_ARGV: c_int = 46;
pub const ZEND_STR_ARGC: c_int = 47;
pub const ZEND_STR_ARRAY_CAPITALIZED: c_int = 48;
pub const ZEND_STR_BOOL: c_int = 49;
pub const ZEND_STR_INT: c_int = 50;
pub const ZEND_STR_FLOAT: c_int = 51;
pub const ZEND_STR_CALLABLE: c_int = 52;
pub const ZEND_STR_ITERABLE: c_int = 53;
pub const ZEND_STR_VOID: c_int = 54;
pub const ZEND_STR_NEVER: c_int = 55;
pub const ZEND_STR_FALSE: c_int = 56;
pub const ZEND_STR_TRUE: c_int = 57;
pub const ZEND_STR_NULL_LOWERCASE: c_int = 58;
pub const ZEND_STR_MIXED: c_int = 59;
pub const ZEND_STR_TRAVERSABLE: c_int = 60;
pub const ZEND_STR_SLEEP: c_int = 61;
pub const ZEND_STR_WAKEUP: c_int = 62;
pub const ZEND_STR_CASES: c_int = 63;
pub const ZEND_STR_FROM: c_int = 64;
pub const ZEND_STR_TRYFROM: c_int = 65;
pub const ZEND_STR_TRYFROM_LOWERCASE: c_int = 66;
pub const ZEND_STR_AUTOGLOBAL_SERVER: c_int = 67;
pub const ZEND_STR_AUTOGLOBAL_ENV: c_int = 68;
pub const ZEND_STR_AUTOGLOBAL_REQUEST: c_int = 69;
pub const ZEND_STR_COUNT: c_int = 70;
pub const ZEND_STR_SENSITIVEPARAMETER: c_int = 71;
pub const ZEND_STR_CONST_EXPR_PLACEHOLDER: c_int = 72;
pub const ZEND_STR_DEPRECATED_CAPITALIZED: c_int = 73;
pub const ZEND_STR_SINCE: c_int = 74;
pub const ZEND_STR_GET: c_int = 75;
pub const ZEND_STR_SET: c_int = 76;
pub const ZEND_STR_LAST_KNOWN: c_int = 77;
pub const enum__zend_known_string_id = c_uint;
pub const zend_known_string_id = enum__zend_known_string_id;
pub extern fn zend_sort(base: ?*anyopaque, nmemb: usize, siz: usize, cmp: compare_func_t, swp: swap_func_t) void;
pub extern fn zend_insert_sort(base: ?*anyopaque, nmemb: usize, siz: usize, cmp: compare_func_t, swp: swap_func_t) void;
pub extern const zend_empty_array: HashTable;
pub const struct__zend_hash_key = extern struct {
    h: zend_ulong = @import("std").mem.zeroes(zend_ulong),
    key: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
};
pub const zend_hash_key = struct__zend_hash_key;
pub const merge_checker_func_t = ?*const fn ([*c]HashTable, [*c]zval, [*c]zend_hash_key, ?*anyopaque) callconv(.c) bool;
pub extern fn _zend_hash_init(ht: [*c]HashTable, nSize: u32, pDestructor: dtor_func_t, persistent: bool) void;
pub extern fn zend_hash_destroy(ht: [*c]HashTable) void;
pub extern fn zend_hash_clean(ht: [*c]HashTable) void;
pub extern fn zend_hash_real_init(ht: [*c]HashTable, @"packed": bool) void;
pub extern fn zend_hash_real_init_packed(ht: [*c]HashTable) void;
pub extern fn zend_hash_real_init_mixed(ht: [*c]HashTable) void;
pub extern fn zend_hash_packed_to_hash(ht: [*c]HashTable) void;
pub extern fn zend_hash_to_packed(ht: [*c]HashTable) void;
pub extern fn zend_hash_extend(ht: [*c]HashTable, nSize: u32, @"packed": bool) void;
pub extern fn zend_hash_discard(ht: [*c]HashTable, nNumUsed: u32) void;
pub extern fn zend_hash_packed_grow(ht: [*c]HashTable) void;
pub extern fn zend_hash_add_or_update(ht: [*c]HashTable, key: [*c]zend_string, pData: [*c]zval, flag: u32) [*c]zval;
pub extern fn zend_hash_update(ht: [*c]HashTable, key: [*c]zend_string, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_update_ind(ht: [*c]HashTable, key: [*c]zend_string, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_add(ht: [*c]HashTable, key: [*c]zend_string, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_add_new(ht: [*c]HashTable, key: [*c]zend_string, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_str_add_or_update(ht: [*c]HashTable, key: [*c]const u8, len: usize, pData: [*c]zval, flag: u32) [*c]zval;
pub extern fn zend_hash_str_update(ht: [*c]HashTable, key: [*c]const u8, len: usize, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_str_update_ind(ht: [*c]HashTable, key: [*c]const u8, len: usize, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_str_add(ht: [*c]HashTable, key: [*c]const u8, len: usize, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_str_add_new(ht: [*c]HashTable, key: [*c]const u8, len: usize, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_index_add_or_update(ht: [*c]HashTable, h: zend_ulong, pData: [*c]zval, flag: u32) [*c]zval;
pub extern fn zend_hash_index_add(ht: [*c]HashTable, h: zend_ulong, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_index_add_new(ht: [*c]HashTable, h: zend_ulong, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_index_update(ht: [*c]HashTable, h: zend_ulong, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_next_index_insert(ht: [*c]HashTable, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_next_index_insert_new(ht: [*c]HashTable, pData: [*c]zval) [*c]zval;
pub extern fn zend_hash_index_add_empty_element(ht: [*c]HashTable, h: zend_ulong) [*c]zval;
pub extern fn zend_hash_add_empty_element(ht: [*c]HashTable, key: [*c]zend_string) [*c]zval;
pub extern fn zend_hash_str_add_empty_element(ht: [*c]HashTable, key: [*c]const u8, len: usize) [*c]zval;
pub extern fn zend_hash_set_bucket_key(ht: [*c]HashTable, p: [*c]Bucket, key: [*c]zend_string) [*c]zval;
pub const apply_func_t = ?*const fn ([*c]zval) callconv(.c) c_int;
pub const apply_func_arg_t = ?*const fn ([*c]zval, ?*anyopaque) callconv(.c) c_int;
pub const apply_func_args_t = ?*const fn ([*c]zval, c_int, va_list, [*c]zend_hash_key) callconv(.c) c_int;
pub extern fn zend_hash_graceful_destroy(ht: [*c]HashTable) void;
pub extern fn zend_hash_graceful_reverse_destroy(ht: [*c]HashTable) void;
pub extern fn zend_hash_apply(ht: [*c]HashTable, apply_func: apply_func_t) void;
pub extern fn zend_hash_apply_with_argument(ht: [*c]HashTable, apply_func: apply_func_arg_t, ?*anyopaque) void;
pub extern fn zend_hash_apply_with_arguments(ht: [*c]HashTable, apply_func: apply_func_args_t, c_int, ...) void;
pub extern fn zend_hash_reverse_apply(ht: [*c]HashTable, apply_func: apply_func_t) void;
pub extern fn zend_hash_del(ht: [*c]HashTable, key: [*c]zend_string) zend_result;
pub extern fn zend_hash_del_ind(ht: [*c]HashTable, key: [*c]zend_string) zend_result;
pub extern fn zend_hash_str_del(ht: [*c]HashTable, key: [*c]const u8, len: usize) zend_result;
pub extern fn zend_hash_str_del_ind(ht: [*c]HashTable, key: [*c]const u8, len: usize) zend_result;
pub extern fn zend_hash_index_del(ht: [*c]HashTable, h: zend_ulong) zend_result;
pub extern fn zend_hash_del_bucket(ht: [*c]HashTable, p: [*c]Bucket) void;
pub extern fn zend_hash_packed_del_val(ht: [*c]HashTable, zv: [*c]zval) void;
pub extern fn zend_hash_find(ht: [*c]const HashTable, key: [*c]zend_string) [*c]zval;
pub extern fn zend_hash_str_find(ht: [*c]const HashTable, key: [*c]const u8, len: usize) [*c]zval;
pub extern fn zend_hash_index_find(ht: [*c]const HashTable, h: zend_ulong) [*c]zval;
pub extern fn _zend_hash_index_find(ht: [*c]const HashTable, h: zend_ulong) [*c]zval;
pub extern fn zend_hash_find_known_hash(ht: [*c]const HashTable, key: [*c]const zend_string) [*c]zval;
pub inline fn zend_hash_find_ex(arg_ht: [*c]const HashTable, arg_key: [*c]zend_string, arg_known_hash: bool) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var known_hash = arg_known_hash;
    _ = &known_hash;
    if (known_hash) {
        return zend_hash_find_known_hash(ht, key);
    } else {
        return zend_hash_find(ht, key);
    }
    return null;
}
pub extern fn zend_hash_lookup(ht: [*c]HashTable, key: [*c]zend_string) [*c]zval;
pub extern fn zend_hash_index_lookup(ht: [*c]HashTable, h: zend_ulong) [*c]zval;
pub inline fn zend_hash_exists(arg_ht: [*c]const HashTable, arg_key: [*c]zend_string) bool {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    return zend_hash_find(ht, key) != @as([*c]zval, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))));
}
pub inline fn zend_hash_str_exists(arg_ht: [*c]const HashTable, arg_str: [*c]const u8, arg_len: usize) bool {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    return zend_hash_str_find(ht, str, len) != @as([*c]zval, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))));
}
pub inline fn zend_hash_index_exists(arg_ht: [*c]const HashTable, arg_h: zend_ulong) bool {
    var ht = arg_ht;
    _ = &ht;
    var h = arg_h;
    _ = &h;
    return zend_hash_index_find(ht, h) != @as([*c]zval, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))));
}
pub extern fn zend_hash_get_current_pos_ex(ht: [*c]const HashTable, pos: HashPosition) HashPosition;
pub extern fn zend_hash_get_current_pos(ht: [*c]const HashTable) HashPosition;
pub extern fn zend_hash_move_forward_ex(ht: [*c]HashTable, pos: [*c]HashPosition) zend_result;
pub extern fn zend_hash_move_backwards_ex(ht: [*c]HashTable, pos: [*c]HashPosition) zend_result;
pub extern fn zend_hash_get_current_key_ex(ht: [*c]const HashTable, str_index: [*c][*c]zend_string, num_index: [*c]zend_ulong, pos: [*c]const HashPosition) c_int;
pub extern fn zend_hash_get_current_key_zval_ex(ht: [*c]const HashTable, key: [*c]zval, pos: [*c]const HashPosition) void;
pub extern fn zend_hash_get_current_key_type_ex(ht: [*c]HashTable, pos: [*c]HashPosition) c_int;
pub extern fn zend_hash_get_current_data_ex(ht: [*c]HashTable, pos: [*c]HashPosition) [*c]zval;
pub extern fn zend_hash_internal_pointer_reset_ex(ht: [*c]HashTable, pos: [*c]HashPosition) void;
pub extern fn zend_hash_internal_pointer_end_ex(ht: [*c]HashTable, pos: [*c]HashPosition) void;
pub inline fn zend_hash_has_more_elements_ex(arg_ht: [*c]HashTable, arg_pos: [*c]HashPosition) zend_result {
    var ht = arg_ht;
    _ = &ht;
    var pos = arg_pos;
    _ = &pos;
    return if (zend_hash_get_current_key_type_ex(ht, pos) == @as(c_int, 3)) FAILURE else SUCCESS;
}
pub inline fn zend_hash_has_more_elements(arg_ht: [*c]HashTable) zend_result {
    var ht = arg_ht;
    _ = &ht;
    return zend_hash_has_more_elements_ex(ht, &ht.*.nInternalPointer);
}
pub inline fn zend_hash_move_forward(arg_ht: [*c]HashTable) zend_result {
    var ht = arg_ht;
    _ = &ht;
    return zend_hash_move_forward_ex(ht, &ht.*.nInternalPointer);
}
pub inline fn zend_hash_move_backwards(arg_ht: [*c]HashTable) zend_result {
    var ht = arg_ht;
    _ = &ht;
    return zend_hash_move_backwards_ex(ht, &ht.*.nInternalPointer);
}
pub inline fn zend_hash_get_current_key(arg_ht: [*c]const HashTable, arg_str_index: [*c][*c]zend_string, arg_num_index: [*c]zend_ulong) c_int {
    var ht = arg_ht;
    _ = &ht;
    var str_index = arg_str_index;
    _ = &str_index;
    var num_index = arg_num_index;
    _ = &num_index;
    return zend_hash_get_current_key_ex(ht, str_index, num_index, &ht.*.nInternalPointer);
}
pub inline fn zend_hash_get_current_key_zval(arg_ht: [*c]const HashTable, arg_key: [*c]zval) void {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    zend_hash_get_current_key_zval_ex(ht, key, &ht.*.nInternalPointer);
}
pub inline fn zend_hash_get_current_key_type(arg_ht: [*c]HashTable) c_int {
    var ht = arg_ht;
    _ = &ht;
    return zend_hash_get_current_key_type_ex(ht, &ht.*.nInternalPointer);
}
pub inline fn zend_hash_get_current_data(arg_ht: [*c]HashTable) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    return zend_hash_get_current_data_ex(ht, &ht.*.nInternalPointer);
}
pub inline fn zend_hash_internal_pointer_reset(arg_ht: [*c]HashTable) void {
    var ht = arg_ht;
    _ = &ht;
    zend_hash_internal_pointer_reset_ex(ht, &ht.*.nInternalPointer);
}
pub inline fn zend_hash_internal_pointer_end(arg_ht: [*c]HashTable) void {
    var ht = arg_ht;
    _ = &ht;
    zend_hash_internal_pointer_end_ex(ht, &ht.*.nInternalPointer);
}
pub extern fn zend_hash_copy(target: [*c]HashTable, source: [*c]HashTable, pCopyConstructor: copy_ctor_func_t) void;
pub extern fn zend_hash_merge(target: [*c]HashTable, source: [*c]HashTable, pCopyConstructor: copy_ctor_func_t, overwrite: bool) void;
pub extern fn zend_hash_merge_ex(target: [*c]HashTable, source: [*c]HashTable, pCopyConstructor: copy_ctor_func_t, pMergeSource: merge_checker_func_t, pParam: ?*anyopaque) void;
pub extern fn zend_hash_bucket_swap(p: [*c]Bucket, q: [*c]Bucket) void;
pub extern fn zend_hash_bucket_renum_swap(p: [*c]Bucket, q: [*c]Bucket) void;
pub extern fn zend_hash_bucket_packed_swap(p: [*c]Bucket, q: [*c]Bucket) void;
pub const bucket_compare_func_t = ?*const fn ([*c]Bucket, [*c]Bucket) callconv(.c) c_int;
pub extern fn zend_hash_compare(ht1: [*c]HashTable, ht2: [*c]HashTable, compar: compare_func_t, ordered: bool) c_int;
pub extern fn zend_hash_sort_ex(ht: [*c]HashTable, sort_func: sort_func_t, compare_func: bucket_compare_func_t, renumber: bool) void;
pub extern fn zend_array_sort_ex(ht: [*c]HashTable, sort_func: sort_func_t, compare_func: bucket_compare_func_t, renumber: bool) void;
pub extern fn zend_hash_minmax(ht: [*c]const HashTable, compar: compare_func_t, flag: u32) [*c]zval;
pub inline fn zend_hash_sort(arg_ht: [*c]HashTable, arg_compare_func: bucket_compare_func_t, arg_renumber: bool) void {
    var ht = arg_ht;
    _ = &ht;
    var compare_func = arg_compare_func;
    _ = &compare_func;
    var renumber = arg_renumber;
    _ = &renumber;
    zend_hash_sort_ex(ht, &zend_sort, compare_func, renumber);
}
pub inline fn zend_array_sort(arg_ht: [*c]HashTable, arg_compare_func: bucket_compare_func_t, arg_renumber: bool) void {
    var ht = arg_ht;
    _ = &ht;
    var compare_func = arg_compare_func;
    _ = &compare_func;
    var renumber = arg_renumber;
    _ = &renumber;
    zend_array_sort_ex(ht, &zend_sort, compare_func, renumber);
}
pub inline fn zend_hash_num_elements(arg_ht: [*c]const HashTable) u32 {
    var ht = arg_ht;
    _ = &ht;
    return ht.*.nNumOfElements;
}
pub inline fn zend_hash_next_free_element(arg_ht: [*c]const HashTable) zend_long {
    var ht = arg_ht;
    _ = &ht;
    return ht.*.nNextFreeElement;
}
pub extern fn zend_hash_rehash(ht: [*c]HashTable) void;
pub extern fn _zend_new_array_0() [*c]HashTable;
pub extern fn _zend_new_array(size: u32) [*c]HashTable;
pub extern fn zend_new_pair(val1: [*c]zval, val2: [*c]zval) [*c]HashTable;
pub extern fn zend_array_count(ht: [*c]HashTable) u32;
pub extern fn zend_array_dup(source: [*c]HashTable) [*c]HashTable;
pub extern fn zend_array_destroy(ht: [*c]HashTable) void;
pub extern fn zend_array_to_list(source: [*c]HashTable) [*c]HashTable;
pub extern fn zend_symtable_clean(ht: [*c]HashTable) void;
pub extern fn zend_symtable_to_proptable(ht: [*c]HashTable) [*c]HashTable;
pub extern fn zend_proptable_to_symtable(ht: [*c]HashTable, always_duplicate: bool) [*c]HashTable;
pub extern fn _zend_handle_numeric_str_ex(key: [*c]const u8, length: usize, idx: [*c]zend_ulong) bool;
pub extern fn zend_hash_iterator_add(ht: [*c]HashTable, pos: HashPosition) u32;
pub extern fn zend_hash_iterator_pos(idx: u32, ht: [*c]HashTable) HashPosition;
pub extern fn zend_hash_iterator_pos_ex(idx: u32, array: [*c]zval) HashPosition;
pub extern fn zend_hash_iterator_del(idx: u32) void;
pub extern fn zend_hash_iterators_lower_pos(ht: [*c]HashTable, start: HashPosition) HashPosition;
pub extern fn _zend_hash_iterators_update(ht: [*c]HashTable, from: HashPosition, to: HashPosition) void;
pub extern fn zend_hash_iterators_advance(ht: [*c]HashTable, step: HashPosition) void;
pub inline fn zend_hash_iterators_update(arg_ht: [*c]HashTable, arg_from: HashPosition, arg_to: HashPosition) void {
    var ht = arg_ht;
    _ = &ht;
    var from = arg_from;
    _ = &from;
    var to = arg_to;
    _ = &to;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, ht.*.u.v.nIteratorsCount))) != @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        _zend_hash_iterators_update(ht, from, to);
    }
}
pub inline fn zend_array_release(arg_array: [*c]zend_array) void {
    var array = arg_array;
    _ = &array;
    if (!((zval_gc_flags(array.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        if (zend_gc_delref(&array.*.gc) == @as(u32, @bitCast(@as(c_int, 0)))) {
            zend_array_destroy(array);
        }
    }
}
pub inline fn zend_hash_release(arg_array: [*c]zend_array) void {
    var array = arg_array;
    _ = &array;
    if (!((zval_gc_flags(array.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        if (zend_gc_delref(&array.*.gc) == @as(u32, @bitCast(@as(c_int, 0)))) {
            zend_hash_destroy(array);
            _ = if ((zval_gc_flags(array.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) free(@as(?*anyopaque, @ptrCast(array))) else _efree(@as(?*anyopaque, @ptrCast(array)));
        }
    }
}
pub inline fn _zend_handle_numeric_str(arg_key: [*c]const u8, arg_length: usize, arg_idx: [*c]zend_ulong) bool {
    var key = arg_key;
    _ = &key;
    var length = arg_length;
    _ = &length;
    var idx = arg_idx;
    _ = &idx;
    var tmp: [*c]const u8 = key;
    _ = &tmp;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, tmp.*))) > @as(c_int, '9')))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        return @as(c_int, 0) != 0;
    } else if (@as(c_int, @bitCast(@as(c_uint, tmp.*))) < @as(c_int, '0')) {
        if (@as(c_int, @bitCast(@as(c_uint, tmp.*))) != @as(c_int, '-')) {
            return @as(c_int, 0) != 0;
        }
        tmp += 1;
        if ((@as(c_int, @bitCast(@as(c_uint, tmp.*))) > @as(c_int, '9')) or (@as(c_int, @bitCast(@as(c_uint, tmp.*))) < @as(c_int, '0'))) {
            return @as(c_int, 0) != 0;
        }
    }
    return _zend_handle_numeric_str_ex(key, length, idx);
}
pub inline fn zend_hash_find_ind(arg_ht: [*c]const HashTable, arg_key: [*c]zend_string) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_find(ht, key);
    return if ((zv != null) and (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) == @as(c_int, 12))) if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*.value.zv.*)))) != @as(c_int, 0)) zv.*.value.zv else null else zv;
}
pub inline fn zend_hash_find_ex_ind(arg_ht: [*c]const HashTable, arg_key: [*c]zend_string, arg_known_hash: bool) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var known_hash = arg_known_hash;
    _ = &known_hash;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_find_ex(ht, key, known_hash);
    return if ((zv != null) and (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) == @as(c_int, 12))) if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*.value.zv.*)))) != @as(c_int, 0)) zv.*.value.zv else null else zv;
}
pub inline fn zend_hash_exists_ind(arg_ht: [*c]const HashTable, arg_key: [*c]zend_string) bool {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_find(ht, key);
    return (zv != null) and ((@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) != @as(c_int, 12)) or (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*.value.zv.*)))) != @as(c_int, 0)));
}
pub inline fn zend_hash_str_find_ind(arg_ht: [*c]const HashTable, arg_str: [*c]const u8, arg_len: usize) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_str_find(ht, str, len);
    return if ((zv != null) and (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) == @as(c_int, 12))) if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*.value.zv.*)))) != @as(c_int, 0)) zv.*.value.zv else null else zv;
}
pub inline fn zend_hash_str_exists_ind(arg_ht: [*c]const HashTable, arg_str: [*c]const u8, arg_len: usize) bool {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_str_find(ht, str, len);
    return (zv != null) and ((@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) != @as(c_int, 12)) or (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*.value.zv.*)))) != @as(c_int, 0)));
}
pub inline fn zend_symtable_add_new(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_pData: [*c]zval) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var pData = arg_pData;
    _ = &pData;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(@as([*c]u8, @ptrCast(@alignCast(&key.*.val[@as(usize, @intCast(0))]))), key.*.len, &idx)) {
        return zend_hash_index_add_new(ht, idx, pData);
    } else {
        return zend_hash_add_new(ht, key, pData);
    }
    return null;
}
pub inline fn zend_symtable_update(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_pData: [*c]zval) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var pData = arg_pData;
    _ = &pData;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(@as([*c]u8, @ptrCast(@alignCast(&key.*.val[@as(usize, @intCast(0))]))), key.*.len, &idx)) {
        return zend_hash_index_update(ht, idx, pData);
    } else {
        return zend_hash_update(ht, key, pData);
    }
    return null;
}
pub inline fn zend_symtable_update_ind(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_pData: [*c]zval) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var pData = arg_pData;
    _ = &pData;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(@as([*c]u8, @ptrCast(@alignCast(&key.*.val[@as(usize, @intCast(0))]))), key.*.len, &idx)) {
        return zend_hash_index_update(ht, idx, pData);
    } else {
        return zend_hash_update_ind(ht, key, pData);
    }
    return null;
}
pub inline fn zend_symtable_del(arg_ht: [*c]HashTable, arg_key: [*c]zend_string) zend_result {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(@as([*c]u8, @ptrCast(@alignCast(&key.*.val[@as(usize, @intCast(0))]))), key.*.len, &idx)) {
        return zend_hash_index_del(ht, idx);
    } else {
        return zend_hash_del(ht, key);
    }
    return @import("std").mem.zeroes(zend_result);
}
pub inline fn zend_symtable_del_ind(arg_ht: [*c]HashTable, arg_key: [*c]zend_string) zend_result {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(@as([*c]u8, @ptrCast(@alignCast(&key.*.val[@as(usize, @intCast(0))]))), key.*.len, &idx)) {
        return zend_hash_index_del(ht, idx);
    } else {
        return zend_hash_del_ind(ht, key);
    }
    return @import("std").mem.zeroes(zend_result);
}
pub inline fn zend_symtable_find(arg_ht: [*c]const HashTable, arg_key: [*c]zend_string) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(@as([*c]u8, @ptrCast(@alignCast(&key.*.val[@as(usize, @intCast(0))]))), key.*.len, &idx)) {
        return zend_hash_index_find(ht, idx);
    } else {
        return zend_hash_find(ht, key);
    }
    return null;
}
pub inline fn zend_symtable_find_ind(arg_ht: [*c]const HashTable, arg_key: [*c]zend_string) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(@as([*c]u8, @ptrCast(@alignCast(&key.*.val[@as(usize, @intCast(0))]))), key.*.len, &idx)) {
        return zend_hash_index_find(ht, idx);
    } else {
        return zend_hash_find_ind(ht, key);
    }
    return null;
}
pub inline fn zend_symtable_exists(arg_ht: [*c]HashTable, arg_key: [*c]zend_string) bool {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(@as([*c]u8, @ptrCast(@alignCast(&key.*.val[@as(usize, @intCast(0))]))), key.*.len, &idx)) {
        return zend_hash_index_exists(ht, idx);
    } else {
        return zend_hash_exists(ht, key);
    }
    return false;
}
pub inline fn zend_symtable_exists_ind(arg_ht: [*c]HashTable, arg_key: [*c]zend_string) bool {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(@as([*c]u8, @ptrCast(@alignCast(&key.*.val[@as(usize, @intCast(0))]))), key.*.len, &idx)) {
        return zend_hash_index_exists(ht, idx);
    } else {
        return zend_hash_exists_ind(ht, key);
    }
    return false;
}
pub inline fn zend_symtable_str_update(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize, arg_pData: [*c]zval) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var pData = arg_pData;
    _ = &pData;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(str, len, &idx)) {
        return zend_hash_index_update(ht, idx, pData);
    } else {
        return zend_hash_str_update(ht, str, len, pData);
    }
    return null;
}
pub inline fn zend_symtable_str_update_ind(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize, arg_pData: [*c]zval) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var pData = arg_pData;
    _ = &pData;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(str, len, &idx)) {
        return zend_hash_index_update(ht, idx, pData);
    } else {
        return zend_hash_str_update_ind(ht, str, len, pData);
    }
    return null;
}
pub inline fn zend_symtable_str_del(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize) zend_result {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(str, len, &idx)) {
        return zend_hash_index_del(ht, idx);
    } else {
        return zend_hash_str_del(ht, str, len);
    }
    return @import("std").mem.zeroes(zend_result);
}
pub inline fn zend_symtable_str_del_ind(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize) zend_result {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(str, len, &idx)) {
        return zend_hash_index_del(ht, idx);
    } else {
        return zend_hash_str_del_ind(ht, str, len);
    }
    return @import("std").mem.zeroes(zend_result);
}
pub inline fn zend_symtable_str_find(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(str, len, &idx)) {
        return zend_hash_index_find(ht, idx);
    } else {
        return zend_hash_str_find(ht, str, len);
    }
    return null;
}
pub inline fn zend_symtable_str_exists(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize) bool {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(str, len, &idx)) {
        return zend_hash_index_exists(ht, idx);
    } else {
        return zend_hash_str_exists(ht, str, len);
    }
    return false;
}
pub inline fn zend_hash_add_ptr(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_add(ht, key, &tmp);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub inline fn zend_hash_add_new_ptr(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_add_new(ht, key, &tmp);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub inline fn zend_hash_str_add_ptr(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_str_add(ht, str, len, &tmp);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub inline fn zend_hash_str_add_new_ptr(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_str_add_new(ht, str, len, &tmp);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub inline fn zend_hash_update_ptr(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_update(ht, key, &tmp);
    __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
    return zv.*.value.ptr;
}
pub inline fn zend_hash_str_update_ptr(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_str_update(ht, str, len, &tmp);
    __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
    return zv.*.value.ptr;
}
pub inline fn zend_hash_add_mem(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_pData: ?*anyopaque, arg_size: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var pData = arg_pData;
    _ = &pData;
    var size = arg_size;
    _ = &size;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    if ((blk: {
        const tmp_1 = zend_hash_add(ht, key, &tmp);
        zv = tmp_1;
        break :blk tmp_1;
    }) != null) {
        zv.*.value.ptr = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) __zend_malloc(size) else if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size);
        _ = __builtin___memcpy_chk(zv.*.value.ptr, pData, size, __builtin_object_size(zv.*.value.ptr, @as(c_int, 0)));
        return zv.*.value.ptr;
    }
    return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
}
pub inline fn zend_hash_add_new_mem(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_pData: ?*anyopaque, arg_size: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var pData = arg_pData;
    _ = &pData;
    var size = arg_size;
    _ = &size;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    if ((blk: {
        const tmp_1 = zend_hash_add_new(ht, key, &tmp);
        zv = tmp_1;
        break :blk tmp_1;
    }) != null) {
        zv.*.value.ptr = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) __zend_malloc(size) else if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size);
        _ = __builtin___memcpy_chk(zv.*.value.ptr, pData, size, __builtin_object_size(zv.*.value.ptr, @as(c_int, 0)));
        return zv.*.value.ptr;
    }
    return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
}
pub inline fn zend_hash_str_add_mem(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize, arg_pData: ?*anyopaque, arg_size: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var pData = arg_pData;
    _ = &pData;
    var size = arg_size;
    _ = &size;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    if ((blk: {
        const tmp_1 = zend_hash_str_add(ht, str, len, &tmp);
        zv = tmp_1;
        break :blk tmp_1;
    }) != null) {
        zv.*.value.ptr = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) __zend_malloc(size) else if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size);
        _ = __builtin___memcpy_chk(zv.*.value.ptr, pData, size, __builtin_object_size(zv.*.value.ptr, @as(c_int, 0)));
        return zv.*.value.ptr;
    }
    return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
}
pub inline fn zend_hash_str_add_new_mem(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize, arg_pData: ?*anyopaque, arg_size: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var pData = arg_pData;
    _ = &pData;
    var size = arg_size;
    _ = &size;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    if ((blk: {
        const tmp_1 = zend_hash_str_add_new(ht, str, len, &tmp);
        zv = tmp_1;
        break :blk tmp_1;
    }) != null) {
        zv.*.value.ptr = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) __zend_malloc(size) else if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size);
        _ = __builtin___memcpy_chk(zv.*.value.ptr, pData, size, __builtin_object_size(zv.*.value.ptr, @as(c_int, 0)));
        return zv.*.value.ptr;
    }
    return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
}
pub inline fn zend_hash_update_mem(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_pData: ?*anyopaque, arg_size: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var pData = arg_pData;
    _ = &pData;
    var size = arg_size;
    _ = &size;
    var p: ?*anyopaque = undefined;
    _ = &p;
    p = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) __zend_malloc(size) else if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size);
    _ = __builtin___memcpy_chk(p, pData, size, __builtin_object_size(p, @as(c_int, 0)));
    return zend_hash_update_ptr(ht, key, p);
}
pub inline fn zend_hash_str_update_mem(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize, arg_pData: ?*anyopaque, arg_size: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var pData = arg_pData;
    _ = &pData;
    var size = arg_size;
    _ = &size;
    var p: ?*anyopaque = undefined;
    _ = &p;
    p = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) __zend_malloc(size) else if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size);
    _ = __builtin___memcpy_chk(p, pData, size, __builtin_object_size(p, @as(c_int, 0)));
    return zend_hash_str_update_ptr(ht, str, len, p);
}
pub inline fn zend_hash_index_add_ptr(arg_ht: [*c]HashTable, arg_h: zend_ulong, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var h = arg_h;
    _ = &h;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_index_add(ht, h, &tmp);
    return if (zv != null) zv.*.value.ptr else @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
}
pub inline fn zend_hash_index_add_new_ptr(arg_ht: [*c]HashTable, arg_h: zend_ulong, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var h = arg_h;
    _ = &h;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_index_add_new(ht, h, &tmp);
    return if (zv != null) zv.*.value.ptr else @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
}
pub inline fn zend_hash_index_update_ptr(arg_ht: [*c]HashTable, arg_h: zend_ulong, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var h = arg_h;
    _ = &h;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_index_update(ht, h, &tmp);
    __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
    return zv.*.value.ptr;
}
pub inline fn zend_hash_index_add_mem(arg_ht: [*c]HashTable, arg_h: zend_ulong, arg_pData: ?*anyopaque, arg_size: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var h = arg_h;
    _ = &h;
    var pData = arg_pData;
    _ = &pData;
    var size = arg_size;
    _ = &size;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    if ((blk: {
        const tmp_1 = zend_hash_index_add(ht, h, &tmp);
        zv = tmp_1;
        break :blk tmp_1;
    }) != null) {
        zv.*.value.ptr = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) __zend_malloc(size) else if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size);
        _ = __builtin___memcpy_chk(zv.*.value.ptr, pData, size, __builtin_object_size(zv.*.value.ptr, @as(c_int, 0)));
        return zv.*.value.ptr;
    }
    return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
}
pub inline fn zend_hash_next_index_insert_ptr(arg_ht: [*c]HashTable, arg_pData: ?*anyopaque) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var pData = arg_pData;
    _ = &pData;
    var tmp: zval = undefined;
    _ = &tmp;
    var zv: [*c]zval = undefined;
    _ = &zv;
    while (true) {
        (&tmp).*.value.ptr = pData;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    zv = zend_hash_next_index_insert(ht, &tmp);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub inline fn zend_hash_index_update_mem(arg_ht: [*c]HashTable, arg_h: zend_ulong, arg_pData: ?*anyopaque, arg_size: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var h = arg_h;
    _ = &h;
    var pData = arg_pData;
    _ = &pData;
    var size = arg_size;
    _ = &size;
    var p: ?*anyopaque = undefined;
    _ = &p;
    p = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) __zend_malloc(size) else if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size);
    _ = __builtin___memcpy_chk(p, pData, size, __builtin_object_size(p, @as(c_int, 0)));
    return zend_hash_index_update_ptr(ht, h, p);
}
pub inline fn zend_hash_next_index_insert_mem(arg_ht: [*c]HashTable, arg_pData: ?*anyopaque, arg_size: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var pData = arg_pData;
    _ = &pData;
    var size = arg_size;
    _ = &size;
    var tmp: zval = undefined;
    _ = &tmp;
    var p: ?*anyopaque = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) __zend_malloc(size) else if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size);
    _ = &p;
    _ = __builtin___memcpy_chk(p, pData, size, __builtin_object_size(p, @as(c_int, 0)));
    while (true) {
        (&tmp).*.value.ptr = p;
        (&tmp).*.u1.type_info = 13;
        if (!false) break;
    }
    if (!(zend_hash_next_index_insert(ht, &tmp) != null)) {
        _ = if ((zval_gc_flags(ht.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0) free(p) else _efree(p);
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return p;
}
pub inline fn zend_hash_find_ptr(arg_ht: [*c]const HashTable, arg_key: [*c]zend_string) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_find(ht, key);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub inline fn zend_hash_find_ex_ptr(arg_ht: [*c]const HashTable, arg_key: [*c]zend_string, arg_known_hash: bool) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var known_hash = arg_known_hash;
    _ = &known_hash;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_find_ex(ht, key, known_hash);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub inline fn zend_hash_str_find_ptr(arg_ht: [*c]const HashTable, arg_str: [*c]const u8, arg_len: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_str_find(ht, str, len);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub extern fn zend_hash_str_find_ptr_lc(ht: [*c]const HashTable, str: [*c]const u8, len: usize) ?*anyopaque;
pub extern fn zend_hash_find_ptr_lc(ht: [*c]const HashTable, key: [*c]zend_string) ?*anyopaque;
pub inline fn zend_hash_index_find_ptr(arg_ht: [*c]const HashTable, arg_h: zend_ulong) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var h = arg_h;
    _ = &h;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_index_find(ht, h);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub inline fn zend_hash_index_find_deref(arg_ht: [*c]HashTable, arg_h: zend_ulong) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var h = arg_h;
    _ = &h;
    var zv: [*c]zval = zend_hash_index_find(ht, h);
    _ = &zv;
    if (zv != null) {
        while (true) {
            if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) == @as(c_int, 10)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
                zv = &zv.*.value.ref.*.val;
            }
            if (!false) break;
        }
    }
    return zv;
}
pub inline fn zend_hash_find_deref(arg_ht: [*c]HashTable, arg_str: [*c]zend_string) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var zv: [*c]zval = zend_hash_find(ht, str);
    _ = &zv;
    if (zv != null) {
        while (true) {
            if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) == @as(c_int, 10)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
                zv = &zv.*.value.ref.*.val;
            }
            if (!false) break;
        }
    }
    return zv;
}
pub inline fn zend_hash_str_find_deref(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var zv: [*c]zval = zend_hash_str_find(ht, str, len);
    _ = &zv;
    if (zv != null) {
        while (true) {
            if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) == @as(c_int, 10)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
                zv = &zv.*.value.ref.*.val;
            }
            if (!false) break;
        }
    }
    return zv;
}
pub inline fn zend_symtable_str_find_ptr(arg_ht: [*c]HashTable, arg_str: [*c]const u8, arg_len: usize) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var str = arg_str;
    _ = &str;
    var len = arg_len;
    _ = &len;
    var idx: zend_ulong = undefined;
    _ = &idx;
    if (_zend_handle_numeric_str(str, len, &idx)) {
        return zend_hash_index_find_ptr(ht, idx);
    } else {
        return zend_hash_str_find_ptr(ht, str, len);
    }
    return null;
}
pub inline fn zend_hash_get_current_data_ptr_ex(arg_ht: [*c]HashTable, arg_pos: [*c]HashPosition) ?*anyopaque {
    var ht = arg_ht;
    _ = &ht;
    var pos = arg_pos;
    _ = &pos;
    var zv: [*c]zval = undefined;
    _ = &zv;
    zv = zend_hash_get_current_data_ex(ht, pos);
    if (zv != null) {
        __builtin_assume(@intFromPtr(zv.*.value.ptr) != 0);
        return zv.*.value.ptr;
    } else {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    return null;
}
pub inline fn zend_array_is_list(arg_array: [*c]zend_array) bool {
    var array = arg_array;
    _ = &array;
    var expected_idx: zend_ulong = 0;
    _ = &expected_idx;
    var num_idx: zend_ulong = undefined;
    _ = &num_idx;
    var str_idx: [*c]zend_string = undefined;
    _ = &str_idx;
    if (zend_hash_num_elements(array) == @as(u32, @bitCast(@as(c_int, 0)))) {
        return @as(c_int, 1) != 0;
    }
    if ((array.*.u.flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(2)))) != @as(u32, @bitCast(@as(c_int, 0)))) {
        if (array.*.nNumUsed == array.*.nNumOfElements) {
            return @as(c_int, 1) != 0;
        }
        while (true) {
            var __ht: [*c]const HashTable = array;
            _ = &__ht;
            var _idx: zend_ulong = @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 0))));
            _ = &_idx;
            var _z: [*c]zval = __ht.*.unnamed_0.arPacked + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 0)))));
            _ = &_z;
            var _end: [*c]zval = __ht.*.unnamed_0.arPacked + __ht.*.nNumUsed;
            _ = &_end;
            __builtin_assume((__ht.*.u.flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(2)))) != @as(u32, @bitCast(@as(c_int, 0))));
            while (_z != _end) : (_ = blk: {
                _z += 1;
                break :blk blk_1: {
                    const ref = &_idx;
                    const tmp = ref.*;
                    ref.* +%= 1;
                    break :blk_1 tmp;
                };
            }) {
                _ = &_idx;
                if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&_z.*)))) == @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) continue;
                num_idx = _idx;
                {
                    if (num_idx != (blk: {
                        const ref = &expected_idx;
                        const tmp = ref.*;
                        ref.* +%= 1;
                        break :blk tmp;
                    })) {
                        return @as(c_int, 0) != 0;
                    }
                }
            }
            if (!false) break;
        }
    } else {
        while (true) {
            var __ht: [*c]const HashTable = array;
            _ = &__ht;
            var _p: [*c]Bucket = __ht.*.unnamed_0.arData + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 0)))));
            _ = &_p;
            var _end: [*c]const Bucket = __ht.*.unnamed_0.arData + __ht.*.nNumUsed;
            _ = &_end;
            __builtin_assume(!((__ht.*.u.flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(2)))) != @as(u32, @bitCast(@as(c_int, 0)))));
            while (_p != @as([*c]Bucket, @ptrCast(@volatileCast(@constCast(_end))))) : (_p += 1) {
                var _z: [*c]zval = &_p.*.val;
                _ = &_z;
                if (false and (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&_z.*)))) == @as(c_int, 12))) {
                    _z = _z.*.value.zv;
                }
                if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&_z.*)))) == @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) continue;
                num_idx = _p.*.h;
                str_idx = _p.*.key;
                {
                    if ((str_idx != @as([*c]zend_string, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))))) or (num_idx != (blk: {
                        const ref = &expected_idx;
                        const tmp = ref.*;
                        ref.* +%= 1;
                        break :blk tmp;
                    }))) {
                        return @as(c_int, 0) != 0;
                    }
                }
            }
            if (!false) break;
        }
    }
    return @as(c_int, 1) != 0;
}
pub inline fn _zend_hash_append_ex(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_zv: [*c]zval, arg_interned: bool) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var zv = arg_zv;
    _ = &zv;
    var interned = arg_interned;
    _ = &interned;
    var idx: u32 = blk: {
        const ref = &ht.*.nNumUsed;
        const tmp = ref.*;
        ref.* +%= 1;
        break :blk tmp;
    };
    _ = &idx;
    var nIndex: u32 = undefined;
    _ = &nIndex;
    var p: [*c]Bucket = ht.*.unnamed_0.arData + idx;
    _ = &p;
    while (true) {
        var _z1: [*c]zval = &p.*.val;
        _ = &_z1;
        var _z2: [*c]const zval = zv;
        _ = &_z2;
        var _gc: [*c]zend_refcounted = _z2.*.value.counted;
        _ = &_gc;
        var _t: u32 = _z2.*.u1.type_info;
        _ = &_t;
        while (true) {
            _z1.*.value.counted = _gc;
            _z1.*.u1.type_info = _t;
            if (!false) break;
        }
        if (!false) break;
    }
    if (!interned and !((zval_gc_flags(key.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        ht.*.u.flags &= @as(u32, @bitCast(~(@as(c_int, 1) << @intCast(4))));
        _ = zend_string_addref(key);
        _ = zend_string_hash_val(key);
    }
    p.*.key = key;
    p.*.h = key.*.h;
    nIndex = @as(u32, @bitCast(@as(c_uint, @truncate(p.*.h)))) | ht.*.nTableMask;
    p.*.val.u2.next = (blk: {
        const tmp = @as(i32, @bitCast(nIndex));
        if (tmp >= 0) break :blk ht.*.unnamed_0.arHash + @as(usize, @intCast(tmp)) else break :blk ht.*.unnamed_0.arHash - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
    }).*;
    (blk: {
        const tmp = @as(i32, @bitCast(nIndex));
        if (tmp >= 0) break :blk ht.*.unnamed_0.arHash + @as(usize, @intCast(tmp)) else break :blk ht.*.unnamed_0.arHash - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
    }).* = idx;
    ht.*.nNumOfElements +%= 1;
    return &p.*.val;
}
pub inline fn _zend_hash_append(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_zv: [*c]zval) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var zv = arg_zv;
    _ = &zv;
    return _zend_hash_append_ex(ht, key, zv, @as(c_int, 0) != 0);
}
pub inline fn _zend_hash_append_ptr_ex(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_ptr: ?*anyopaque, arg_interned: bool) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var ptr = arg_ptr;
    _ = &ptr;
    var interned = arg_interned;
    _ = &interned;
    var idx: u32 = blk: {
        const ref = &ht.*.nNumUsed;
        const tmp = ref.*;
        ref.* +%= 1;
        break :blk tmp;
    };
    _ = &idx;
    var nIndex: u32 = undefined;
    _ = &nIndex;
    var p: [*c]Bucket = ht.*.unnamed_0.arData + idx;
    _ = &p;
    while (true) {
        (&p.*.val).*.value.ptr = ptr;
        (&p.*.val).*.u1.type_info = 13;
        if (!false) break;
    }
    if (!interned and !((zval_gc_flags(key.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        ht.*.u.flags &= @as(u32, @bitCast(~(@as(c_int, 1) << @intCast(4))));
        _ = zend_string_addref(key);
        _ = zend_string_hash_val(key);
    }
    p.*.key = key;
    p.*.h = key.*.h;
    nIndex = @as(u32, @bitCast(@as(c_uint, @truncate(p.*.h)))) | ht.*.nTableMask;
    p.*.val.u2.next = (blk: {
        const tmp = @as(i32, @bitCast(nIndex));
        if (tmp >= 0) break :blk ht.*.unnamed_0.arHash + @as(usize, @intCast(tmp)) else break :blk ht.*.unnamed_0.arHash - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
    }).*;
    (blk: {
        const tmp = @as(i32, @bitCast(nIndex));
        if (tmp >= 0) break :blk ht.*.unnamed_0.arHash + @as(usize, @intCast(tmp)) else break :blk ht.*.unnamed_0.arHash - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
    }).* = idx;
    ht.*.nNumOfElements +%= 1;
    return &p.*.val;
}
pub inline fn _zend_hash_append_ptr(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_ptr: ?*anyopaque) [*c]zval {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var ptr = arg_ptr;
    _ = &ptr;
    return _zend_hash_append_ptr_ex(ht, key, ptr, @as(c_int, 0) != 0);
}
pub inline fn _zend_hash_append_ind(arg_ht: [*c]HashTable, arg_key: [*c]zend_string, arg_ptr: [*c]zval) void {
    var ht = arg_ht;
    _ = &ht;
    var key = arg_key;
    _ = &key;
    var ptr = arg_ptr;
    _ = &ptr;
    var idx: u32 = blk: {
        const ref = &ht.*.nNumUsed;
        const tmp = ref.*;
        ref.* +%= 1;
        break :blk tmp;
    };
    _ = &idx;
    var nIndex: u32 = undefined;
    _ = &nIndex;
    var p: [*c]Bucket = ht.*.unnamed_0.arData + idx;
    _ = &p;
    while (true) {
        (&p.*.val).*.value.zv = ptr;
        (&p.*.val).*.u1.type_info = 12;
        if (!false) break;
    }
    if (!((zval_gc_flags(key.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0)) {
        ht.*.u.flags &= @as(u32, @bitCast(~(@as(c_int, 1) << @intCast(4))));
        _ = zend_string_addref(key);
        _ = zend_string_hash_val(key);
    }
    p.*.key = key;
    p.*.h = key.*.h;
    nIndex = @as(u32, @bitCast(@as(c_uint, @truncate(p.*.h)))) | ht.*.nTableMask;
    p.*.val.u2.next = (blk: {
        const tmp = @as(i32, @bitCast(nIndex));
        if (tmp >= 0) break :blk ht.*.unnamed_0.arHash + @as(usize, @intCast(tmp)) else break :blk ht.*.unnamed_0.arHash - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
    }).*;
    (blk: {
        const tmp = @as(i32, @bitCast(nIndex));
        if (tmp >= 0) break :blk ht.*.unnamed_0.arHash + @as(usize, @intCast(tmp)) else break :blk ht.*.unnamed_0.arHash - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
    }).* = idx;
    ht.*.nNumOfElements +%= 1;
}
pub const ZEND_AST_ZVAL: c_int = 64;
pub const ZEND_AST_CONSTANT: c_int = 65;
pub const ZEND_AST_ZNODE: c_int = 66;
pub const ZEND_AST_FUNC_DECL: c_int = 67;
pub const ZEND_AST_CLOSURE: c_int = 68;
pub const ZEND_AST_METHOD: c_int = 69;
pub const ZEND_AST_CLASS: c_int = 70;
pub const ZEND_AST_ARROW_FUNC: c_int = 71;
pub const ZEND_AST_PROPERTY_HOOK: c_int = 72;
pub const ZEND_AST_ARG_LIST: c_int = 128;
pub const ZEND_AST_ARRAY: c_int = 129;
pub const ZEND_AST_ENCAPS_LIST: c_int = 130;
pub const ZEND_AST_EXPR_LIST: c_int = 131;
pub const ZEND_AST_STMT_LIST: c_int = 132;
pub const ZEND_AST_IF: c_int = 133;
pub const ZEND_AST_SWITCH_LIST: c_int = 134;
pub const ZEND_AST_CATCH_LIST: c_int = 135;
pub const ZEND_AST_PARAM_LIST: c_int = 136;
pub const ZEND_AST_CLOSURE_USES: c_int = 137;
pub const ZEND_AST_PROP_DECL: c_int = 138;
pub const ZEND_AST_CONST_DECL: c_int = 139;
pub const ZEND_AST_CLASS_CONST_DECL: c_int = 140;
pub const ZEND_AST_NAME_LIST: c_int = 141;
pub const ZEND_AST_TRAIT_ADAPTATIONS: c_int = 142;
pub const ZEND_AST_USE: c_int = 143;
pub const ZEND_AST_TYPE_UNION: c_int = 144;
pub const ZEND_AST_TYPE_INTERSECTION: c_int = 145;
pub const ZEND_AST_ATTRIBUTE_LIST: c_int = 146;
pub const ZEND_AST_ATTRIBUTE_GROUP: c_int = 147;
pub const ZEND_AST_MATCH_ARM_LIST: c_int = 148;
pub const ZEND_AST_MODIFIER_LIST: c_int = 149;
pub const ZEND_AST_MAGIC_CONST: c_int = 0;
pub const ZEND_AST_TYPE: c_int = 1;
pub const ZEND_AST_CONSTANT_CLASS: c_int = 2;
pub const ZEND_AST_CALLABLE_CONVERT: c_int = 3;
pub const ZEND_AST_VAR: c_int = 256;
pub const ZEND_AST_CONST: c_int = 257;
pub const ZEND_AST_UNPACK: c_int = 258;
pub const ZEND_AST_UNARY_PLUS: c_int = 259;
pub const ZEND_AST_UNARY_MINUS: c_int = 260;
pub const ZEND_AST_CAST: c_int = 261;
pub const ZEND_AST_EMPTY: c_int = 262;
pub const ZEND_AST_ISSET: c_int = 263;
pub const ZEND_AST_SILENCE: c_int = 264;
pub const ZEND_AST_SHELL_EXEC: c_int = 265;
pub const ZEND_AST_CLONE: c_int = 266;
pub const ZEND_AST_EXIT: c_int = 267;
pub const ZEND_AST_PRINT: c_int = 268;
pub const ZEND_AST_INCLUDE_OR_EVAL: c_int = 269;
pub const ZEND_AST_UNARY_OP: c_int = 270;
pub const ZEND_AST_PRE_INC: c_int = 271;
pub const ZEND_AST_PRE_DEC: c_int = 272;
pub const ZEND_AST_POST_INC: c_int = 273;
pub const ZEND_AST_POST_DEC: c_int = 274;
pub const ZEND_AST_YIELD_FROM: c_int = 275;
pub const ZEND_AST_CLASS_NAME: c_int = 276;
pub const ZEND_AST_GLOBAL: c_int = 277;
pub const ZEND_AST_UNSET: c_int = 278;
pub const ZEND_AST_RETURN: c_int = 279;
pub const ZEND_AST_LABEL: c_int = 280;
pub const ZEND_AST_REF: c_int = 281;
pub const ZEND_AST_HALT_COMPILER: c_int = 282;
pub const ZEND_AST_ECHO: c_int = 283;
pub const ZEND_AST_THROW: c_int = 284;
pub const ZEND_AST_GOTO: c_int = 285;
pub const ZEND_AST_BREAK: c_int = 286;
pub const ZEND_AST_CONTINUE: c_int = 287;
pub const ZEND_AST_PROPERTY_HOOK_SHORT_BODY: c_int = 288;
pub const ZEND_AST_DIM: c_int = 512;
pub const ZEND_AST_PROP: c_int = 513;
pub const ZEND_AST_NULLSAFE_PROP: c_int = 514;
pub const ZEND_AST_STATIC_PROP: c_int = 515;
pub const ZEND_AST_CALL: c_int = 516;
pub const ZEND_AST_CLASS_CONST: c_int = 517;
pub const ZEND_AST_ASSIGN: c_int = 518;
pub const ZEND_AST_ASSIGN_REF: c_int = 519;
pub const ZEND_AST_ASSIGN_OP: c_int = 520;
pub const ZEND_AST_BINARY_OP: c_int = 521;
pub const ZEND_AST_GREATER: c_int = 522;
pub const ZEND_AST_GREATER_EQUAL: c_int = 523;
pub const ZEND_AST_AND: c_int = 524;
pub const ZEND_AST_OR: c_int = 525;
pub const ZEND_AST_ARRAY_ELEM: c_int = 526;
pub const ZEND_AST_NEW: c_int = 527;
pub const ZEND_AST_INSTANCEOF: c_int = 528;
pub const ZEND_AST_YIELD: c_int = 529;
pub const ZEND_AST_COALESCE: c_int = 530;
pub const ZEND_AST_ASSIGN_COALESCE: c_int = 531;
pub const ZEND_AST_STATIC: c_int = 532;
pub const ZEND_AST_WHILE: c_int = 533;
pub const ZEND_AST_DO_WHILE: c_int = 534;
pub const ZEND_AST_IF_ELEM: c_int = 535;
pub const ZEND_AST_SWITCH: c_int = 536;
pub const ZEND_AST_SWITCH_CASE: c_int = 537;
pub const ZEND_AST_DECLARE: c_int = 538;
pub const ZEND_AST_USE_TRAIT: c_int = 539;
pub const ZEND_AST_TRAIT_PRECEDENCE: c_int = 540;
pub const ZEND_AST_METHOD_REFERENCE: c_int = 541;
pub const ZEND_AST_NAMESPACE: c_int = 542;
pub const ZEND_AST_USE_ELEM: c_int = 543;
pub const ZEND_AST_TRAIT_ALIAS: c_int = 544;
pub const ZEND_AST_GROUP_USE: c_int = 545;
pub const ZEND_AST_ATTRIBUTE: c_int = 546;
pub const ZEND_AST_MATCH: c_int = 547;
pub const ZEND_AST_MATCH_ARM: c_int = 548;
pub const ZEND_AST_NAMED_ARG: c_int = 549;
pub const ZEND_AST_PARENT_PROPERTY_HOOK_CALL: c_int = 550;
pub const ZEND_AST_METHOD_CALL: c_int = 768;
pub const ZEND_AST_NULLSAFE_METHOD_CALL: c_int = 769;
pub const ZEND_AST_STATIC_CALL: c_int = 770;
pub const ZEND_AST_CONDITIONAL: c_int = 771;
pub const ZEND_AST_TRY: c_int = 772;
pub const ZEND_AST_CATCH: c_int = 773;
pub const ZEND_AST_PROP_GROUP: c_int = 774;
pub const ZEND_AST_CONST_ELEM: c_int = 775;
pub const ZEND_AST_CLASS_CONST_GROUP: c_int = 776;
pub const ZEND_AST_CONST_ENUM_INIT: c_int = 777;
pub const ZEND_AST_FOR: c_int = 1024;
pub const ZEND_AST_FOREACH: c_int = 1025;
pub const ZEND_AST_ENUM_CASE: c_int = 1026;
pub const ZEND_AST_PROP_ELEM: c_int = 1027;
pub const ZEND_AST_PARAM: c_int = 1536;
pub const enum__zend_ast_kind = c_uint;
pub const struct__zend_ast_list = extern struct {
    kind: zend_ast_kind = @import("std").mem.zeroes(zend_ast_kind),
    attr: zend_ast_attr = @import("std").mem.zeroes(zend_ast_attr),
    lineno: u32 = @import("std").mem.zeroes(u32),
    children: u32 = @import("std").mem.zeroes(u32),
    child: [1][*c]zend_ast = @import("std").mem.zeroes([1][*c]zend_ast),
};
pub const zend_ast_list = struct__zend_ast_list;
pub const struct__zend_ast_zval = extern struct {
    kind: zend_ast_kind = @import("std").mem.zeroes(zend_ast_kind),
    attr: zend_ast_attr = @import("std").mem.zeroes(zend_ast_attr),
    val: zval = @import("std").mem.zeroes(zval),
};
pub const zend_ast_zval = struct__zend_ast_zval;
pub const struct__zend_ast_decl = extern struct {
    kind: zend_ast_kind = @import("std").mem.zeroes(zend_ast_kind),
    attr: zend_ast_attr = @import("std").mem.zeroes(zend_ast_attr),
    start_lineno: u32 = @import("std").mem.zeroes(u32),
    end_lineno: u32 = @import("std").mem.zeroes(u32),
    flags: u32 = @import("std").mem.zeroes(u32),
    doc_comment: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    child: [5][*c]zend_ast = @import("std").mem.zeroes([5][*c]zend_ast),
};
pub const zend_ast_decl = struct__zend_ast_decl;
pub const zend_ast_process_t = ?*const fn ([*c]zend_ast) callconv(.c) void;
pub extern var zend_ast_process: zend_ast_process_t;
pub extern fn zend_ast_create_zval_with_lineno(zv: [*c]zval, lineno: u32) [*c]zend_ast;
pub extern fn zend_ast_create_zval_ex(zv: [*c]zval, attr: zend_ast_attr) [*c]zend_ast;
pub extern fn zend_ast_create_zval(zv: [*c]zval) [*c]zend_ast;
pub extern fn zend_ast_create_zval_from_str(str: [*c]zend_string) [*c]zend_ast;
pub extern fn zend_ast_create_zval_from_long(lval: zend_long) [*c]zend_ast;
pub extern fn zend_ast_create_constant(name: [*c]zend_string, attr: zend_ast_attr) [*c]zend_ast;
pub extern fn zend_ast_create_class_const_or_name(class_name: [*c]zend_ast, name: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_ast_create_0(kind: zend_ast_kind) [*c]zend_ast;
pub extern fn zend_ast_create_1(kind: zend_ast_kind, child: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_ast_create_2(kind: zend_ast_kind, child1: [*c]zend_ast, child2: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_ast_create_3(kind: zend_ast_kind, child1: [*c]zend_ast, child2: [*c]zend_ast, child3: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_ast_create_4(kind: zend_ast_kind, child1: [*c]zend_ast, child2: [*c]zend_ast, child3: [*c]zend_ast, child4: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_ast_create_5(kind: zend_ast_kind, child1: [*c]zend_ast, child2: [*c]zend_ast, child3: [*c]zend_ast, child4: [*c]zend_ast, child5: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_ast_create_va(kind: zend_ast_kind, attr: zend_ast_attr, va: [*c]va_list) [*c]zend_ast;
pub extern fn zend_ast_create_n(kind: c_uint, ...) [*c]zend_ast;
pub extern fn zend_ast_create_ex_n(kind: zend_ast_kind, attr: c_uint, ...) [*c]zend_ast;
pub inline fn zend_ast_create_ex_0(arg_kind: zend_ast_kind, arg_attr: zend_ast_attr) [*c]zend_ast {
    var kind = arg_kind;
    _ = &kind;
    var attr = arg_attr;
    _ = &attr;
    var ast: [*c]zend_ast = zend_ast_create_0(kind);
    _ = &ast;
    ast.*.attr = attr;
    return ast;
}
pub inline fn zend_ast_create_ex_1(arg_kind: zend_ast_kind, arg_attr: zend_ast_attr, arg_child: [*c]zend_ast) [*c]zend_ast {
    var kind = arg_kind;
    _ = &kind;
    var attr = arg_attr;
    _ = &attr;
    var child = arg_child;
    _ = &child;
    var ast: [*c]zend_ast = zend_ast_create_1(kind, child);
    _ = &ast;
    ast.*.attr = attr;
    return ast;
}
pub inline fn zend_ast_create_ex_2(arg_kind: zend_ast_kind, arg_attr: zend_ast_attr, arg_child1: [*c]zend_ast, arg_child2: [*c]zend_ast) [*c]zend_ast {
    var kind = arg_kind;
    _ = &kind;
    var attr = arg_attr;
    _ = &attr;
    var child1 = arg_child1;
    _ = &child1;
    var child2 = arg_child2;
    _ = &child2;
    var ast: [*c]zend_ast = zend_ast_create_2(kind, child1, child2);
    _ = &ast;
    ast.*.attr = attr;
    return ast;
}
pub inline fn zend_ast_create_ex_3(arg_kind: zend_ast_kind, arg_attr: zend_ast_attr, arg_child1: [*c]zend_ast, arg_child2: [*c]zend_ast, arg_child3: [*c]zend_ast) [*c]zend_ast {
    var kind = arg_kind;
    _ = &kind;
    var attr = arg_attr;
    _ = &attr;
    var child1 = arg_child1;
    _ = &child1;
    var child2 = arg_child2;
    _ = &child2;
    var child3 = arg_child3;
    _ = &child3;
    var ast: [*c]zend_ast = zend_ast_create_3(kind, child1, child2, child3);
    _ = &ast;
    ast.*.attr = attr;
    return ast;
}
pub inline fn zend_ast_create_ex_4(arg_kind: zend_ast_kind, arg_attr: zend_ast_attr, arg_child1: [*c]zend_ast, arg_child2: [*c]zend_ast, arg_child3: [*c]zend_ast, arg_child4: [*c]zend_ast) [*c]zend_ast {
    var kind = arg_kind;
    _ = &kind;
    var attr = arg_attr;
    _ = &attr;
    var child1 = arg_child1;
    _ = &child1;
    var child2 = arg_child2;
    _ = &child2;
    var child3 = arg_child3;
    _ = &child3;
    var child4 = arg_child4;
    _ = &child4;
    var ast: [*c]zend_ast = zend_ast_create_4(kind, child1, child2, child3, child4);
    _ = &ast;
    ast.*.attr = attr;
    return ast;
}
pub inline fn zend_ast_create_ex_5(arg_kind: zend_ast_kind, arg_attr: zend_ast_attr, arg_child1: [*c]zend_ast, arg_child2: [*c]zend_ast, arg_child3: [*c]zend_ast, arg_child4: [*c]zend_ast, arg_child5: [*c]zend_ast) [*c]zend_ast {
    var kind = arg_kind;
    _ = &kind;
    var attr = arg_attr;
    _ = &attr;
    var child1 = arg_child1;
    _ = &child1;
    var child2 = arg_child2;
    _ = &child2;
    var child3 = arg_child3;
    _ = &child3;
    var child4 = arg_child4;
    _ = &child4;
    var child5 = arg_child5;
    _ = &child5;
    var ast: [*c]zend_ast = zend_ast_create_5(kind, child1, child2, child3, child4, child5);
    _ = &ast;
    ast.*.attr = attr;
    return ast;
}
pub extern fn zend_ast_create_list_0(kind: zend_ast_kind) [*c]zend_ast;
pub extern fn zend_ast_create_list_1(kind: zend_ast_kind, child: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_ast_create_list_2(kind: zend_ast_kind, child1: [*c]zend_ast, child2: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_ast_list_add(list: [*c]zend_ast, op: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_ast_create_decl(kind: zend_ast_kind, flags: u32, start_lineno: u32, doc_comment: [*c]zend_string, name: [*c]zend_string, child0: [*c]zend_ast, child1: [*c]zend_ast, child2: [*c]zend_ast, child3: [*c]zend_ast, child4: [*c]zend_ast) [*c]zend_ast;
pub const zend_ast_evaluate_ctx = extern struct {
    had_side_effects: bool = @import("std").mem.zeroes(bool),
};
pub extern fn zend_ast_evaluate(result: [*c]zval, ast: [*c]zend_ast, scope: [*c]zend_class_entry) zend_result;
pub extern fn zend_ast_evaluate_ex(result: [*c]zval, ast: [*c]zend_ast, scope: [*c]zend_class_entry, short_circuited_ptr: [*c]bool, ctx: [*c]zend_ast_evaluate_ctx) zend_result;
pub extern fn zend_ast_export(prefix: [*c]const u8, ast: [*c]zend_ast, suffix: [*c]const u8) [*c]zend_string;
pub extern fn zend_ast_copy(ast: [*c]zend_ast) [*c]zend_ast_ref;
pub extern fn zend_ast_destroy(ast: [*c]zend_ast) void;
pub extern fn zend_ast_ref_destroy(ast: [*c]zend_ast_ref) void;
pub const zend_ast_apply_func = ?*const fn ([*c][*c]zend_ast, ?*anyopaque) callconv(.c) void;
pub extern fn zend_ast_apply(ast: [*c]zend_ast, @"fn": zend_ast_apply_func, context: ?*anyopaque) void;
pub inline fn zend_ast_size(arg_children: u32) usize {
    var children = arg_children;
    _ = &children;
    return @offsetOf(struct__zend_ast, "child") +% (@sizeOf([*c]zend_ast) *% @as(c_ulong, @bitCast(@as(c_ulong, children))));
}
pub inline fn zend_ast_is_special(arg_ast: [*c]zend_ast) bool {
    var ast = arg_ast;
    _ = &ast;
    return ((@as(c_int, @bitCast(@as(c_uint, ast.*.kind))) >> @intCast(6)) & @as(c_int, 1)) != 0;
}
pub inline fn zend_ast_is_list(arg_ast: [*c]zend_ast) bool {
    var ast = arg_ast;
    _ = &ast;
    return ((@as(c_int, @bitCast(@as(c_uint, ast.*.kind))) >> @intCast(7)) & @as(c_int, 1)) != 0;
}
pub inline fn zend_ast_get_list(arg_ast: [*c]zend_ast) [*c]zend_ast_list {
    var ast = arg_ast;
    _ = &ast;
    __builtin_assume(zend_ast_is_list(ast));
    return @as([*c]zend_ast_list, @ptrCast(@alignCast(ast)));
}
pub inline fn zend_ast_get_zval(arg_ast: [*c]zend_ast) [*c]zval {
    var ast = arg_ast;
    _ = &ast;
    __builtin_assume(@as(c_int, @bitCast(@as(c_uint, ast.*.kind))) == ZEND_AST_ZVAL);
    return &@as([*c]zend_ast_zval, @ptrCast(@alignCast(ast))).*.val;
}
pub inline fn zend_ast_get_str(arg_ast: [*c]zend_ast) [*c]zend_string {
    var ast = arg_ast;
    _ = &ast;
    var zv: [*c]zval = zend_ast_get_zval(ast);
    _ = &zv;
    __builtin_assume(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) == @as(c_int, 6));
    return zv.*.value.str;
}
pub inline fn zend_ast_get_constant_name(arg_ast: [*c]zend_ast) [*c]zend_string {
    var ast = arg_ast;
    _ = &ast;
    __builtin_assume(@as(c_int, @bitCast(@as(c_uint, ast.*.kind))) == ZEND_AST_CONSTANT);
    __builtin_assume(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&@as([*c]zend_ast_zval, @ptrCast(@alignCast(ast))).*.val)))) == @as(c_int, 6));
    return @as([*c]zend_ast_zval, @ptrCast(@alignCast(ast))).*.val.value.str;
}
pub inline fn zend_ast_get_num_children(arg_ast: [*c]zend_ast) u32 {
    var ast = arg_ast;
    _ = &ast;
    __builtin_assume(!zend_ast_is_list(ast));
    return @as(u32, @bitCast(@as(c_int, @bitCast(@as(c_uint, ast.*.kind))) >> @intCast(8)));
}
pub inline fn zend_ast_get_lineno(arg_ast: [*c]zend_ast) u32 {
    var ast = arg_ast;
    _ = &ast;
    if (@as(c_int, @bitCast(@as(c_uint, ast.*.kind))) == ZEND_AST_ZVAL) {
        var zv: [*c]zval = zend_ast_get_zval(ast);
        _ = &zv;
        return zv.*.u2.lineno;
    } else if (@as(c_int, @bitCast(@as(c_uint, ast.*.kind))) == ZEND_AST_CONSTANT) {
        var zv: [*c]zval = &@as([*c]zend_ast_zval, @ptrCast(@alignCast(ast))).*.val;
        _ = &zv;
        return zv.*.u2.lineno;
    } else {
        return ast.*.lineno;
    }
    return @import("std").mem.zeroes(u32);
}
pub inline fn zend_ast_create_binary_op(arg_opcode: u32, arg_op0: [*c]zend_ast, arg_op1: [*c]zend_ast) [*c]zend_ast {
    var opcode = arg_opcode;
    _ = &opcode;
    var op0 = arg_op0;
    _ = &op0;
    var op1 = arg_op1;
    _ = &op1;
    return zend_ast_create_ex_2(@as(zend_ast_kind, @bitCast(@as(c_short, @truncate(ZEND_AST_BINARY_OP)))), @as(zend_ast_attr, @bitCast(@as(c_ushort, @truncate(opcode)))), op0, op1);
}
pub extern fn zend_ast_create_concat_op(op0: [*c]zend_ast, op1: [*c]zend_ast) [*c]zend_ast;
pub inline fn zend_ast_create_assign_op(arg_opcode: u32, arg_op0: [*c]zend_ast, arg_op1: [*c]zend_ast) [*c]zend_ast {
    var opcode = arg_opcode;
    _ = &opcode;
    var op0 = arg_op0;
    _ = &op0;
    var op1 = arg_op1;
    _ = &op1;
    return zend_ast_create_ex_2(@as(zend_ast_kind, @bitCast(@as(c_short, @truncate(ZEND_AST_ASSIGN_OP)))), @as(zend_ast_attr, @bitCast(@as(c_ushort, @truncate(opcode)))), op0, op1);
}
pub inline fn zend_ast_create_cast(arg_type: u32, arg_op0: [*c]zend_ast) [*c]zend_ast {
    var @"type" = arg_type;
    _ = &@"type";
    var op0 = arg_op0;
    _ = &op0;
    return zend_ast_create_ex_1(@as(zend_ast_kind, @bitCast(@as(c_short, @truncate(ZEND_AST_CAST)))), @as(zend_ast_attr, @bitCast(@as(c_ushort, @truncate(@"type")))), op0);
}
pub inline fn zend_ast_list_rtrim(arg_ast: [*c]zend_ast) [*c]zend_ast {
    var ast = arg_ast;
    _ = &ast;
    var list: [*c]zend_ast_list = zend_ast_get_list(ast);
    _ = &list;
    if ((list.*.children != 0) and (list.*.child[list.*.children -% @as(u32, @bitCast(@as(c_int, 1)))] == @as([*c]zend_ast, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0)))))))) {
        list.*.children -%= 1;
    }
    return ast;
}
pub extern fn zend_ast_with_attributes(ast: [*c]zend_ast, attr: [*c]zend_ast) [*c]zend_ast;
pub extern fn rc_dtor_func(p: [*c]zend_refcounted) void;
pub extern fn zval_copy_ctor_func(zvalue: [*c]zval) void;
pub inline fn zval_ptr_dtor_nogc(arg_zval_ptr: [*c]zval) void {
    var zval_ptr = arg_zval_ptr;
    _ = &zval_ptr;
    if ((@as(c_int, @bitCast(@as(c_uint, zval_ptr.*.u1.v.type_flags))) != @as(c_int, 0)) and !(zval_delref_p(zval_ptr) != 0)) {
        rc_dtor_func(zval_ptr.*.value.counted);
    }
}
pub inline fn i_zval_ptr_dtor(arg_zval_ptr: [*c]zval) void {
    var zval_ptr = arg_zval_ptr;
    _ = &zval_ptr;
    if (@as(c_int, @bitCast(@as(c_uint, zval_ptr.*.u1.v.type_flags))) != @as(c_int, 0)) {
        var ref: [*c]zend_refcounted = zval_ptr.*.value.counted;
        _ = &ref;
        if (!(zend_gc_delref(&ref.*.gc) != 0)) {
            rc_dtor_func(ref);
        } else {
            gc_check_possible_root(ref);
        }
    }
}
pub inline fn zval_copy_ctor(arg_zvalue: [*c]zval) void {
    var zvalue = arg_zvalue;
    _ = &zvalue;
    if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zvalue.*)))) == @as(c_int, 7)) {
        while (true) {
            var __arr: [*c]zend_array = zend_array_dup(zvalue.*.value.arr);
            _ = &__arr;
            var __z: [*c]zval = zvalue;
            _ = &__z;
            __z.*.value.arr = __arr;
            __z.*.u1.type_info = @as(u32, @bitCast((@as(c_int, 7) | ((@as(c_int, 1) << @intCast(0)) << @intCast(8))) | ((@as(c_int, 1) << @intCast(1)) << @intCast(8))));
            if (!false) break;
        }
    } else if (@as(c_int, @bitCast(@as(c_uint, zvalue.*.u1.v.type_flags))) != @as(c_int, 0)) {
        _ = zval_addref_p(zvalue);
    }
}
pub inline fn zval_opt_copy_ctor(arg_zvalue: [*c]zval) void {
    var zvalue = arg_zvalue;
    _ = &zvalue;
    if ((zvalue.*.u1.type_info & @as(u32, @bitCast(@as(c_int, 255)))) == @as(u32, @bitCast(@as(c_int, 7)))) {
        while (true) {
            var __arr: [*c]zend_array = zend_array_dup(zvalue.*.value.arr);
            _ = &__arr;
            var __z: [*c]zval = zvalue;
            _ = &__z;
            __z.*.value.arr = __arr;
            __z.*.u1.type_info = @as(u32, @bitCast((@as(c_int, 7) | ((@as(c_int, 1) << @intCast(0)) << @intCast(8))) | ((@as(c_int, 1) << @intCast(1)) << @intCast(8))));
            if (!false) break;
        }
    } else if ((zvalue.*.u1.type_info & @as(u32, @bitCast(@as(c_int, 65280)))) != @as(u32, @bitCast(@as(c_int, 0)))) {
        _ = zval_addref_p(zvalue);
    }
}
pub inline fn zval_ptr_dtor_str(arg_zval_ptr: [*c]zval) void {
    var zval_ptr = arg_zval_ptr;
    _ = &zval_ptr;
    if ((@as(c_int, @bitCast(@as(c_uint, zval_ptr.*.u1.v.type_flags))) != @as(c_int, 0)) and !(zval_delref_p(zval_ptr) != 0)) {
        __builtin_assume(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zval_ptr.*)))) == @as(c_int, 6));
        __builtin_assume(!((zval_gc_flags(zval_ptr.*.value.str.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0));
        __builtin_assume(!((zval_gc_flags(zval_ptr.*.value.str.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(7)))) != 0));
        _efree(@as(?*anyopaque, @ptrCast(zval_ptr.*.value.str)));
    }
}
pub extern fn zval_ptr_dtor(zval_ptr: [*c]zval) void;
pub extern fn zval_internal_ptr_dtor(zvalue: [*c]zval) void;
pub extern fn zval_add_ref(p: [*c]zval) void;
pub extern fn zend_iterator_unwrap(array_ptr: [*c]zval) [*c]zend_object_iterator;
pub extern fn zend_iterator_init(iter: [*c]zend_object_iterator) void;
pub extern fn zend_iterator_dtor(iter: [*c]zend_object_iterator) void;
pub extern fn zend_register_iterator_wrapper() void;
pub const struct_ostat = extern struct {
    st_dev: __uint16_t = @import("std").mem.zeroes(__uint16_t),
    st_ino: ino_t = @import("std").mem.zeroes(ino_t),
    st_mode: mode_t = @import("std").mem.zeroes(mode_t),
    st_nlink: nlink_t = @import("std").mem.zeroes(nlink_t),
    st_uid: __uint16_t = @import("std").mem.zeroes(__uint16_t),
    st_gid: __uint16_t = @import("std").mem.zeroes(__uint16_t),
    st_rdev: __uint16_t = @import("std").mem.zeroes(__uint16_t),
    st_size: __int32_t = @import("std").mem.zeroes(__int32_t),
    st_atimespec: struct_timespec = @import("std").mem.zeroes(struct_timespec),
    st_mtimespec: struct_timespec = @import("std").mem.zeroes(struct_timespec),
    st_ctimespec: struct_timespec = @import("std").mem.zeroes(struct_timespec),
    st_blksize: __int32_t = @import("std").mem.zeroes(__int32_t),
    st_blocks: __int32_t = @import("std").mem.zeroes(__int32_t),
    st_flags: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    st_gen: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const struct_stat = extern struct {
    st_dev: dev_t = @import("std").mem.zeroes(dev_t),
    st_mode: mode_t = @import("std").mem.zeroes(mode_t),
    st_nlink: nlink_t = @import("std").mem.zeroes(nlink_t),
    st_ino: __darwin_ino64_t = @import("std").mem.zeroes(__darwin_ino64_t),
    st_uid: uid_t = @import("std").mem.zeroes(uid_t),
    st_gid: gid_t = @import("std").mem.zeroes(gid_t),
    st_rdev: dev_t = @import("std").mem.zeroes(dev_t),
    st_atimespec: struct_timespec = @import("std").mem.zeroes(struct_timespec),
    st_mtimespec: struct_timespec = @import("std").mem.zeroes(struct_timespec),
    st_ctimespec: struct_timespec = @import("std").mem.zeroes(struct_timespec),
    st_birthtimespec: struct_timespec = @import("std").mem.zeroes(struct_timespec),
    st_size: off_t = @import("std").mem.zeroes(off_t),
    st_blocks: blkcnt_t = @import("std").mem.zeroes(blkcnt_t),
    st_blksize: blksize_t = @import("std").mem.zeroes(blksize_t),
    st_flags: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    st_gen: __uint32_t = @import("std").mem.zeroes(__uint32_t),
    st_lspare: __int32_t = @import("std").mem.zeroes(__int32_t),
    st_qspare: [2]__int64_t = @import("std").mem.zeroes([2]__int64_t),
};
pub extern fn chmod([*c]const u8, mode_t) c_int;
pub extern fn fchmod(c_int, mode_t) c_int;
pub extern fn fstat(c_int, [*c]struct_stat) c_int;
pub extern fn lstat([*c]const u8, [*c]struct_stat) c_int;
pub extern fn mkdir([*c]const u8, mode_t) c_int;
pub extern fn mkfifo([*c]const u8, mode_t) c_int;
pub extern fn stat([*c]const u8, [*c]struct_stat) c_int;
pub extern fn umask(mode_t) mode_t;
pub extern fn fchmodat(c_int, [*c]const u8, mode_t, c_int) c_int;
pub extern fn fstatat(c_int, [*c]const u8, [*c]struct_stat, c_int) c_int;
pub extern fn mkdirat(c_int, [*c]const u8, mode_t) c_int;
pub extern fn mkfifoat(c_int, [*c]const u8, mode_t) c_int;
pub extern fn mknodat(c_int, [*c]const u8, mode_t, dev_t) c_int;
pub extern fn futimens(__fd: c_int, __times: [*c]const struct_timespec) c_int;
pub extern fn utimensat(__fd: c_int, __path: [*c]const u8, __times: [*c]const struct_timespec, __flag: c_int) c_int;
pub const struct__filesec = opaque {};
pub const filesec_t = ?*struct__filesec;
pub extern fn chflags([*c]const u8, __uint32_t) c_int;
pub extern fn chmodx_np([*c]const u8, filesec_t) c_int;
pub extern fn fchflags(c_int, __uint32_t) c_int;
pub extern fn fchmodx_np(c_int, filesec_t) c_int;
pub extern fn fstatx_np(c_int, [*c]struct_stat, filesec_t) c_int;
pub extern fn lchflags([*c]const u8, __uint32_t) c_int;
pub extern fn lchmod([*c]const u8, mode_t) c_int;
pub extern fn lstatx_np([*c]const u8, [*c]struct_stat, filesec_t) c_int;
pub extern fn mkdirx_np([*c]const u8, filesec_t) c_int;
pub extern fn mkfifox_np([*c]const u8, filesec_t) c_int;
pub extern fn statx_np([*c]const u8, [*c]struct_stat, filesec_t) c_int;
pub extern fn umaskx_np(filesec_t) c_int;
pub const zend_stream_fsizer_t = ?*const fn (?*anyopaque) callconv(.c) usize;
pub const zend_stream_reader_t = ?*const fn (?*anyopaque, [*c]u8, usize) callconv(.c) isize;
pub const zend_stream_closer_t = ?*const fn (?*anyopaque) callconv(.c) void;
pub const ZEND_HANDLE_FILENAME: c_int = 0;
pub const ZEND_HANDLE_FP: c_int = 1;
pub const ZEND_HANDLE_STREAM: c_int = 2;
pub const zend_stream_type = c_uint;
pub const struct__zend_stream = extern struct {
    handle: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    isatty: c_int = @import("std").mem.zeroes(c_int),
    reader: zend_stream_reader_t = @import("std").mem.zeroes(zend_stream_reader_t),
    fsizer: zend_stream_fsizer_t = @import("std").mem.zeroes(zend_stream_fsizer_t),
    closer: zend_stream_closer_t = @import("std").mem.zeroes(zend_stream_closer_t),
};
pub const zend_stream = struct__zend_stream;
const union_unnamed_25 = extern union {
    fp: [*c]FILE,
    stream: zend_stream,
};
pub const struct__zend_file_handle = extern struct {
    handle: union_unnamed_25 = @import("std").mem.zeroes(union_unnamed_25),
    filename: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    opened_path: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    type: u8 = @import("std").mem.zeroes(u8),
    primary_script: bool = @import("std").mem.zeroes(bool),
    in_list: bool = @import("std").mem.zeroes(bool),
    buf: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    len: usize = @import("std").mem.zeroes(usize),
};
pub const zend_file_handle = struct__zend_file_handle;
pub extern fn zend_stream_init_fp(handle: [*c]zend_file_handle, fp: [*c]FILE, filename: [*c]const u8) void;
pub extern fn zend_stream_init_filename(handle: [*c]zend_file_handle, filename: [*c]const u8) void;
pub extern fn zend_stream_init_filename_ex(handle: [*c]zend_file_handle, filename: [*c]zend_string) void;
pub extern fn zend_stream_open(handle: [*c]zend_file_handle) zend_result;
pub extern fn zend_stream_fixup(file_handle: [*c]zend_file_handle, buf: [*c][*c]u8, len: [*c]usize) zend_result;
pub extern fn zend_destroy_file_handle(file_handle: [*c]zend_file_handle) void;
pub extern fn zend_stream_init() void;
pub extern fn zend_stream_shutdown() void;
pub const zend_stat_t = struct_stat;
pub const smart_str = extern struct {
    s: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    a: usize = @import("std").mem.zeroes(usize),
};
pub const smart_string = extern struct {
    c: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    len: usize = @import("std").mem.zeroes(usize),
    a: usize = @import("std").mem.zeroes(usize),
};
pub extern const sys_signame: [32][*c]const u8;
pub extern const sys_siglist: [32][*c]const u8;
pub extern fn raise(c_int) c_int;
pub extern fn bsd_signal(c_int, ?*const fn (c_int) callconv(.c) void) ?*const fn (c_int) callconv(.c) void;
pub extern fn kill(pid_t, c_int) c_int;
pub extern fn killpg(pid_t, c_int) c_int;
pub extern fn pthread_kill(pthread_t, c_int) c_int;
pub extern fn pthread_sigmask(c_int, [*c]const sigset_t, [*c]sigset_t) c_int;
pub extern fn sigaction(c_int, noalias [*c]const struct_sigaction, noalias [*c]struct_sigaction) c_int;
pub extern fn sigaddset([*c]sigset_t, c_int) c_int;
pub extern fn sigaltstack(noalias [*c]const stack_t, noalias [*c]stack_t) c_int;
pub extern fn sigdelset([*c]sigset_t, c_int) c_int;
pub extern fn sigemptyset([*c]sigset_t) c_int;
pub extern fn sigfillset([*c]sigset_t) c_int;
pub extern fn sighold(c_int) c_int;
pub extern fn sigignore(c_int) c_int;
pub extern fn siginterrupt(c_int, c_int) c_int;
pub extern fn sigismember([*c]const sigset_t, c_int) c_int;
pub extern fn sigpause(c_int) c_int;
pub extern fn sigpending([*c]sigset_t) c_int;
pub extern fn sigprocmask(c_int, noalias [*c]const sigset_t, noalias [*c]sigset_t) c_int;
pub extern fn sigrelse(c_int) c_int;
pub extern fn sigset(c_int, ?*const fn (c_int) callconv(.c) void) ?*const fn (c_int) callconv(.c) void;
pub extern fn sigsuspend([*c]const sigset_t) c_int;
pub extern fn sigwait(noalias [*c]const sigset_t, noalias [*c]c_int) c_int;
pub extern fn psignal(c_int, [*c]const u8) void;
pub extern fn sigblock(c_int) c_int;
pub extern fn sigsetmask(c_int) c_int;
pub extern fn sigvec(c_int, [*c]struct_sigvec, [*c]struct_sigvec) c_int;
pub inline fn __sigbits(arg___signo: c_int) c_int {
    var __signo = arg___signo;
    _ = &__signo;
    return if (__signo > @as(c_int, 32)) @as(c_int, 0) else @as(c_int, 1) << @intCast(__signo - @as(c_int, 1));
}
pub const struct__zend_signal_entry_t = extern struct {
    flags: c_int = @import("std").mem.zeroes(c_int),
    handler: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const zend_signal_entry_t = struct__zend_signal_entry_t;
pub const struct__zend_signal_t = extern struct {
    signo: c_int = @import("std").mem.zeroes(c_int),
    siginfo: [*c]siginfo_t = @import("std").mem.zeroes([*c]siginfo_t),
    context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const zend_signal_t = struct__zend_signal_t;
pub const struct__zend_signal_queue_t = extern struct {
    zend_signal: zend_signal_t = @import("std").mem.zeroes(zend_signal_t),
    next: [*c]struct__zend_signal_queue_t = @import("std").mem.zeroes([*c]struct__zend_signal_queue_t),
};
pub const zend_signal_queue_t = struct__zend_signal_queue_t;
pub const struct__zend_signal_globals_t = extern struct {
    depth: c_int = @import("std").mem.zeroes(c_int),
    blocked: c_int = @import("std").mem.zeroes(c_int),
    running: c_int = @import("std").mem.zeroes(c_int),
    active: c_int = @import("std").mem.zeroes(c_int),
    check: bool = @import("std").mem.zeroes(bool),
    reset: bool = @import("std").mem.zeroes(bool),
    handlers: [32]zend_signal_entry_t = @import("std").mem.zeroes([32]zend_signal_entry_t),
    pstorage: [64]zend_signal_queue_t = @import("std").mem.zeroes([64]zend_signal_queue_t),
    phead: [*c]zend_signal_queue_t = @import("std").mem.zeroes([*c]zend_signal_queue_t),
    ptail: [*c]zend_signal_queue_t = @import("std").mem.zeroes([*c]zend_signal_queue_t),
    pavail: [*c]zend_signal_queue_t = @import("std").mem.zeroes([*c]zend_signal_queue_t),
};
pub const zend_signal_globals_t = struct__zend_signal_globals_t;
pub extern var zend_signal_globals: zend_signal_globals_t;
pub extern fn zend_signal_handler_unblock() void;
pub extern fn zend_signal_activate() void;
pub extern fn zend_signal_deactivate() void;
pub extern fn zend_signal_startup() void;
pub extern fn zend_signal_init() void;
pub extern fn zend_signal(signo: c_int, handler: ?*const fn (c_int) callconv(.c) void) void;
pub extern fn zend_sigaction(signo: c_int, act: [*c]const struct_sigaction, oldact: [*c]struct_sigaction) void;
pub const zend_random_bytes_insecure_state = extern union {
    @"align": zend_max_align_t,
    @"opaque": [5]u64,
};
pub const struct__zend_utility_functions = extern struct {
    error_function: ?*const fn (c_int, [*c]zend_string, u32, [*c]zend_string) callconv(.c) void = @import("std").mem.zeroes(?*const fn (c_int, [*c]zend_string, u32, [*c]zend_string) callconv(.c) void),
    printf_function: ?*const fn ([*c]const u8, ...) callconv(.c) usize = @import("std").mem.zeroes(?*const fn ([*c]const u8, ...) callconv(.c) usize),
    write_function: ?*const fn ([*c]const u8, usize) callconv(.c) usize = @import("std").mem.zeroes(?*const fn ([*c]const u8, usize) callconv(.c) usize),
    fopen_function: ?*const fn ([*c]zend_string, [*c][*c]zend_string) callconv(.c) [*c]FILE = @import("std").mem.zeroes(?*const fn ([*c]zend_string, [*c][*c]zend_string) callconv(.c) [*c]FILE),
    message_handler: ?*const fn (zend_long, ?*const anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (zend_long, ?*const anyopaque) callconv(.c) void),
    get_configuration_directive: ?*const fn ([*c]zend_string) callconv(.c) [*c]zval = @import("std").mem.zeroes(?*const fn ([*c]zend_string) callconv(.c) [*c]zval),
    ticks_function: ?*const fn (c_int) callconv(.c) void = @import("std").mem.zeroes(?*const fn (c_int) callconv(.c) void),
    on_timeout: ?*const fn (c_int) callconv(.c) void = @import("std").mem.zeroes(?*const fn (c_int) callconv(.c) void),
    stream_open_function: ?*const fn ([*c]zend_file_handle) callconv(.c) zend_result = @import("std").mem.zeroes(?*const fn ([*c]zend_file_handle) callconv(.c) zend_result),
    printf_to_smart_string_function: ?*const fn ([*c]smart_string, [*c]const u8, va_list) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]smart_string, [*c]const u8, va_list) callconv(.c) void),
    printf_to_smart_str_function: ?*const fn ([*c]smart_str, [*c]const u8, va_list) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]smart_str, [*c]const u8, va_list) callconv(.c) void),
    getenv_function: ?*const fn ([*c]const u8, usize) callconv(.c) [*c]u8 = @import("std").mem.zeroes(?*const fn ([*c]const u8, usize) callconv(.c) [*c]u8),
    resolve_path_function: ?*const fn ([*c]zend_string) callconv(.c) [*c]zend_string = @import("std").mem.zeroes(?*const fn ([*c]zend_string) callconv(.c) [*c]zend_string),
    random_bytes_function: ?*const fn (?*anyopaque, usize, [*c]u8, usize) callconv(.c) zend_result = @import("std").mem.zeroes(?*const fn (?*anyopaque, usize, [*c]u8, usize) callconv(.c) zend_result),
    random_bytes_insecure_function: ?*const fn ([*c]zend_random_bytes_insecure_state, ?*anyopaque, usize) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]zend_random_bytes_insecure_state, ?*anyopaque, usize) callconv(.c) void),
};
pub const zend_utility_functions = struct__zend_utility_functions;
pub const struct__zend_utility_values = extern struct {
    html_errors: bool = @import("std").mem.zeroes(bool),
};
pub const zend_utility_values = struct__zend_utility_values;
pub const zend_write_func_t = ?*const fn ([*c]const u8, usize) callconv(.c) usize;
pub extern fn zend_startup(utility_functions: [*c]zend_utility_functions) void;
pub extern fn zend_shutdown() void;
pub extern fn zend_register_standard_ini_entries() void;
pub extern fn zend_post_startup() zend_result;
pub extern fn zend_set_utility_values(utility_values: [*c]zend_utility_values) void;
pub extern fn zend_unload_modules() void;
pub extern fn _zend_bailout(filename: [*c]const u8, lineno: u32) noreturn;
pub extern fn zend_get_page_size() usize;
pub extern fn zend_vspprintf(pbuf: [*c][*c]u8, max_len: usize, format: [*c]const u8, ap: va_list) usize;
pub extern fn zend_spprintf(message: [*c][*c]u8, max_len: usize, format: [*c]const u8, ...) usize;
pub extern fn zend_vstrpprintf(max_len: usize, format: [*c]const u8, ap: va_list) [*c]zend_string;
pub extern fn zend_strpprintf(max_len: usize, format: [*c]const u8, ...) [*c]zend_string;
pub extern fn zend_spprintf_unchecked(message: [*c][*c]u8, max_len: usize, format: [*c]const u8, ...) usize;
pub extern fn zend_strpprintf_unchecked(max_len: usize, format: [*c]const u8, ...) [*c]zend_string;
pub extern fn get_zend_version() [*c]const u8;
pub extern fn zend_make_printable_zval(expr: [*c]zval, expr_copy: [*c]zval) bool;
pub extern fn zend_print_zval(expr: [*c]zval, indent: c_int) usize;
pub extern fn zend_print_zval_r(expr: [*c]zval, indent: c_int) void;
pub extern fn zend_print_zval_r_to_str(expr: [*c]zval, indent: c_int) [*c]zend_string;
pub extern fn zend_print_flat_zval_r(expr: [*c]zval) void;
pub extern fn zend_print_flat_zval_r_to_buf(str: [*c]smart_str, expr: [*c]zval) void;
pub inline fn zend_print_variable(arg_var: [*c]zval) usize {
    var @"var" = arg_var;
    _ = &@"var";
    return zend_print_zval(@"var", @as(c_int, 0));
}
pub extern fn zend_output_debug_string(trigger_break: bool, format: [*c]const u8, ...) void;
pub extern fn zend_activate() void;
pub extern fn zend_deactivate() void;
pub extern fn zend_call_destructors() void;
pub extern fn zend_activate_modules() void;
pub extern fn zend_deactivate_modules() void;
pub extern fn zend_post_deactivate_modules() void;
pub extern fn free_estring(str_p: [*c][*c]u8) void;
pub extern var zend_printf: ?*const fn ([*c]const u8, ...) callconv(.c) usize;
pub extern var zend_write: zend_write_func_t;
pub extern var zend_fopen: ?*const fn ([*c]zend_string, [*c][*c]zend_string) callconv(.c) [*c]FILE;
pub extern var zend_ticks_function: ?*const fn (c_int) callconv(.c) void;
pub extern var zend_interrupt_function: ?*const fn ([*c]zend_execute_data) callconv(.c) void;
pub extern var zend_error_cb: ?*const fn (c_int, [*c]zend_string, u32, [*c]zend_string) callconv(.c) void;
pub extern var zend_on_timeout: ?*const fn (c_int) callconv(.c) void;
pub extern var zend_stream_open_function: ?*const fn ([*c]zend_file_handle) callconv(.c) zend_result;
pub extern var zend_printf_to_smart_string: ?*const fn ([*c]smart_string, [*c]const u8, va_list) callconv(.c) void;
pub extern var zend_printf_to_smart_str: ?*const fn ([*c]smart_str, [*c]const u8, va_list) callconv(.c) void;
pub extern var zend_getenv: ?*const fn ([*c]const u8, usize) callconv(.c) [*c]u8;
pub extern var zend_resolve_path: ?*const fn ([*c]zend_string) callconv(.c) [*c]zend_string;
pub extern var zend_random_bytes: ?*const fn (?*anyopaque, usize, [*c]u8, usize) callconv(.c) zend_result;
pub extern var zend_random_bytes_insecure: ?*const fn ([*c]zend_random_bytes_insecure_state, ?*anyopaque, usize) callconv(.c) void;
pub extern var zend_post_startup_cb: ?*const fn () callconv(.c) zend_result;
pub extern var zend_post_shutdown_cb: ?*const fn () callconv(.c) void;
pub extern var zend_accel_schedule_restart_hook: ?*const fn (c_int) callconv(.c) void;
pub extern fn zend_error(@"type": c_int, format: [*c]const u8, ...) void;
pub extern fn zend_error_noreturn(@"type": c_int, format: [*c]const u8, ...) noreturn;
pub extern fn zend_error_noreturn_unchecked(@"type": c_int, format: [*c]const u8, ...) noreturn;
pub extern fn zend_error_unchecked(@"type": c_int, format: [*c]const u8, ...) void;
pub extern fn zend_error_at(@"type": c_int, filename: [*c]zend_string, lineno: u32, format: [*c]const u8, ...) void;
pub extern fn zend_error_at_noreturn(@"type": c_int, filename: [*c]zend_string, lineno: u32, format: [*c]const u8, ...) noreturn;
pub extern fn zend_error_zstr(@"type": c_int, message: [*c]zend_string) void;
pub extern fn zend_error_zstr_at(@"type": c_int, filename: [*c]zend_string, lineno: u32, message: [*c]zend_string) void;
pub extern fn zend_throw_error(exception_ce: [*c]zend_class_entry, format: [*c]const u8, ...) void;
pub extern fn zend_type_error(format: [*c]const u8, ...) void;
pub extern fn zend_argument_count_error(format: [*c]const u8, ...) void;
pub extern fn zend_value_error(format: [*c]const u8, ...) void;
pub extern fn zend_illegal_container_offset(container: [*c]const zend_string, offset: [*c]const zval, @"type": c_int) void;
pub extern fn zenderror(@"error": [*c]const u8) void;
pub extern fn zend_strerror_noreturn(@"type": c_int, errn: c_int, message: [*c]const u8) noreturn;
pub extern var zend_standard_class_def: [*c]zend_class_entry;
pub extern var zend_uv: zend_utility_values;
pub extern var zend_dtrace_enabled: bool;
pub extern fn zend_message_dispatcher(message: zend_long, data: ?*const anyopaque) void;
pub extern fn zend_get_configuration_directive(name: [*c]zend_string) [*c]zval;
pub const EH_NORMAL: c_int = 0;
pub const EH_THROW: c_int = 1;
pub const zend_error_handling_t = c_uint;
pub const zend_error_handling = extern struct {
    handling: zend_error_handling_t = @import("std").mem.zeroes(zend_error_handling_t),
    exception: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
};
pub extern fn zend_save_error_handling(current: [*c]zend_error_handling) void;
pub extern fn zend_replace_error_handling(error_handling: zend_error_handling_t, exception_class: [*c]zend_class_entry, current: [*c]zend_error_handling) void;
pub extern fn zend_restore_error_handling(saved: [*c]zend_error_handling) void;
pub extern fn zend_begin_record_errors() void;
pub extern fn zend_emit_recorded_errors() void;
pub extern fn zend_free_recorded_errors() void;
pub const ZEND_PROPERTY_HOOK_GET: c_int = 0;
pub const ZEND_PROPERTY_HOOK_SET: c_int = 1;
pub const zend_property_hook_kind = c_uint;
pub extern fn zend_hooked_object_get_iterator(ce: [*c]zend_class_entry, object: [*c]zval, by_ref: c_int) [*c]zend_object_iterator;
pub extern fn zend_hooked_object_build_properties(zobj: [*c]zend_object) [*c]zend_array;
pub const zend_lazy_object_flags_t = u8;
pub const struct__zend_lazy_objects_store = extern struct {
    infos: HashTable = @import("std").mem.zeroes(HashTable),
};
pub const zend_lazy_objects_store = struct__zend_lazy_objects_store;
pub const struct__zend_fcall_info = extern struct {
    size: usize = @import("std").mem.zeroes(usize),
    function_name: zval = @import("std").mem.zeroes(zval),
    retval: [*c]zval = @import("std").mem.zeroes([*c]zval),
    params: [*c]zval = @import("std").mem.zeroes([*c]zval),
    object: [*c]zend_object = @import("std").mem.zeroes([*c]zend_object),
    param_count: u32 = @import("std").mem.zeroes(u32),
    named_params: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
};
pub const zend_fcall_info = struct__zend_fcall_info;
pub const struct__zend_fcall_info_cache = extern struct {
    function_handler: [*c]zend_function = @import("std").mem.zeroes([*c]zend_function),
    calling_scope: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    called_scope: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    object: [*c]zend_object = @import("std").mem.zeroes([*c]zend_object),
    closure: [*c]zend_object = @import("std").mem.zeroes([*c]zend_object),
};
pub const zend_fcall_info_cache = struct__zend_fcall_info_cache;
pub extern fn zend_class_can_be_lazy(ce: [*c]zend_class_entry) bool;
pub extern fn zend_object_make_lazy(obj: [*c]zend_object, class_type: [*c]zend_class_entry, initializer_zv: [*c]zval, initializer_fcc: [*c]zend_fcall_info_cache, flags: zend_lazy_object_flags_t) [*c]zend_object;
pub extern fn zend_lazy_object_init(obj: [*c]zend_object) [*c]zend_object;
pub extern fn zend_lazy_object_mark_as_initialized(obj: [*c]zend_object) [*c]zend_object;
pub extern fn zend_lazy_objects_init(store: [*c]zend_lazy_objects_store) void;
pub extern fn zend_lazy_objects_destroy(store: [*c]zend_lazy_objects_store) void;
pub extern fn zend_lazy_object_get_initializer_zv(obj: [*c]zend_object) [*c]zval;
pub extern fn zend_lazy_object_get_instance(obj: [*c]zend_object) [*c]zend_object;
pub extern fn zend_lazy_object_get_flags(obj: [*c]zend_object) zend_lazy_object_flags_t;
pub extern fn zend_lazy_object_del_info(obj: [*c]zend_object) void;
pub extern fn zend_lazy_object_get_properties(object: [*c]zend_object) [*c]HashTable;
pub extern fn zend_lazy_object_clone(old_obj: [*c]zend_object) [*c]zend_object;
pub extern fn zend_lazy_object_debug_info(object: [*c]zend_object, is_temp: [*c]c_int) [*c]HashTable;
pub extern fn zend_lazy_object_get_gc(zobj: [*c]zend_object, table: [*c][*c]zval, n: [*c]c_int) [*c]HashTable;
pub extern fn zend_lazy_object_decr_lazy_props(obj: [*c]zend_object) bool;
pub extern fn zend_lazy_object_realize(obj: [*c]zend_object) void;
pub extern fn zend_lazy_object_get_property_info_for_slot(obj: [*c]zend_object, slot: [*c]zval) [*c]zend_property_info;
pub inline fn zend_object_is_lazy(arg_obj: [*c]zend_object) bool {
    var obj = arg_obj;
    _ = &obj;
    return (obj.*.extra_flags & ((@as(c_uint, 1) << @intCast(31)) | (@as(c_uint, 1) << @intCast(30)))) != 0;
}
pub inline fn zend_object_is_lazy_proxy(arg_obj: [*c]zend_object) bool {
    var obj = arg_obj;
    _ = &obj;
    return (obj.*.extra_flags & (@as(c_uint, 1) << @intCast(30))) != 0;
}
pub inline fn zend_lazy_object_initialized(arg_obj: [*c]zend_object) bool {
    var obj = arg_obj;
    _ = &obj;
    return !((obj.*.extra_flags & (@as(c_uint, 1) << @intCast(31))) != 0);
}
pub inline fn zend_lazy_object_must_init(arg_obj: [*c]zend_object) bool {
    var obj = arg_obj;
    _ = &obj;
    return zend_object_is_lazy(obj);
}
pub fn zend_lazy_object_initialize_on_serialize(arg_obj: [*c]zend_object) callconv(.c) bool {
    var obj = arg_obj;
    _ = &obj;
    return !((@as(c_int, @bitCast(@as(c_uint, zend_lazy_object_get_flags(obj)))) & (@as(c_int, 1) << @intCast(3))) != 0);
}
pub extern const std_object_handlers: zend_object_handlers;
pub extern fn zend_class_init_statics(ce: [*c]zend_class_entry) void;
pub extern fn zend_std_get_static_method(ce: [*c]zend_class_entry, function_name_strval: [*c]zend_string, key: [*c]const zval) [*c]zend_function;
pub extern fn zend_std_get_static_property_with_info(ce: [*c]zend_class_entry, property_name: [*c]zend_string, @"type": c_int, prop_info: [*c][*c]struct__zend_property_info) [*c]zval;
pub extern fn zend_std_get_static_property(ce: [*c]zend_class_entry, property_name: [*c]zend_string, @"type": c_int) [*c]zval;
pub extern fn zend_std_unset_static_property(ce: [*c]zend_class_entry, property_name: [*c]zend_string) bool;
pub extern fn zend_std_get_constructor(object: [*c]zend_object) [*c]zend_function;
pub extern fn zend_get_property_info(ce: [*c]const zend_class_entry, member: [*c]zend_string, silent: c_int) [*c]struct__zend_property_info;
pub extern fn zend_std_get_properties(object: [*c]zend_object) [*c]HashTable;
pub extern fn zend_get_properties_no_lazy_init(zobj: [*c]zend_object) [*c]HashTable;
pub extern fn zend_std_get_gc(object: [*c]zend_object, table: [*c][*c]zval, n: [*c]c_int) [*c]HashTable;
pub extern fn zend_std_get_debug_info(object: [*c]zend_object, is_temp: [*c]c_int) [*c]HashTable;
pub extern fn zend_std_cast_object_tostring(object: [*c]zend_object, writeobj: [*c]zval, @"type": c_int) zend_result;
pub extern fn zend_std_get_property_ptr_ptr(object: [*c]zend_object, member: [*c]zend_string, @"type": c_int, cache_slot: [*c]?*anyopaque) [*c]zval;
pub extern fn zend_std_read_property(object: [*c]zend_object, member: [*c]zend_string, @"type": c_int, cache_slot: [*c]?*anyopaque, rv: [*c]zval) [*c]zval;
pub extern fn zend_std_write_property(object: [*c]zend_object, member: [*c]zend_string, value: [*c]zval, cache_slot: [*c]?*anyopaque) [*c]zval;
pub extern fn zend_std_has_property(object: [*c]zend_object, member: [*c]zend_string, has_set_exists: c_int, cache_slot: [*c]?*anyopaque) c_int;
pub extern fn zend_std_unset_property(object: [*c]zend_object, member: [*c]zend_string, cache_slot: [*c]?*anyopaque) void;
pub extern fn zend_std_read_dimension(object: [*c]zend_object, offset: [*c]zval, @"type": c_int, rv: [*c]zval) [*c]zval;
pub extern fn zend_std_write_dimension(object: [*c]zend_object, offset: [*c]zval, value: [*c]zval) void;
pub extern fn zend_std_has_dimension(object: [*c]zend_object, offset: [*c]zval, check_empty: c_int) c_int;
pub extern fn zend_std_unset_dimension(object: [*c]zend_object, offset: [*c]zval) void;
pub extern fn zend_std_get_method(obj_ptr: [*c][*c]zend_object, method_name: [*c]zend_string, key: [*c]const zval) [*c]zend_function;
pub extern fn zend_std_get_class_name(zobj: [*c]const zend_object) [*c]zend_string;
pub extern fn zend_std_compare_objects(o1: [*c]zval, o2: [*c]zval) c_int;
pub extern fn zend_std_get_closure(obj: [*c]zend_object, ce_ptr: [*c][*c]zend_class_entry, fptr_ptr: [*c][*c]zend_function, obj_ptr: [*c][*c]zend_object, check_only: bool) zend_result;
pub extern fn rebuild_object_properties_internal(zobj: [*c]zend_object) [*c]HashTable;
pub inline fn zend_std_get_properties_ex(arg_object: [*c]zend_object) [*c]HashTable {
    var object = arg_object;
    _ = &object;
    if (__builtin_expect(@as(c_long, @intFromBool(!!zend_lazy_object_must_init(object))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        return zend_lazy_object_get_properties(object);
    }
    if (!(object.*.properties != null)) {
        return rebuild_object_properties_internal(object);
    }
    return object.*.properties;
}
pub extern fn zend_std_build_object_properties_array(zobj: [*c]zend_object) [*c]HashTable;
pub extern fn zend_objects_not_comparable(o1: [*c]zval, o2: [*c]zval) c_int;
pub extern fn zend_check_protected(ce: [*c]const zend_class_entry, scope: [*c]const zend_class_entry) bool;
pub extern fn zend_check_property_access(zobj: [*c]const zend_object, prop_info_name: [*c]zend_string, is_dynamic: bool) zend_result;
pub extern fn zend_get_call_trampoline_func(ce: [*c]const zend_class_entry, method_name: [*c]zend_string, is_static: bool) [*c]zend_function;
pub extern fn zend_get_property_guard(zobj: [*c]zend_object, member: [*c]zend_string) [*c]u32;
pub extern fn zend_get_recursion_guard(zobj: [*c]zend_object) [*c]u32;
pub extern fn zend_std_get_properties_for(obj: [*c]zend_object, purpose: zend_prop_purpose) [*c]HashTable;
pub extern fn zend_get_properties_for(obj: [*c]zval, purpose: zend_prop_purpose) [*c]HashTable;
pub extern fn zend_get_property_hook_trampoline(prop_info: [*c]const zend_property_info, kind: zend_property_hook_kind, prop_name: [*c]zend_string) [*c]zend_function;
pub extern fn zend_asymmetric_property_has_set_access(prop_info: [*c]const zend_property_info) bool;
pub extern fn __error() [*c]c_int;
pub const struct__zend_strtod_bigint = opaque {};
pub const zend_strtod_bigint = struct__zend_strtod_bigint;
pub const struct__zend_strtod_state = extern struct {
    freelist: [8]?*zend_strtod_bigint = @import("std").mem.zeroes([8]?*zend_strtod_bigint),
    p5s: ?*zend_strtod_bigint = @import("std").mem.zeroes(?*zend_strtod_bigint),
    result: [*c]u8 = @import("std").mem.zeroes([*c]u8),
};
pub const zend_strtod_state = struct__zend_strtod_state;
pub extern fn zend_freedtoa(s: [*c]u8) void;
pub extern fn zend_dtoa(_d: f64, mode: c_int, ndigits: c_int, decpt: [*c]c_int, sign: [*c]bool, rve: [*c][*c]u8) [*c]u8;
pub extern fn zend_gcvt(value: f64, ndigit: c_int, dec_point: u8, exponent: u8, buf: [*c]u8) [*c]u8;
pub extern fn zend_strtod(s00: [*c]const u8, se: [*c][*c]const u8) f64;
pub extern fn zend_hex_strtod(str: [*c]const u8, endptr: [*c][*c]const u8) f64;
pub extern fn zend_oct_strtod(str: [*c]const u8, endptr: [*c][*c]const u8) f64;
pub extern fn zend_bin_strtod(str: [*c]const u8, endptr: [*c][*c]const u8) f64;
pub extern fn zend_shutdown_strtod() c_int;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_multiply.h:262:2: warning: TODO implement translation of stmt class GCCAsmStmtClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_multiply.h:257:34: warning: unable to translate function, demoted to extern
pub extern fn zend_safe_address(arg_nmemb: usize, arg_size: usize, arg_offset: usize, arg_overflow: [*c]bool) usize;
pub inline fn zend_safe_address_guarded(arg_nmemb: usize, arg_size: usize, arg_offset: usize) usize {
    var nmemb = arg_nmemb;
    _ = &nmemb;
    var size = arg_size;
    _ = &size;
    var offset = arg_offset;
    _ = &offset;
    var overflow: bool = undefined;
    _ = &overflow;
    var ret: usize = zend_safe_address(nmemb, size, offset, &overflow);
    _ = &ret;
    if (__builtin_expect(@as(c_long, @intFromBool(!!overflow)), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        zend_error_noreturn(@as(c_int, 1) << @intCast(0), "Possible integer overflow in memory allocation (%zu * %zu + %zu)", nmemb, size, offset);
        return 0;
    }
    return ret;
}
pub inline fn zend_safe_addmult(arg_nmemb: usize, arg_size: usize, arg_offset: usize, arg_message: [*c]const u8) usize {
    var nmemb = arg_nmemb;
    _ = &nmemb;
    var size = arg_size;
    _ = &size;
    var offset = arg_offset;
    _ = &offset;
    var message = arg_message;
    _ = &message;
    var overflow: bool = undefined;
    _ = &overflow;
    var ret: usize = zend_safe_address(nmemb, size, offset, &overflow);
    _ = &ret;
    if (__builtin_expect(@as(c_long, @intFromBool(!!overflow)), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        zend_error_noreturn(@as(c_int, 1) << @intCast(0), "Possible integer overflow in %s (%zu * %zu + %zu)", message, nmemb, size, offset);
        return 0;
    }
    return ret;
}
pub extern fn add_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn sub_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn mul_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn pow_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn div_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn mod_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn boolean_xor_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn boolean_not_function(result: [*c]zval, op1: [*c]zval) zend_result;
pub extern fn bitwise_not_function(result: [*c]zval, op1: [*c]zval) zend_result;
pub extern fn bitwise_or_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn bitwise_and_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn bitwise_xor_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn shift_left_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn shift_right_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn concat_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn zend_is_identical(op1: [*c]const zval, op2: [*c]const zval) bool;
pub extern fn is_equal_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn is_identical_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn is_not_identical_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn is_not_equal_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn is_smaller_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn is_smaller_or_equal_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn zend_class_implements_interface(class_ce: [*c]const zend_class_entry, interface_ce: [*c]const zend_class_entry) bool;
pub extern fn instanceof_function_slow(instance_ce: [*c]const zend_class_entry, ce: [*c]const zend_class_entry) bool;
pub inline fn instanceof_function(arg_instance_ce: [*c]const zend_class_entry, arg_ce: [*c]const zend_class_entry) bool {
    var instance_ce = arg_instance_ce;
    _ = &instance_ce;
    var ce = arg_ce;
    _ = &ce;
    return (instance_ce == ce) or (@as(c_int, @intFromBool(instanceof_function_slow(instance_ce, ce))) != 0);
}
pub extern fn zend_string_only_has_ascii_alphanumeric(str: [*c]const zend_string) bool;
pub extern fn _is_numeric_string_ex(str: [*c]const u8, length: usize, lval: [*c]zend_long, dval: [*c]f64, allow_errors: bool, oflow_info: [*c]c_int, trailing_data: [*c]bool) u8;
pub extern fn zend_memnstr_ex(haystack: [*c]const u8, needle: [*c]const u8, needle_len: usize, end: [*c]const u8) [*c]const u8;
pub extern fn zend_memnrstr_ex(haystack: [*c]const u8, needle: [*c]const u8, needle_len: usize, end: [*c]const u8) [*c]const u8;
pub extern fn zend_dval_to_lval_slow(d: f64) zend_long;
pub inline fn zend_dval_to_lval(arg_d: f64) zend_long {
    var d = arg_d;
    _ = &d;
    if ((__builtin_expect(@as(c_long, @intFromBool(!!!((if (@sizeOf(f64) == @sizeOf(f32)) __inline_isfinitef(@as(f32, @floatCast(d))) else if (@sizeOf(f64) == @sizeOf(f64)) __inline_isfinited(d) else __inline_isfinitel(@as(c_longdouble, @floatCast(d)))) != 0))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) or (__builtin_expect(@as(c_long, @intFromBool(!!((if (@sizeOf(f64) == @sizeOf(f32)) __inline_isnanf(@as(f32, @floatCast(d))) else if (@sizeOf(f64) == @sizeOf(f64)) __inline_isnand(d) else __inline_isnanl(@as(c_longdouble, @floatCast(d)))) != 0))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)) {
        return 0;
    } else if (!!((d >= @as(f64, @floatFromInt(@as(c_longlong, 9223372036854775807)))) or (d < @as(f64, @floatFromInt(-@as(c_longlong, 9223372036854775807) - @as(c_longlong, @bitCast(@as(c_longlong, @as(c_int, 1))))))))) {
        return zend_dval_to_lval_slow(d);
    }
    return @as(zend_long, @intFromFloat(d));
}
pub inline fn zend_dval_to_lval_cap(arg_d: f64) zend_long {
    var d = arg_d;
    _ = &d;
    if ((__builtin_expect(@as(c_long, @intFromBool(!!!((if (@sizeOf(f64) == @sizeOf(f32)) __inline_isfinitef(@as(f32, @floatCast(d))) else if (@sizeOf(f64) == @sizeOf(f64)) __inline_isfinited(d) else __inline_isfinitel(@as(c_longdouble, @floatCast(d)))) != 0))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) or (__builtin_expect(@as(c_long, @intFromBool(!!((if (@sizeOf(f64) == @sizeOf(f32)) __inline_isnanf(@as(f32, @floatCast(d))) else if (@sizeOf(f64) == @sizeOf(f64)) __inline_isnand(d) else __inline_isnanl(@as(c_longdouble, @floatCast(d)))) != 0))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)) {
        return 0;
    } else if (!!((d >= @as(f64, @floatFromInt(@as(c_longlong, 9223372036854775807)))) or (d < @as(f64, @floatFromInt(-@as(c_longlong, 9223372036854775807) - @as(c_longlong, @bitCast(@as(c_longlong, @as(c_int, 1))))))))) {
        return if (d > @as(f64, @floatFromInt(@as(c_int, 0)))) @as(c_longlong, 9223372036854775807) else -@as(c_longlong, 9223372036854775807) - @as(c_longlong, @bitCast(@as(c_longlong, @as(c_int, 1))));
    }
    return @as(zend_long, @intFromFloat(d));
}
pub inline fn zend_is_long_compatible(arg_d: f64, arg_l: zend_long) bool {
    var d = arg_d;
    _ = &d;
    var l = arg_l;
    _ = &l;
    return @as(f64, @floatFromInt(l)) == d;
}
pub extern fn zend_incompatible_double_to_long_error(d: f64) void;
pub extern fn zend_incompatible_string_to_long_error(s: [*c]const zend_string) void;
pub inline fn zend_dval_to_lval_safe(arg_d: f64) zend_long {
    var d = arg_d;
    _ = &d;
    var l: zend_long = zend_dval_to_lval(d);
    _ = &l;
    if (!zend_is_long_compatible(d, l)) {
        zend_incompatible_double_to_long_error(d);
    }
    return l;
}
pub inline fn is_numeric_string_ex(arg_str: [*c]const u8, arg_length: usize, arg_lval: [*c]zend_long, arg_dval: [*c]f64, arg_allow_errors: bool, arg_oflow_info: [*c]c_int, arg_trailing_data: [*c]bool) u8 {
    var str = arg_str;
    _ = &str;
    var length = arg_length;
    _ = &length;
    var lval = arg_lval;
    _ = &lval;
    var dval = arg_dval;
    _ = &dval;
    var allow_errors = arg_allow_errors;
    _ = &allow_errors;
    var oflow_info = arg_oflow_info;
    _ = &oflow_info;
    var trailing_data = arg_trailing_data;
    _ = &trailing_data;
    if (@as(c_int, @bitCast(@as(c_uint, str.*))) > @as(c_int, '9')) {
        return 0;
    }
    return _is_numeric_string_ex(str, length, lval, dval, allow_errors, oflow_info, trailing_data);
}
pub inline fn is_numeric_string(arg_str: [*c]const u8, arg_length: usize, arg_lval: [*c]zend_long, arg_dval: [*c]f64, arg_allow_errors: bool) u8 {
    var str = arg_str;
    _ = &str;
    var length = arg_length;
    _ = &length;
    var lval = arg_lval;
    _ = &lval;
    var dval = arg_dval;
    _ = &dval;
    var allow_errors = arg_allow_errors;
    _ = &allow_errors;
    return is_numeric_string_ex(str, length, lval, dval, allow_errors, null, null);
}
pub extern fn is_numeric_str_function(str: [*c]const zend_string, lval: [*c]zend_long, dval: [*c]f64) u8;
pub inline fn zend_memnstr(arg_haystack: [*c]const u8, arg_needle: [*c]const u8, arg_needle_len: usize, arg_end: [*c]const u8) [*c]const u8 {
    var haystack = arg_haystack;
    _ = &haystack;
    var needle = arg_needle;
    _ = &needle;
    var needle_len = arg_needle_len;
    _ = &needle_len;
    var end = arg_end;
    _ = &end;
    var p: [*c]const u8 = haystack;
    _ = &p;
    var off_s: usize = undefined;
    _ = &off_s;
    __builtin_assume(end >= p);
    if (needle_len == @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))) {
        return @as([*c]const u8, @ptrCast(@alignCast(memchr(@as(?*const anyopaque, @ptrCast(p)), @as(c_int, @bitCast(@as(c_uint, needle.*))), @as(c_ulong, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(end) -% @intFromPtr(p))), @sizeOf(u8))))))));
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(needle_len == @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        return p;
    }
    off_s = @as(usize, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(end) -% @intFromPtr(p))), @sizeOf(u8))));
    if (needle_len > off_s) {
        return null;
    }
    if (__builtin_expect(@as(c_long, @intFromBool(!!((off_s < @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) or (needle_len < @as(usize, @bitCast(@as(c_long, @as(c_int, 9)))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        const ne: u8 = needle[needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))];
        _ = &ne;
        end -= needle_len;
        while (p <= end) {
            if ((blk: {
                const tmp = @as([*c]const u8, @ptrCast(@alignCast(memchr(@as(?*const anyopaque, @ptrCast(p)), @as(c_int, @bitCast(@as(c_uint, needle.*))), @as(c_ulong, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(end) -% @intFromPtr(p))), @sizeOf(u8)) + @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))))))));
                p = tmp;
                break :blk tmp;
            }) != null) {
                if ((@as(c_int, @bitCast(@as(c_uint, ne))) == @as(c_int, @bitCast(@as(c_uint, p[needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))])))) and !(memcmp(@as(?*const anyopaque, @ptrCast(needle + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 1))))))), @as(?*const anyopaque, @ptrCast(p + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 1))))))), needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 2))))) != 0)) {
                    return p;
                }
            } else {
                return null;
            }
            p += 1;
        }
        return null;
    } else {
        return zend_memnstr_ex(haystack, needle, needle_len, end);
    }
    return null;
}
pub inline fn zend_memrchr(arg_s: ?*const anyopaque, arg_c: c_int, arg_n: usize) ?*const anyopaque {
    var s = arg_s;
    _ = &s;
    var c = arg_c;
    _ = &c;
    var n = arg_n;
    _ = &n;
    var e: [*c]const u8 = undefined;
    _ = &e;
    if (@as(usize, @bitCast(@as(c_long, @as(c_int, 0)))) == n) {
        return null;
    }
    {
        e = (@as([*c]const u8, @ptrCast(@alignCast(s))) + n) - @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 1)))));
        while (e >= @as([*c]const u8, @ptrCast(@alignCast(s)))) : (e -= 1) {
            if (@as(c_int, @bitCast(@as(c_uint, e.*))) == @as(c_int, @bitCast(@as(c_uint, @as(u8, @bitCast(@as(i8, @truncate(c)))))))) {
                return @as(?*const anyopaque, @ptrCast(e));
            }
        }
    }
    return null;
}
pub inline fn zend_memnrstr(arg_haystack: [*c]const u8, arg_needle: [*c]const u8, arg_needle_len: usize, arg_end: [*c]const u8) [*c]const u8 {
    var haystack = arg_haystack;
    _ = &haystack;
    var needle = arg_needle;
    _ = &needle;
    var needle_len = arg_needle_len;
    _ = &needle_len;
    var end = arg_end;
    _ = &end;
    var p: [*c]const u8 = end;
    _ = &p;
    var off_p: ptrdiff_t = undefined;
    _ = &off_p;
    var off_s: usize = undefined;
    _ = &off_s;
    if (needle_len == @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) {
        return p;
    }
    if (needle_len == @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))) {
        return @as([*c]const u8, @ptrCast(@alignCast(zend_memrchr(@as(?*const anyopaque, @ptrCast(haystack)), @as(c_int, @bitCast(@as(c_uint, needle.*))), @as(usize, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(p) -% @intFromPtr(haystack))), @sizeOf(u8))))))));
    }
    off_p = @divExact(@as(c_long, @bitCast(@intFromPtr(end) -% @intFromPtr(haystack))), @sizeOf(u8));
    off_s = if (off_p > @as(ptrdiff_t, @bitCast(@as(c_long, @as(c_int, 0))))) @as(usize, @bitCast(off_p)) else @as(usize, @bitCast(@as(c_long, @as(c_int, 0))));
    if (needle_len > off_s) {
        return null;
    }
    if (__builtin_expect(@as(c_long, @intFromBool(!!((off_s < @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) or (needle_len < @as(usize, @bitCast(@as(c_long, @as(c_int, 3)))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        const ne: u8 = needle[needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))];
        _ = &ne;
        p -= needle_len;
        while (true) {
            p = @as([*c]const u8, @ptrCast(@alignCast(zend_memrchr(@as(?*const anyopaque, @ptrCast(haystack)), @as(c_int, @bitCast(@as(c_uint, needle.*))), @as(usize, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(p) -% @intFromPtr(haystack))), @sizeOf(u8)) + @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))))))));
            if (!(p != null)) {
                return null;
            }
            if ((@as(c_int, @bitCast(@as(c_uint, ne))) == @as(c_int, @bitCast(@as(c_uint, p[needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))])))) and !(memcmp(@as(?*const anyopaque, @ptrCast(needle + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 1))))))), @as(?*const anyopaque, @ptrCast(p + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 1))))))), needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 2))))) != 0)) {
                return p;
            }
            if (!((blk: {
                const ref = &p;
                const tmp = ref.*;
                ref.* -= 1;
                break :blk tmp;
            }) >= haystack)) break;
        }
        return null;
    } else {
        return zend_memnrstr_ex(haystack, needle, needle_len, end);
    }
    return null;
}
pub inline fn zend_strnlen(arg_s: [*c]const u8, arg_maxlen: usize) usize {
    var s = arg_s;
    _ = &s;
    var maxlen = arg_maxlen;
    _ = &maxlen;
    return strnlen(s, maxlen);
}
pub inline fn zend_mempcpy(arg_dest: ?*anyopaque, arg_src: ?*const anyopaque, arg_n: usize) ?*anyopaque {
    var dest = arg_dest;
    _ = &dest;
    var src = arg_src;
    _ = &src;
    var n = arg_n;
    _ = &n;
    return @as(?*anyopaque, @ptrCast(@as([*c]u8, @ptrCast(@alignCast(__builtin___memcpy_chk(dest, src, n, __builtin_object_size(dest, @as(c_int, 0)))))) + n));
}
pub extern fn increment_function(op1: [*c]zval) zend_result;
pub extern fn decrement_function(op2: [*c]zval) zend_result;
pub extern fn convert_scalar_to_number(op: [*c]zval) void;
pub extern fn _convert_to_string(op: [*c]zval) void;
pub extern fn convert_to_long(op: [*c]zval) void;
pub extern fn convert_to_double(op: [*c]zval) void;
pub extern fn convert_to_null(op: [*c]zval) void;
pub extern fn convert_to_boolean(op: [*c]zval) void;
pub extern fn convert_to_array(op: [*c]zval) void;
pub extern fn convert_to_object(op: [*c]zval) void;
pub extern fn zval_get_long_func(op: [*c]const zval, is_strict: bool) zend_long;
pub extern fn zval_try_get_long(op: [*c]const zval, failed: [*c]bool) zend_long;
pub extern fn zval_get_double_func(op: [*c]const zval) f64;
pub extern fn zval_get_string_func(op: [*c]zval) [*c]zend_string;
pub extern fn zval_try_get_string_func(op: [*c]zval) [*c]zend_string;
pub inline fn zval_get_long(arg_op: [*c]const zval) zend_long {
    var op = arg_op;
    _ = &op;
    return if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) op.*.value.lval else zval_get_long_func(op, @as(c_int, 0) != 0);
}
pub inline fn zval_get_long_ex(arg_op: [*c]const zval, arg_is_strict: bool) zend_long {
    var op = arg_op;
    _ = &op;
    var is_strict = arg_is_strict;
    _ = &is_strict;
    return if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) op.*.value.lval else zval_get_long_func(op, is_strict);
}
pub inline fn zval_get_double(arg_op: [*c]const zval) f64 {
    var op = arg_op;
    _ = &op;
    return if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op.*)))) == @as(c_int, 5)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) op.*.value.dval else zval_get_double_func(op);
}
pub inline fn zval_get_string(arg_op: [*c]zval) [*c]zend_string {
    var op = arg_op;
    _ = &op;
    return if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) zend_string_copy(op.*.value.str) else zval_get_string_func(op);
}
pub inline fn zval_get_tmp_string(arg_op: [*c]zval, arg_tmp: [*c][*c]zend_string) [*c]zend_string {
    var op = arg_op;
    _ = &op;
    var tmp = arg_tmp;
    _ = &tmp;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        tmp.* = null;
        return op.*.value.str;
    } else {
        return blk: {
            const tmp_1 = zval_get_string_func(op);
            tmp.* = tmp_1;
            break :blk tmp_1;
        };
    }
    return null;
}
pub inline fn zend_tmp_string_release(arg_tmp: [*c]zend_string) void {
    var tmp = arg_tmp;
    _ = &tmp;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(tmp != null))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        zend_string_release_ex(tmp, @as(c_int, 0) != 0);
    }
}
pub inline fn zval_try_get_string(arg_op: [*c]zval) [*c]zend_string {
    var op = arg_op;
    _ = &op;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        var ret: [*c]zend_string = zend_string_copy(op.*.value.str);
        _ = &ret;
        __builtin_assume(ret != @as([*c]zend_string, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0)))))));
        return ret;
    } else {
        return zval_try_get_string_func(op);
    }
    return null;
}
pub inline fn zval_try_get_tmp_string(arg_op: [*c]zval, arg_tmp: [*c][*c]zend_string) [*c]zend_string {
    var op = arg_op;
    _ = &op;
    var tmp = arg_tmp;
    _ = &tmp;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        var ret: [*c]zend_string = op.*.value.str;
        _ = &ret;
        tmp.* = null;
        __builtin_assume(ret != @as([*c]zend_string, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0)))))));
        return ret;
    } else {
        return blk: {
            const tmp_1 = zval_try_get_string_func(op);
            tmp.* = tmp_1;
            break :blk tmp_1;
        };
    }
    return null;
}
pub extern fn _try_convert_to_string(op: [*c]zval) bool;
pub inline fn try_convert_to_string(arg_op: [*c]zval) bool {
    var op = arg_op;
    _ = &op;
    if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op.*)))) == @as(c_int, 6)) {
        return @as(c_int, 1) != 0;
    }
    return _try_convert_to_string(op);
}
pub extern fn zend_is_true(op: [*c]const zval) bool;
pub extern fn zend_object_is_true(op: [*c]const zval) bool;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:398:1: warning: TODO implement translation of stmt class LabelStmtClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:394:32: warning: unable to translate function, demoted to extern
pub extern fn i_zend_is_true(arg_op: [*c]const zval) bool;
pub extern fn zend_compare(op1: [*c]zval, op2: [*c]zval) c_int;
pub extern fn compare_function(result: [*c]zval, op1: [*c]zval, op2: [*c]zval) zend_result;
pub extern fn numeric_compare_function(op1: [*c]zval, op2: [*c]zval) c_int;
pub extern fn string_compare_function_ex(op1: [*c]zval, op2: [*c]zval, case_insensitive: bool) c_int;
pub extern fn string_compare_function(op1: [*c]zval, op2: [*c]zval) c_int;
pub extern fn string_case_compare_function(op1: [*c]zval, op2: [*c]zval) c_int;
pub extern fn string_locale_compare_function(op1: [*c]zval, op2: [*c]zval) c_int;
pub extern const zend_tolower_map: [256]u8;
pub extern const zend_toupper_map: [256]u8;
pub extern fn zend_str_tolower(str: [*c]u8, length: usize) void;
pub extern fn zend_str_toupper(str: [*c]u8, length: usize) void;
pub extern fn zend_str_tolower_copy(dest: [*c]u8, source: [*c]const u8, length: usize) [*c]u8;
pub extern fn zend_str_toupper_copy(dest: [*c]u8, source: [*c]const u8, length: usize) [*c]u8;
pub extern fn zend_str_tolower_dup(source: [*c]const u8, length: usize) [*c]u8;
pub extern fn zend_str_toupper_dup(source: [*c]const u8, length: usize) [*c]u8;
pub extern fn zend_str_tolower_dup_ex(source: [*c]const u8, length: usize) [*c]u8;
pub extern fn zend_str_toupper_dup_ex(source: [*c]const u8, length: usize) [*c]u8;
pub extern fn zend_string_tolower_ex(str: [*c]zend_string, persistent: bool) [*c]zend_string;
pub extern fn zend_string_toupper_ex(str: [*c]zend_string, persistent: bool) [*c]zend_string;
pub inline fn zend_string_tolower(arg_str: [*c]zend_string) [*c]zend_string {
    var str = arg_str;
    _ = &str;
    return zend_string_tolower_ex(str, @as(c_int, 0) != 0);
}
pub inline fn zend_string_toupper(arg_str: [*c]zend_string) [*c]zend_string {
    var str = arg_str;
    _ = &str;
    return zend_string_toupper_ex(str, @as(c_int, 0) != 0);
}
pub extern fn zend_binary_zval_strcmp(s1: [*c]zval, s2: [*c]zval) c_int;
pub extern fn zend_binary_zval_strncmp(s1: [*c]zval, s2: [*c]zval, s3: [*c]zval) c_int;
pub extern fn zend_binary_strcmp(s1: [*c]const u8, len1: usize, s2: [*c]const u8, len2: usize) c_int;
pub extern fn zend_binary_strncmp(s1: [*c]const u8, len1: usize, s2: [*c]const u8, len2: usize, length: usize) c_int;
pub extern fn zend_binary_strcasecmp(s1: [*c]const u8, len1: usize, s2: [*c]const u8, len2: usize) c_int;
pub extern fn zend_binary_strncasecmp(s1: [*c]const u8, len1: usize, s2: [*c]const u8, len2: usize, length: usize) c_int;
pub extern fn zend_binary_strcasecmp_l(s1: [*c]const u8, len1: usize, s2: [*c]const u8, len2: usize) c_int;
pub extern fn zend_binary_strncasecmp_l(s1: [*c]const u8, len1: usize, s2: [*c]const u8, len2: usize, length: usize) c_int;
pub extern fn zendi_smart_streq(s1: [*c]zend_string, s2: [*c]zend_string) bool;
pub extern fn zendi_smart_strcmp(s1: [*c]zend_string, s2: [*c]zend_string) c_int;
pub extern fn zend_compare_symbol_tables(ht1: [*c]HashTable, ht2: [*c]HashTable) c_int;
pub extern fn zend_compare_arrays(a1: [*c]zval, a2: [*c]zval) c_int;
pub extern fn zend_compare_objects(o1: [*c]zval, o2: [*c]zval) c_int;
pub extern fn zend_atoi(str: [*c]const u8, str_len: usize) c_int;
pub extern fn zend_atol(str: [*c]const u8, str_len: usize) zend_long;
pub extern fn zend_update_current_locale() void;
pub extern fn zend_reset_lc_ctype_locale() void;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:554:2: warning: TODO implement translation of stmt class GCCAsmStmtClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:529:32: warning: unable to translate function, demoted to extern
pub extern fn fast_long_increment_function(arg_op1: [*c]zval) void;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:617:2: warning: TODO implement translation of stmt class GCCAsmStmtClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:592:32: warning: unable to translate function, demoted to extern
pub extern fn fast_long_decrement_function(arg_op1: [*c]zval) void;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:694:2: warning: TODO implement translation of stmt class GCCAsmStmtClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:655:32: warning: unable to translate function, demoted to extern
pub extern fn fast_long_add_function(arg_result: [*c]zval, arg_op1: [*c]zval, arg_op2: [*c]zval) void;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:784:2: warning: TODO implement translation of stmt class GCCAsmStmtClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:745:32: warning: unable to translate function, demoted to extern
pub extern fn fast_long_sub_function(arg_result: [*c]zval, arg_op1: [*c]zval, arg_op2: [*c]zval) void;
pub inline fn zend_fast_equal_strings(arg_s1: [*c]zend_string, arg_s2: [*c]zend_string) bool {
    var s1 = arg_s1;
    _ = &s1;
    var s2 = arg_s2;
    _ = &s2;
    if (s1 == s2) {
        return @as(c_int, 1) != 0;
    } else if ((@as(c_int, @bitCast(@as(c_uint, s1.*.val[@as(c_uint, @intCast(@as(c_int, 0)))]))) > @as(c_int, '9')) or (@as(c_int, @bitCast(@as(c_uint, s2.*.val[@as(c_uint, @intCast(@as(c_int, 0)))]))) > @as(c_int, '9'))) {
        return zend_string_equal_content(s1, s2);
    } else {
        return zendi_smart_streq(s1, s2);
    }
    return false;
}
pub inline fn fast_equal_check_function(arg_op1: [*c]zval, arg_op2: [*c]zval) bool {
    var op1 = arg_op1;
    _ = &op1;
    var op2 = arg_op2;
    _ = &op2;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op1.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op2.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
            return op1.*.value.lval == op2.*.value.lval;
        } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op2.*)))) == @as(c_int, 5)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
            return @as(f64, @floatFromInt(op1.*.value.lval)) == op2.*.value.dval;
        }
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op1.*)))) == @as(c_int, 5)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op2.*)))) == @as(c_int, 5)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
            return op1.*.value.dval == op2.*.value.dval;
        } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op2.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
            return op1.*.value.dval == @as(f64, @floatFromInt(op2.*.value.lval));
        }
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op1.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op2.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
            return zend_fast_equal_strings(op1.*.value.str, op2.*.value.str);
        }
    }
    return zend_compare(op1, op2) == @as(c_int, 0);
}
pub inline fn fast_equal_check_long(arg_op1: [*c]zval, arg_op2: [*c]zval) bool {
    var op1 = arg_op1;
    _ = &op1;
    var op2 = arg_op2;
    _ = &op2;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op2.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        return op1.*.value.lval == op2.*.value.lval;
    }
    return zend_compare(op1, op2) == @as(c_int, 0);
}
pub inline fn fast_equal_check_string(arg_op1: [*c]zval, arg_op2: [*c]zval) bool {
    var op1 = arg_op1;
    _ = &op1;
    var op2 = arg_op2;
    _ = &op2;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op2.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        return zend_fast_equal_strings(op1.*.value.str, op2.*.value.str);
    }
    return zend_compare(op1, op2) == @as(c_int, 0);
}
pub inline fn fast_is_identical_function(arg_op1: [*c]zval, arg_op2: [*c]zval) bool {
    var op1 = arg_op1;
    _ = &op1;
    var op2 = arg_op2;
    _ = &op2;
    if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op1.*)))) != @as(c_int, @bitCast(@as(c_uint, zval_get_type(&op2.*))))) {
        return @as(c_int, 0) != 0;
    } else if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op1.*)))) <= @as(c_int, 3)) {
        return @as(c_int, 1) != 0;
    }
    return zend_is_identical(op1, op2);
}
pub inline fn fast_is_not_identical_function(arg_op1: [*c]zval, arg_op2: [*c]zval) bool {
    var op1 = arg_op1;
    _ = &op1;
    var op2 = arg_op2;
    _ = &op2;
    if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op1.*)))) != @as(c_int, @bitCast(@as(c_uint, zval_get_type(&op2.*))))) {
        return @as(c_int, 1) != 0;
    } else if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&op1.*)))) <= @as(c_int, 3)) {
        return @as(c_int, 0) != 0;
    }
    return !zend_is_identical(op1, op2);
}
pub inline fn zend_print_ulong_to_buf(arg_buf: [*c]u8, arg_num: zend_ulong) [*c]u8 {
    var buf = arg_buf;
    _ = &buf;
    var num = arg_num;
    _ = &num;
    buf.* = '\x00';
    while (true) {
        (blk: {
            const ref = &buf;
            ref.* -= 1;
            break :blk ref.*;
        }).* = @as(u8, @bitCast(@as(i8, @truncate(@as(c_int, @bitCast(@as(c_uint, @as(u8, @bitCast(@as(u8, @truncate(num % @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 10))))))))))) + @as(c_int, '0')))));
        num /= @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 10))));
        if (!(num > @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 0)))))) break;
    }
    return buf;
}
pub inline fn zend_print_long_to_buf(arg_buf: [*c]u8, arg_num: zend_long) [*c]u8 {
    var buf = arg_buf;
    _ = &buf;
    var num = arg_num;
    _ = &num;
    if (num < @as(zend_long, @bitCast(@as(c_longlong, @as(c_int, 0))))) {
        var result: [*c]u8 = zend_print_ulong_to_buf(buf, ~@as(zend_ulong, @bitCast(num)) +% @as(zend_ulong, @bitCast(@as(c_longlong, @as(c_int, 1)))));
        _ = &result;
        (blk: {
            const ref = &result;
            ref.* -= 1;
            break :blk ref.*;
        }).* = '-';
        return result;
    } else {
        return zend_print_ulong_to_buf(buf, @as(zend_ulong, @bitCast(num)));
    }
    return null;
}
pub extern fn zend_long_to_str(num: zend_long) [*c]zend_string;
pub extern fn zend_ulong_to_str(num: zend_ulong) [*c]zend_string;
pub extern fn zend_u64_to_str(num: u64) [*c]zend_string;
pub extern fn zend_i64_to_str(num: i64) [*c]zend_string;
pub extern fn zend_double_to_str(num: f64) [*c]zend_string;
pub inline fn zend_unwrap_reference(arg_op: [*c]zval) void {
    var op = arg_op;
    _ = &op;
    if (zval_refcount_p(op) == @as(u32, @bitCast(@as(c_int, 1)))) {
        while (true) {
            var _z: [*c]zval = op;
            _ = &_z;
            var ref: [*c]zend_reference = undefined;
            _ = &ref;
            __builtin_assume(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&_z.*)))) == @as(c_int, 10));
            ref = _z.*.value.ref;
            while (true) {
                var _z1: [*c]zval = _z;
                _ = &_z1;
                var _z2: [*c]const zval = &ref.*.val;
                _ = &_z2;
                var _gc: [*c]zend_refcounted = _z2.*.value.counted;
                _ = &_gc;
                var _t: u32 = _z2.*.u1.type_info;
                _ = &_t;
                while (true) {
                    _z1.*.value.counted = _gc;
                    _z1.*.u1.type_info = _t;
                    if (!false) break;
                }
                if (!false) break;
            }
            while (true) {
                if (__builtin_constant_p(@sizeOf(zend_reference)) != 0) {
                    if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))) {
                        _efree_8(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 16))))) {
                        _efree_16(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 24))))) {
                        _efree_24(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 32))))) {
                        _efree_32(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 40))))) {
                        _efree_40(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 48))))) {
                        _efree_48(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 56))))) {
                        _efree_56(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 64))))) {
                        _efree_64(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 80))))) {
                        _efree_80(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 96))))) {
                        _efree_96(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 112))))) {
                        _efree_112(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 128))))) {
                        _efree_128(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 160))))) {
                        _efree_160(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 192))))) {
                        _efree_192(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 224))))) {
                        _efree_224(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 256))))) {
                        _efree_256(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 320))))) {
                        _efree_320(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 384))))) {
                        _efree_384(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 448))))) {
                        _efree_448(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 512))))) {
                        _efree_512(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 640))))) {
                        _efree_640(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 768))))) {
                        _efree_768(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 896))))) {
                        _efree_896(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1024))))) {
                        _efree_1024(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1280))))) {
                        _efree_1280(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1536))))) {
                        _efree_1536(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1792))))) {
                        _efree_1792(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2048))))) {
                        _efree_2048(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2560))))) {
                        _efree_2560(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 3072))))) {
                        _efree_3072(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) {
                        _efree_large(@as(?*anyopaque, @ptrCast(ref)), @sizeOf(zend_reference));
                    } else {
                        _efree_huge(@as(?*anyopaque, @ptrCast(ref)), @sizeOf(zend_reference));
                    }
                } else {
                    _efree(@as(?*anyopaque, @ptrCast(ref)));
                }
                if (!false) break;
            }
            if (!false) break;
        }
    } else {
        _ = zval_delref_p(op);
        while (true) {
            var _z1: [*c]zval = op;
            _ = &_z1;
            var _z2: [*c]const zval = &op.*.value.ref.*.val;
            _ = &_z2;
            var _gc: [*c]zend_refcounted = _z2.*.value.counted;
            _ = &_gc;
            var _t: u32 = _z2.*.u1.type_info;
            _ = &_t;
            while (true) {
                _z1.*.value.counted = _gc;
                _z1.*.u1.type_info = _t;
                if (!false) break;
            }
            if ((_t & @as(u32, @bitCast(@as(c_int, 65280)))) != @as(u32, @bitCast(@as(c_int, 0)))) {
                _ = zend_gc_addref(&_gc.*.gc);
            }
            if (!false) break;
        }
    }
}
pub inline fn zend_strnieq(arg_ptr1: [*c]const u8, arg_ptr2: [*c]const u8, arg_num: usize) bool {
    var ptr1 = arg_ptr1;
    _ = &ptr1;
    var ptr2 = arg_ptr2;
    _ = &ptr2;
    var num = arg_num;
    _ = &num;
    var end: [*c]const u8 = ptr1 + num;
    _ = &end;
    while (ptr1 < end) {
        if (@as(c_int, @bitCast(@as(c_uint, zend_tolower_map[
            @as(u8, @bitCast((blk: {
                const ref = &ptr1;
                const tmp = ref.*;
                ref.* += 1;
                break :blk tmp;
            }).*))
        ]))) != @as(c_int, @bitCast(@as(c_uint, zend_tolower_map[
            @as(u8, @bitCast((blk: {
                const ref = &ptr2;
                const tmp = ref.*;
                ref.* += 1;
                break :blk tmp;
            }).*))
        ])))) {
            return @as(c_int, 0) != 0;
        }
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_memnistr(arg_haystack: [*c]const u8, arg_needle: [*c]const u8, arg_needle_len: usize, arg_end: [*c]const u8) [*c]const u8 {
    var haystack = arg_haystack;
    _ = &haystack;
    var needle = arg_needle;
    _ = &needle;
    var needle_len = arg_needle_len;
    _ = &needle_len;
    var end = arg_end;
    _ = &end;
    __builtin_assume(end >= haystack);
    if (__builtin_expect(@as(c_long, @intFromBool(!!(needle_len == @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        return haystack;
    }
    if (__builtin_expect(@as(c_long, @intFromBool(!!(needle_len > @as(usize, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(end) -% @intFromPtr(haystack))), @sizeOf(u8))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        return null;
    }
    const first_lower: u8 = @as(u8, @bitCast(zend_tolower_map[@as(u8, @bitCast(needle.*))]));
    _ = &first_lower;
    const first_upper: u8 = @as(u8, @bitCast(zend_toupper_map[@as(u8, @bitCast(needle.*))]));
    _ = &first_upper;
    var p_lower: [*c]const u8 = @as([*c]const u8, @ptrCast(@alignCast(memchr(@as(?*const anyopaque, @ptrCast(haystack)), @as(c_int, @bitCast(@as(c_uint, first_lower))), @as(c_ulong, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(end) -% @intFromPtr(haystack))), @sizeOf(u8))))))));
    _ = &p_lower;
    var p_upper: [*c]const u8 = null;
    _ = &p_upper;
    if (@as(c_int, @bitCast(@as(c_uint, first_lower))) != @as(c_int, @bitCast(@as(c_uint, first_upper)))) {
        var upper_search_length: usize = @as(usize, @bitCast(if ((needle_len == @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))) and (p_lower != @as([*c]const u8, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0)))))))) @divExact(@as(c_long, @bitCast(@intFromPtr(p_lower) -% @intFromPtr(haystack))), @sizeOf(u8)) else @divExact(@as(c_long, @bitCast(@intFromPtr(end) -% @intFromPtr(haystack))), @sizeOf(u8))));
        _ = &upper_search_length;
        p_upper = @as([*c]const u8, @ptrCast(@alignCast(memchr(@as(?*const anyopaque, @ptrCast(haystack)), @as(c_int, @bitCast(@as(c_uint, first_upper))), upper_search_length))));
    }
    var p: [*c]const u8 = if (!(p_upper != null) or ((p_lower != null) and (p_lower < p_upper))) p_lower else p_upper;
    _ = &p;
    if (needle_len == @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))) {
        return p;
    }
    const needle_end_lower: u8 = @as(u8, @bitCast(zend_tolower_map[@as(u8, @bitCast(needle[needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))]))]));
    _ = &needle_end_lower;
    const needle_end_upper: u8 = @as(u8, @bitCast(zend_toupper_map[@as(u8, @bitCast(needle[needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))]))]));
    _ = &needle_end_upper;
    end -= needle_len;
    while ((p != null) and (p <= end)) {
        if ((@as(c_int, @bitCast(@as(c_uint, needle_end_lower))) == @as(c_int, @bitCast(@as(c_uint, p[needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))])))) or (@as(c_int, @bitCast(@as(c_uint, needle_end_upper))) == @as(c_int, @bitCast(@as(c_uint, p[needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))]))))) {
            if (zend_strnieq(needle + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 1))))), p + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 1))))), needle_len -% @as(usize, @bitCast(@as(c_long, @as(c_int, 2)))))) {
                return p;
            }
        }
        if (p_lower == p) {
            p_lower = @as([*c]const u8, @ptrCast(@alignCast(memchr(@as(?*const anyopaque, @ptrCast(p_lower + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 1))))))), @as(c_int, @bitCast(@as(c_uint, first_lower))), @as(c_ulong, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(end) -% @intFromPtr(p_lower))), @sizeOf(u8))))))));
        }
        if (p_upper == p) {
            p_upper = @as([*c]const u8, @ptrCast(@alignCast(memchr(@as(?*const anyopaque, @ptrCast(p_upper + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, 1))))))), @as(c_int, @bitCast(@as(c_uint, first_upper))), @as(c_ulong, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(end) -% @intFromPtr(p_upper))), @sizeOf(u8))))))));
        }
        p = if (!(p_upper != null) or ((p_lower != null) and (p_lower < p_upper))) p_lower else p_upper;
    }
    return null;
}
pub const zend_frameless_function_0 = ?*const fn ([*c]zval) callconv(.c) void;
pub const zend_frameless_function_1 = ?*const fn ([*c]zval, [*c]zval) callconv(.c) void;
pub const zend_frameless_function_2 = ?*const fn ([*c]zval, [*c]zval, [*c]zval) callconv(.c) void;
pub const zend_frameless_function_3 = ?*const fn ([*c]zval, [*c]zval, [*c]zval, [*c]zval) callconv(.c) void;
pub extern var zend_flf_count: usize;
pub extern var zend_flf_capacity: usize;
pub extern var zend_flf_handlers: [*c]?*anyopaque;
pub extern var zend_flf_functions: [*c][*c]zend_function;
pub const zend_frameless_function_info = extern struct {
    handler: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    num_args: u32 = @import("std").mem.zeroes(u32),
};
pub const ZEND_JMP_FL_UNPRIMED: c_int = 0;
pub const ZEND_JMP_FL_MISS: c_int = 1;
pub const ZEND_JMP_FL_HIT: c_int = 2;
pub const zend_jmp_fl_result = c_uint;
const union_unnamed_26 = extern union {
    op: znode_op,
    constant: zval,
};
pub const struct__znode = extern struct {
    op_type: u8 = @import("std").mem.zeroes(u8),
    flag: u8 = @import("std").mem.zeroes(u8),
    u: union_unnamed_26 = @import("std").mem.zeroes(union_unnamed_26),
};
pub const znode = struct__znode;
pub const struct__zend_ast_znode = extern struct {
    kind: zend_ast_kind = @import("std").mem.zeroes(zend_ast_kind),
    attr: zend_ast_attr = @import("std").mem.zeroes(zend_ast_attr),
    lineno: u32 = @import("std").mem.zeroes(u32),
    node: znode = @import("std").mem.zeroes(znode),
};
pub const zend_ast_znode = struct__zend_ast_znode;
pub extern fn zend_ast_create_znode(node: [*c]znode) [*c]zend_ast;
pub inline fn zend_ast_get_znode(arg_ast: [*c]zend_ast) [*c]znode {
    var ast = arg_ast;
    _ = &ast;
    return &@as([*c]zend_ast_znode, @ptrCast(@alignCast(ast))).*.node;
}
pub const struct__zend_declarables = extern struct {
    ticks: zend_long = @import("std").mem.zeroes(zend_long),
};
pub const zend_declarables = struct__zend_declarables;
pub const struct__zend_file_context = extern struct {
    declarables: zend_declarables = @import("std").mem.zeroes(zend_declarables),
    current_namespace: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    in_namespace: bool = @import("std").mem.zeroes(bool),
    has_bracketed_namespaces: bool = @import("std").mem.zeroes(bool),
    imports: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    imports_function: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    imports_const: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    seen_symbols: HashTable = @import("std").mem.zeroes(HashTable),
};
pub const zend_file_context = struct__zend_file_context;
pub const union__zend_parser_stack_elem = extern union {
    ast: [*c]zend_ast,
    str: [*c]zend_string,
    num: zend_ulong,
    ptr: [*c]u8,
    ident: [*c]u8,
};
pub const zend_parser_stack_elem = union__zend_parser_stack_elem;
pub extern fn zend_compile_top_stmt(ast: [*c]zend_ast) void;
pub extern fn zend_const_expr_to_zval(result: [*c]zval, ast_ptr: [*c][*c]zend_ast, allow_dynamic: bool) void;
pub const user_opcode_handler_t = ?*const fn ([*c]zend_execute_data) callconv(.c) c_int;
pub const struct__zend_brk_cont_element = extern struct {
    start: c_int = @import("std").mem.zeroes(c_int),
    cont: c_int = @import("std").mem.zeroes(c_int),
    brk: c_int = @import("std").mem.zeroes(c_int),
    parent: c_int = @import("std").mem.zeroes(c_int),
    is_switch: bool = @import("std").mem.zeroes(bool),
};
pub const zend_brk_cont_element = struct__zend_brk_cont_element;
pub const struct__zend_label = extern struct {
    brk_cont: c_int = @import("std").mem.zeroes(c_int),
    opline_num: u32 = @import("std").mem.zeroes(u32),
};
pub const zend_label = struct__zend_label;
pub const struct__zend_oparray_context = extern struct {
    prev: [*c]struct__zend_oparray_context = @import("std").mem.zeroes([*c]struct__zend_oparray_context),
    op_array: [*c]zend_op_array = @import("std").mem.zeroes([*c]zend_op_array),
    opcodes_size: u32 = @import("std").mem.zeroes(u32),
    vars_size: c_int = @import("std").mem.zeroes(c_int),
    literals_size: c_int = @import("std").mem.zeroes(c_int),
    fast_call_var: u32 = @import("std").mem.zeroes(u32),
    try_catch_offset: u32 = @import("std").mem.zeroes(u32),
    current_brk_cont: c_int = @import("std").mem.zeroes(c_int),
    last_brk_cont: c_int = @import("std").mem.zeroes(c_int),
    brk_cont_array: [*c]zend_brk_cont_element = @import("std").mem.zeroes([*c]zend_brk_cont_element),
    labels: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    active_property_info: [*c]const zend_property_info = @import("std").mem.zeroes([*c]const zend_property_info),
    active_property_hook_kind: zend_property_hook_kind = @import("std").mem.zeroes(zend_property_hook_kind),
    in_jmp_frameless_branch: bool = @import("std").mem.zeroes(bool),
};
pub const zend_oparray_context = struct__zend_oparray_context;
pub inline fn zend_visibility_to_set_visibility(arg_visibility: u32) u32 {
    var visibility = arg_visibility;
    _ = &visibility;
    while (true) {
        switch (visibility) {
            @as(u32, @bitCast(@as(c_int, 1))) => return @as(u32, @bitCast(@as(c_int, 1) << @intCast(10))),
            @as(u32, @bitCast(@as(c_int, 2))) => return @as(u32, @bitCast(@as(c_int, 1) << @intCast(11))),
            @as(u32, @bitCast(@as(c_int, 4))) => return @as(u32, @bitCast(@as(c_int, 1) << @intCast(12))),
            else => {
                __builtin_unreachable();
                break;
            },
        }
        break;
    }
    return @import("std").mem.zeroes(u32);
}
pub extern fn zend_visibility_string(fn_flags: u32) [*c]u8;
pub extern fn zend_get_property_hook_kind_from_name(name: [*c]zend_string) zend_property_hook_kind;
pub const struct__zend_class_constant = extern struct {
    value: zval = @import("std").mem.zeroes(zval),
    doc_comment: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    attributes: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    ce: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    type: zend_type = @import("std").mem.zeroes(zend_type),
};
pub const zend_class_constant = struct__zend_class_constant;
pub const struct__zend_internal_function_info = extern struct {
    required_num_args: usize = @import("std").mem.zeroes(usize),
    type: zend_type = @import("std").mem.zeroes(zend_type),
    default_value: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const zend_internal_function_info = struct__zend_internal_function_info;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:789:35: warning: ignoring StaticAssert declaration
pub const jmp_buf = [48]c_int;
pub const sigjmp_buf = [49]c_int;
pub extern fn setjmp([*c]c_int) c_int;
pub extern fn longjmp([*c]c_int, c_int) noreturn;
pub extern fn _setjmp([*c]c_int) c_int;
pub extern fn _longjmp([*c]c_int, c_int) noreturn;
pub extern fn sigsetjmp([*c]c_int, c_int) c_int;
pub extern fn siglongjmp([*c]c_int, c_int) noreturn;
pub extern fn longjmperror() void;
pub const struct__zend_stack = extern struct {
    size: c_int = @import("std").mem.zeroes(c_int),
    top: c_int = @import("std").mem.zeroes(c_int),
    max: c_int = @import("std").mem.zeroes(c_int),
    elements: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const zend_stack = struct__zend_stack;
pub const zend_ini_parser_cb_t = ?*const fn ([*c]zval, [*c]zval, [*c]zval, c_int, ?*anyopaque) callconv(.c) void;
pub const struct__zend_ini_parser_param = extern struct {
    ini_parser_cb: zend_ini_parser_cb_t = @import("std").mem.zeroes(zend_ini_parser_cb_t),
    arg: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const struct__zend_arena = extern struct {
    ptr: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    end: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    prev: [*c]zend_arena = @import("std").mem.zeroes([*c]zend_arena),
};
pub const zend_arena = struct__zend_arena;
pub const struct__zend_encoding = opaque {};
pub const zend_encoding = struct__zend_encoding;
pub const struct__zend_compiler_globals = extern struct {
    loop_var_stack: zend_stack = @import("std").mem.zeroes(zend_stack),
    active_class_entry: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    compiled_filename: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    zend_lineno: c_int = @import("std").mem.zeroes(c_int),
    active_op_array: [*c]zend_op_array = @import("std").mem.zeroes([*c]zend_op_array),
    function_table: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    class_table: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    auto_globals: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    parse_error: u8 = @import("std").mem.zeroes(u8),
    in_compilation: bool = @import("std").mem.zeroes(bool),
    short_tags: bool = @import("std").mem.zeroes(bool),
    unclean_shutdown: bool = @import("std").mem.zeroes(bool),
    ini_parser_unbuffered_errors: bool = @import("std").mem.zeroes(bool),
    open_files: zend_llist = @import("std").mem.zeroes(zend_llist),
    ini_parser_param: [*c]struct__zend_ini_parser_param = @import("std").mem.zeroes([*c]struct__zend_ini_parser_param),
    skip_shebang: bool = @import("std").mem.zeroes(bool),
    increment_lineno: bool = @import("std").mem.zeroes(bool),
    variable_width_locale: bool = @import("std").mem.zeroes(bool),
    ascii_compatible_locale: bool = @import("std").mem.zeroes(bool),
    doc_comment: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    extra_fn_flags: u32 = @import("std").mem.zeroes(u32),
    compiler_options: u32 = @import("std").mem.zeroes(u32),
    context: zend_oparray_context = @import("std").mem.zeroes(zend_oparray_context),
    file_context: zend_file_context = @import("std").mem.zeroes(zend_file_context),
    arena: [*c]zend_arena = @import("std").mem.zeroes([*c]zend_arena),
    interned_strings: HashTable = @import("std").mem.zeroes(HashTable),
    script_encoding_list: [*c]?*const zend_encoding = @import("std").mem.zeroes([*c]?*const zend_encoding),
    script_encoding_list_size: usize = @import("std").mem.zeroes(usize),
    multibyte: bool = @import("std").mem.zeroes(bool),
    detect_unicode: bool = @import("std").mem.zeroes(bool),
    encoding_declared: bool = @import("std").mem.zeroes(bool),
    ast: [*c]zend_ast = @import("std").mem.zeroes([*c]zend_ast),
    ast_arena: [*c]zend_arena = @import("std").mem.zeroes([*c]zend_arena),
    delayed_oplines_stack: zend_stack = @import("std").mem.zeroes(zend_stack),
    memoized_exprs: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    memoize_mode: zend_memoize_mode = @import("std").mem.zeroes(zend_memoize_mode),
    map_ptr_real_base: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    map_ptr_base: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    map_ptr_size: usize = @import("std").mem.zeroes(usize),
    map_ptr_last: usize = @import("std").mem.zeroes(usize),
    delayed_variance_obligations: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    delayed_autoloads: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    unlinked_uses: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    current_linking_class: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    rtd_key_counter: u32 = @import("std").mem.zeroes(u32),
    internal_run_time_cache: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    internal_run_time_cache_size: u32 = @import("std").mem.zeroes(u32),
    short_circuiting_opnums: zend_stack = @import("std").mem.zeroes(zend_stack),
};
pub const zend_compiler_globals = struct__zend_compiler_globals;
pub const struct__zend_vm_stack = extern struct {
    top: [*c]zval = @import("std").mem.zeroes([*c]zval),
    end: [*c]zval = @import("std").mem.zeroes([*c]zval),
    prev: zend_vm_stack = @import("std").mem.zeroes(zend_vm_stack),
};
pub const zend_vm_stack = [*c]struct__zend_vm_stack;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:55:16: warning: unsupported type: 'Atomic'

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:54:16: warning: struct demoted to opaque type - unable to translate type of field value
pub const struct_zend_atomic_bool_s = opaque {};
pub const zend_atomic_bool = struct_zend_atomic_bool_s;
pub const struct__zend_objects_store = extern struct {
    object_buckets: [*c][*c]zend_object = @import("std").mem.zeroes([*c][*c]zend_object),
    top: u32 = @import("std").mem.zeroes(u32),
    size: u32 = @import("std").mem.zeroes(u32),
    free_list_head: c_int = @import("std").mem.zeroes(c_int),
};
pub const zend_objects_store = struct__zend_objects_store;
pub const struct__zend_fiber_context = opaque {};
pub const zend_fiber_context = struct__zend_fiber_context;
pub const struct__zend_fiber = opaque {};
pub const zend_fiber = struct__zend_fiber;
pub const struct__zend_call_stack = extern struct {
    base: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    max_size: usize = @import("std").mem.zeroes(usize),
};
pub const zend_call_stack = struct__zend_call_stack;
pub const struct__zend_executor_globals = extern struct {
    uninitialized_zval: zval = @import("std").mem.zeroes(zval),
    error_zval: zval = @import("std").mem.zeroes(zval),
    symtable_cache: [32][*c]zend_array = @import("std").mem.zeroes([32][*c]zend_array),
    symtable_cache_limit: [*c][*c]zend_array = @import("std").mem.zeroes([*c][*c]zend_array),
    symtable_cache_ptr: [*c][*c]zend_array = @import("std").mem.zeroes([*c][*c]zend_array),
    symbol_table: zend_array = @import("std").mem.zeroes(zend_array),
    included_files: HashTable = @import("std").mem.zeroes(HashTable),
    bailout: [*c]sigjmp_buf = @import("std").mem.zeroes([*c]sigjmp_buf),
    error_reporting: c_int = @import("std").mem.zeroes(c_int),
    exit_status: c_int = @import("std").mem.zeroes(c_int),
    function_table: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    class_table: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    zend_constants: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    vm_stack_top: [*c]zval = @import("std").mem.zeroes([*c]zval),
    vm_stack_end: [*c]zval = @import("std").mem.zeroes([*c]zval),
    vm_stack: zend_vm_stack = @import("std").mem.zeroes(zend_vm_stack),
    vm_stack_page_size: usize = @import("std").mem.zeroes(usize),
    current_execute_data: [*c]struct__zend_execute_data = @import("std").mem.zeroes([*c]struct__zend_execute_data),
    fake_scope: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    jit_trace_num: u32 = @import("std").mem.zeroes(u32),
    current_observed_frame: [*c]zend_execute_data = @import("std").mem.zeroes([*c]zend_execute_data),
    ticks_count: c_int = @import("std").mem.zeroes(c_int),
    precision: zend_long = @import("std").mem.zeroes(zend_long),
    persistent_constants_count: u32 = @import("std").mem.zeroes(u32),
    persistent_functions_count: u32 = @import("std").mem.zeroes(u32),
    persistent_classes_count: u32 = @import("std").mem.zeroes(u32),
    no_extensions: bool = @import("std").mem.zeroes(bool),
    full_tables_cleanup: bool = @import("std").mem.zeroes(bool),
    // vm_interrupt: zend_atomic_bool = @import("std").mem.zeroes(zend_atomic_bool),
    // timed_out: zend_atomic_bool = @import("std").mem.zeroes(zend_atomic_bool),
    in_autoload: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    hard_timeout: zend_long = @import("std").mem.zeroes(zend_long),
    stack_base: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    stack_limit: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    regular_list: HashTable = @import("std").mem.zeroes(HashTable),
    persistent_list: HashTable = @import("std").mem.zeroes(HashTable),
    user_error_handler_error_reporting: c_int = @import("std").mem.zeroes(c_int),
    exception_ignore_args: bool = @import("std").mem.zeroes(bool),
    user_error_handler: zval = @import("std").mem.zeroes(zval),
    user_exception_handler: zval = @import("std").mem.zeroes(zval),
    user_error_handlers_error_reporting: zend_stack = @import("std").mem.zeroes(zend_stack),
    user_error_handlers: zend_stack = @import("std").mem.zeroes(zend_stack),
    user_exception_handlers: zend_stack = @import("std").mem.zeroes(zend_stack),
    exception_class: [*c]zend_class_entry = @import("std").mem.zeroes([*c]zend_class_entry),
    error_handling: zend_error_handling_t = @import("std").mem.zeroes(zend_error_handling_t),
    capture_warnings_during_sccp: c_int = @import("std").mem.zeroes(c_int),
    timeout_seconds: zend_long = @import("std").mem.zeroes(zend_long),
    ini_directives: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    modified_ini_directives: [*c]HashTable = @import("std").mem.zeroes([*c]HashTable),
    error_reporting_ini_entry: [*c]zend_ini_entry = @import("std").mem.zeroes([*c]zend_ini_entry),
    objects_store: zend_objects_store = @import("std").mem.zeroes(zend_objects_store),
    lazy_objects_store: zend_lazy_objects_store = @import("std").mem.zeroes(zend_lazy_objects_store),
    exception: [*c]zend_object = @import("std").mem.zeroes([*c]zend_object),
    prev_exception: [*c]zend_object = @import("std").mem.zeroes([*c]zend_object),
    opline_before_exception: [*c]const zend_op = @import("std").mem.zeroes([*c]const zend_op),
    exception_op: [3]zend_op = @import("std").mem.zeroes([3]zend_op),
    current_module: [*c]struct__zend_module_entry = @import("std").mem.zeroes([*c]struct__zend_module_entry),
    active: bool = @import("std").mem.zeroes(bool),
    flags: u8 = @import("std").mem.zeroes(u8),
    assertions: zend_long = @import("std").mem.zeroes(zend_long),
    ht_iterators_count: u32 = @import("std").mem.zeroes(u32),
    ht_iterators_used: u32 = @import("std").mem.zeroes(u32),
    ht_iterators: [*c]HashTableIterator = @import("std").mem.zeroes([*c]HashTableIterator),
    ht_iterators_slots: [16]HashTableIterator = @import("std").mem.zeroes([16]HashTableIterator),
    saved_fpu_cw_ptr: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    trampoline: zend_function = @import("std").mem.zeroes(zend_function),
    call_trampoline_op: zend_op = @import("std").mem.zeroes(zend_op),
    weakrefs: HashTable = @import("std").mem.zeroes(HashTable),
    exception_string_param_max_len: zend_long = @import("std").mem.zeroes(zend_long),
    get_gc_buffer: zend_get_gc_buffer = @import("std").mem.zeroes(zend_get_gc_buffer),
    main_fiber_context: ?*zend_fiber_context = @import("std").mem.zeroes(?*zend_fiber_context),
    current_fiber_context: ?*zend_fiber_context = @import("std").mem.zeroes(?*zend_fiber_context),
    active_fiber: ?*zend_fiber = @import("std").mem.zeroes(?*zend_fiber),
    fiber_stack_size: usize = @import("std").mem.zeroes(usize),
    record_errors: bool = @import("std").mem.zeroes(bool),
    num_errors: u32 = @import("std").mem.zeroes(u32),
    errors: [*c][*c]zend_error_info = @import("std").mem.zeroes([*c][*c]zend_error_info),
    filename_override: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    lineno_override: zend_long = @import("std").mem.zeroes(zend_long),
    call_stack: zend_call_stack = @import("std").mem.zeroes(zend_call_stack),
    max_allowed_stack_size: zend_long = @import("std").mem.zeroes(zend_long),
    reserved_stack_size: zend_ulong = @import("std").mem.zeroes(zend_ulong),
    strtod_state: zend_strtod_state = @import("std").mem.zeroes(zend_strtod_state),
    reserved: [6]?*anyopaque = @import("std").mem.zeroes([6]?*anyopaque),
};
pub const zend_executor_globals = struct__zend_executor_globals;
pub const struct__zend_ptr_stack = extern struct {
    top: c_int = @import("std").mem.zeroes(c_int),
    max: c_int = @import("std").mem.zeroes(c_int),
    elements: [*c]?*anyopaque = @import("std").mem.zeroes([*c]?*anyopaque),
    top_element: [*c]?*anyopaque = @import("std").mem.zeroes([*c]?*anyopaque),
    persistent: bool = @import("std").mem.zeroes(bool),
};
pub const zend_ptr_stack = struct__zend_ptr_stack;
pub const zend_encoding_filter = ?*const fn ([*c][*c]u8, [*c]usize, [*c]const u8, usize) callconv(.c) usize;
pub const struct__zend_php_scanner_globals = extern struct {
    yy_in: [*c]zend_file_handle = @import("std").mem.zeroes([*c]zend_file_handle),
    yy_out: [*c]zend_file_handle = @import("std").mem.zeroes([*c]zend_file_handle),
    yy_leng: c_uint = @import("std").mem.zeroes(c_uint),
    yy_start: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    yy_text: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    yy_cursor: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    yy_marker: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    yy_limit: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    yy_state: c_int = @import("std").mem.zeroes(c_int),
    state_stack: zend_stack = @import("std").mem.zeroes(zend_stack),
    heredoc_label_stack: zend_ptr_stack = @import("std").mem.zeroes(zend_ptr_stack),
    nest_location_stack: zend_stack = @import("std").mem.zeroes(zend_stack),
    heredoc_scan_ahead: bool = @import("std").mem.zeroes(bool),
    heredoc_indentation: c_int = @import("std").mem.zeroes(c_int),
    heredoc_indentation_uses_spaces: bool = @import("std").mem.zeroes(bool),
    script_org: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    script_org_size: usize = @import("std").mem.zeroes(usize),
    script_filtered: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    script_filtered_size: usize = @import("std").mem.zeroes(usize),
    input_filter: zend_encoding_filter = @import("std").mem.zeroes(zend_encoding_filter),
    output_filter: zend_encoding_filter = @import("std").mem.zeroes(zend_encoding_filter),
    script_encoding: ?*const zend_encoding = @import("std").mem.zeroes(?*const zend_encoding),
    scanned_string_len: c_int = @import("std").mem.zeroes(c_int),
    on_event: ?*const fn (zend_php_scanner_event, c_int, c_int, [*c]const u8, usize, ?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (zend_php_scanner_event, c_int, c_int, [*c]const u8, usize, ?*anyopaque) callconv(.c) void),
    on_event_context: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
};
pub const zend_php_scanner_globals = struct__zend_php_scanner_globals;
pub const struct__zend_ini_scanner_globals = extern struct {
    yy_in: [*c]zend_file_handle = @import("std").mem.zeroes([*c]zend_file_handle),
    yy_out: [*c]zend_file_handle = @import("std").mem.zeroes([*c]zend_file_handle),
    yy_leng: c_uint = @import("std").mem.zeroes(c_uint),
    yy_start: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    yy_text: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    yy_cursor: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    yy_marker: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    yy_limit: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    yy_state: c_int = @import("std").mem.zeroes(c_int),
    state_stack: zend_stack = @import("std").mem.zeroes(zend_stack),
    filename: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    lineno: c_int = @import("std").mem.zeroes(c_int),
    scanner_mode: c_int = @import("std").mem.zeroes(c_int),
};
pub const zend_ini_scanner_globals = struct__zend_ini_scanner_globals;
pub extern var compiler_globals: struct__zend_compiler_globals;
pub extern fn zendparse() c_int;
pub extern var executor_globals: zend_executor_globals;
pub extern var language_scanner_globals: zend_php_scanner_globals;
pub extern var ini_scanner_globals: zend_ini_scanner_globals;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:58:15: warning: unsupported type: 'Atomic'

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:57:16: warning: struct demoted to opaque type - unable to translate type of field value
pub const struct_zend_atomic_int_s = opaque {};
pub const zend_atomic_int = struct_zend_atomic_int_s;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:154:9: warning: TODO implement translation of stmt class AtomicExprClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:153:32: warning: unable to translate function, demoted to extern
pub extern fn zend_atomic_bool_exchange_ex(arg_obj: ?*zend_atomic_bool, arg_desired: bool) bool;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:158:9: warning: TODO implement translation of stmt class AtomicExprClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:157:31: warning: unable to translate function, demoted to extern
pub extern fn zend_atomic_int_exchange_ex(arg_obj: ?*zend_atomic_int, arg_desired: c_int) c_int;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:162:9: warning: TODO implement translation of stmt class AtomicExprClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:161:32: warning: unable to translate function, demoted to extern
pub extern fn zend_atomic_bool_compare_exchange_ex(arg_obj: ?*zend_atomic_bool, arg_expected: [*c]bool, arg_desired: bool) bool;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:166:9: warning: TODO implement translation of stmt class AtomicExprClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:165:32: warning: unable to translate function, demoted to extern
pub extern fn zend_atomic_int_compare_exchange_ex(arg_obj: ?*zend_atomic_int, arg_expected: [*c]c_int, arg_desired: c_int) bool;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:170:9: warning: TODO implement translation of stmt class AtomicExprClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:169:32: warning: unable to translate function, demoted to extern
pub extern fn zend_atomic_bool_load_ex(arg_obj: ?*const zend_atomic_bool) bool;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:174:9: warning: TODO implement translation of stmt class AtomicExprClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:173:31: warning: unable to translate function, demoted to extern
pub extern fn zend_atomic_int_load_ex(arg_obj: ?*const zend_atomic_int) c_int;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:178:2: warning: TODO implement translation of stmt class AtomicExprClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:177:32: warning: unable to translate function, demoted to extern
pub extern fn zend_atomic_bool_store_ex(arg_obj: ?*zend_atomic_bool, arg_desired: bool) void;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:182:2: warning: TODO implement translation of stmt class AtomicExprClass

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:181:32: warning: unable to translate function, demoted to extern
pub extern fn zend_atomic_int_store_ex(arg_obj: ?*zend_atomic_int, arg_desired: c_int) void;
pub extern fn zend_atomic_bool_init(obj: ?*zend_atomic_bool, desired: bool) void;
pub extern fn zend_atomic_int_init(obj: ?*zend_atomic_int, desired: c_int) void;
pub extern fn zend_atomic_bool_exchange(obj: ?*zend_atomic_bool, desired: bool) bool;
pub extern fn zend_atomic_int_exchange(obj: ?*zend_atomic_int, desired: c_int) c_int;
pub extern fn zend_atomic_bool_compare_exchange(obj: ?*zend_atomic_bool, expected: [*c]bool, desired: bool) bool;
pub extern fn zend_atomic_int_compare_exchange(obj: ?*zend_atomic_int, expected: [*c]c_int, desired: c_int) bool;
pub extern fn zend_atomic_bool_store(obj: ?*zend_atomic_bool, desired: bool) void;
pub extern fn zend_atomic_int_store(obj: ?*zend_atomic_int, desired: c_int) void;
pub extern fn zend_atomic_bool_load(obj: ?*const zend_atomic_bool) bool;
pub extern fn zend_atomic_int_load(obj: ?*const zend_atomic_int) c_int;
pub const ZEND_STACK_APPLY_TOPDOWN: c_int = 0;
pub const ZEND_STACK_APPLY_BOTTOMUP: c_int = 1;
pub const zend_stack_apply_direction = c_uint;
pub extern fn zend_stack_init(stack: [*c]zend_stack, size: c_int) void;
pub extern fn zend_stack_push(stack: [*c]zend_stack, element: ?*const anyopaque) c_int;
pub extern fn zend_stack_top(stack: [*c]const zend_stack) ?*anyopaque;
pub extern fn zend_stack_del_top(stack: [*c]zend_stack) void;
pub extern fn zend_stack_int_top(stack: [*c]const zend_stack) c_int;
pub extern fn zend_stack_is_empty(stack: [*c]const zend_stack) bool;
pub extern fn zend_stack_destroy(stack: [*c]zend_stack) void;
pub extern fn zend_stack_base(stack: [*c]const zend_stack) ?*anyopaque;
pub extern fn zend_stack_count(stack: [*c]const zend_stack) c_int;
pub extern fn zend_stack_apply(stack: [*c]zend_stack, @"type": c_int, apply_function: ?*const fn (?*anyopaque) callconv(.c) c_int) void;
pub extern fn zend_stack_apply_with_argument(stack: [*c]zend_stack, @"type": zend_stack_apply_direction, apply_function: ?*const fn (?*anyopaque, ?*anyopaque) callconv(.c) c_int, arg: ?*anyopaque) void;
pub extern fn zend_stack_clean(stack: [*c]zend_stack, func: ?*const fn (?*anyopaque) callconv(.c) void, free_elements: bool) void;
pub extern fn zend_ptr_stack_init(stack: [*c]zend_ptr_stack) void;
pub extern fn zend_ptr_stack_init_ex(stack: [*c]zend_ptr_stack, persistent: bool) void;
pub extern fn zend_ptr_stack_n_push(stack: [*c]zend_ptr_stack, count: c_int, ...) void;
pub extern fn zend_ptr_stack_n_pop(stack: [*c]zend_ptr_stack, count: c_int, ...) void;
pub extern fn zend_ptr_stack_destroy(stack: [*c]zend_ptr_stack) void;
pub extern fn zend_ptr_stack_apply(stack: [*c]zend_ptr_stack, func: ?*const fn (?*anyopaque) callconv(.c) void) void;
pub extern fn zend_ptr_stack_reverse_apply(stack: [*c]zend_ptr_stack, func: ?*const fn (?*anyopaque) callconv(.c) void) void;
pub extern fn zend_ptr_stack_clean(stack: [*c]zend_ptr_stack, func: ?*const fn (?*anyopaque) callconv(.c) void, free_elements: bool) void;
pub extern fn zend_ptr_stack_num_elements(stack: [*c]zend_ptr_stack) c_int;
pub inline fn zend_ptr_stack_3_push(arg_stack: [*c]zend_ptr_stack, arg_a: ?*anyopaque, arg_b: ?*anyopaque, arg_c: ?*anyopaque) void {
    var stack = arg_stack;
    _ = &stack;
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    var c = arg_c;
    _ = &c;
    if ((stack.*.top + @as(c_int, 3)) > stack.*.max) {
        while (true) {
            stack.*.max += @as(c_int, 64);
            if (!((stack.*.top + @as(c_int, 3)) > stack.*.max)) break;
        }
        stack.*.elements = @as([*c]?*anyopaque, @ptrCast(@alignCast(if (@as(c_int, @intFromBool(stack.*.persistent)) != 0) _safe_realloc(@as(?*anyopaque, @ptrCast(stack.*.elements)), @sizeOf(?*anyopaque), @as(usize, @bitCast(@as(c_long, stack.*.max))), @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) else _safe_erealloc(@as(?*anyopaque, @ptrCast(stack.*.elements)), @sizeOf(?*anyopaque), @as(usize, @bitCast(@as(c_long, stack.*.max))), @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))))));
        stack.*.top_element = stack.*.elements + @as(usize, @bitCast(@as(isize, @intCast(stack.*.top))));
    }
    stack.*.top += @as(c_int, 3);
    (blk: {
        const ref = &stack.*.top_element;
        const tmp = ref.*;
        ref.* += 1;
        break :blk tmp;
    }).* = a;
    (blk: {
        const ref = &stack.*.top_element;
        const tmp = ref.*;
        ref.* += 1;
        break :blk tmp;
    }).* = b;
    (blk: {
        const ref = &stack.*.top_element;
        const tmp = ref.*;
        ref.* += 1;
        break :blk tmp;
    }).* = c;
}
pub inline fn zend_ptr_stack_2_push(arg_stack: [*c]zend_ptr_stack, arg_a: ?*anyopaque, arg_b: ?*anyopaque) void {
    var stack = arg_stack;
    _ = &stack;
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    if ((stack.*.top + @as(c_int, 2)) > stack.*.max) {
        while (true) {
            stack.*.max += @as(c_int, 64);
            if (!((stack.*.top + @as(c_int, 2)) > stack.*.max)) break;
        }
        stack.*.elements = @as([*c]?*anyopaque, @ptrCast(@alignCast(if (@as(c_int, @intFromBool(stack.*.persistent)) != 0) _safe_realloc(@as(?*anyopaque, @ptrCast(stack.*.elements)), @sizeOf(?*anyopaque), @as(usize, @bitCast(@as(c_long, stack.*.max))), @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) else _safe_erealloc(@as(?*anyopaque, @ptrCast(stack.*.elements)), @sizeOf(?*anyopaque), @as(usize, @bitCast(@as(c_long, stack.*.max))), @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))))));
        stack.*.top_element = stack.*.elements + @as(usize, @bitCast(@as(isize, @intCast(stack.*.top))));
    }
    stack.*.top += @as(c_int, 2);
    (blk: {
        const ref = &stack.*.top_element;
        const tmp = ref.*;
        ref.* += 1;
        break :blk tmp;
    }).* = a;
    (blk: {
        const ref = &stack.*.top_element;
        const tmp = ref.*;
        ref.* += 1;
        break :blk tmp;
    }).* = b;
}
pub inline fn zend_ptr_stack_3_pop(arg_stack: [*c]zend_ptr_stack, arg_a: [*c]?*anyopaque, arg_b: [*c]?*anyopaque, arg_c: [*c]?*anyopaque) void {
    var stack = arg_stack;
    _ = &stack;
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    var c = arg_c;
    _ = &c;
    a.* = (blk: {
        const ref = &stack.*.top_element;
        ref.* -= 1;
        break :blk ref.*;
    }).*;
    b.* = (blk: {
        const ref = &stack.*.top_element;
        ref.* -= 1;
        break :blk ref.*;
    }).*;
    c.* = (blk: {
        const ref = &stack.*.top_element;
        ref.* -= 1;
        break :blk ref.*;
    }).*;
    stack.*.top -= @as(c_int, 3);
}
pub inline fn zend_ptr_stack_2_pop(arg_stack: [*c]zend_ptr_stack, arg_a: [*c]?*anyopaque, arg_b: [*c]?*anyopaque) void {
    var stack = arg_stack;
    _ = &stack;
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    a.* = (blk: {
        const ref = &stack.*.top_element;
        ref.* -= 1;
        break :blk ref.*;
    }).*;
    b.* = (blk: {
        const ref = &stack.*.top_element;
        ref.* -= 1;
        break :blk ref.*;
    }).*;
    stack.*.top -= @as(c_int, 2);
}
pub inline fn zend_ptr_stack_push(arg_stack: [*c]zend_ptr_stack, arg_ptr: ?*anyopaque) void {
    var stack = arg_stack;
    _ = &stack;
    var ptr = arg_ptr;
    _ = &ptr;
    if ((stack.*.top + @as(c_int, 1)) > stack.*.max) {
        while (true) {
            stack.*.max += @as(c_int, 64);
            if (!((stack.*.top + @as(c_int, 1)) > stack.*.max)) break;
        }
        stack.*.elements = @as([*c]?*anyopaque, @ptrCast(@alignCast(if (@as(c_int, @intFromBool(stack.*.persistent)) != 0) _safe_realloc(@as(?*anyopaque, @ptrCast(stack.*.elements)), @sizeOf(?*anyopaque), @as(usize, @bitCast(@as(c_long, stack.*.max))), @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))) else _safe_erealloc(@as(?*anyopaque, @ptrCast(stack.*.elements)), @sizeOf(?*anyopaque), @as(usize, @bitCast(@as(c_long, stack.*.max))), @as(usize, @bitCast(@as(c_long, @as(c_int, 0))))))));
        stack.*.top_element = stack.*.elements + @as(usize, @bitCast(@as(isize, @intCast(stack.*.top))));
    }
    stack.*.top += 1;
    (blk: {
        const ref = &stack.*.top_element;
        const tmp = ref.*;
        ref.* += 1;
        break :blk tmp;
    }).* = ptr;
}
pub inline fn zend_ptr_stack_pop(arg_stack: [*c]zend_ptr_stack) ?*anyopaque {
    var stack = arg_stack;
    _ = &stack;
    stack.*.top -= 1;
    return (blk: {
        const ref = &stack.*.top_element;
        ref.* -= 1;
        break :blk ref.*;
    }).*;
}
pub inline fn zend_ptr_stack_top(arg_stack: [*c]zend_ptr_stack) ?*anyopaque {
    var stack = arg_stack;
    _ = &stack;
    return (blk: {
        const tmp = stack.*.top - @as(c_int, 1);
        if (tmp >= 0) break :blk stack.*.elements + @as(usize, @intCast(tmp)) else break :blk stack.*.elements - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
    }).*;
}
pub extern fn zend_object_std_init(object: [*c]zend_object, ce: [*c]zend_class_entry) void;
pub extern fn zend_objects_new(ce: [*c]zend_class_entry) [*c]zend_object;
pub extern fn zend_objects_clone_members(new_object: [*c]zend_object, old_object: [*c]zend_object) void;
pub extern fn zend_object_std_dtor(object: [*c]zend_object) void;
pub extern fn zend_objects_destroy_object(object: [*c]zend_object) void;
pub extern fn zend_objects_clone_obj(object: [*c]zend_object) [*c]zend_object;
pub extern fn zend_object_dtor_dynamic_properties(object: [*c]zend_object) void;
pub extern fn zend_object_dtor_property(object: [*c]zend_object, p: [*c]zval) void;
pub extern fn zend_objects_store_init(objects: [*c]zend_objects_store, init_size: u32) void;
pub extern fn zend_objects_store_call_destructors(objects: [*c]zend_objects_store) void;
pub extern fn zend_objects_store_mark_destructed(objects: [*c]zend_objects_store) void;
pub extern fn zend_objects_store_free_object_storage(objects: [*c]zend_objects_store, fast_shutdown: bool) void;
pub extern fn zend_objects_store_destroy(objects: [*c]zend_objects_store) void;
pub extern fn zend_objects_store_put(object: [*c]zend_object) void;
pub extern fn zend_objects_store_del(object: [*c]zend_object) void;
pub inline fn zend_object_store_ctor_failed(arg_obj: [*c]zend_object) void {
    var obj = arg_obj;
    _ = &obj;
    while (true) {
        obj.*.gc.u.type_info |= @as(u32, @bitCast((@as(c_int, 1) << @intCast(8)) << @intCast(0)));
        if (!false) break;
    }
}
pub inline fn zend_object_release(arg_obj: [*c]zend_object) void {
    var obj = arg_obj;
    _ = &obj;
    if (zend_gc_delref(&obj.*.gc) == @as(u32, @bitCast(@as(c_int, 0)))) {
        zend_objects_store_del(obj);
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!((@as([*c]zend_refcounted, @ptrCast(@alignCast(obj))).*.gc.u.type_info & (@as(c_uint, 4294966272) | @as(c_uint, @bitCast((@as(c_int, 1) << @intCast(4)) << @intCast(0))))) == @as(c_uint, @bitCast(@as(c_int, 0)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        gc_possible_root(@as([*c]zend_refcounted, @ptrCast(@alignCast(obj))));
    }
}
pub inline fn zend_object_properties_size(arg_ce: [*c]zend_class_entry) usize {
    var ce = arg_ce;
    _ = &ce;
    return @sizeOf(zval) *% @as(c_ulong, @bitCast(@as(c_long, ce.*.default_properties_count - (if ((ce.*.ce_flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(11)))) != 0) @as(c_int, 0) else @as(c_int, 1)))));
}
pub inline fn zend_object_alloc(arg_obj_size: usize, arg_ce: [*c]zend_class_entry) ?*anyopaque {
    var obj_size = arg_obj_size;
    _ = &obj_size;
    var ce = arg_ce;
    _ = &ce;
    var obj: ?*anyopaque = if (__builtin_constant_p(obj_size +% zend_object_properties_size(ce)) != 0) if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if ((obj_size +% zend_object_properties_size(ce)) <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if ((obj_size +% zend_object_properties_size(ce)) <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(obj_size +% zend_object_properties_size(ce)) else _emalloc_huge(obj_size +% zend_object_properties_size(ce)) else _emalloc(obj_size +% zend_object_properties_size(ce));
    _ = &obj;
    _ = __builtin___memset_chk(obj, @as(c_int, 0), obj_size -% @sizeOf(zend_object), __builtin_object_size(obj, @as(c_int, 0)));
    return obj;
}
pub extern fn zend_get_property_info_for_slot_slow(obj: [*c]zend_object, slot: [*c]zval) [*c]zend_property_info;
pub fn zend_get_property_info_for_slot_self(arg_obj: [*c]zend_object, arg_slot: [*c]zval) callconv(.c) [*c]zend_property_info {
    var obj = arg_obj;
    _ = &obj;
    var slot = arg_slot;
    _ = &slot;
    var table: [*c][*c]zend_property_info = obj.*.ce.*.properties_info_table;
    _ = &table;
    var prop_num: isize = @divExact(@as(c_long, @bitCast(@intFromPtr(slot) -% @intFromPtr(@as([*c]zval, @ptrCast(@alignCast(&obj.*.properties_table[@as(usize, @intCast(0))])))))), @sizeOf(zval));
    _ = &prop_num;
    __builtin_assume((prop_num >= @as(isize, @bitCast(@as(c_long, @as(c_int, 0))))) and (prop_num < @as(isize, @bitCast(@as(c_long, obj.*.ce.*.default_properties_count)))));
    if ((blk: {
        const tmp = prop_num;
        if (tmp >= 0) break :blk table + @as(usize, @intCast(tmp)) else break :blk table - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
    }).* != null) {
        return (blk: {
            const tmp = prop_num;
            if (tmp >= 0) break :blk table + @as(usize, @intCast(tmp)) else break :blk table - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
        }).*;
    } else {
        return zend_get_property_info_for_slot_slow(obj, slot);
    }
    return null;
}
pub fn zend_get_property_info_for_slot(arg_obj: [*c]zend_object, arg_slot: [*c]zval) callconv(.c) [*c]zend_property_info {
    var obj = arg_obj;
    _ = &obj;
    var slot = arg_slot;
    _ = &slot;
    if (__builtin_expect(@as(c_long, @intFromBool(!!zend_object_is_lazy_proxy(obj))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        return zend_lazy_object_get_property_info_for_slot(obj, slot);
    }
    var table: [*c][*c]zend_property_info = obj.*.ce.*.properties_info_table;
    _ = &table;
    var prop_num: isize = @divExact(@as(c_long, @bitCast(@intFromPtr(slot) -% @intFromPtr(@as([*c]zval, @ptrCast(@alignCast(&obj.*.properties_table[@as(usize, @intCast(0))])))))), @sizeOf(zval));
    _ = &prop_num;
    __builtin_assume((prop_num >= @as(isize, @bitCast(@as(c_long, @as(c_int, 0))))) and (prop_num < @as(isize, @bitCast(@as(c_long, obj.*.ce.*.default_properties_count)))));
    if ((blk: {
        const tmp = prop_num;
        if (tmp >= 0) break :blk table + @as(usize, @intCast(tmp)) else break :blk table - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
    }).* != null) {
        return (blk: {
            const tmp = prop_num;
            if (tmp >= 0) break :blk table + @as(usize, @intCast(tmp)) else break :blk table - ~@as(usize, @bitCast(@as(isize, @intCast(tmp)) +% -1));
        }).*;
    } else {
        return zend_get_property_info_for_slot_slow(obj, slot);
    }
    return null;
}
pub fn zend_get_typed_property_info_for_slot(arg_obj: [*c]zend_object, arg_slot: [*c]zval) callconv(.c) [*c]zend_property_info {
    var obj = arg_obj;
    _ = &obj;
    var slot = arg_slot;
    _ = &slot;
    var prop_info: [*c]zend_property_info = zend_get_property_info_for_slot(obj, slot);
    _ = &prop_info;
    if ((prop_info != null) and ((prop_info.*.type.type_mask & ((@as(c_uint, 1) << @intCast(25)) -% @as(c_uint, @bitCast(@as(c_int, 1))))) != @as(c_uint, @bitCast(@as(c_int, 0))))) {
        return prop_info;
    }
    return null;
}
pub extern fn zend_init_fpu() void;
pub extern fn zend_shutdown_fpu() void;
pub extern fn zend_ensure_fpu_mode() void;
pub const zend_encoding_fetcher = ?*const fn ([*c]const u8) callconv(.c) ?*const zend_encoding;
pub const zend_encoding_name_getter = ?*const fn (?*const zend_encoding) callconv(.c) [*c]const u8;
pub const zend_encoding_lexer_compatibility_checker = ?*const fn (?*const zend_encoding) callconv(.c) bool;
pub const zend_encoding_detector = ?*const fn ([*c]const u8, usize, [*c]?*const zend_encoding, usize) callconv(.c) ?*const zend_encoding;
pub const zend_encoding_converter = ?*const fn ([*c][*c]u8, [*c]usize, [*c]const u8, usize, ?*const zend_encoding, ?*const zend_encoding) callconv(.c) usize;
pub const zend_encoding_list_parser = ?*const fn ([*c]const u8, usize, [*c][*c]?*const zend_encoding, [*c]usize, bool) callconv(.c) zend_result;
pub const zend_encoding_internal_encoding_getter = ?*const fn () callconv(.c) ?*const zend_encoding;
pub const zend_encoding_internal_encoding_setter = ?*const fn (?*const zend_encoding) callconv(.c) zend_result;
pub const struct__zend_multibyte_functions = extern struct {
    provider_name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    encoding_fetcher: zend_encoding_fetcher = @import("std").mem.zeroes(zend_encoding_fetcher),
    encoding_name_getter: zend_encoding_name_getter = @import("std").mem.zeroes(zend_encoding_name_getter),
    lexer_compatibility_checker: zend_encoding_lexer_compatibility_checker = @import("std").mem.zeroes(zend_encoding_lexer_compatibility_checker),
    encoding_detector: zend_encoding_detector = @import("std").mem.zeroes(zend_encoding_detector),
    encoding_converter: zend_encoding_converter = @import("std").mem.zeroes(zend_encoding_converter),
    encoding_list_parser: zend_encoding_list_parser = @import("std").mem.zeroes(zend_encoding_list_parser),
    internal_encoding_getter: zend_encoding_internal_encoding_getter = @import("std").mem.zeroes(zend_encoding_internal_encoding_getter),
    internal_encoding_setter: zend_encoding_internal_encoding_setter = @import("std").mem.zeroes(zend_encoding_internal_encoding_setter),
};
pub const zend_multibyte_functions = struct__zend_multibyte_functions;
pub extern var zend_multibyte_encoding_utf32be: ?*const zend_encoding;
pub extern var zend_multibyte_encoding_utf32le: ?*const zend_encoding;
pub extern var zend_multibyte_encoding_utf16be: ?*const zend_encoding;
pub extern var zend_multibyte_encoding_utf16le: ?*const zend_encoding;
pub extern var zend_multibyte_encoding_utf8: ?*const zend_encoding;
pub extern fn zend_multibyte_set_functions(functions: [*c]const zend_multibyte_functions) zend_result;
pub extern fn zend_multibyte_restore_functions() void;
pub extern fn zend_multibyte_get_functions() [*c]const zend_multibyte_functions;
pub extern fn zend_multibyte_fetch_encoding(name: [*c]const u8) ?*const zend_encoding;
pub extern fn zend_multibyte_get_encoding_name(encoding: ?*const zend_encoding) [*c]const u8;
pub extern fn zend_multibyte_check_lexer_compatibility(encoding: ?*const zend_encoding) c_int;
pub extern fn zend_multibyte_encoding_detector(string: [*c]const u8, length: usize, list: [*c]?*const zend_encoding, list_size: usize) ?*const zend_encoding;
pub extern fn zend_multibyte_encoding_converter(to: [*c][*c]u8, to_length: [*c]usize, from: [*c]const u8, from_length: usize, encoding_to: ?*const zend_encoding, encoding_from: ?*const zend_encoding) usize;
pub extern fn zend_multibyte_parse_encoding_list(encoding_list: [*c]const u8, encoding_list_len: usize, return_list: [*c][*c]?*const zend_encoding, return_size: [*c]usize, persistent: bool) zend_result;
pub extern fn zend_multibyte_get_internal_encoding() ?*const zend_encoding;
pub extern fn zend_multibyte_get_script_encoding() ?*const zend_encoding;
pub extern fn zend_multibyte_set_script_encoding(encoding_list: [*c]?*const zend_encoding, encoding_list_size: usize) zend_result;
pub extern fn zend_multibyte_set_internal_encoding(encoding: ?*const zend_encoding) zend_result;
pub extern fn zend_multibyte_set_script_encoding_by_string(new_value: [*c]const u8, new_value_length: usize) zend_result;
pub inline fn zend_arena_create(arg_size: usize) [*c]zend_arena {
    var size = arg_size;
    _ = &size;
    var arena: [*c]zend_arena = @as([*c]zend_arena, @ptrCast(@alignCast(if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size))));
    _ = &arena;
    arena.*.ptr = @as([*c]u8, @ptrCast(@alignCast(arena))) + (((@sizeOf(zend_arena) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))));
    arena.*.end = @as([*c]u8, @ptrCast(@alignCast(arena))) + size;
    arena.*.prev = null;
    return arena;
}
pub inline fn zend_arena_destroy(arg_arena: [*c]zend_arena) void {
    var arena = arg_arena;
    _ = &arena;
    while (true) {
        var prev: [*c]zend_arena = arena.*.prev;
        _ = &prev;
        _efree(@as(?*anyopaque, @ptrCast(arena)));
        arena = prev;
        if (!(arena != null)) break;
    }
}
pub inline fn zend_arena_alloc(arg_arena_ptr: [*c][*c]zend_arena, arg_size: usize) ?*anyopaque {
    var arena_ptr = arg_arena_ptr;
    _ = &arena_ptr;
    var size = arg_size;
    _ = &size;
    var arena: [*c]zend_arena = arena_ptr.*;
    _ = &arena;
    var ptr: [*c]u8 = arena.*.ptr;
    _ = &ptr;
    size = ((size +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))));
    if (__builtin_expect(@as(c_long, @intFromBool(!!(size <= @as(usize, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(arena.*.end) -% @intFromPtr(ptr))), @sizeOf(u8))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        arena.*.ptr = ptr + size;
    } else {
        var arena_size: usize = if (__builtin_expect(@as(c_long, @intFromBool(!!((size +% (((@sizeOf(zend_arena) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))))) > @as(usize, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(arena.*.end) -% @intFromPtr(@as([*c]u8, @ptrCast(@alignCast(arena)))))), @sizeOf(u8))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) size +% (((@sizeOf(zend_arena) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1)))))) else @as(usize, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(arena.*.end) -% @intFromPtr(@as([*c]u8, @ptrCast(@alignCast(arena)))))), @sizeOf(u8))));
        _ = &arena_size;
        var new_arena: [*c]zend_arena = @as([*c]zend_arena, @ptrCast(@alignCast(if (__builtin_constant_p(arena_size) != 0) if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (arena_size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (arena_size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(arena_size) else _emalloc_huge(arena_size) else _emalloc(arena_size))));
        _ = &new_arena;
        ptr = @as([*c]u8, @ptrCast(@alignCast(new_arena))) + (((@sizeOf(zend_arena) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))));
        new_arena.*.ptr = (@as([*c]u8, @ptrCast(@alignCast(new_arena))) + (((@sizeOf(zend_arena) +% @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) & ~(@as(usize, @bitCast(@as(c_long, @as(c_int, 8)))) -% @as(usize, @bitCast(@as(c_long, @as(c_int, 1))))))) + size;
        new_arena.*.end = @as([*c]u8, @ptrCast(@alignCast(new_arena))) + arena_size;
        new_arena.*.prev = arena;
        arena_ptr.* = new_arena;
    }
    return @as(?*anyopaque, @ptrCast(ptr));
}
pub inline fn zend_arena_calloc(arg_arena_ptr: [*c][*c]zend_arena, arg_count: usize, arg_unit_size: usize) ?*anyopaque {
    var arena_ptr = arg_arena_ptr;
    _ = &arena_ptr;
    var count = arg_count;
    _ = &count;
    var unit_size = arg_unit_size;
    _ = &unit_size;
    var overflow: bool = undefined;
    _ = &overflow;
    var size: usize = undefined;
    _ = &size;
    var ret: ?*anyopaque = undefined;
    _ = &ret;
    size = zend_safe_address(unit_size, count, @as(usize, @bitCast(@as(c_long, @as(c_int, 0)))), &overflow);
    if (__builtin_expect(@as(c_long, @intFromBool(!!overflow)), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        zend_error_noreturn(@as(c_int, 1) << @intCast(0), "Possible integer overflow in zend_arena_calloc() (%zu * %zu)", unit_size, count);
    }
    ret = zend_arena_alloc(arena_ptr, size);
    _ = __builtin___memset_chk(ret, @as(c_int, 0), size, __builtin_object_size(ret, @as(c_int, 0)));
    return ret;
}
pub inline fn zend_arena_checkpoint(arg_arena: [*c]zend_arena) ?*anyopaque {
    var arena = arg_arena;
    _ = &arena;
    return @as(?*anyopaque, @ptrCast(arena.*.ptr));
}
pub inline fn zend_arena_release(arg_arena_ptr: [*c][*c]zend_arena, arg_checkpoint: ?*anyopaque) void {
    var arena_ptr = arg_arena_ptr;
    _ = &arena_ptr;
    var checkpoint = arg_checkpoint;
    _ = &checkpoint;
    var arena: [*c]zend_arena = arena_ptr.*;
    _ = &arena;
    while ((__builtin_expect(@as(c_long, @intFromBool(!!(@as([*c]u8, @ptrCast(@alignCast(checkpoint))) > arena.*.end))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) or (__builtin_expect(@as(c_long, @intFromBool(!!(@as([*c]u8, @ptrCast(@alignCast(checkpoint))) <= @as([*c]u8, @ptrCast(@alignCast(arena)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)) {
        var prev: [*c]zend_arena = arena.*.prev;
        _ = &prev;
        _efree(@as(?*anyopaque, @ptrCast(arena)));
        arena_ptr.* = blk: {
            const tmp = prev;
            arena = tmp;
            break :blk tmp;
        };
    }
    __builtin_assume((@as([*c]u8, @ptrCast(@alignCast(checkpoint))) > @as([*c]u8, @ptrCast(@alignCast(arena)))) and (@as([*c]u8, @ptrCast(@alignCast(checkpoint))) <= arena.*.end));
    arena.*.ptr = @as([*c]u8, @ptrCast(@alignCast(checkpoint)));
}
pub inline fn zend_arena_contains(arg_arena: [*c]zend_arena, arg_ptr: ?*anyopaque) bool {
    var arena = arg_arena;
    _ = &arena;
    var ptr = arg_ptr;
    _ = &ptr;
    while (arena != null) {
        if ((@as([*c]u8, @ptrCast(@alignCast(ptr))) > @as([*c]u8, @ptrCast(@alignCast(arena)))) and (@as([*c]u8, @ptrCast(@alignCast(ptr))) <= arena.*.ptr)) {
            return @as(c_int, 1) != 0;
        }
        arena = arena.*.prev;
    }
    return @as(c_int, 0) != 0;
}
pub const struct_sched_param = extern struct {
    sched_priority: c_int = @import("std").mem.zeroes(c_int),
    __opaque: [4]u8 = @import("std").mem.zeroes([4]u8),
};
pub extern fn sched_yield() c_int;
pub extern fn sched_get_priority_min(c_int) c_int;
pub extern fn sched_get_priority_max(c_int) c_int;
pub const QOS_CLASS_USER_INTERACTIVE: c_int = 33;
pub const QOS_CLASS_USER_INITIATED: c_int = 25;
pub const QOS_CLASS_DEFAULT: c_int = 21;
pub const QOS_CLASS_UTILITY: c_int = 17;
pub const QOS_CLASS_BACKGROUND: c_int = 9;
pub const QOS_CLASS_UNSPECIFIED: c_int = 0;
const enum_unnamed_27 = c_uint;
pub const qos_class_t = c_uint;
pub extern fn qos_class_self() qos_class_t;
pub extern fn qos_class_main() qos_class_t;
pub extern fn pthread_attr_set_qos_class_np(__attr: [*c]pthread_attr_t, __qos_class: qos_class_t, __relative_priority: c_int) c_int;
pub extern fn pthread_attr_get_qos_class_np(noalias __attr: [*c]pthread_attr_t, noalias __qos_class: [*c]qos_class_t, noalias __relative_priority: [*c]c_int) c_int;
pub extern fn pthread_set_qos_class_self_np(__qos_class: qos_class_t, __relative_priority: c_int) c_int;
pub extern fn pthread_get_qos_class_np(__pthread: pthread_t, noalias __qos_class: [*c]qos_class_t, noalias __relative_priority: [*c]c_int) c_int;
pub const struct_pthread_override_s = opaque {};
pub const pthread_override_t = ?*struct_pthread_override_s;
pub extern fn pthread_override_qos_class_start_np(__pthread: pthread_t, __qos_class: qos_class_t, __relative_priority: c_int) pthread_override_t;
pub extern fn pthread_override_qos_class_end_np(__override: pthread_override_t) c_int;
pub extern fn pthread_atfork(?*const fn () callconv(.c) void, ?*const fn () callconv(.c) void, ?*const fn () callconv(.c) void) c_int;
pub extern fn pthread_attr_destroy([*c]pthread_attr_t) c_int;
pub extern fn pthread_attr_getdetachstate([*c]const pthread_attr_t, [*c]c_int) c_int;
pub extern fn pthread_attr_getguardsize(noalias [*c]const pthread_attr_t, noalias [*c]usize) c_int;
pub extern fn pthread_attr_getinheritsched(noalias [*c]const pthread_attr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_attr_getschedparam(noalias [*c]const pthread_attr_t, noalias [*c]struct_sched_param) c_int;
pub extern fn pthread_attr_getschedpolicy(noalias [*c]const pthread_attr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_attr_getscope(noalias [*c]const pthread_attr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_attr_getstack(noalias [*c]const pthread_attr_t, noalias [*c]?*anyopaque, noalias [*c]usize) c_int;
pub extern fn pthread_attr_getstackaddr(noalias [*c]const pthread_attr_t, noalias [*c]?*anyopaque) c_int;
pub extern fn pthread_attr_getstacksize(noalias [*c]const pthread_attr_t, noalias [*c]usize) c_int;
pub extern fn pthread_attr_init([*c]pthread_attr_t) c_int;
pub extern fn pthread_attr_setdetachstate([*c]pthread_attr_t, c_int) c_int;
pub extern fn pthread_attr_setguardsize([*c]pthread_attr_t, usize) c_int;
pub extern fn pthread_attr_setinheritsched([*c]pthread_attr_t, c_int) c_int;
pub extern fn pthread_attr_setschedparam(noalias [*c]pthread_attr_t, noalias [*c]const struct_sched_param) c_int;
pub extern fn pthread_attr_setschedpolicy([*c]pthread_attr_t, c_int) c_int;
pub extern fn pthread_attr_setscope([*c]pthread_attr_t, c_int) c_int;
pub extern fn pthread_attr_setstack([*c]pthread_attr_t, ?*anyopaque, usize) c_int;
pub extern fn pthread_attr_setstackaddr([*c]pthread_attr_t, ?*anyopaque) c_int;
pub extern fn pthread_attr_setstacksize([*c]pthread_attr_t, usize) c_int;
pub extern fn pthread_cancel(pthread_t) c_int;
pub extern fn pthread_cond_broadcast([*c]pthread_cond_t) c_int;
pub extern fn pthread_cond_destroy([*c]pthread_cond_t) c_int;
pub extern fn pthread_cond_init(noalias [*c]pthread_cond_t, noalias [*c]const pthread_condattr_t) c_int;
pub extern fn pthread_cond_signal([*c]pthread_cond_t) c_int;
pub extern fn pthread_cond_timedwait(noalias [*c]pthread_cond_t, noalias [*c]pthread_mutex_t, noalias [*c]const struct_timespec) c_int;
pub extern fn pthread_cond_wait(noalias [*c]pthread_cond_t, noalias [*c]pthread_mutex_t) c_int;
pub extern fn pthread_condattr_destroy([*c]pthread_condattr_t) c_int;
pub extern fn pthread_condattr_init([*c]pthread_condattr_t) c_int;
pub extern fn pthread_condattr_getpshared(noalias [*c]const pthread_condattr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_condattr_setpshared([*c]pthread_condattr_t, c_int) c_int;
pub extern fn pthread_create(noalias [*c]pthread_t, noalias [*c]const pthread_attr_t, ?*const fn (?*anyopaque) callconv(.c) ?*anyopaque, noalias ?*anyopaque) c_int;
pub extern fn pthread_detach(pthread_t) c_int;
pub extern fn pthread_equal(pthread_t, pthread_t) c_int;
pub extern fn pthread_exit(?*anyopaque) noreturn;
pub extern fn pthread_getconcurrency() c_int;
pub extern fn pthread_getschedparam(pthread_t, noalias [*c]c_int, noalias [*c]struct_sched_param) c_int;
pub extern fn pthread_getspecific(pthread_key_t) ?*anyopaque;
pub extern fn pthread_join(pthread_t, [*c]?*anyopaque) c_int;
pub extern fn pthread_key_create([*c]pthread_key_t, ?*const fn (?*anyopaque) callconv(.c) void) c_int;
pub extern fn pthread_key_delete(pthread_key_t) c_int;
pub extern fn pthread_mutex_destroy([*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutex_getprioceiling(noalias [*c]const pthread_mutex_t, noalias [*c]c_int) c_int;
pub extern fn pthread_mutex_init(noalias [*c]pthread_mutex_t, noalias [*c]const pthread_mutexattr_t) c_int;
pub extern fn pthread_mutex_lock([*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutex_setprioceiling(noalias [*c]pthread_mutex_t, c_int, noalias [*c]c_int) c_int;
pub extern fn pthread_mutex_trylock([*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutex_unlock([*c]pthread_mutex_t) c_int;
pub extern fn pthread_mutexattr_destroy([*c]pthread_mutexattr_t) c_int;
pub extern fn pthread_mutexattr_getprioceiling(noalias [*c]const pthread_mutexattr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_mutexattr_getprotocol(noalias [*c]const pthread_mutexattr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_mutexattr_getpshared(noalias [*c]const pthread_mutexattr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_mutexattr_gettype(noalias [*c]const pthread_mutexattr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_mutexattr_getpolicy_np(noalias [*c]const pthread_mutexattr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_mutexattr_init([*c]pthread_mutexattr_t) c_int;
pub extern fn pthread_mutexattr_setprioceiling([*c]pthread_mutexattr_t, c_int) c_int;
pub extern fn pthread_mutexattr_setprotocol([*c]pthread_mutexattr_t, c_int) c_int;
pub extern fn pthread_mutexattr_setpshared([*c]pthread_mutexattr_t, c_int) c_int;
pub extern fn pthread_mutexattr_settype([*c]pthread_mutexattr_t, c_int) c_int;
pub extern fn pthread_mutexattr_setpolicy_np([*c]pthread_mutexattr_t, c_int) c_int;
pub extern fn pthread_once([*c]pthread_once_t, ?*const fn () callconv(.c) void) c_int;
pub extern fn pthread_rwlock_destroy([*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_init(noalias [*c]pthread_rwlock_t, noalias [*c]const pthread_rwlockattr_t) c_int;
pub extern fn pthread_rwlock_rdlock([*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_tryrdlock([*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_trywrlock([*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_wrlock([*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlock_unlock([*c]pthread_rwlock_t) c_int;
pub extern fn pthread_rwlockattr_destroy([*c]pthread_rwlockattr_t) c_int;
pub extern fn pthread_rwlockattr_getpshared(noalias [*c]const pthread_rwlockattr_t, noalias [*c]c_int) c_int;
pub extern fn pthread_rwlockattr_init([*c]pthread_rwlockattr_t) c_int;
pub extern fn pthread_rwlockattr_setpshared([*c]pthread_rwlockattr_t, c_int) c_int;
pub extern fn pthread_self() pthread_t;
pub extern fn pthread_setcancelstate(c_int, [*c]c_int) c_int;
pub extern fn pthread_setcanceltype(c_int, [*c]c_int) c_int;
pub extern fn pthread_setconcurrency(c_int) c_int;
pub extern fn pthread_setschedparam(pthread_t, c_int, [*c]const struct_sched_param) c_int;
pub extern fn pthread_setspecific(pthread_key_t, ?*const anyopaque) c_int;
pub extern fn pthread_testcancel() void;
pub extern fn pthread_is_threaded_np() c_int;
pub extern fn pthread_threadid_np(pthread_t, [*c]__uint64_t) c_int;
pub extern fn pthread_getname_np(pthread_t, [*c]u8, usize) c_int;
pub extern fn pthread_setname_np([*c]const u8) c_int;
pub extern fn pthread_main_np() c_int;
pub extern fn pthread_mach_thread_np(pthread_t) mach_port_t;
pub extern fn pthread_get_stacksize_np(pthread_t) usize;
pub extern fn pthread_get_stackaddr_np(pthread_t) ?*anyopaque;
pub extern fn pthread_cond_signal_thread_np([*c]pthread_cond_t, pthread_t) c_int;
pub extern fn pthread_cond_timedwait_relative_np([*c]pthread_cond_t, [*c]pthread_mutex_t, [*c]const struct_timespec) c_int;
pub extern fn pthread_create_suspended_np([*c]pthread_t, [*c]const pthread_attr_t, ?*const fn (?*anyopaque) callconv(.c) ?*anyopaque, ?*anyopaque) c_int;
pub extern fn pthread_from_mach_thread_np(mach_port_t) pthread_t;
pub extern fn pthread_yield_np() void;
pub extern fn pthread_jit_write_protect_np(enabled: c_int) void;
pub extern fn pthread_jit_write_protect_supported_np() c_int;
pub const pthread_jit_write_callback_t = ?*const fn (?*anyopaque) callconv(.c) c_int;
pub extern fn pthread_jit_write_with_callback_np(callback: pthread_jit_write_callback_t, ctx: ?*anyopaque) c_int;
pub extern fn pthread_jit_write_freeze_callbacks_np() void;
pub extern fn pthread_cpu_number_np(cpu_number_out: [*c]usize) c_int;
pub extern fn zend_call_stack_init() void;
pub extern fn zend_call_stack_get(stack: [*c]zend_call_stack) bool;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_call_stack.h:44:9: warning: TODO implement function '__builtin_frame_address' in std.zig.c_builtins

// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_call_stack.h:40:33: warning: unable to translate function, demoted to extern
pub extern fn zend_call_stack_position() ?*anyopaque;
pub inline fn zend_call_stack_overflowed(arg_stack_limit: ?*anyopaque) bool {
    var stack_limit = arg_stack_limit;
    _ = &stack_limit;
    return @as(usize, @intCast(@intFromPtr(zend_call_stack_position()))) <= @as(usize, @intCast(@intFromPtr(stack_limit)));
}
pub fn zend_call_stack_limit(arg_base: ?*anyopaque, arg_size: usize, arg_reserved_size: usize) callconv(.c) ?*anyopaque {
    var base = arg_base;
    _ = &base;
    var size = arg_size;
    _ = &size;
    var reserved_size = arg_reserved_size;
    _ = &reserved_size;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(size > @as(usize, @intCast(@intFromPtr(base)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
    }
    base = @as(?*anyopaque, @ptrCast(@as([*c]i8, @ptrCast(@alignCast(base))) - size));
    if (__builtin_expect(@as(c_long, @intFromBool(!!((@as(c_ulong, 18446744073709551615) -% @as(usize, @intCast(@intFromPtr(base)))) < reserved_size))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        return @as(?*anyopaque, @ptrFromInt(@as(c_ulong, 18446744073709551615)));
    }
    return @as(?*anyopaque, @ptrCast(@as([*c]i8, @ptrCast(@alignCast(base))) + reserved_size));
}
pub fn zend_call_stack_default_size() callconv(.c) usize {
    if (pthread_main_np() != 0) {
        return @as(usize, @bitCast(@as(c_long, (@as(c_int, 8) * @as(c_int, 1024)) * @as(c_int, 1024))));
    }
    return @as(usize, @bitCast(@as(c_long, @as(c_int, 512) * @as(c_int, 1024))));
    // return @as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024))));
}
pub const ZEND_MEMOIZE_NONE: c_int = 0;
pub const ZEND_MEMOIZE_COMPILE: c_int = 1;
pub const ZEND_MEMOIZE_FETCH: c_int = 2;
pub const zend_memoize_mode = c_uint;
pub const ON_TOKEN: c_int = 0;
pub const ON_FEEDBACK: c_int = 1;
pub const ON_STOP: c_int = 2;
pub const zend_php_scanner_event = c_uint;
pub const ZEND_COMPILE_POSITION_AT_SHEBANG: c_int = 0;
pub const ZEND_COMPILE_POSITION_AT_OPEN_TAG: c_int = 1;
pub const ZEND_COMPILE_POSITION_AFTER_OPEN_TAG: c_int = 2;
pub const enum__zend_compile_position = c_uint;
pub const zend_compile_position = enum__zend_compile_position;
pub extern fn init_compiler() void;
pub extern fn shutdown_compiler() void;
pub extern fn zend_init_compiler_data_structures() void;
pub extern fn zend_oparray_context_begin(prev_context: [*c]zend_oparray_context, op_array: [*c]zend_op_array) void;
pub extern fn zend_oparray_context_end(prev_context: [*c]zend_oparray_context) void;
pub extern fn zend_file_context_begin(prev_context: [*c]zend_file_context) void;
pub extern fn zend_file_context_end(prev_context: [*c]zend_file_context) void;
pub extern var zend_compile_file: ?*const fn ([*c]zend_file_handle, c_int) callconv(.c) [*c]zend_op_array;
pub extern var zend_compile_string: ?*const fn ([*c]zend_string, [*c]const u8, zend_compile_position) callconv(.c) [*c]zend_op_array;
pub extern fn lex_scan(zendlval: [*c]zval, elem: [*c]zend_parser_stack_elem) c_int;
pub extern fn startup_scanner() void;
pub extern fn shutdown_scanner() void;
pub extern fn zend_set_compiled_filename(new_compiled_filename: [*c]zend_string) [*c]zend_string;
pub extern fn zend_restore_compiled_filename(original_compiled_filename: [*c]zend_string) void;
pub extern fn zend_get_compiled_filename() [*c]zend_string;
pub extern fn zend_get_compiled_lineno() c_int;
pub extern fn zend_get_scanned_file_offset() usize;
pub extern fn zend_get_compiled_variable_name(op_array: [*c]const zend_op_array, @"var": u32) [*c]zend_string;
pub const unary_op_type = ?*const fn ([*c]zval, [*c]zval) callconv(.c) zend_result;
pub const binary_op_type = ?*const fn ([*c]zval, [*c]zval, [*c]zval) callconv(.c) zend_result;
pub extern fn get_unary_op(opcode: c_int) unary_op_type;
pub extern fn get_binary_op(opcode: c_int) binary_op_type;
pub extern fn zend_stop_lexing() void;
pub extern fn zend_emit_final_return(return_one: bool) void;
pub const ZEND_MODIFIER_TARGET_PROPERTY: c_int = 0;
pub const ZEND_MODIFIER_TARGET_METHOD: c_int = 1;
pub const ZEND_MODIFIER_TARGET_CONSTANT: c_int = 2;
pub const ZEND_MODIFIER_TARGET_CPP: c_int = 3;
pub const ZEND_MODIFIER_TARGET_PROPERTY_HOOK: c_int = 4;
pub const zend_modifier_target = c_uint;
pub extern fn zend_ast_append_str(left: [*c]zend_ast, right: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_negate_num_string(ast: [*c]zend_ast) [*c]zend_ast;
pub extern fn zend_add_class_modifier(flags: u32, new_flag: u32) u32;
pub extern fn zend_add_anonymous_class_modifier(flags: u32, new_flag: u32) u32;
pub extern fn zend_add_member_modifier(flags: u32, new_flag: u32, target: zend_modifier_target) u32;
pub extern fn zend_modifier_token_to_flag(target: zend_modifier_target, flags: u32) u32;
pub extern fn zend_modifier_list_to_flags(target: zend_modifier_target, modifiers: [*c]zend_ast) u32;
pub extern fn zend_handle_encoding_declaration(ast: [*c]zend_ast) bool;
pub extern fn zend_bind_class_in_slot(class_table_slot: [*c]zval, lcname: [*c]zval, lc_parent_name: [*c]zend_string) [*c]zend_class_entry;
pub extern fn do_bind_function(func: [*c]zend_function, lcname: [*c]zval) zend_result;
pub extern fn do_bind_class(lcname: [*c]zval, lc_parent_name: [*c]zend_string) zend_result;
pub extern fn zend_resolve_goto_label(op_array: [*c]zend_op_array, opline: [*c]zend_op) void;
pub extern fn function_add_ref(function: [*c]zend_function) void;
pub extern fn zval_make_interned_string(zv: [*c]zval) [*c]zend_string;
pub extern fn compile_file(file_handle: [*c]zend_file_handle, @"type": c_int) [*c]zend_op_array;
pub extern fn compile_string(source_string: [*c]zend_string, filename: [*c]const u8, position: zend_compile_position) [*c]zend_op_array;
pub extern fn compile_filename(@"type": c_int, filename: [*c]zend_string) [*c]zend_op_array;
pub extern fn zend_compile_string_to_ast(code: [*c]zend_string, ast_arena: [*c][*c]struct__zend_arena, filename: [*c]zend_string) [*c]zend_ast;
pub extern fn zend_execute_scripts(@"type": c_int, retval: [*c]zval, file_count: c_int, ...) zend_result;
pub extern fn zend_execute_script(@"type": c_int, retval: [*c]zval, file_handle: [*c]zend_file_handle) zend_result;
pub extern fn open_file_for_scanning(file_handle: [*c]zend_file_handle) zend_result;
pub extern fn init_op_array(op_array: [*c]zend_op_array, @"type": u8, initial_ops_size: c_int) void;
pub extern fn destroy_op_array(op_array: [*c]zend_op_array) void;
pub extern fn zend_destroy_static_vars(op_array: [*c]zend_op_array) void;
pub extern fn zend_cleanup_mutable_class_data(ce: [*c]zend_class_entry) void;
pub extern fn zend_cleanup_internal_class_data(ce: [*c]zend_class_entry) void;
pub extern fn zend_type_release(@"type": zend_type, persistent: bool) void;
pub extern fn zend_create_member_string(class_name: [*c]zend_string, member_name: [*c]zend_string) [*c]zend_string;
pub extern fn zend_user_exception_handler() void;
pub extern fn zend_free_internal_arg_info(function: [*c]zend_internal_function) void;
pub extern fn destroy_zend_function(function: [*c]zend_function) void;
pub extern fn zend_function_dtor(zv: [*c]zval) void;
pub extern fn destroy_zend_class(zv: [*c]zval) void;
pub extern fn zend_class_add_ref(zv: [*c]zval) void;
pub extern fn zend_mangle_property_name(src1: [*c]const u8, src1_length: usize, src2: [*c]const u8, src2_length: usize, internal: bool) [*c]zend_string;
pub extern fn zend_unmangle_property_name_ex(name: [*c]const zend_string, class_name: [*c][*c]const u8, prop_name: [*c][*c]const u8, prop_len: [*c]usize) zend_result;
pub inline fn zend_get_unmangled_property_name(arg_mangled_prop: [*c]const zend_string) [*c]const u8 {
    var mangled_prop = arg_mangled_prop;
    _ = &mangled_prop;
    var class_name: [*c]const u8 = undefined;
    _ = &class_name;
    var prop_name: [*c]const u8 = undefined;
    _ = &prop_name;
    _ = zend_unmangle_property_name_ex(mangled_prop, &class_name, &prop_name, null);
    return prop_name;
}
pub const zend_needs_live_range_cb = ?*const fn ([*c]zend_op_array, [*c]zend_op) callconv(.c) bool;
pub extern fn zend_recalc_live_ranges(op_array: [*c]zend_op_array, needs_live_range: zend_needs_live_range_cb) void;
pub extern fn pass_two(op_array: [*c]zend_op_array) void;
pub extern fn zend_is_compiling() bool;
pub extern fn zend_make_compiled_string_description(name: [*c]const u8) [*c]u8;
pub extern fn zend_initialize_class_data(ce: [*c]zend_class_entry, nullify_handlers: bool) void;
pub extern fn zend_get_class_fetch_type(name: [*c]const zend_string) u32;
pub extern fn zend_get_call_op(init_op: [*c]const zend_op, fbc: [*c]zend_function) u8;
pub extern fn zend_is_smart_branch(opline: [*c]const zend_op) bool;
pub const zend_auto_global_callback = ?*const fn ([*c]zend_string) callconv(.c) bool;
pub const struct__zend_auto_global = extern struct {
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    auto_global_callback: zend_auto_global_callback = @import("std").mem.zeroes(zend_auto_global_callback),
    jit: bool = @import("std").mem.zeroes(bool),
    armed: bool = @import("std").mem.zeroes(bool),
};
pub const zend_auto_global = struct__zend_auto_global;
pub extern fn zend_register_auto_global(name: [*c]zend_string, jit: bool, auto_global_callback: zend_auto_global_callback) zend_result;
pub extern fn zend_activate_auto_globals() void;
pub extern fn zend_is_auto_global(name: [*c]zend_string) bool;
pub extern fn zend_is_auto_global_str(name: [*c]const u8, len: usize) bool;
pub extern fn zend_dirname(path: [*c]u8, len: usize) usize;
pub extern fn zend_set_function_arg_flags(func: [*c]zend_function) void;
pub extern fn zendlex(elem: [*c]zend_parser_stack_elem) c_int;
pub extern fn zend_assert_valid_class_name(const_name: [*c]const zend_string, @"type": [*c]const u8) void;
pub extern fn zend_type_to_string_resolved(@"type": zend_type, scope: [*c]zend_class_entry) [*c]zend_string;
pub extern fn zend_type_to_string(@"type": zend_type) [*c]zend_string;
pub extern fn zend_get_opcode_name(opcode: u8) [*c]const u8;
pub extern fn zend_get_opcode_flags(opcode: u8) u32;
pub extern fn zend_get_opcode_id(name: [*c]const u8, length: usize) u8;
pub inline fn zend_check_arg_send_type(arg_zf: [*c]const zend_function, arg_arg_num: u32, arg_mask: u32) bool {
    var zf = arg_zf;
    _ = &zf;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    var mask = arg_mask;
    _ = &mask;
    arg_num -%= 1;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(arg_num >= zf.*.common.num_args))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!((zf.*.common.fn_flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(14)))) == @as(u32, @bitCast(@as(c_int, 0)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
            return @as(c_int, 0) != 0;
        }
        arg_num = zf.*.common.num_args;
    }
    return __builtin_expect(@as(c_long, @intFromBool(!!(((((&zf.*.common.arg_info[arg_num]).*.type.type_mask >> @intCast(25)) & @as(u32, @bitCast(@as(c_int, 3)))) & mask) != @as(u32, @bitCast(@as(c_int, 0)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0;
}
pub extern fn zend_is_op_long_compatible(op: [*c]const zval) bool;
pub extern fn zend_binary_op_produces_error(opcode: u32, op1: [*c]const zval, op2: [*c]const zval) bool;
pub extern fn zend_unary_op_produces_error(opcode: u32, op: [*c]const zval) bool;
pub const zend_module_dep = struct__zend_module_dep;
pub extern var module_registry: HashTable;
pub extern fn module_destructor(module: [*c]zend_module_entry) void;
pub extern fn module_registry_request_startup(module: [*c]zend_module_entry) c_int;
pub extern fn module_registry_unload(module: [*c]const zend_module_entry) void;
pub const rsrc_dtor_func_t = ?*const fn ([*c]zend_resource) callconv(.c) void;
pub const struct__zend_rsrc_list_dtors_entry = extern struct {
    list_dtor_ex: rsrc_dtor_func_t = @import("std").mem.zeroes(rsrc_dtor_func_t),
    plist_dtor_ex: rsrc_dtor_func_t = @import("std").mem.zeroes(rsrc_dtor_func_t),
    type_name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    module_number: c_int = @import("std").mem.zeroes(c_int),
    resource_id: c_int = @import("std").mem.zeroes(c_int),
};
pub const zend_rsrc_list_dtors_entry = struct__zend_rsrc_list_dtors_entry;
pub extern fn zend_register_list_destructors_ex(ld: rsrc_dtor_func_t, pld: rsrc_dtor_func_t, type_name: [*c]const u8, module_number: c_int) c_int;
pub extern fn list_entry_destructor(ptr: [*c]zval) void;
pub extern fn plist_entry_destructor(ptr: [*c]zval) void;
pub extern fn zend_clean_module_rsrc_dtors(module_number: c_int) void;
pub extern fn zend_init_rsrc_list() void;
pub extern fn zend_init_rsrc_plist() void;
pub extern fn zend_close_rsrc_list(ht: [*c]HashTable) void;
pub extern fn zend_destroy_rsrc_list(ht: [*c]HashTable) void;
pub extern fn zend_init_rsrc_list_dtors() void;
pub extern fn zend_destroy_rsrc_list_dtors() void;
pub extern fn zend_list_insert(ptr: ?*anyopaque, @"type": c_int) [*c]zval;
pub extern fn zend_list_free(res: [*c]zend_resource) void;
pub extern fn zend_list_delete(res: [*c]zend_resource) zend_result;
pub extern fn zend_list_close(res: [*c]zend_resource) void;
pub extern fn zend_register_resource(rsrc_pointer: ?*anyopaque, rsrc_type: c_int) [*c]zend_resource;
pub extern fn zend_fetch_resource(res: [*c]zend_resource, resource_type_name: [*c]const u8, resource_type: c_int) ?*anyopaque;
pub extern fn zend_fetch_resource2(res: [*c]zend_resource, resource_type_name: [*c]const u8, resource_type: c_int, resource_type2: c_int) ?*anyopaque;
pub extern fn zend_fetch_resource_ex(res: [*c]zval, resource_type_name: [*c]const u8, resource_type: c_int) ?*anyopaque;
pub extern fn zend_fetch_resource2_ex(res: [*c]zval, resource_type_name: [*c]const u8, resource_type: c_int, resource_type2: c_int) ?*anyopaque;
pub extern fn zend_rsrc_list_get_rsrc_type(res: [*c]zend_resource) [*c]const u8;
pub extern fn zend_fetch_list_dtor_id(type_name: [*c]const u8) c_int;
pub extern fn zend_register_persistent_resource(key: [*c]const u8, key_len: usize, rsrc_pointer: ?*anyopaque, rsrc_type: c_int) [*c]zend_resource;
pub extern fn zend_register_persistent_resource_ex(key: [*c]zend_string, rsrc_pointer: ?*anyopaque, rsrc_type: c_int) [*c]zend_resource;
pub extern var le_index_ptr: c_int;
pub extern var zend_execute_ex: ?*const fn ([*c]zend_execute_data) callconv(.c) void;
pub extern var zend_execute_internal: ?*const fn ([*c]zend_execute_data, [*c]zval) callconv(.c) void;
pub extern var zend_autoload: ?*const fn ([*c]zend_string, [*c]zend_string) callconv(.c) [*c]zend_class_entry;
pub extern fn init_executor() void;
pub extern fn shutdown_executor() void;
pub extern fn shutdown_destructors() void;
pub extern fn zend_shutdown_executor_values(fast_shutdown: bool) void;
pub extern fn zend_init_execute_data(execute_data: [*c]zend_execute_data, op_array: [*c]zend_op_array, return_value: [*c]zval) void;
pub extern fn zend_init_func_execute_data(execute_data: [*c]zend_execute_data, op_array: [*c]zend_op_array, return_value: [*c]zval) void;
pub extern fn zend_init_code_execute_data(execute_data: [*c]zend_execute_data, op_array: [*c]zend_op_array, return_value: [*c]zval) void;
pub extern fn zend_execute(op_array: [*c]zend_op_array, return_value: [*c]zval) void;
pub extern fn execute_ex(execute_data: [*c]zend_execute_data) void;
pub extern fn execute_internal(execute_data: [*c]zend_execute_data, return_value: [*c]zval) void;
pub extern fn zend_is_valid_class_name(name: [*c]zend_string) bool;
pub extern fn zend_lookup_class(name: [*c]zend_string) [*c]zend_class_entry;
pub extern fn zend_lookup_class_ex(name: [*c]zend_string, lcname: [*c]zend_string, flags: u32) [*c]zend_class_entry;
pub extern fn zend_get_called_scope(ex: [*c]zend_execute_data) [*c]zend_class_entry;
pub extern fn zend_get_this_object(ex: [*c]zend_execute_data) [*c]zend_object;
pub extern fn zend_eval_string(str: [*c]const u8, retval_ptr: [*c]zval, string_name: [*c]const u8) zend_result;
pub extern fn zend_eval_stringl(str: [*c]const u8, str_len: usize, retval_ptr: [*c]zval, string_name: [*c]const u8) zend_result;
pub extern fn zend_eval_string_ex(str: [*c]const u8, retval_ptr: [*c]zval, string_name: [*c]const u8, handle_exceptions: bool) zend_result;
pub extern fn zend_eval_stringl_ex(str: [*c]const u8, str_len: usize, retval_ptr: [*c]zval, string_name: [*c]const u8, handle_exceptions: bool) zend_result;
pub extern const zend_pass_function: zend_internal_function;
pub extern fn zend_missing_arg_error(execute_data: [*c]zend_execute_data) void;
pub extern fn zend_deprecated_function(fbc: [*c]const zend_function) void;
pub extern fn zend_deprecated_class_constant(c: [*c]const zend_class_constant, constant_name: [*c]const zend_string) void;
pub extern fn zend_false_to_array_deprecated() void;
pub extern fn zend_param_must_be_ref(func: [*c]const zend_function, arg_num: u32) void;
pub extern fn zend_use_resource_as_offset(dim: [*c]const zval) void;
pub extern fn zend_call_stack_size_error() void;
pub extern fn zend_verify_ref_assignable_zval(ref: [*c]zend_reference, zv: [*c]zval, strict: bool) bool;
pub const ZEND_VERIFY_PROP_ASSIGNABLE_BY_REF_CONTEXT_ASSIGNMENT: c_int = 0;
pub const ZEND_VERIFY_PROP_ASSIGNABLE_BY_REF_CONTEXT_MAGIC_GET: c_int = 1;
pub const zend_verify_prop_assignable_by_ref_context = c_uint;
pub extern fn zend_verify_prop_assignable_by_ref_ex(prop_info: [*c]const zend_property_info, orig_val: [*c]zval, strict: bool, context: zend_verify_prop_assignable_by_ref_context) bool;
pub extern fn zend_verify_prop_assignable_by_ref(prop_info: [*c]const zend_property_info, orig_val: [*c]zval, strict: bool) bool;
pub extern fn zend_throw_ref_type_error_zval(prop: [*c]const zend_property_info, zv: [*c]const zval) void;
pub extern fn zend_throw_ref_type_error_type(prop1: [*c]const zend_property_info, prop2: [*c]const zend_property_info, zv: [*c]const zval) void;
pub extern fn zend_undefined_offset_write(ht: [*c]HashTable, lval: zend_long) [*c]zval;
pub extern fn zend_undefined_index_write(ht: [*c]HashTable, offset: [*c]zend_string) [*c]zval;
pub extern fn zend_wrong_string_offset_error() void;
pub extern fn zend_readonly_property_modification_error(info: [*c]const zend_property_info) void;
pub extern fn zend_readonly_property_modification_error_ex(class_name: [*c]const u8, prop_name: [*c]const u8) void;
pub extern fn zend_readonly_property_indirect_modification_error(info: [*c]const zend_property_info) void;
pub extern fn zend_invalid_class_constant_type_error(@"type": u8) void;
pub extern fn zend_object_released_while_assigning_to_property_error(info: [*c]const zend_property_info) void;
pub extern fn zend_cannot_add_element() void;
pub extern fn zend_asymmetric_visibility_property_modification_error(info: [*c]const zend_property_info, operation: [*c]const u8) void;
pub extern fn zend_verify_scalar_type_hint(type_mask: u32, arg: [*c]zval, strict: bool, is_internal_arg: bool) bool;
pub extern fn zend_verify_arg_error(zf: [*c]const zend_function, arg_info: [*c]const zend_arg_info, arg_num: u32, value: [*c]zval) void;
pub extern fn zend_verify_return_error(zf: [*c]const zend_function, value: [*c]zval) void;
pub extern fn zend_verify_never_error(zf: [*c]const zend_function) void;
pub extern fn zend_verify_ref_array_assignable(ref: [*c]zend_reference) bool;
pub extern fn zend_check_user_type_slow(@"type": [*c]zend_type, arg: [*c]zval, ref: [*c]zend_reference, cache_slot: [*c]?*anyopaque, is_return_type: bool) bool;
pub extern fn zend_ref_add_type_source(source_list: [*c]zend_property_info_source_list, prop: [*c]zend_property_info) void;
pub extern fn zend_ref_del_type_source(source_list: [*c]zend_property_info_source_list, prop: [*c]const zend_property_info) void;
pub extern fn zend_assign_to_typed_ref(variable_ptr: [*c]zval, value: [*c]zval, value_type: u8, strict: bool) [*c]zval;
pub extern fn zend_assign_to_typed_ref_ex(variable_ptr: [*c]zval, value: [*c]zval, value_type: u8, strict: bool, garbage_ptr: [*c][*c]zend_refcounted) [*c]zval;
pub inline fn zend_copy_to_variable(arg_variable_ptr: [*c]zval, arg_value: [*c]zval, arg_value_type: u8) void {
    var variable_ptr = arg_variable_ptr;
    _ = &variable_ptr;
    var value = arg_value;
    _ = &value;
    var value_type = arg_value_type;
    _ = &value_type;
    var ref: [*c]zend_refcounted = null;
    _ = &ref;
    if (((if (__builtin_constant_p(@as(c_int, @bitCast(@as(c_uint, value_type))) & ((@as(c_int, 1) << @intCast(2)) | (@as(c_int, 1) << @intCast(3)))) != 0) @as(c_int, @bitCast(@as(c_uint, value_type))) & ((@as(c_int, 1) << @intCast(2)) | (@as(c_int, 1) << @intCast(3))) else @as(c_int, 1)) != 0) and (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&value.*)))) == @as(c_int, 10))) {
        ref = value.*.value.counted;
        value = &value.*.value.ref.*.val;
    }
    while (true) {
        var _z1: [*c]zval = variable_ptr;
        _ = &_z1;
        var _z2: [*c]const zval = value;
        _ = &_z2;
        var _gc: [*c]zend_refcounted = _z2.*.value.counted;
        _ = &_gc;
        var _t: u32 = _z2.*.u1.type_info;
        _ = &_t;
        while (true) {
            _z1.*.value.counted = _gc;
            _z1.*.u1.type_info = _t;
            if (!false) break;
        }
        if (!false) break;
    }
    if ((if (__builtin_constant_p(@as(c_int, @bitCast(@as(c_uint, value_type))) == (@as(c_int, 1) << @intCast(0))) != 0) @intFromBool(@as(c_int, @bitCast(@as(c_uint, value_type))) == (@as(c_int, 1) << @intCast(0))) else @as(c_int, 0)) != 0) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!((variable_ptr.*.u1.type_info & @as(u32, @bitCast(@as(c_int, 65280)))) != @as(u32, @bitCast(@as(c_int, 0)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
            _ = zval_addref_p(variable_ptr);
        }
    } else if ((@as(c_int, @bitCast(@as(c_uint, value_type))) & ((@as(c_int, 1) << @intCast(0)) | (@as(c_int, 1) << @intCast(3)))) != 0) {
        if ((variable_ptr.*.u1.type_info & @as(u32, @bitCast(@as(c_int, 65280)))) != @as(u32, @bitCast(@as(c_int, 0)))) {
            _ = zval_addref_p(variable_ptr);
        }
    } else if (((if (__builtin_constant_p(@as(c_int, @bitCast(@as(c_uint, value_type))) == (@as(c_int, 1) << @intCast(2))) != 0) @intFromBool(@as(c_int, @bitCast(@as(c_uint, value_type))) == (@as(c_int, 1) << @intCast(2))) else @as(c_int, 1)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(ref != null))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(zend_gc_delref(&ref.*.gc) == @as(u32, @bitCast(@as(c_int, 0)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
            while (true) {
                if (__builtin_constant_p(@sizeOf(zend_reference)) != 0) {
                    if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))) {
                        _efree_8(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 16))))) {
                        _efree_16(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 24))))) {
                        _efree_24(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 32))))) {
                        _efree_32(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 40))))) {
                        _efree_40(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 48))))) {
                        _efree_48(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 56))))) {
                        _efree_56(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 64))))) {
                        _efree_64(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 80))))) {
                        _efree_80(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 96))))) {
                        _efree_96(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 112))))) {
                        _efree_112(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 128))))) {
                        _efree_128(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 160))))) {
                        _efree_160(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 192))))) {
                        _efree_192(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 224))))) {
                        _efree_224(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 256))))) {
                        _efree_256(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 320))))) {
                        _efree_320(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 384))))) {
                        _efree_384(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 448))))) {
                        _efree_448(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 512))))) {
                        _efree_512(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 640))))) {
                        _efree_640(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 768))))) {
                        _efree_768(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 896))))) {
                        _efree_896(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1024))))) {
                        _efree_1024(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1280))))) {
                        _efree_1280(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1536))))) {
                        _efree_1536(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1792))))) {
                        _efree_1792(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2048))))) {
                        _efree_2048(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2560))))) {
                        _efree_2560(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 3072))))) {
                        _efree_3072(@as(?*anyopaque, @ptrCast(ref)));
                    } else if (@sizeOf(zend_reference) <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) {
                        _efree_large(@as(?*anyopaque, @ptrCast(ref)), @sizeOf(zend_reference));
                    } else {
                        _efree_huge(@as(?*anyopaque, @ptrCast(ref)), @sizeOf(zend_reference));
                    }
                } else {
                    _efree(@as(?*anyopaque, @ptrCast(ref)));
                }
                if (!false) break;
            }
        } else if ((variable_ptr.*.u1.type_info & @as(u32, @bitCast(@as(c_int, 65280)))) != @as(u32, @bitCast(@as(c_int, 0)))) {
            _ = zval_addref_p(variable_ptr);
        }
    }
}
pub inline fn zend_assign_to_variable(arg_variable_ptr: [*c]zval, arg_value: [*c]zval, arg_value_type: u8, arg_strict: bool) [*c]zval {
    var variable_ptr = arg_variable_ptr;
    _ = &variable_ptr;
    var value = arg_value;
    _ = &value;
    var value_type = arg_value_type;
    _ = &value_type;
    var strict = arg_strict;
    _ = &strict;
    while (true) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, variable_ptr.*.u1.v.type_flags))) != @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
            var garbage: [*c]zend_refcounted = undefined;
            _ = &garbage;
            if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&variable_ptr.*)))) == @as(c_int, 10)) {
                if (__builtin_expect(@as(c_long, @intFromBool(!!(variable_ptr.*.value.ref.*.sources.ptr != @as([*c]struct__zend_property_info, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
                    return zend_assign_to_typed_ref(variable_ptr, value, value_type, strict);
                }
                variable_ptr = &variable_ptr.*.value.ref.*.val;
                if (__builtin_expect(@as(c_long, @intFromBool(!!!(@as(c_int, @bitCast(@as(c_uint, variable_ptr.*.u1.v.type_flags))) != @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
                    break;
                }
            }
            garbage = variable_ptr.*.value.counted;
            zend_copy_to_variable(variable_ptr, value, value_type);
            while (true) {
                var _p: [*c]zend_refcounted_h = &garbage.*.gc;
                _ = &_p;
                if (zend_gc_delref(_p) == @as(u32, @bitCast(@as(c_int, 0)))) {
                    rc_dtor_func(@as([*c]zend_refcounted, @ptrCast(@alignCast(_p))));
                } else {
                    gc_check_possible_root_no_ref(@as([*c]zend_refcounted, @ptrCast(@alignCast(_p))));
                }
                if (!false) break;
            }
            return variable_ptr;
        }
        if (!false) break;
    }
    zend_copy_to_variable(variable_ptr, value, value_type);
    return variable_ptr;
}
pub inline fn zend_assign_to_variable_ex(arg_variable_ptr: [*c]zval, arg_value: [*c]zval, arg_value_type: zend_uchar, arg_strict: bool, arg_garbage_ptr: [*c][*c]zend_refcounted) [*c]zval {
    var variable_ptr = arg_variable_ptr;
    _ = &variable_ptr;
    var value = arg_value;
    _ = &value;
    var value_type = arg_value_type;
    _ = &value_type;
    var strict = arg_strict;
    _ = &strict;
    var garbage_ptr = arg_garbage_ptr;
    _ = &garbage_ptr;
    while (true) {
        if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, variable_ptr.*.u1.v.type_flags))) != @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
            if (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&variable_ptr.*)))) == @as(c_int, 10)) {
                if (__builtin_expect(@as(c_long, @intFromBool(!!(variable_ptr.*.value.ref.*.sources.ptr != @as([*c]struct__zend_property_info, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
                    return zend_assign_to_typed_ref_ex(variable_ptr, value, value_type, strict, garbage_ptr);
                }
                variable_ptr = &variable_ptr.*.value.ref.*.val;
                if (__builtin_expect(@as(c_long, @intFromBool(!!!(@as(c_int, @bitCast(@as(c_uint, variable_ptr.*.u1.v.type_flags))) != @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
                    break;
                }
            }
            garbage_ptr.* = variable_ptr.*.value.counted;
        }
        if (!false) break;
    }
    zend_copy_to_variable(variable_ptr, value, value_type);
    return variable_ptr;
}
pub extern fn zval_update_constant(pp: [*c]zval) zend_result;
pub extern fn zval_update_constant_ex(pp: [*c]zval, scope: [*c]zend_class_entry) zend_result;
pub extern fn zval_update_constant_with_ctx(pp: [*c]zval, scope: [*c]zend_class_entry, ctx: [*c]zend_ast_evaluate_ctx) zend_result;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:789:35: warning: ignoring StaticAssert declaration
pub extern fn zend_vm_stack_init() void;
pub extern fn zend_vm_stack_init_ex(page_size: usize) void;
pub extern fn zend_vm_stack_destroy() void;
pub extern fn zend_vm_stack_extend(size: usize) ?*anyopaque;
pub inline fn zend_vm_stack_new_page(arg_size: usize, arg_prev: zend_vm_stack) zend_vm_stack {
    var size = arg_size;
    _ = &size;
    var prev = arg_prev;
    _ = &prev;
    var page: zend_vm_stack = @as(zend_vm_stack, @ptrCast(@alignCast(if (__builtin_constant_p(size) != 0) if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (size <= @as(usize, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (size <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(size) else _emalloc_huge(size) else _emalloc(size))));
    _ = &page;
    page.*.top = @as([*c]zval, @ptrCast(@alignCast(page))) + (((@sizeOf(struct__zend_vm_stack) +% @sizeOf(zval)) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) / @sizeOf(zval));
    page.*.end = @as([*c]zval, @ptrCast(@alignCast(@as([*c]u8, @ptrCast(@alignCast(page))) + size)));
    page.*.prev = prev;
    return page;
}
pub inline fn zend_vm_init_call_frame(arg_call: [*c]zend_execute_data, arg_call_info: u32, arg_func: [*c]zend_function, arg_num_args: u32, arg_object_or_called_scope: ?*anyopaque) void {
    var call = arg_call;
    _ = &call;
    var call_info = arg_call_info;
    _ = &call_info;
    var func = arg_func;
    _ = &func;
    var num_args = arg_num_args;
    _ = &num_args;
    var object_or_called_scope = arg_object_or_called_scope;
    _ = &object_or_called_scope;
    __builtin_assume(!(func.*.common.scope != null) or (object_or_called_scope != null));
    call.*.func = func;
    call.*.This.value.ptr = object_or_called_scope;
    call.*.This.u1.type_info = call_info;
    call.*.This.u2.num_args = num_args;
}
pub inline fn zend_vm_stack_push_call_frame_ex(arg_used_stack: u32, arg_call_info: u32, arg_func: [*c]zend_function, arg_num_args: u32, arg_object_or_called_scope: ?*anyopaque) [*c]zend_execute_data {
    var used_stack = arg_used_stack;
    _ = &used_stack;
    var call_info = arg_call_info;
    _ = &call_info;
    var func = arg_func;
    _ = &func;
    var num_args = arg_num_args;
    _ = &num_args;
    var object_or_called_scope = arg_object_or_called_scope;
    _ = &object_or_called_scope;
    var call: [*c]zend_execute_data = @as([*c]zend_execute_data, @ptrCast(@alignCast(executor_globals.vm_stack_top)));
    _ = &call;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(usize, @bitCast(@as(c_ulong, used_stack))) > @as(usize, @bitCast(@divExact(@as(c_long, @bitCast(@intFromPtr(@as([*c]u8, @ptrCast(@alignCast(executor_globals.vm_stack_end)))) -% @intFromPtr(@as([*c]u8, @ptrCast(@alignCast(call)))))), @sizeOf(u8))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        call = @as([*c]zend_execute_data, @ptrCast(@alignCast(zend_vm_stack_extend(@as(usize, @bitCast(@as(c_ulong, used_stack)))))));
        zend_vm_init_call_frame(call, call_info | @as(u32, @bitCast(@as(c_int, 1) << @intCast(18))), func, num_args, object_or_called_scope);
        return call;
    } else {
        executor_globals.vm_stack_top = @as([*c]zval, @ptrCast(@alignCast(@as([*c]u8, @ptrCast(@alignCast(call))) + used_stack)));
        zend_vm_init_call_frame(call, call_info, func, num_args, object_or_called_scope);
        return call;
    }
    return null;
}
pub inline fn zend_vm_calc_used_stack(arg_num_args: u32, arg_func: [*c]zend_function) u32 {
    var num_args = arg_num_args;
    _ = &num_args;
    var func = arg_func;
    _ = &func;
    var used_stack: u32 = (@as(u32, @bitCast(@as(c_int, @bitCast(@as(c_uint, @truncate(((@sizeOf(zend_execute_data) +% @sizeOf(zval)) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) / @sizeOf(zval))))))) +% num_args) +% func.*.common.T;
    _ = &used_stack;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, func.*.type))) != @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        used_stack +%= @as(u32, @bitCast(func.*.op_array.last_var)) -% (if (func.*.op_array.num_args < num_args) func.*.op_array.num_args else num_args);
    }
    return @as(u32, @bitCast(@as(c_uint, @truncate(@as(c_ulong, @bitCast(@as(c_ulong, used_stack))) *% @sizeOf(zval)))));
}
pub inline fn zend_vm_stack_push_call_frame(arg_call_info: u32, arg_func: [*c]zend_function, arg_num_args: u32, arg_object_or_called_scope: ?*anyopaque) [*c]zend_execute_data {
    var call_info = arg_call_info;
    _ = &call_info;
    var func = arg_func;
    _ = &func;
    var num_args = arg_num_args;
    _ = &num_args;
    var object_or_called_scope = arg_object_or_called_scope;
    _ = &object_or_called_scope;
    var used_stack: u32 = zend_vm_calc_used_stack(num_args, func);
    _ = &used_stack;
    return zend_vm_stack_push_call_frame_ex(used_stack, call_info, func, num_args, object_or_called_scope);
}
pub inline fn zend_vm_stack_free_extra_args_ex(arg_call_info: u32, arg_call: [*c]zend_execute_data) void {
    var call_info = arg_call_info;
    _ = &call_info;
    var call = arg_call;
    _ = &call;
    if (__builtin_expect(@as(c_long, @intFromBool(!!((call_info & @as(u32, @bitCast(@as(c_int, 1) << @intCast(19)))) != 0))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        var count: u32 = call.*.This.u2.num_args -% call.*.func.*.op_array.num_args;
        _ = &count;
        var p: [*c]zval = @as([*c]zval, @ptrCast(@alignCast(call))) + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, @bitCast(@as(c_uint, @truncate(((@sizeOf(zend_execute_data) +% @sizeOf(zval)) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) / @sizeOf(zval))))) + @as(c_int, @bitCast(@as(u32, @bitCast(call.*.func.*.op_array.last_var)) +% call.*.func.*.op_array.T))))));
        _ = &p;
        while (true) {
            i_zval_ptr_dtor(p);
            p += 1;
            if (!((blk: {
                const ref = &count;
                ref.* -%= 1;
                break :blk ref.*;
            }) != 0)) break;
        }
    }
}
pub inline fn zend_vm_stack_free_extra_args(arg_call: [*c]zend_execute_data) void {
    var call = arg_call;
    _ = &call;
    zend_vm_stack_free_extra_args_ex(call.*.This.u1.type_info, call);
}
pub inline fn zend_vm_stack_free_args(arg_call: [*c]zend_execute_data) void {
    var call = arg_call;
    _ = &call;
    var num_args: u32 = call.*.This.u2.num_args;
    _ = &num_args;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(num_args > @as(u32, @bitCast(@as(c_int, 0)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        var p: [*c]zval = @as([*c]zval, @ptrCast(@alignCast(call))) + @as(usize, @bitCast(@as(isize, @intCast(@as(c_int, @bitCast(@as(c_uint, @truncate(((@sizeOf(zend_execute_data) +% @sizeOf(zval)) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) / @sizeOf(zval))))) + (@as(c_int, 1) - @as(c_int, 1))))));
        _ = &p;
        while (true) {
            zval_ptr_dtor_nogc(p);
            p += 1;
            if (!((blk: {
                const ref = &num_args;
                ref.* -%= 1;
                break :blk ref.*;
            }) != 0)) break;
        }
    }
}
pub inline fn zend_vm_stack_free_call_frame_ex(arg_call_info: u32, arg_call: [*c]zend_execute_data) void {
    var call_info = arg_call_info;
    _ = &call_info;
    var call = arg_call;
    _ = &call;
    if (__builtin_expect(@as(c_long, @intFromBool(!!((call_info & @as(u32, @bitCast(@as(c_int, 1) << @intCast(18)))) != 0))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        var p: zend_vm_stack = executor_globals.vm_stack;
        _ = &p;
        var prev: zend_vm_stack = p.*.prev;
        _ = &prev;
        __builtin_assume(call == @as([*c]zend_execute_data, @ptrCast(@alignCast(@as([*c]zval, @ptrCast(@alignCast(executor_globals.vm_stack))) + (((@sizeOf(struct__zend_vm_stack) +% @sizeOf(zval)) -% @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1))))) / @sizeOf(zval))))));
        executor_globals.vm_stack_top = prev.*.top;
        executor_globals.vm_stack_end = prev.*.end;
        executor_globals.vm_stack = prev;
        _efree(@as(?*anyopaque, @ptrCast(p)));
    } else {
        executor_globals.vm_stack_top = @as([*c]zval, @ptrCast(@alignCast(call)));
    }
}
pub inline fn zend_vm_stack_free_call_frame(arg_call: [*c]zend_execute_data) void {
    var call = arg_call;
    _ = &call;
    zend_vm_stack_free_call_frame_ex(call.*.This.u1.type_info, call);
}
pub extern fn zend_vm_stack_copy_call_frame(call: [*c]zend_execute_data, passed_args: u32, additional_args: u32) [*c]zend_execute_data;
pub inline fn zend_vm_stack_extend_call_frame(arg_call: [*c][*c]zend_execute_data, arg_passed_args: u32, arg_additional_args: u32) void {
    var call = arg_call;
    _ = &call;
    var passed_args = arg_passed_args;
    _ = &passed_args;
    var additional_args = arg_additional_args;
    _ = &additional_args;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(u32, @bitCast(@as(c_int, @truncate(@divExact(@as(c_long, @bitCast(@intFromPtr(executor_globals.vm_stack_end) -% @intFromPtr(executor_globals.vm_stack_top))), @sizeOf(zval)))))) > additional_args))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        executor_globals.vm_stack_top += additional_args;
    } else {
        call.* = zend_vm_stack_copy_call_frame(call.*, passed_args, additional_args);
    }
}
pub extern fn zend_free_extra_named_params(extra_named_params: [*c]zend_array) void;
pub extern fn get_active_class_name(space: [*c][*c]const u8) [*c]const u8;
pub extern fn get_active_function_name() [*c]const u8;
pub extern fn get_active_function_arg_name(arg_num: u32) [*c]const u8;
pub extern fn get_function_arg_name(func: [*c]const zend_function, arg_num: u32) [*c]const u8;
pub extern fn zend_active_function_ex(execute_data: [*c]zend_execute_data) [*c]zend_function;
pub inline fn zend_active_function() [*c]zend_function {
    var func: [*c]zend_function = executor_globals.current_execute_data.*.func;
    _ = &func;
    if (@as(c_int, @bitCast(@as(c_uint, func.*.type))) != @as(c_int, 1)) {
        return zend_active_function_ex(executor_globals.current_execute_data);
    } else {
        return func;
    }
    return null;
}
pub extern fn get_active_function_or_method_name() [*c]zend_string;
pub extern fn get_function_or_method_name(func: [*c]const zend_function) [*c]zend_string;
pub extern fn zend_get_executed_filename() [*c]const u8;
pub extern fn zend_get_executed_filename_ex() [*c]zend_string;
pub extern fn zend_get_executed_lineno() u32;
pub extern fn zend_get_executed_scope() [*c]zend_class_entry;
pub extern fn zend_is_executing() bool;
pub extern fn zend_cannot_pass_by_reference(arg_num: u32) void;
pub extern fn zend_set_timeout(seconds: zend_long, reset_signals: bool) void;
pub extern fn zend_unset_timeout() void;
pub extern fn zend_timeout() noreturn;
pub extern fn zend_fetch_class(class_name: [*c]zend_string, fetch_type: u32) [*c]zend_class_entry;
pub extern fn zend_fetch_class_with_scope(class_name: [*c]zend_string, fetch_type: u32, scope: [*c]zend_class_entry) [*c]zend_class_entry;
pub extern fn zend_fetch_class_by_name(class_name: [*c]zend_string, lcname: [*c]zend_string, fetch_type: u32) [*c]zend_class_entry;
pub extern fn zend_fetch_function(name: [*c]zend_string) [*c]zend_function;
pub extern fn zend_fetch_function_str(name: [*c]const u8, len: usize) [*c]zend_function;
pub extern fn zend_init_func_run_time_cache(op_array: [*c]zend_op_array) void;
pub extern fn zend_fetch_dimension_const(result: [*c]zval, container: [*c]zval, dim: [*c]zval, @"type": c_int) void;
pub extern fn zend_get_compiled_variable_value(execute_data_ptr: [*c]const zend_execute_data, @"var": u32) [*c]zval;
pub extern fn zend_gcc_global_regs() bool;
pub extern fn zend_set_user_opcode_handler(opcode: u8, handler: user_opcode_handler_t) zend_result;
pub extern fn zend_get_user_opcode_handler(opcode: u8) user_opcode_handler_t;
pub extern fn zend_get_zval_ptr(opline: [*c]const zend_op, op_type: c_int, node: [*c]const znode_op, execute_data: [*c]const zend_execute_data) [*c]zval;
pub extern fn zend_clean_and_cache_symbol_table(symbol_table: [*c]zend_array) void;
pub extern fn zend_free_compiled_variables(execute_data: [*c]zend_execute_data) void;
pub extern fn zend_unfinished_calls_gc(execute_data: [*c]zend_execute_data, call: [*c]zend_execute_data, op_num: u32, buf: [*c]zend_get_gc_buffer) void;
pub extern fn zend_cleanup_unfinished_execution(execute_data: [*c]zend_execute_data, op_num: u32, catch_op_num: u32) void;
pub extern fn zend_unfinished_execution_gc(execute_data: [*c]zend_execute_data, call: [*c]zend_execute_data, gc_buffer: [*c]zend_get_gc_buffer) [*c]HashTable;
pub extern fn zend_unfinished_execution_gc_ex(execute_data: [*c]zend_execute_data, call: [*c]zend_execute_data, gc_buffer: [*c]zend_get_gc_buffer, suspended_by_yield: bool) [*c]HashTable;
pub extern fn zend_frameless_observed_call(execute_data: [*c]zend_execute_data) void;
pub extern fn zend_handle_named_arg(call_ptr: [*c][*c]zend_execute_data, arg_name: [*c]zend_string, arg_num_ptr: [*c]u32, cache_slot: [*c]?*anyopaque) [*c]zval;
pub extern fn zend_handle_undef_args(call: [*c]zend_execute_data) zend_result;
pub extern fn zend_verify_class_constant_type(c: [*c]zend_class_constant, name: [*c]const zend_string, constant: [*c]zval) bool;
pub extern fn zend_verify_class_constant_type_error(c: [*c]const zend_class_constant, name: [*c]const zend_string, constant: [*c]const zval) void;
pub extern fn zend_verify_property_type(info: [*c]const zend_property_info, property: [*c]zval, strict: bool) bool;
pub extern fn zend_verify_property_type_error(info: [*c]const zend_property_info, property: [*c]const zval) void;
pub extern fn zend_magic_get_property_type_inconsistency_error(info: [*c]const zend_property_info, property: [*c]const zval) void;
pub extern fn zend_match_unhandled_error(value: [*c]const zval) void;
pub extern fn zend_fcall_interrupt(call: [*c]zend_execute_data) void;
pub inline fn zend_get_bad_ptr() ?*anyopaque {
    __builtin_unreachable();
    return @as(?*anyopaque, @ptrFromInt(@as(c_int, 0)));
}
pub const zend_function_entry = struct__zend_function_entry;
pub extern fn zend_next_free_module() c_int;
pub extern fn zend_get_parameters_array_ex(param_count: u32, argument_array: [*c]zval) zend_result;
pub extern fn zend_copy_parameters_array(param_count: u32, argument_array: [*c]zval) zend_result;
pub extern fn zend_parse_parameters(num_args: u32, type_spec: [*c]const u8, ...) zend_result;
pub extern fn zend_parse_parameters_ex(flags: c_int, num_args: u32, type_spec: [*c]const u8, ...) zend_result;
pub extern fn zend_zval_type_name(arg: [*c]const zval) [*c]const u8;
pub extern fn zend_zval_value_name(arg: [*c]const zval) [*c]const u8;
pub extern fn zend_zval_get_legacy_type(arg: [*c]const zval) [*c]zend_string;
pub extern fn zend_parse_method_parameters(num_args: u32, this_ptr: [*c]zval, type_spec: [*c]const u8, ...) zend_result;
pub extern fn zend_parse_method_parameters_ex(flags: c_int, num_args: u32, this_ptr: [*c]zval, type_spec: [*c]const u8, ...) zend_result;
pub extern fn zend_parse_parameter(flags: c_int, arg_num: u32, arg: [*c]zval, spec: [*c]const u8, ...) zend_result;
pub extern fn zend_register_functions(scope: [*c]zend_class_entry, functions: [*c]const zend_function_entry, function_table: [*c]HashTable, @"type": c_int) zend_result;
pub extern fn zend_unregister_functions(functions: [*c]const zend_function_entry, count: c_int, function_table: [*c]HashTable) void;
pub extern fn zend_startup_module(module_entry: [*c]zend_module_entry) zend_result;
pub extern fn zend_register_internal_module(module_entry: [*c]zend_module_entry) [*c]zend_module_entry;
pub extern fn zend_register_module_ex(module: [*c]zend_module_entry, module_type: c_int) [*c]zend_module_entry;
pub extern fn zend_startup_module_ex(module: [*c]zend_module_entry) zend_result;
pub extern fn zend_startup_modules() void;
pub extern fn zend_collect_module_handlers() void;
pub extern fn zend_destroy_modules() void;
pub extern fn zend_check_magic_method_implementation(ce: [*c]const zend_class_entry, fptr: [*c]const zend_function, lcname: [*c]zend_string, error_type: c_int) void;
pub extern fn zend_add_magic_method(ce: [*c]zend_class_entry, fptr: [*c]zend_function, lcname: [*c]zend_string) void;
pub extern fn zend_register_internal_class(class_entry: [*c]zend_class_entry) [*c]zend_class_entry;
pub extern fn zend_register_internal_class_ex(class_entry: [*c]zend_class_entry, parent_ce: [*c]zend_class_entry) [*c]zend_class_entry;
pub extern fn zend_register_internal_class_with_flags(class_entry: [*c]zend_class_entry, parent_ce: [*c]zend_class_entry, flags: u32) [*c]zend_class_entry;
pub extern fn zend_register_internal_interface(orig_class_entry: [*c]zend_class_entry) [*c]zend_class_entry;
pub extern fn zend_class_implements(class_entry: [*c]zend_class_entry, num_interfaces: c_int, ...) void;
pub extern fn zend_register_class_alias_ex(name: [*c]const u8, name_len: usize, ce: [*c]zend_class_entry, persistent: bool) zend_result;
pub inline fn zend_register_class_alias(arg_name: [*c]const u8, arg_ce: [*c]zend_class_entry) zend_result {
    var name = arg_name;
    _ = &name;
    var ce = arg_ce;
    _ = &ce;
    return zend_register_class_alias_ex(name, strlen(name), ce, @as(c_int, 1) != 0);
}
pub extern fn zend_disable_functions(function_list: [*c]const u8) void;
pub extern fn zend_disable_class(class_name: [*c]const u8, class_name_length: usize) zend_result;
pub extern fn zend_wrong_param_count() void;
pub extern fn zend_wrong_property_read(object: [*c]zval, property: [*c]zval) void;
pub extern fn zend_release_fcall_info_cache(fcc: [*c]zend_fcall_info_cache) void;
pub extern fn zend_get_callable_name_ex(callable: [*c]zval, object: [*c]zend_object) [*c]zend_string;
pub extern fn zend_get_callable_name(callable: [*c]zval) [*c]zend_string;
pub extern fn zend_is_callable_at_frame(callable: [*c]zval, object: [*c]zend_object, frame: [*c]zend_execute_data, check_flags: u32, fcc: [*c]zend_fcall_info_cache, @"error": [*c][*c]u8) bool;
pub extern fn zend_is_callable_ex(callable: [*c]zval, object: [*c]zend_object, check_flags: u32, callable_name: [*c][*c]zend_string, fcc: [*c]zend_fcall_info_cache, @"error": [*c][*c]u8) bool;
pub extern fn zend_is_callable(callable: [*c]zval, check_flags: u32, callable_name: [*c][*c]zend_string) bool;
pub extern fn zend_make_callable(callable: [*c]zval, callable_name: [*c][*c]zend_string) bool;
pub extern fn zend_get_module_version(module_name: [*c]const u8) [*c]const u8;
pub extern fn zend_get_module_started(module_name: [*c]const u8) zend_result;
pub extern fn zend_declare_typed_property(ce: [*c]zend_class_entry, name: [*c]zend_string, property: [*c]zval, access_type: c_int, doc_comment: [*c]zend_string, @"type": zend_type) [*c]zend_property_info;
pub extern fn zend_declare_property_ex(ce: [*c]zend_class_entry, name: [*c]zend_string, property: [*c]zval, access_type: c_int, doc_comment: [*c]zend_string) void;
pub extern fn zend_declare_property(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, property: [*c]zval, access_type: c_int) void;
pub extern fn zend_declare_property_null(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, access_type: c_int) void;
pub extern fn zend_declare_property_bool(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: zend_long, access_type: c_int) void;
pub extern fn zend_declare_property_long(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: zend_long, access_type: c_int) void;
pub extern fn zend_declare_property_double(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: f64, access_type: c_int) void;
pub extern fn zend_declare_property_string(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: [*c]const u8, access_type: c_int) void;
pub extern fn zend_declare_property_stringl(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: [*c]const u8, value_len: usize, access_type: c_int) void;
pub extern fn zend_declare_typed_class_constant(ce: [*c]zend_class_entry, name: [*c]zend_string, value: [*c]zval, access_type: c_int, doc_comment: [*c]zend_string, @"type": zend_type) [*c]zend_class_constant;
pub extern fn zend_declare_class_constant_ex(ce: [*c]zend_class_entry, name: [*c]zend_string, value: [*c]zval, access_type: c_int, doc_comment: [*c]zend_string) [*c]zend_class_constant;
pub extern fn zend_declare_class_constant(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: [*c]zval) void;
pub extern fn zend_declare_class_constant_null(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize) void;
pub extern fn zend_declare_class_constant_long(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: zend_long) void;
pub extern fn zend_declare_class_constant_bool(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: bool) void;
pub extern fn zend_declare_class_constant_double(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: f64) void;
pub extern fn zend_declare_class_constant_stringl(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: [*c]const u8, value_length: usize) void;
pub extern fn zend_declare_class_constant_string(ce: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: [*c]const u8) void;
pub extern fn zend_update_class_constant(c: [*c]zend_class_constant, name: [*c]const zend_string, scope: [*c]zend_class_entry) zend_result;
pub extern fn zend_update_class_constants(class_type: [*c]zend_class_entry) zend_result;
pub extern fn zend_separate_class_constants_table(class_type: [*c]zend_class_entry) [*c]HashTable;
pub inline fn zend_class_constants_table(arg_ce: [*c]zend_class_entry) [*c]HashTable {
    var ce = arg_ce;
    _ = &ce;
    if (((ce.*.ce_flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(24)))) != 0) and (ce.*.mutable_data__ptr != null)) {
        var mutable_data: [*c]zend_class_mutable_data = @as([*c]zend_class_mutable_data, @ptrCast(@alignCast(@as([*c]?*anyopaque, @ptrCast(@alignCast(@as([*c]u8, @ptrCast(@alignCast(compiler_globals.map_ptr_base))) + @as(usize, @bitCast(@as(isize, @intCast(@as(isize, @intCast(@intFromPtr(ce.*.mutable_data__ptr)))))))))).*)));
        _ = &mutable_data;
        if ((mutable_data != null) and (mutable_data.*.constants_table != null)) {
            return mutable_data.*.constants_table;
        } else {
            return zend_separate_class_constants_table(ce);
        }
    } else {
        return &ce.*.constants_table;
    }
    return null;
}
pub inline fn zend_class_default_properties_table(arg_ce: [*c]zend_class_entry) [*c]zval {
    var ce = arg_ce;
    _ = &ce;
    if (((ce.*.ce_flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(25)))) != 0) and (ce.*.mutable_data__ptr != null)) {
        var mutable_data: [*c]zend_class_mutable_data = @as([*c]zend_class_mutable_data, @ptrCast(@alignCast(@as([*c]?*anyopaque, @ptrCast(@alignCast(@as([*c]u8, @ptrCast(@alignCast(compiler_globals.map_ptr_base))) + @as(usize, @bitCast(@as(isize, @intCast(@as(isize, @intCast(@intFromPtr(ce.*.mutable_data__ptr)))))))))).*)));
        _ = &mutable_data;
        return mutable_data.*.default_properties_table;
    } else {
        return ce.*.default_properties_table;
    }
    return null;
}
pub inline fn zend_class_set_backed_enum_table(arg_ce: [*c]zend_class_entry, arg_backed_enum_table: [*c]HashTable) void {
    var ce = arg_ce;
    _ = &ce;
    var backed_enum_table = arg_backed_enum_table;
    _ = &backed_enum_table;
    if ((ce.*.mutable_data__ptr != null) and (@as(c_int, @bitCast(@as(c_uint, ce.*.type))) == @as(c_int, 2))) {
        var mutable_data: [*c]zend_class_mutable_data = @as([*c]zend_class_mutable_data, @ptrCast(@alignCast(@as([*c]?*anyopaque, @ptrCast(@alignCast(@as([*c]u8, @ptrCast(@alignCast(compiler_globals.map_ptr_base))) + @as(usize, @bitCast(@as(isize, @intCast(@as(isize, @intCast(@intFromPtr(ce.*.mutable_data__ptr)))))))))).*)));
        _ = &mutable_data;
        mutable_data.*.backed_enum_table = backed_enum_table;
    } else {
        ce.*.backed_enum_table = backed_enum_table;
    }
}
pub inline fn zend_class_backed_enum_table(arg_ce: [*c]zend_class_entry) [*c]HashTable {
    var ce = arg_ce;
    _ = &ce;
    if ((ce.*.mutable_data__ptr != null) and (@as(c_int, @bitCast(@as(c_uint, ce.*.type))) == @as(c_int, 2))) {
        var mutable_data: [*c]zend_class_mutable_data = @as([*c]zend_class_mutable_data, @ptrCast(@alignCast(@as([*c]?*anyopaque, @ptrCast(@alignCast(@as([*c]u8, @ptrCast(@alignCast(compiler_globals.map_ptr_base))) + @as(usize, @bitCast(@as(isize, @intCast(@as(isize, @intCast(@intFromPtr(ce.*.mutable_data__ptr)))))))))).*)));
        _ = &mutable_data;
        return mutable_data.*.backed_enum_table;
    } else {
        return ce.*.backed_enum_table;
    }
    return null;
}
pub extern fn zend_update_property_ex(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]zend_string, value: [*c]zval) void;
pub extern fn zend_update_property(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize, value: [*c]zval) void;
pub extern fn zend_update_property_null(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize) void;
pub extern fn zend_update_property_bool(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize, value: zend_long) void;
pub extern fn zend_update_property_long(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize, value: zend_long) void;
pub extern fn zend_update_property_double(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize, value: f64) void;
pub extern fn zend_update_property_str(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize, value: [*c]zend_string) void;
pub extern fn zend_update_property_string(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize, value: [*c]const u8) void;
pub extern fn zend_update_property_stringl(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize, value: [*c]const u8, value_length: usize) void;
pub extern fn zend_unset_property(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize) void;
pub extern fn zend_update_static_property_ex(scope: [*c]zend_class_entry, name: [*c]zend_string, value: [*c]zval) zend_result;
pub extern fn zend_update_static_property(scope: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: [*c]zval) zend_result;
pub extern fn zend_update_static_property_null(scope: [*c]zend_class_entry, name: [*c]const u8, name_length: usize) zend_result;
pub extern fn zend_update_static_property_bool(scope: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: zend_long) zend_result;
pub extern fn zend_update_static_property_long(scope: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: zend_long) zend_result;
pub extern fn zend_update_static_property_double(scope: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: f64) zend_result;
pub extern fn zend_update_static_property_string(scope: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: [*c]const u8) zend_result;
pub extern fn zend_update_static_property_stringl(scope: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, value: [*c]const u8, value_length: usize) zend_result;
pub extern fn zend_read_property_ex(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]zend_string, silent: bool, rv: [*c]zval) [*c]zval;
pub extern fn zend_read_property(scope: [*c]zend_class_entry, object: [*c]zend_object, name: [*c]const u8, name_length: usize, silent: bool, rv: [*c]zval) [*c]zval;
pub extern fn zend_read_static_property_ex(scope: [*c]zend_class_entry, name: [*c]zend_string, silent: bool) [*c]zval;
pub extern fn zend_read_static_property(scope: [*c]zend_class_entry, name: [*c]const u8, name_length: usize, silent: bool) [*c]zval;
pub extern fn zend_get_type_by_const(@"type": c_int) [*c]const u8;
pub extern fn object_init(arg: [*c]zval) void;
pub extern fn object_init_ex(arg: [*c]zval, ce: [*c]zend_class_entry) zend_result;
pub extern fn object_init_with_constructor(arg: [*c]zval, class_type: [*c]zend_class_entry, param_count: u32, params: [*c]zval, named_params: [*c]HashTable) zend_result;
pub extern fn object_and_properties_init(arg: [*c]zval, ce: [*c]zend_class_entry, properties: [*c]HashTable) zend_result;
pub extern fn object_properties_init(object: [*c]zend_object, class_type: [*c]zend_class_entry) void;
pub extern fn object_properties_init_ex(object: [*c]zend_object, properties: [*c]HashTable) void;
pub extern fn object_properties_load(object: [*c]zend_object, properties: [*c]HashTable) void;
pub extern fn zend_merge_properties(obj: [*c]zval, properties: [*c]HashTable) void;
pub extern fn add_assoc_long_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, n: zend_long) void;
pub extern fn add_assoc_null_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize) void;
pub extern fn add_assoc_bool_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, b: bool) void;
pub extern fn add_assoc_resource_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, r: [*c]zend_resource) void;
pub extern fn add_assoc_double_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, d: f64) void;
pub extern fn add_assoc_str_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, str: [*c]zend_string) void;
pub extern fn add_assoc_string_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, str: [*c]const u8) void;
pub extern fn add_assoc_stringl_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, str: [*c]const u8, length: usize) void;
pub extern fn add_assoc_array_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, arr: [*c]zend_array) void;
pub extern fn add_assoc_object_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, obj: [*c]zend_object) void;
pub extern fn add_assoc_reference_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, ref: [*c]zend_reference) void;
pub extern fn add_assoc_zval_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, value: [*c]zval) void;
pub inline fn add_assoc_long(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_n: zend_long) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var n = arg_n;
    _ = &n;
    add_assoc_long_ex(arg, key, strlen(key), n);
}
pub inline fn add_assoc_null(arg_arg: [*c]zval, arg_key: [*c]const u8) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    add_assoc_null_ex(arg, key, strlen(key));
}
pub inline fn add_assoc_bool(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_b: bool) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var b = arg_b;
    _ = &b;
    add_assoc_bool_ex(arg, key, strlen(key), b);
}
pub inline fn add_assoc_resource(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_r: [*c]zend_resource) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var r = arg_r;
    _ = &r;
    add_assoc_resource_ex(arg, key, strlen(key), r);
}
pub inline fn add_assoc_double(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_d: f64) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var d = arg_d;
    _ = &d;
    add_assoc_double_ex(arg, key, strlen(key), d);
}
pub inline fn add_assoc_str(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_str: [*c]zend_string) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var str = arg_str;
    _ = &str;
    add_assoc_str_ex(arg, key, strlen(key), str);
}
pub inline fn add_assoc_string(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_str: [*c]const u8) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var str = arg_str;
    _ = &str;
    add_assoc_string_ex(arg, key, strlen(key), str);
}
pub inline fn add_assoc_stringl(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_str: [*c]const u8, arg_length: usize) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var str = arg_str;
    _ = &str;
    var length = arg_length;
    _ = &length;
    add_assoc_stringl_ex(arg, key, strlen(key), str, length);
}
pub inline fn add_assoc_array(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_arr: [*c]zend_array) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var arr = arg_arr;
    _ = &arr;
    add_assoc_array_ex(arg, key, strlen(key), arr);
}
pub inline fn add_assoc_object(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_obj: [*c]zend_object) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var obj = arg_obj;
    _ = &obj;
    add_assoc_object_ex(arg, key, strlen(key), obj);
}
pub inline fn add_assoc_reference(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_ref: [*c]zend_reference) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var ref = arg_ref;
    _ = &ref;
    add_assoc_reference_ex(arg, key, strlen(key), ref);
}
pub inline fn add_assoc_zval(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_value: [*c]zval) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var value = arg_value;
    _ = &value;
    add_assoc_zval_ex(arg, key, strlen(key), value);
}
pub extern fn add_index_long(arg: [*c]zval, index: zend_ulong, n: zend_long) void;
pub extern fn add_index_null(arg: [*c]zval, index: zend_ulong) void;
pub extern fn add_index_bool(arg: [*c]zval, index: zend_ulong, b: bool) void;
pub extern fn add_index_resource(arg: [*c]zval, index: zend_ulong, r: [*c]zend_resource) void;
pub extern fn add_index_double(arg: [*c]zval, index: zend_ulong, d: f64) void;
pub extern fn add_index_str(arg: [*c]zval, index: zend_ulong, str: [*c]zend_string) void;
pub extern fn add_index_string(arg: [*c]zval, index: zend_ulong, str: [*c]const u8) void;
pub extern fn add_index_stringl(arg: [*c]zval, index: zend_ulong, str: [*c]const u8, length: usize) void;
pub extern fn add_index_array(arg: [*c]zval, index: zend_ulong, arr: [*c]zend_array) void;
pub extern fn add_index_object(arg: [*c]zval, index: zend_ulong, obj: [*c]zend_object) void;
pub extern fn add_index_reference(arg: [*c]zval, index: zend_ulong, ref: [*c]zend_reference) void;
pub inline fn add_index_zval(arg_arg: [*c]zval, arg_index_1: zend_ulong, arg_value: [*c]zval) zend_result {
    var arg = arg_arg;
    _ = &arg;
    var index_1 = arg_index_1;
    _ = &index_1;
    var value = arg_value;
    _ = &value;
    return if (zend_hash_index_update(arg.*.value.arr, index_1, value) != null) SUCCESS else FAILURE;
}
pub extern fn add_next_index_long(arg: [*c]zval, n: zend_long) zend_result;
pub extern fn add_next_index_null(arg: [*c]zval) zend_result;
pub extern fn add_next_index_bool(arg: [*c]zval, b: bool) zend_result;
pub extern fn add_next_index_resource(arg: [*c]zval, r: [*c]zend_resource) zend_result;
pub extern fn add_next_index_double(arg: [*c]zval, d: f64) zend_result;
pub extern fn add_next_index_str(arg: [*c]zval, str: [*c]zend_string) zend_result;
pub extern fn add_next_index_string(arg: [*c]zval, str: [*c]const u8) zend_result;
pub extern fn add_next_index_stringl(arg: [*c]zval, str: [*c]const u8, length: usize) zend_result;
pub extern fn add_next_index_array(arg: [*c]zval, arr: [*c]zend_array) zend_result;
pub extern fn add_next_index_object(arg: [*c]zval, obj: [*c]zend_object) zend_result;
pub extern fn add_next_index_reference(arg: [*c]zval, ref: [*c]zend_reference) zend_result;
pub inline fn add_next_index_zval(arg_arg: [*c]zval, arg_value: [*c]zval) zend_result {
    var arg = arg_arg;
    _ = &arg;
    var value = arg_value;
    _ = &value;
    return if (zend_hash_next_index_insert(arg.*.value.arr, value) != null) SUCCESS else FAILURE;
}
pub extern fn array_set_zval_key(ht: [*c]HashTable, key: [*c]zval, value: [*c]zval) zend_result;
pub extern fn add_property_long_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, l: zend_long) void;
pub extern fn add_property_null_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize) void;
pub extern fn add_property_bool_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, b: zend_long) void;
pub extern fn add_property_resource_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, r: [*c]zend_resource) void;
pub extern fn add_property_double_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, d: f64) void;
pub extern fn add_property_str_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, str: [*c]zend_string) void;
pub extern fn add_property_string_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, str: [*c]const u8) void;
pub extern fn add_property_stringl_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, str: [*c]const u8, length: usize) void;
pub extern fn add_property_array_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, arr: [*c]zend_array) void;
pub extern fn add_property_object_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, obj: [*c]zend_object) void;
pub extern fn add_property_reference_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, ref: [*c]zend_reference) void;
pub extern fn add_property_zval_ex(arg: [*c]zval, key: [*c]const u8, key_len: usize, value: [*c]zval) void;
pub inline fn add_property_long(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_n: zend_long) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var n = arg_n;
    _ = &n;
    add_property_long_ex(arg, key, strlen(key), n);
}
pub inline fn add_property_null(arg_arg: [*c]zval, arg_key: [*c]const u8) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    add_property_null_ex(arg, key, strlen(key));
}
pub inline fn add_property_bool(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_b: bool) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var b = arg_b;
    _ = &b;
    add_property_bool_ex(arg, key, strlen(key), @as(zend_long, @intFromBool(b)));
}
pub inline fn add_property_resource(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_r: [*c]zend_resource) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var r = arg_r;
    _ = &r;
    add_property_resource_ex(arg, key, strlen(key), r);
}
pub inline fn add_property_double(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_d: f64) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var d = arg_d;
    _ = &d;
    add_property_double_ex(arg, key, strlen(key), d);
}
pub inline fn add_property_str(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_str: [*c]zend_string) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var str = arg_str;
    _ = &str;
    add_property_str_ex(arg, key, strlen(key), str);
}
pub inline fn add_property_string(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_str: [*c]const u8) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var str = arg_str;
    _ = &str;
    add_property_string_ex(arg, key, strlen(key), str);
}
pub inline fn add_property_stringl(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_str: [*c]const u8, arg_length: usize) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var str = arg_str;
    _ = &str;
    var length = arg_length;
    _ = &length;
    add_property_stringl_ex(arg, key, strlen(key), str, length);
}
pub inline fn add_property_array(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_arr: [*c]zend_array) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var arr = arg_arr;
    _ = &arr;
    add_property_array_ex(arg, key, strlen(key), arr);
}
pub inline fn add_property_object(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_obj: [*c]zend_object) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var obj = arg_obj;
    _ = &obj;
    add_property_object_ex(arg, key, strlen(key), obj);
}
pub inline fn add_property_reference(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_ref: [*c]zend_reference) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var ref = arg_ref;
    _ = &ref;
    add_property_reference_ex(arg, key, strlen(key), ref);
}
pub inline fn add_property_zval(arg_arg: [*c]zval, arg_key: [*c]const u8, arg_value: [*c]zval) void {
    var arg = arg_arg;
    _ = &arg;
    var key = arg_key;
    _ = &key;
    var value = arg_value;
    _ = &value;
    add_property_zval_ex(arg, key, strlen(key), value);
}
pub extern fn _call_user_function_impl(object: [*c]zval, function_name: [*c]zval, retval_ptr: [*c]zval, param_count: u32, params: [*c]zval, named_params: [*c]HashTable) zend_result;
pub extern const empty_fcall_info: zend_fcall_info;
pub extern const empty_fcall_info_cache: zend_fcall_info_cache;
pub extern fn zend_fcall_info_init(callable: [*c]zval, check_flags: u32, fci: [*c]zend_fcall_info, fcc: [*c]zend_fcall_info_cache, callable_name: [*c][*c]zend_string, @"error": [*c][*c]u8) zend_result;
pub extern fn zend_fcall_info_args_clear(fci: [*c]zend_fcall_info, free_mem: bool) void;
pub extern fn zend_fcall_info_args_save(fci: [*c]zend_fcall_info, param_count: [*c]u32, params: [*c][*c]zval) void;
pub extern fn zend_fcall_info_args_restore(fci: [*c]zend_fcall_info, param_count: u32, params: [*c]zval) void;
pub extern fn zend_fcall_info_args(fci: [*c]zend_fcall_info, args: [*c]zval) zend_result;
pub extern fn zend_fcall_info_args_ex(fci: [*c]zend_fcall_info, func: [*c]zend_function, args: [*c]zval) zend_result;
pub extern fn zend_fcall_info_argp(fci: [*c]zend_fcall_info, argc: u32, argv: [*c]zval) void;
pub extern fn zend_fcall_info_argv(fci: [*c]zend_fcall_info, argc: u32, argv: [*c]va_list) void;
pub extern fn zend_fcall_info_argn(fci: [*c]zend_fcall_info, argc: u32, ...) void;
pub extern fn zend_fcall_info_call(fci: [*c]zend_fcall_info, fcc: [*c]zend_fcall_info_cache, retval: [*c]zval, args: [*c]zval) zend_result;
pub inline fn zend_fcc_equals(arg_a: [*c]const zend_fcall_info_cache, arg_b: [*c]const zend_fcall_info_cache) bool {
    var a = arg_a;
    _ = &a;
    var b = arg_b;
    _ = &b;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(((a.*.function_handler.*.common.fn_flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(18)))) != 0) and ((b.*.function_handler.*.common.fn_flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(18)))) != 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        return (((a.*.object == b.*.object) and (a.*.calling_scope == b.*.calling_scope)) and (a.*.closure == b.*.closure)) and (@as(c_int, @intFromBool(zend_string_equals(a.*.function_handler.*.common.function_name, b.*.function_handler.*.common.function_name))) != 0);
    }
    return (((a.*.function_handler == b.*.function_handler) and (a.*.object == b.*.object)) and (a.*.calling_scope == b.*.calling_scope)) and (a.*.closure == b.*.closure);
}
pub inline fn zend_fcc_addref(arg_fcc: [*c]zend_fcall_info_cache) void {
    var fcc = arg_fcc;
    _ = &fcc;
    __builtin_assume((fcc.*.function_handler != @as([*c]zend_function, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))))) and (@intFromPtr("FCC Not initialized, possibly refetch trampoline freed by ZPP?") != 0));
    if (__builtin_expect(@as(c_long, @intFromBool(!!(fcc.*.function_handler == (&executor_globals.trampoline)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        var copy: [*c]zend_function = @as([*c]zend_function, @ptrCast(@alignCast(if (__builtin_constant_p(@sizeOf(zend_function)) != 0) if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (@sizeOf(zend_function) <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(@sizeOf(zend_function)) else _emalloc_huge(@sizeOf(zend_function)) else _emalloc(@sizeOf(zend_function)))));
        _ = &copy;
        _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(copy)), @as(?*const anyopaque, @ptrCast(fcc.*.function_handler)), @sizeOf(zend_function), __builtin_object_size(@as(?*const anyopaque, @ptrCast(copy)), @as(c_int, 0)));
        fcc.*.function_handler.*.common.function_name = null;
        fcc.*.function_handler = copy;
    }
    if (fcc.*.object != null) {
        _ = zend_gc_addref(&fcc.*.object.*.gc);
    }
    if (fcc.*.closure != null) {
        _ = zend_gc_addref(&fcc.*.closure.*.gc);
    }
}
pub inline fn zend_fcc_dup(arg_dest: [*c]zend_fcall_info_cache, arg_src: [*c]const zend_fcall_info_cache) void {
    var dest = arg_dest;
    _ = &dest;
    var src = arg_src;
    _ = &src;
    _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(dest)), @as(?*const anyopaque, @ptrCast(src)), @sizeOf(zend_fcall_info_cache), __builtin_object_size(@as(?*const anyopaque, @ptrCast(dest)), @as(c_int, 0)));
    zend_fcc_addref(dest);
}
pub inline fn zend_fcc_dtor(arg_fcc: [*c]zend_fcall_info_cache) void {
    var fcc = arg_fcc;
    _ = &fcc;
    __builtin_assume(@intFromPtr(fcc.*.function_handler) != 0);
    if (fcc.*.object != null) {
        zend_object_release(fcc.*.object);
    }
    zend_release_fcall_info_cache(fcc);
    if (fcc.*.closure != null) {
        zend_object_release(fcc.*.closure);
    }
    _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(fcc)), @as(?*const anyopaque, @ptrCast(&empty_fcall_info_cache)), @sizeOf(zend_fcall_info_cache), __builtin_object_size(@as(?*const anyopaque, @ptrCast(fcc)), @as(c_int, 0)));
}
pub extern fn zend_get_callable_zval_from_fcc(fcc: [*c]const zend_fcall_info_cache, callable: [*c]zval) void;
pub inline fn zend_get_gc_buffer_add_fcc(arg_gc_buffer: [*c]zend_get_gc_buffer, arg_fcc: [*c]zend_fcall_info_cache) void {
    var gc_buffer = arg_gc_buffer;
    _ = &gc_buffer;
    var fcc = arg_fcc;
    _ = &fcc;
    __builtin_assume(fcc.*.function_handler != @as([*c]zend_function, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0)))))));
    if (fcc.*.object != null) {
        zend_get_gc_buffer_add_obj(gc_buffer, fcc.*.object);
    }
    if (fcc.*.closure != null) {
        zend_get_gc_buffer_add_obj(gc_buffer, fcc.*.closure);
    }
}
pub extern fn zend_call_function(fci: [*c]zend_fcall_info, fci_cache: [*c]zend_fcall_info_cache) zend_result;
pub inline fn zend_call_function_with_return_value(arg_fci: [*c]zend_fcall_info, arg_fci_cache: [*c]zend_fcall_info_cache, arg_retval: [*c]zval) zend_result {
    var fci = arg_fci;
    _ = &fci;
    var fci_cache = arg_fci_cache;
    _ = &fci_cache;
    var retval = arg_retval;
    _ = &retval;
    __builtin_assume((retval != null) and (@intFromPtr("Use zend_call_function() directly if not providing a retval") != 0));
    fci.*.retval = retval;
    return zend_call_function(fci, fci_cache);
}
pub extern fn zend_call_known_function(@"fn": [*c]zend_function, object: [*c]zend_object, called_scope: [*c]zend_class_entry, retval_ptr: [*c]zval, param_count: u32, params: [*c]zval, named_params: [*c]HashTable) void;
pub inline fn zend_call_known_fcc(arg_fcc: [*c]const zend_fcall_info_cache, arg_retval_ptr: [*c]zval, arg_param_count: u32, arg_params: [*c]zval, arg_named_params: [*c]HashTable) void {
    var fcc = arg_fcc;
    _ = &fcc;
    var retval_ptr = arg_retval_ptr;
    _ = &retval_ptr;
    var param_count = arg_param_count;
    _ = &param_count;
    var params = arg_params;
    _ = &params;
    var named_params = arg_named_params;
    _ = &named_params;
    var func: [*c]zend_function = fcc.*.function_handler;
    _ = &func;
    if (__builtin_expect(@as(c_long, @intFromBool(!!((func.*.common.fn_flags & @as(u32, @bitCast(@as(c_int, 1) << @intCast(18)))) != 0))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        func = @as([*c]zend_function, @ptrCast(@alignCast(if (__builtin_constant_p(@sizeOf(zend_function)) != 0) if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 8))))) _emalloc_8() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 16))))) _emalloc_16() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 24))))) _emalloc_24() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 32))))) _emalloc_32() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 40))))) _emalloc_40() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 48))))) _emalloc_48() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 56))))) _emalloc_56() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 64))))) _emalloc_64() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 80))))) _emalloc_80() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 96))))) _emalloc_96() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 112))))) _emalloc_112() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 128))))) _emalloc_128() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 160))))) _emalloc_160() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 192))))) _emalloc_192() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 224))))) _emalloc_224() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 256))))) _emalloc_256() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 320))))) _emalloc_320() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 384))))) _emalloc_384() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 448))))) _emalloc_448() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 512))))) _emalloc_512() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 640))))) _emalloc_640() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 768))))) _emalloc_768() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 896))))) _emalloc_896() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1024))))) _emalloc_1024() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1280))))) _emalloc_1280() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1536))))) _emalloc_1536() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 1792))))) _emalloc_1792() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2048))))) _emalloc_2048() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 2560))))) _emalloc_2560() else if (@sizeOf(zend_function) <= @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 3072))))) _emalloc_3072() else if (@sizeOf(zend_function) <= (@as(usize, @bitCast(@as(c_long, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024)))) -% @as(usize, @bitCast(@as(c_long, (@as(c_int, 4) * @as(c_int, 1024)) * @as(c_int, 1)))))) _emalloc_large(@sizeOf(zend_function)) else _emalloc_huge(@sizeOf(zend_function)) else _emalloc(@sizeOf(zend_function)))));
        _ = __builtin___memcpy_chk(@as(?*anyopaque, @ptrCast(func)), @as(?*const anyopaque, @ptrCast(fcc.*.function_handler)), @sizeOf(zend_function), __builtin_object_size(@as(?*const anyopaque, @ptrCast(func)), @as(c_int, 0)));
        _ = zend_string_addref(func.*.op_array.function_name);
    }
    zend_call_known_function(func, fcc.*.object, fcc.*.called_scope, retval_ptr, param_count, params, named_params);
}
pub inline fn zend_call_known_instance_method(arg_fn: [*c]zend_function, arg_object: [*c]zend_object, arg_retval_ptr: [*c]zval, arg_param_count: u32, arg_params: [*c]zval) void {
    var @"fn" = arg_fn;
    _ = &@"fn";
    var object = arg_object;
    _ = &object;
    var retval_ptr = arg_retval_ptr;
    _ = &retval_ptr;
    var param_count = arg_param_count;
    _ = &param_count;
    var params = arg_params;
    _ = &params;
    zend_call_known_function(@"fn", object, object.*.ce, retval_ptr, param_count, params, null);
}
pub inline fn zend_call_known_instance_method_with_0_params(arg_fn: [*c]zend_function, arg_object: [*c]zend_object, arg_retval_ptr: [*c]zval) void {
    var @"fn" = arg_fn;
    _ = &@"fn";
    var object = arg_object;
    _ = &object;
    var retval_ptr = arg_retval_ptr;
    _ = &retval_ptr;
    zend_call_known_instance_method(@"fn", object, retval_ptr, @as(u32, @bitCast(@as(c_int, 0))), null);
}
pub inline fn zend_call_known_instance_method_with_1_params(arg_fn: [*c]zend_function, arg_object: [*c]zend_object, arg_retval_ptr: [*c]zval, arg_param: [*c]zval) void {
    var @"fn" = arg_fn;
    _ = &@"fn";
    var object = arg_object;
    _ = &object;
    var retval_ptr = arg_retval_ptr;
    _ = &retval_ptr;
    var param = arg_param;
    _ = &param;
    zend_call_known_instance_method(@"fn", object, retval_ptr, @as(u32, @bitCast(@as(c_int, 1))), param);
}
pub extern fn zend_call_known_instance_method_with_2_params(@"fn": [*c]zend_function, object: [*c]zend_object, retval_ptr: [*c]zval, param1: [*c]zval, param2: [*c]zval) void;
pub extern fn zend_call_method_if_exists(object: [*c]zend_object, method_name: [*c]zend_string, retval: [*c]zval, param_count: u32, params: [*c]zval) zend_result;
pub extern fn zend_set_hash_symbol(symbol: [*c]zval, name: [*c]const u8, name_length: usize, is_ref: bool, num_symbol_tables: c_int, ...) zend_result;
pub extern fn zend_delete_global_variable(name: [*c]zend_string) zend_result;
pub extern fn zend_rebuild_symbol_table() [*c]zend_array;
pub extern fn zend_attach_symbol_table(execute_data: [*c]zend_execute_data) void;
pub extern fn zend_detach_symbol_table(execute_data: [*c]zend_execute_data) void;
pub extern fn zend_set_local_var(name: [*c]zend_string, value: [*c]zval, force: bool) zend_result;
pub extern fn zend_set_local_var_str(name: [*c]const u8, len: usize, value: [*c]zval, force: bool) zend_result;
pub inline fn zend_forbid_dynamic_call() zend_result {
    var ex: [*c]zend_execute_data = executor_globals.current_execute_data;
    _ = &ex;
    __builtin_assume((ex != @as([*c]zend_execute_data, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))))) and (ex.*.func != @as([*c]zend_function, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))))));
    if ((ex.*.This.u1.type_info & @as(u32, @bitCast(@as(c_int, 1) << @intCast(25)))) != 0) {
        var function_or_method_name: [*c]zend_string = get_active_function_or_method_name();
        _ = &function_or_method_name;
        zend_throw_error(null, "Cannot call %.*s() dynamically", @as(c_int, @bitCast(@as(c_uint, @truncate(function_or_method_name.*.len)))), @as([*c]u8, @ptrCast(@alignCast(&function_or_method_name.*.val[@as(usize, @intCast(0))]))));
        zend_string_release(function_or_method_name);
        return FAILURE;
    }
    return SUCCESS;
}
pub extern fn zend_get_object_type_case(ce: [*c]const zend_class_entry, upper_case: bool) [*c]const u8;
pub inline fn zend_get_object_type(arg_ce: [*c]const zend_class_entry) [*c]const u8 {
    var ce = arg_ce;
    _ = &ce;
    return zend_get_object_type_case(ce, @as(c_int, 0) != 0);
}
pub inline fn zend_get_object_type_uc(arg_ce: [*c]const zend_class_entry) [*c]const u8 {
    var ce = arg_ce;
    _ = &ce;
    return zend_get_object_type_case(ce, @as(c_int, 1) != 0);
}
pub extern fn zend_is_iterable(iterable: [*c]const zval) bool;
pub extern fn zend_is_countable(countable: [*c]const zval) bool;
pub extern fn zend_get_default_from_internal_arg_info(default_value_zval: [*c]zval, arg_info: [*c]zend_internal_arg_info) zend_result;
pub inline fn zend_str_has_nul_byte(arg_str: [*c]const zend_string) bool {
    var str = arg_str;
    _ = &str;
    return str.*.len != strlen(@as([*c]const u8, @ptrCast(@alignCast(&str.*.val[@as(usize, @intCast(0))]))));
}
pub inline fn zend_char_has_nul_byte(arg_s: [*c]const u8, arg_known_length: usize) bool {
    var s = arg_s;
    _ = &s;
    var known_length = arg_known_length;
    _ = &known_length;
    return known_length != strlen(s);
}
pub extern fn zend_try_assign_typed_ref_ex(ref: [*c]zend_reference, zv: [*c]zval, strict: bool) zend_result;
pub extern fn zend_try_assign_typed_ref(ref: [*c]zend_reference, zv: [*c]zval) zend_result;
pub extern fn zend_try_assign_typed_ref_null(ref: [*c]zend_reference) zend_result;
pub extern fn zend_try_assign_typed_ref_bool(ref: [*c]zend_reference, val: bool) zend_result;
pub extern fn zend_try_assign_typed_ref_long(ref: [*c]zend_reference, lval: zend_long) zend_result;
pub extern fn zend_try_assign_typed_ref_double(ref: [*c]zend_reference, dval: f64) zend_result;
pub extern fn zend_try_assign_typed_ref_empty_string(ref: [*c]zend_reference) zend_result;
pub extern fn zend_try_assign_typed_ref_str(ref: [*c]zend_reference, str: [*c]zend_string) zend_result;
pub extern fn zend_try_assign_typed_ref_string(ref: [*c]zend_reference, string: [*c]const u8) zend_result;
pub extern fn zend_try_assign_typed_ref_stringl(ref: [*c]zend_reference, string: [*c]const u8, len: usize) zend_result;
pub extern fn zend_try_assign_typed_ref_arr(ref: [*c]zend_reference, arr: [*c]zend_array) zend_result;
pub extern fn zend_try_assign_typed_ref_res(ref: [*c]zend_reference, res: [*c]zend_resource) zend_result;
pub extern fn zend_try_assign_typed_ref_zval(ref: [*c]zend_reference, zv: [*c]zval) zend_result;
pub extern fn zend_try_assign_typed_ref_zval_ex(ref: [*c]zend_reference, zv: [*c]zval, strict: bool) zend_result;
pub inline fn zend_try_array_init_size(arg_zv: [*c]zval, arg_size: u32) [*c]zval {
    var zv = arg_zv;
    _ = &zv;
    var size = arg_size;
    _ = &size;
    var arr: [*c]zend_array = if (__builtin_constant_p(size) != 0) if (size <= @as(u32, @bitCast(@as(c_int, 8)))) _zend_new_array_0() else _zend_new_array(size) else _zend_new_array(size);
    _ = &arr;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&zv.*)))) == @as(c_int, 10)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        var ref: [*c]zend_reference = zv.*.value.ref;
        _ = &ref;
        if (__builtin_expect(@as(c_long, @intFromBool(!!(ref.*.sources.ptr != @as([*c]struct__zend_property_info, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
            if (zend_try_assign_typed_ref_arr(ref, arr) == FAILURE) {
                return null;
            }
            return &ref.*.val;
        }
        zv = &ref.*.val;
    }
    var garbage: zval = undefined;
    _ = &garbage;
    while (true) {
        var _z1: [*c]zval = &garbage;
        _ = &_z1;
        var _z2: [*c]const zval = zv;
        _ = &_z2;
        var _gc: [*c]zend_refcounted = _z2.*.value.counted;
        _ = &_gc;
        var _t: u32 = _z2.*.u1.type_info;
        _ = &_t;
        while (true) {
            _z1.*.value.counted = _gc;
            _z1.*.u1.type_info = _t;
            if (!false) break;
        }
        if (!false) break;
    }
    while (true) {
        zv.*.u1.type_info = 1;
        if (!false) break;
    }
    zval_ptr_dtor(&garbage);
    while (true) {
        var __arr: [*c]zend_array = arr;
        _ = &__arr;
        var __z: [*c]zval = zv;
        _ = &__z;
        __z.*.value.arr = __arr;
        __z.*.u1.type_info = @as(u32, @bitCast((@as(c_int, 7) | ((@as(c_int, 1) << @intCast(0)) << @intCast(8))) | ((@as(c_int, 1) << @intCast(1)) << @intCast(8))));
        if (!false) break;
    }
    return zv;
}
pub inline fn zend_try_array_init(arg_zv: [*c]zval) [*c]zval {
    var zv = arg_zv;
    _ = &zv;
    return zend_try_array_init_size(zv, @as(u32, @bitCast(@as(c_int, 0))));
}
pub const Z_EXPECTED_LONG: c_int = 0;
pub const Z_EXPECTED_LONG_OR_NULL: c_int = 1;
pub const Z_EXPECTED_BOOL: c_int = 2;
pub const Z_EXPECTED_BOOL_OR_NULL: c_int = 3;
pub const Z_EXPECTED_STRING: c_int = 4;
pub const Z_EXPECTED_STRING_OR_NULL: c_int = 5;
pub const Z_EXPECTED_ARRAY: c_int = 6;
pub const Z_EXPECTED_ARRAY_OR_NULL: c_int = 7;
pub const Z_EXPECTED_ARRAY_OR_LONG: c_int = 8;
pub const Z_EXPECTED_ARRAY_OR_LONG_OR_NULL: c_int = 9;
pub const Z_EXPECTED_ITERABLE: c_int = 10;
pub const Z_EXPECTED_ITERABLE_OR_NULL: c_int = 11;
pub const Z_EXPECTED_FUNC: c_int = 12;
pub const Z_EXPECTED_FUNC_OR_NULL: c_int = 13;
pub const Z_EXPECTED_RESOURCE: c_int = 14;
pub const Z_EXPECTED_RESOURCE_OR_NULL: c_int = 15;
pub const Z_EXPECTED_PATH: c_int = 16;
pub const Z_EXPECTED_PATH_OR_NULL: c_int = 17;
pub const Z_EXPECTED_OBJECT: c_int = 18;
pub const Z_EXPECTED_OBJECT_OR_NULL: c_int = 19;
pub const Z_EXPECTED_DOUBLE: c_int = 20;
pub const Z_EXPECTED_DOUBLE_OR_NULL: c_int = 21;
pub const Z_EXPECTED_NUMBER: c_int = 22;
pub const Z_EXPECTED_NUMBER_OR_NULL: c_int = 23;
pub const Z_EXPECTED_NUMBER_OR_STRING: c_int = 24;
pub const Z_EXPECTED_NUMBER_OR_STRING_OR_NULL: c_int = 25;
pub const Z_EXPECTED_ARRAY_OR_STRING: c_int = 26;
pub const Z_EXPECTED_ARRAY_OR_STRING_OR_NULL: c_int = 27;
pub const Z_EXPECTED_STRING_OR_LONG: c_int = 28;
pub const Z_EXPECTED_STRING_OR_LONG_OR_NULL: c_int = 29;
pub const Z_EXPECTED_OBJECT_OR_CLASS_NAME: c_int = 30;
pub const Z_EXPECTED_OBJECT_OR_CLASS_NAME_OR_NULL: c_int = 31;
pub const Z_EXPECTED_OBJECT_OR_STRING: c_int = 32;
pub const Z_EXPECTED_OBJECT_OR_STRING_OR_NULL: c_int = 33;
pub const Z_EXPECTED_LAST: c_int = 34;
pub const enum__zend_expected_type = c_uint;
pub const zend_expected_type = enum__zend_expected_type;
pub extern fn zend_wrong_parameters_none_error() void;
pub extern fn zend_wrong_parameters_count_error(min_num_args: u32, max_num_args: u32) void;
pub extern fn zend_wrong_parameter_error(error_code: c_int, num: u32, name: [*c]u8, expected_type: zend_expected_type, arg: [*c]zval) void;
pub extern fn zend_wrong_parameter_type_error(num: u32, expected_type: zend_expected_type, arg: [*c]zval) void;
pub extern fn zend_wrong_parameter_class_error(num: u32, name: [*c]const u8, arg: [*c]zval) void;
pub extern fn zend_wrong_parameter_class_or_null_error(num: u32, name: [*c]const u8, arg: [*c]zval) void;
pub extern fn zend_wrong_parameter_class_or_long_error(num: u32, name: [*c]const u8, arg: [*c]zval) void;
pub extern fn zend_wrong_parameter_class_or_long_or_null_error(num: u32, name: [*c]const u8, arg: [*c]zval) void;
pub extern fn zend_wrong_parameter_class_or_string_error(num: u32, name: [*c]const u8, arg: [*c]zval) void;
pub extern fn zend_wrong_parameter_class_or_string_or_null_error(num: u32, name: [*c]const u8, arg: [*c]zval) void;
pub extern fn zend_wrong_callback_error(num: u32, @"error": [*c]u8) void;
pub extern fn zend_wrong_callback_or_null_error(num: u32, @"error": [*c]u8) void;
pub extern fn zend_unexpected_extra_named_error() void;
pub extern fn zend_argument_error_variadic(error_ce: [*c]zend_class_entry, arg_num: u32, format: [*c]const u8, va: va_list) void;
pub extern fn zend_argument_error(error_ce: [*c]zend_class_entry, arg_num: u32, format: [*c]const u8, ...) void;
pub extern fn zend_argument_type_error(arg_num: u32, format: [*c]const u8, ...) void;
pub extern fn zend_argument_value_error(arg_num: u32, format: [*c]const u8, ...) void;
pub extern fn zend_argument_must_not_be_empty_error(arg_num: u32) void;
pub extern fn zend_class_redeclaration_error(@"type": c_int, old_ce: [*c]zend_class_entry) void;
pub extern fn zend_class_redeclaration_error_ex(@"type": c_int, new_name: [*c]zend_string, old_ce: [*c]zend_class_entry) void;
pub extern fn zend_parse_arg_class(arg: [*c]zval, pce: [*c][*c]zend_class_entry, num: u32, check_null: bool) bool;
pub extern fn zend_parse_arg_bool_slow(arg: [*c]const zval, dest: [*c]bool, arg_num: u32) bool;
pub extern fn zend_parse_arg_bool_weak(arg: [*c]const zval, dest: [*c]bool, arg_num: u32) bool;
pub extern fn zend_parse_arg_long_slow(arg: [*c]const zval, dest: [*c]zend_long, arg_num: u32) bool;
pub extern fn zend_parse_arg_long_weak(arg: [*c]const zval, dest: [*c]zend_long, arg_num: u32) bool;
pub extern fn zend_parse_arg_double_slow(arg: [*c]const zval, dest: [*c]f64, arg_num: u32) bool;
pub extern fn zend_parse_arg_double_weak(arg: [*c]const zval, dest: [*c]f64, arg_num: u32) bool;
pub extern fn zend_parse_arg_str_slow(arg: [*c]zval, dest: [*c][*c]zend_string, arg_num: u32) bool;
pub extern fn zend_parse_arg_str_weak(arg: [*c]zval, dest: [*c][*c]zend_string, arg_num: u32) bool;
pub extern fn zend_parse_arg_number_slow(arg: [*c]zval, dest: [*c][*c]zval, arg_num: u32) bool;
pub extern fn zend_parse_arg_number_or_str_slow(arg: [*c]zval, dest: [*c][*c]zval, arg_num: u32) bool;
pub extern fn zend_parse_arg_str_or_long_slow(arg: [*c]zval, dest_str: [*c][*c]zend_string, dest_long: [*c]zend_long, arg_num: u32) bool;
pub extern fn zend_flf_parse_arg_bool_slow(arg: [*c]const zval, dest: [*c]bool, arg_num: u32) bool;
pub extern fn zend_flf_parse_arg_str_slow(arg: [*c]zval, dest: [*c][*c]zend_string, arg_num: u32) bool;
pub extern fn zend_flf_parse_arg_long_slow(arg: [*c]const zval, dest: [*c]zend_long, arg_num: u32) bool;
pub inline fn zend_parse_arg_bool_ex(arg_arg: [*c]const zval, arg_dest: [*c]bool, arg_is_null: [*c]bool, arg_check_null: bool, arg_arg_num: u32, arg_frameless: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var is_null = arg_is_null;
    _ = &is_null;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    var frameless = arg_frameless;
    _ = &frameless;
    if (check_null) {
        is_null.* = @as(c_int, 0) != 0;
    }
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 3)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = @as(c_int, 1) != 0;
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 2)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = @as(c_int, 0) != 0;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1))) {
        is_null.* = @as(c_int, 1) != 0;
        dest.* = @as(c_int, 0) != 0;
    } else {
        if (frameless) {
            return zend_flf_parse_arg_bool_slow(arg, dest, arg_num);
        } else {
            return zend_parse_arg_bool_slow(arg, dest, arg_num);
        }
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_bool(arg_arg: [*c]const zval, arg_dest: [*c]bool, arg_is_null: [*c]bool, arg_check_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var is_null = arg_is_null;
    _ = &is_null;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    return zend_parse_arg_bool_ex(arg, dest, is_null, check_null, arg_num, @as(c_int, 0) != 0);
}
pub inline fn zend_parse_arg_long_ex(arg_arg: [*c]zval, arg_dest: [*c]zend_long, arg_is_null: [*c]bool, arg_check_null: bool, arg_arg_num: u32, arg_frameless: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var is_null = arg_is_null;
    _ = &is_null;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    var frameless = arg_frameless;
    _ = &frameless;
    if (check_null) {
        is_null.* = @as(c_int, 0) != 0;
    }
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = arg.*.value.lval;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1))) {
        is_null.* = @as(c_int, 1) != 0;
        dest.* = 0;
    } else {
        if (frameless) {
            return zend_flf_parse_arg_long_slow(arg, dest, arg_num);
        } else {
            return zend_parse_arg_long_slow(arg, dest, arg_num);
        }
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_long(arg_arg: [*c]zval, arg_dest: [*c]zend_long, arg_is_null: [*c]bool, arg_check_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var is_null = arg_is_null;
    _ = &is_null;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    return zend_parse_arg_long_ex(arg, dest, is_null, check_null, arg_num, @as(c_int, 0) != 0);
}
pub inline fn zend_parse_arg_double(arg_arg: [*c]const zval, arg_dest: [*c]f64, arg_is_null: [*c]bool, arg_check_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var is_null = arg_is_null;
    _ = &is_null;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    if (check_null) {
        is_null.* = @as(c_int, 0) != 0;
    }
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 5)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = arg.*.value.dval;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1))) {
        is_null.* = @as(c_int, 1) != 0;
        dest.* = 0.0;
    } else {
        return zend_parse_arg_double_slow(arg, dest, arg_num);
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_number(arg_arg: [*c]zval, arg_dest: [*c][*c]zval, arg_check_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    if (__builtin_expect(@as(c_long, @intFromBool(!!((@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 4)) or (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 5))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = arg;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest.* = null;
    } else {
        return zend_parse_arg_number_slow(arg, dest, arg_num);
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_number_or_str(arg_arg: [*c]zval, arg_dest: [*c][*c]zval, arg_check_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(((@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 4)) or (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 5))) or (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 6))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = arg;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest.* = null;
    } else {
        return zend_parse_arg_number_or_str_slow(arg, dest, arg_num);
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_str_ex(arg_arg: [*c]zval, arg_dest: [*c][*c]zend_string, arg_check_null: bool, arg_arg_num: u32, arg_frameless: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    var frameless = arg_frameless;
    _ = &frameless;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = arg.*.value.str;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1))) {
        dest.* = null;
    } else {
        if (frameless) {
            return zend_flf_parse_arg_str_slow(arg, dest, arg_num);
        } else {
            return zend_parse_arg_str_slow(arg, dest, arg_num);
        }
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_str(arg_arg: [*c]zval, arg_dest: [*c][*c]zend_string, arg_check_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    return zend_parse_arg_str_ex(arg, dest, check_null, arg_num, @as(c_int, 0) != 0);
}
pub inline fn zend_parse_arg_string(arg_arg: [*c]zval, arg_dest: [*c][*c]u8, arg_dest_len: [*c]usize, arg_check_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var dest_len = arg_dest_len;
    _ = &dest_len;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    var str: [*c]zend_string = undefined;
    _ = &str;
    if (!zend_parse_arg_str(arg, &str, check_null, arg_num)) {
        return @as(c_int, 0) != 0;
    }
    if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!!(str != null))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)) {
        dest.* = null;
        dest_len.* = 0;
    } else {
        dest.* = @as([*c]u8, @ptrCast(@alignCast(&str.*.val[@as(usize, @intCast(0))])));
        dest_len.* = str.*.len;
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_path_str(arg_arg: [*c]zval, arg_dest: [*c][*c]zend_string, arg_check_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    if (!zend_parse_arg_str(arg, dest, check_null, arg_num) or ((dest.* != null) and (__builtin_expect(@as(c_long, @intFromBool(!!zend_char_has_nul_byte(@as([*c]u8, @ptrCast(@alignCast(&dest.*.*.val[@as(usize, @intCast(0))]))), dest.*.*.len))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0))) {
        return @as(c_int, 0) != 0;
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_path(arg_arg: [*c]zval, arg_dest: [*c][*c]u8, arg_dest_len: [*c]usize, arg_check_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var dest_len = arg_dest_len;
    _ = &dest_len;
    var check_null = arg_check_null;
    _ = &check_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    var str: [*c]zend_string = undefined;
    _ = &str;
    if (!zend_parse_arg_path_str(arg, &str, check_null, arg_num)) {
        return @as(c_int, 0) != 0;
    }
    if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!!(str != null))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)) {
        dest.* = null;
        dest_len.* = 0;
    } else {
        dest.* = @as([*c]u8, @ptrCast(@alignCast(&str.*.val[@as(usize, @intCast(0))])));
        dest_len.* = str.*.len;
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_iterable(arg_arg: [*c]zval, arg_dest: [*c][*c]zval, arg_check_null: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    if (__builtin_expect(@as(c_long, @intFromBool(!!zend_is_iterable(arg))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = arg;
        return @as(c_int, 1) != 0;
    }
    if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest.* = null;
        return @as(c_int, 1) != 0;
    }
    return @as(c_int, 0) != 0;
}
pub inline fn zend_parse_arg_array(arg_arg: [*c]zval, arg_dest: [*c][*c]zval, arg_check_null: bool, arg_or_object: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    var or_object = arg_or_object;
    _ = &or_object;
    if ((__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 7)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) or ((@as(c_int, @intFromBool(or_object)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 8)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0))) {
        dest.* = arg;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest.* = null;
    } else {
        return @as(c_int, 0) != 0;
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_array_ht(arg_arg: [*c]const zval, arg_dest: [*c][*c]HashTable, arg_check_null: bool, arg_or_object: bool, arg_separate: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    var or_object = arg_or_object;
    _ = &or_object;
    var separate = arg_separate;
    _ = &separate;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 7)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = arg.*.value.arr;
    } else if ((@as(c_int, @intFromBool(or_object)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 8)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        var zobj: [*c]zend_object = arg.*.value.obj;
        _ = &zobj;
        if (((@as(c_int, @intFromBool(separate)) != 0) and (zobj.*.properties != null)) and (__builtin_expect(@as(c_long, @intFromBool(!!(zend_gc_refcount(&zobj.*.properties.*.gc) > @as(u32, @bitCast(@as(c_int, 1)))))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)) {
            if (__builtin_expect(@as(c_long, @intFromBool(!!!((zval_gc_flags(zobj.*.properties.*.gc.u.type_info) & @as(u32, @bitCast(@as(c_int, 1) << @intCast(6)))) != 0))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
                _ = zend_gc_delref(&zobj.*.properties.*.gc);
            }
            zobj.*.properties = zend_array_dup(zobj.*.properties);
        }
        dest.* = zobj.*.handlers.*.get_properties.?(zobj);
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest.* = null;
    } else {
        return @as(c_int, 0) != 0;
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_array_ht_or_long(arg_arg: [*c]zval, arg_dest_ht: [*c][*c]HashTable, arg_dest_long: [*c]zend_long, arg_is_null: [*c]bool, arg_allow_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest_ht = arg_dest_ht;
    _ = &dest_ht;
    var dest_long = arg_dest_long;
    _ = &dest_long;
    var is_null = arg_is_null;
    _ = &is_null;
    var allow_null = arg_allow_null;
    _ = &allow_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    if (allow_null) {
        is_null.* = @as(c_int, 0) != 0;
    }
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 7)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest_ht.* = arg.*.value.arr;
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest_ht.* = null;
        dest_long.* = arg.*.value.lval;
    } else if ((@as(c_int, @intFromBool(allow_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest_ht.* = null;
        is_null.* = @as(c_int, 1) != 0;
    } else {
        dest_ht.* = null;
        return zend_parse_arg_long_slow(arg, dest_long, arg_num);
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_object(arg_arg: [*c]zval, arg_dest: [*c][*c]zval, arg_ce: [*c]zend_class_entry, arg_check_null: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var ce = arg_ce;
    _ = &ce;
    var check_null = arg_check_null;
    _ = &check_null;
    if ((__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 8)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) and (!(ce != null) or (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @intFromBool(instanceof_function(arg.*.value.obj.*.ce, ce))) != @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0))) {
        dest.* = arg;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest.* = null;
    } else {
        return @as(c_int, 0) != 0;
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_obj(arg_arg: [*c]const zval, arg_dest: [*c][*c]zend_object, arg_ce: [*c]zend_class_entry, arg_check_null: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var ce = arg_ce;
    _ = &ce;
    var check_null = arg_check_null;
    _ = &check_null;
    if ((__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 8)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) and (!(ce != null) or (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @intFromBool(instanceof_function(arg.*.value.obj.*.ce, ce))) != @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0))) {
        dest.* = arg.*.value.obj;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest.* = null;
    } else {
        return @as(c_int, 0) != 0;
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_obj_or_long(arg_arg: [*c]zval, arg_dest_obj: [*c][*c]zend_object, arg_ce: [*c]zend_class_entry, arg_dest_long: [*c]zend_long, arg_is_null: [*c]bool, arg_allow_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest_obj = arg_dest_obj;
    _ = &dest_obj;
    var ce = arg_ce;
    _ = &ce;
    var dest_long = arg_dest_long;
    _ = &dest_long;
    var is_null = arg_is_null;
    _ = &is_null;
    var allow_null = arg_allow_null;
    _ = &allow_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    if (allow_null) {
        is_null.* = @as(c_int, 0) != 0;
    }
    if ((__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 8)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @intFromBool(instanceof_function(arg.*.value.obj.*.ce, ce))) != @as(c_int, 0)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest_obj.* = arg.*.value.obj;
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest_obj.* = null;
        dest_long.* = arg.*.value.lval;
    } else if ((@as(c_int, @intFromBool(allow_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest_obj.* = null;
        is_null.* = @as(c_int, 1) != 0;
    } else {
        dest_obj.* = null;
        return zend_parse_arg_long_slow(arg, dest_long, arg_num);
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_resource(arg_arg: [*c]zval, arg_dest: [*c][*c]zval, arg_check_null: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 9)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest.* = arg;
    } else if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest.* = null;
    } else {
        return @as(c_int, 0) != 0;
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_func(arg_arg: [*c]zval, arg_dest_fci: [*c]zend_fcall_info, arg_dest_fcc: [*c]zend_fcall_info_cache, arg_check_null: bool, arg_error: [*c][*c]u8, arg_free_trampoline: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest_fci = arg_dest_fci;
    _ = &dest_fci;
    var dest_fcc = arg_dest_fcc;
    _ = &dest_fcc;
    var check_null = arg_check_null;
    _ = &check_null;
    var @"error" = arg_error;
    _ = &@"error";
    var free_trampoline = arg_free_trampoline;
    _ = &free_trampoline;
    if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)) {
        dest_fci.*.size = 0;
        dest_fcc.*.function_handler = null;
        @"error".* = null;
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(zend_fcall_info_init(arg, @as(u32, @bitCast(@as(c_int, 0))), dest_fci, dest_fcc, null, @"error") != SUCCESS))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) {
        return @as(c_int, 0) != 0;
    }
    if (free_trampoline) {
        zend_release_fcall_info_cache(dest_fcc);
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_zval(arg_arg: [*c]zval, arg_dest: [*c][*c]zval, arg_check_null: bool) void {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    dest.* = if ((@as(c_int, @intFromBool(check_null)) != 0) and ((__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) or ((__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 10)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&(&arg.*.value.ref.*.val).*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)))) null else arg;
}
pub inline fn zend_parse_arg_zval_deref(arg_arg: [*c]zval, arg_dest: [*c][*c]zval, arg_check_null: bool) void {
    var arg = arg_arg;
    _ = &arg;
    var dest = arg_dest;
    _ = &dest;
    var check_null = arg_check_null;
    _ = &check_null;
    dest.* = if ((@as(c_int, @intFromBool(check_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) != 0)) null else arg;
}
pub inline fn zend_parse_arg_array_ht_or_str(arg_arg: [*c]zval, arg_dest_ht: [*c][*c]HashTable, arg_dest_str: [*c][*c]zend_string, arg_allow_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest_ht = arg_dest_ht;
    _ = &dest_ht;
    var dest_str = arg_dest_str;
    _ = &dest_str;
    var allow_null = arg_allow_null;
    _ = &allow_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest_ht.* = null;
        dest_str.* = arg.*.value.str;
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 7)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest_ht.* = arg.*.value.arr;
        dest_str.* = null;
    } else if ((@as(c_int, @intFromBool(allow_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest_ht.* = null;
        dest_str.* = null;
    } else {
        dest_ht.* = null;
        return zend_parse_arg_str_slow(arg, dest_str, arg_num);
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_str_or_long(arg_arg: [*c]zval, arg_dest_str: [*c][*c]zend_string, arg_dest_long: [*c]zend_long, arg_is_null: [*c]bool, arg_allow_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var dest_str = arg_dest_str;
    _ = &dest_str;
    var dest_long = arg_dest_long;
    _ = &dest_long;
    var is_null = arg_is_null;
    _ = &is_null;
    var allow_null = arg_allow_null;
    _ = &allow_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    if (allow_null) {
        is_null.* = @as(c_int, 0) != 0;
    }
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest_str.* = arg.*.value.str;
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 4)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        dest_str.* = null;
        dest_long.* = arg.*.value.lval;
    } else if ((@as(c_int, @intFromBool(allow_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        dest_str.* = null;
        is_null.* = @as(c_int, 1) != 0;
    } else {
        return zend_parse_arg_str_or_long_slow(arg, dest_str, dest_long, arg_num);
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_obj_or_class_name(arg_arg: [*c]zval, arg_destination: [*c][*c]zend_class_entry, arg_allow_null: bool) bool {
    var arg = arg_arg;
    _ = &arg;
    var destination = arg_destination;
    _ = &destination;
    var allow_null = arg_allow_null;
    _ = &allow_null;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 6)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        destination.* = zend_lookup_class(arg.*.value.str);
        return destination.* != @as([*c]zend_class_entry, @ptrCast(@alignCast(@as(?*anyopaque, @ptrFromInt(@as(c_int, 0))))));
    } else if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 8)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        destination.* = arg.*.value.obj.*.ce;
    } else if ((@as(c_int, @intFromBool(allow_null)) != 0) and (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 1)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
        destination.* = null;
    } else {
        return @as(c_int, 0) != 0;
    }
    return @as(c_int, 1) != 0;
}
pub inline fn zend_parse_arg_obj_or_str(arg_arg: [*c]zval, arg_destination_object: [*c][*c]zend_object, arg_base_ce: [*c]zend_class_entry, arg_destination_string: [*c][*c]zend_string, arg_allow_null: bool, arg_arg_num: u32) bool {
    var arg = arg_arg;
    _ = &arg;
    var destination_object = arg_destination_object;
    _ = &destination_object;
    var base_ce = arg_base_ce;
    _ = &base_ce;
    var destination_string = arg_destination_string;
    _ = &destination_string;
    var allow_null = arg_allow_null;
    _ = &allow_null;
    var arg_num = arg_arg_num;
    _ = &arg_num;
    if (__builtin_expect(@as(c_long, @intFromBool(!!(@as(c_int, @bitCast(@as(c_uint, zval_get_type(&arg.*)))) == @as(c_int, 8)))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0) {
        if (!(base_ce != null) or (__builtin_expect(@as(c_long, @intFromBool(!!instanceof_function(arg.*.value.obj.*.ce, base_ce))), @as(c_long, @bitCast(@as(c_long, @as(c_int, 1))))) != 0)) {
            destination_object.* = arg.*.value.obj;
            destination_string.* = null;
            return @as(c_int, 1) != 0;
        }
    }
    destination_object.* = null;
    return zend_parse_arg_str(arg, destination_string, allow_null, arg_num);
}
pub extern fn php_explicit_bzero(dst: ?*anyopaque, siz: usize) void;
pub extern fn php_safe_bcmp(a: [*c]const zend_string, b: [*c]const zend_string) c_int;
pub const wint_t = __darwin_wint_t;
pub const _RuneEntry = extern struct {
    __min: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __max: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __map: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __types: [*c]__uint32_t = @import("std").mem.zeroes([*c]__uint32_t),
};
pub const _RuneRange = extern struct {
    __nranges: c_int = @import("std").mem.zeroes(c_int),
    __ranges: [*c]_RuneEntry = @import("std").mem.zeroes([*c]_RuneEntry),
};
pub const _RuneCharClass = extern struct {
    __name: [14]u8 = @import("std").mem.zeroes([14]u8),
    __mask: __uint32_t = @import("std").mem.zeroes(__uint32_t),
};
pub const _RuneLocale = extern struct {
    __magic: [8]u8 = @import("std").mem.zeroes([8]u8),
    __encoding: [32]u8 = @import("std").mem.zeroes([32]u8),
    __sgetrune: ?*const fn ([*c]const u8, __darwin_size_t, [*c][*c]const u8) callconv(.c) __darwin_rune_t = @import("std").mem.zeroes(?*const fn ([*c]const u8, __darwin_size_t, [*c][*c]const u8) callconv(.c) __darwin_rune_t),
    __sputrune: ?*const fn (__darwin_rune_t, [*c]u8, __darwin_size_t, [*c][*c]u8) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (__darwin_rune_t, [*c]u8, __darwin_size_t, [*c][*c]u8) callconv(.c) c_int),
    __invalid_rune: __darwin_rune_t = @import("std").mem.zeroes(__darwin_rune_t),
    __runetype: [256]__uint32_t = @import("std").mem.zeroes([256]__uint32_t),
    __maplower: [256]__darwin_rune_t = @import("std").mem.zeroes([256]__darwin_rune_t),
    __mapupper: [256]__darwin_rune_t = @import("std").mem.zeroes([256]__darwin_rune_t),
    __runetype_ext: _RuneRange = @import("std").mem.zeroes(_RuneRange),
    __maplower_ext: _RuneRange = @import("std").mem.zeroes(_RuneRange),
    __mapupper_ext: _RuneRange = @import("std").mem.zeroes(_RuneRange),
    __variable: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    __variable_len: c_int = @import("std").mem.zeroes(c_int),
    __ncharclasses: c_int = @import("std").mem.zeroes(c_int),
    __charclasses: [*c]_RuneCharClass = @import("std").mem.zeroes([*c]_RuneCharClass),
};
pub extern var _DefaultRuneLocale: _RuneLocale;
pub extern var _CurrentRuneLocale: [*c]_RuneLocale;
pub extern fn ___runetype(__darwin_ct_rune_t) c_ulong;
pub extern fn ___tolower(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub extern fn ___toupper(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub fn isascii(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return @intFromBool((_c & ~@as(c_int, 127)) == @as(c_int, 0));
}
pub extern fn __maskrune(__darwin_ct_rune_t, c_ulong) c_int;
pub fn __istype(arg__c: __darwin_ct_rune_t, arg__f: c_ulong) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    var _f = arg__f;
    _ = &_f;
    return if (isascii(_c) != 0) @intFromBool(!!((@as(c_ulong, @bitCast(@as(c_ulong, _DefaultRuneLocale.__runetype[@as(c_uint, @intCast(_c))]))) & _f) != 0)) else @intFromBool(!!(__maskrune(_c, _f) != 0));
}
pub fn __isctype(arg__c: __darwin_ct_rune_t, arg__f: c_ulong) callconv(.c) __darwin_ct_rune_t {
    var _c = arg__c;
    _ = &_c;
    var _f = arg__f;
    _ = &_f;
    return if ((_c < @as(c_int, 0)) or (_c >= (@as(c_int, 1) << @intCast(8)))) @as(c_int, 0) else @intFromBool(!!((@as(c_ulong, @bitCast(@as(c_ulong, _DefaultRuneLocale.__runetype[@as(c_uint, @intCast(_c))]))) & _f) != 0));
}
pub extern fn __toupper(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub extern fn __tolower(__darwin_ct_rune_t) __darwin_ct_rune_t;
pub fn __wcwidth(arg__c: __darwin_ct_rune_t) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    var _x: c_uint = undefined;
    _ = &_x;
    if (_c == @as(c_int, 0)) return @as(c_int, 0);
    _x = @as(c_uint, @bitCast(__maskrune(_c, @as(c_ulong, @bitCast(@as(c_long, 3758096384) | @as(c_long, 262144))))));
    if ((@as(c_long, @bitCast(@as(c_ulong, _x))) & @as(c_long, 3758096384)) != @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) return @as(c_int, @bitCast(@as(c_int, @truncate((@as(c_long, @bitCast(@as(c_ulong, _x))) & @as(c_long, 3758096384)) >> @intCast(30)))));
    return if ((@as(c_long, @bitCast(@as(c_ulong, _x))) & @as(c_long, 262144)) != @as(c_long, @bitCast(@as(c_long, @as(c_int, 0))))) @as(c_int, 1) else -@as(c_int, 1);
}
pub fn isalnum(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 256) | @as(c_long, 1024))));
}
pub fn isalpha(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 256))));
}
pub fn isblank(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 131072))));
}
pub fn iscntrl(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 512))));
}
pub fn isdigit(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __isctype(_c, @as(c_ulong, @bitCast(@as(c_long, 1024))));
}
pub fn isgraph(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 2048))));
}
pub fn islower(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 4096))));
}
pub fn isprint(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 262144))));
}
pub fn ispunct(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 8192))));
}
pub fn isspace(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 16384))));
}
pub fn isupper(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 32768))));
}
pub fn isxdigit(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __isctype(_c, @as(c_ulong, @bitCast(@as(c_long, 65536))));
}
pub fn toascii(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return _c & @as(c_int, 127);
}
pub fn tolower(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __tolower(_c);
}
pub fn toupper(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __toupper(_c);
}
pub fn digittoint(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __maskrune(_c, @as(c_ulong, @bitCast(@as(c_long, @as(c_int, 15)))));
}
pub fn ishexnumber(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 65536))));
}
pub fn isideogram(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 524288))));
}
pub fn isnumber(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 1024))));
}
pub fn isphonogram(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 2097152))));
}
pub fn isrune(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 4294967280))));
}
pub fn isspecial(arg__c: c_int) callconv(.c) c_int {
    var _c = arg__c;
    _ = &_c;
    return __istype(_c, @as(c_ulong, @bitCast(@as(c_long, 1048576))));
}
pub const struct_passwd = extern struct {
    pw_name: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    pw_passwd: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    pw_uid: uid_t = @import("std").mem.zeroes(uid_t),
    pw_gid: gid_t = @import("std").mem.zeroes(gid_t),
    pw_change: __darwin_time_t = @import("std").mem.zeroes(__darwin_time_t),
    pw_class: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    pw_gecos: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    pw_dir: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    pw_shell: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    pw_expire: __darwin_time_t = @import("std").mem.zeroes(__darwin_time_t),
};
pub extern fn getpwuid(uid_t) [*c]struct_passwd;
pub extern fn getpwnam([*c]const u8) [*c]struct_passwd;
pub extern fn getpwuid_r(uid_t, [*c]struct_passwd, [*c]u8, usize, [*c][*c]struct_passwd) c_int;
pub extern fn getpwnam_r([*c]const u8, [*c]struct_passwd, [*c]u8, usize, [*c][*c]struct_passwd) c_int;
pub extern fn getpwent() [*c]struct_passwd;
pub extern fn setpwent() void;
pub extern fn endpwent() void;
pub const uuid_string_t = __darwin_uuid_string_t;
pub const UUID_NULL: uuid_t = [16]u8{
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};
pub extern fn uuid_clear(uu: [*c]u8) void;
pub extern fn uuid_compare(uu1: [*c]const u8, uu2: [*c]const u8) c_int;
pub extern fn uuid_copy(dst: [*c]u8, src: [*c]const u8) void;
pub extern fn uuid_generate(out: [*c]u8) void;
pub extern fn uuid_generate_random(out: [*c]u8) void;
pub extern fn uuid_generate_time(out: [*c]u8) void;
pub extern fn uuid_is_null(uu: [*c]const u8) c_int;
pub extern fn uuid_parse(in: [*c]const u8, uu: [*c]u8) c_int;
pub extern fn uuid_unparse(uu: [*c]const u8, out: [*c]u8) void;
pub extern fn uuid_unparse_lower(uu: [*c]const u8, out: [*c]u8) void;
pub extern fn uuid_unparse_upper(uu: [*c]const u8, out: [*c]u8) void;
pub extern fn setpassent(c_int) c_int;
pub extern fn user_from_uid(uid_t, c_int) [*c]u8;
pub extern fn getpwuuid([*c]u8) [*c]struct_passwd;
pub extern fn getpwuuid_r([*c]u8, [*c]struct_passwd, [*c]u8, usize, [*c][*c]struct_passwd) c_int;
pub extern fn ap_php_slprintf(buf: [*c]u8, len: usize, format: [*c]const u8, ...) c_int;
pub extern fn ap_php_vslprintf(buf: [*c]u8, len: usize, format: [*c]const u8, ap: va_list) c_int;
pub extern fn ap_php_snprintf([*c]u8, usize, [*c]const u8, ...) c_int;
pub extern fn ap_php_vsnprintf([*c]u8, usize, [*c]const u8, ap: va_list) c_int;
pub extern fn ap_php_vasprintf(buf: [*c][*c]u8, format: [*c]const u8, ap: va_list) c_int;
pub extern fn ap_php_asprintf(buf: [*c][*c]u8, format: [*c]const u8, ...) c_int;
pub extern fn php_0cvt(value: f64, ndigit: c_int, dec_point: u8, exponent: u8, buf: [*c]u8) [*c]u8;
pub extern fn php_conv_fp(format: u8, num: f64, add_dp: bool, precision: c_int, dec_point: u8, is_negative: [*c]bool, buf: [*c]u8, len: [*c]usize) [*c]u8;
pub const LM_STD: c_int = 0;
pub const LM_INTMAX_T: c_int = 1;
pub const LM_PTRDIFF_T: c_int = 2;
pub const LM_LONG_LONG: c_int = 3;
pub const LM_SIZE_T: c_int = 4;
pub const LM_LONG: c_int = 5;
pub const LM_LONG_DOUBLE: c_int = 6;
pub const length_modifier_e = c_uint;
pub extern fn ap_php_conv_10(num: i64, is_unsigned: bool, is_negative: [*c]bool, buf_end: [*c]u8, len: [*c]usize) [*c]u8;
pub extern fn ap_php_conv_p2(num: u64, nbits: c_int, format: u8, buf_end: [*c]u8, len: [*c]usize) [*c]u8;
pub extern fn php_printf_to_smart_string(buf: [*c]smart_string, format: [*c]const u8, ap: va_list) void;
pub extern fn php_printf_to_smart_str(buf: [*c]smart_str, format: [*c]const u8, ap: va_list) void;
pub extern var environ: [*c][*c]u8;
pub extern fn phperror(@"error": [*c]u8) void;
pub extern fn php_write(buf: ?*anyopaque, size: usize) usize;
pub extern fn php_printf(format: [*c]const u8, ...) usize;
pub extern fn php_printf_unchecked(format: [*c]const u8, ...) usize;
pub extern fn php_during_module_startup() bool;
pub extern fn php_during_module_shutdown() bool;
pub extern fn php_get_module_initialized() bool;
pub extern fn closelog() void;
pub extern fn openlog([*c]const u8, c_int, c_int) void;
pub extern fn setlogmask(c_int) c_int;
pub extern fn syslog(c_int, [*c]const u8, ...) void;
pub extern fn vsyslog(c_int, [*c]const u8, __darwin_va_list) void;
pub extern fn php_syslog_str(priority: c_int, message: [*c]const zend_string) void;
pub extern fn php_syslog(c_int, format: [*c]const u8, ...) void;
pub extern fn php_openlog([*c]const u8, c_int, c_int) void;
pub extern fn php_closelog() void;
pub extern fn php_log_err_with_severity(log_message: [*c]const u8, syslog_type_int: c_int) void;
pub extern fn Debug(format: [*c]u8, ...) c_int;
pub extern fn cfgparse() c_int;
pub fn php_set_error_handling(arg_error_handling: zend_error_handling_t, arg_exception_class: [*c]zend_class_entry) callconv(.c) void {
    var error_handling = arg_error_handling;
    _ = &error_handling;
    var exception_class = arg_exception_class;
    _ = &exception_class;
    zend_replace_error_handling(error_handling, exception_class, null);
}
pub fn php_std_error_handling() callconv(.c) void {}
pub extern fn php_verror(docref: [*c]const u8, params: [*c]const u8, @"type": c_int, format: [*c]const u8, args: va_list) void;
pub extern fn php_error_docref(docref: [*c]const u8, @"type": c_int, format: [*c]const u8, ...) void;
pub extern fn php_error_docref_unchecked(docref: [*c]const u8, @"type": c_int, format: [*c]const u8, ...) void;
pub extern fn php_error_docref1(docref: [*c]const u8, param1: [*c]const u8, @"type": c_int, format: [*c]const u8, ...) void;
pub extern fn php_error_docref2(docref: [*c]const u8, param1: [*c]const u8, param2: [*c]const u8, @"type": c_int, format: [*c]const u8, ...) void;
pub extern var php_register_internal_extensions_func: ?*const fn () callconv(.c) c_int;
pub extern fn php_register_internal_extensions() c_int;
pub extern fn php_register_pre_request_shutdown(func: ?*const fn (?*anyopaque) callconv(.c) void, userdata: ?*anyopaque) void;
pub extern fn php_com_initialize() void;
pub extern fn php_get_current_user() [*c]u8;
pub extern fn php_get_internal_encoding() [*c]const u8;
pub extern fn php_get_input_encoding() [*c]const u8;
pub extern fn php_get_output_encoding() [*c]const u8;
pub extern var php_internal_encoding_changed: ?*const fn () callconv(.c) void;
pub const PHP_OUTPUT_HANDLER_FAILURE: c_int = 0;
pub const PHP_OUTPUT_HANDLER_SUCCESS: c_int = 1;
pub const PHP_OUTPUT_HANDLER_NO_DATA: c_int = 2;
pub const enum__php_output_handler_status_t = c_uint;
pub const php_output_handler_status_t = enum__php_output_handler_status_t;
pub const PHP_OUTPUT_HANDLER_HOOK_GET_OPAQ: c_int = 0;
pub const PHP_OUTPUT_HANDLER_HOOK_GET_FLAGS: c_int = 1;
pub const PHP_OUTPUT_HANDLER_HOOK_GET_LEVEL: c_int = 2;
pub const PHP_OUTPUT_HANDLER_HOOK_IMMUTABLE: c_int = 3;
pub const PHP_OUTPUT_HANDLER_HOOK_DISABLE: c_int = 4;
pub const PHP_OUTPUT_HANDLER_HOOK_LAST: c_int = 5;
pub const enum__php_output_handler_hook_t = c_uint;
pub const php_output_handler_hook_t = enum__php_output_handler_hook_t;
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_output.h:95:11: warning: struct demoted to opaque type - has bitfield
pub const struct__php_output_buffer = opaque {};
pub const php_output_buffer = struct__php_output_buffer;
pub const struct__php_output_context = extern struct {
    op: c_int = @import("std").mem.zeroes(c_int),
    in: php_output_buffer = @import("std").mem.zeroes(php_output_buffer),
    out: php_output_buffer = @import("std").mem.zeroes(php_output_buffer),
};
pub const php_output_context = struct__php_output_context;
pub const php_output_handler_func_t = ?*const fn ([*c]u8, usize, [*c][*c]u8, [*c]usize, c_int) callconv(.c) void;
pub const php_output_handler_context_func_t = ?*const fn ([*c]?*anyopaque, ?*php_output_context) callconv(.c) zend_result;
pub const php_output_handler_context_dtor_t = ?*const fn (?*anyopaque) callconv(.c) void;
pub const php_output_handler_conflict_check_t = ?*const fn ([*c]const u8, usize) callconv(.c) zend_result;
pub const struct__php_output_handler_user_func_t = extern struct {
    fci: zend_fcall_info = @import("std").mem.zeroes(zend_fcall_info),
    fcc: zend_fcall_info_cache = @import("std").mem.zeroes(zend_fcall_info_cache),
    zoh: zval = @import("std").mem.zeroes(zval),
};
pub const php_output_handler_user_func_t = struct__php_output_handler_user_func_t;
const union_unnamed_28 = extern union {
    user: [*c]php_output_handler_user_func_t,
    internal: php_output_handler_context_func_t,
};
pub const struct__php_output_handler = extern struct {
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    flags: c_int = @import("std").mem.zeroes(c_int),
    level: c_int = @import("std").mem.zeroes(c_int),
    size: usize = @import("std").mem.zeroes(usize),
    buffer: php_output_buffer = @import("std").mem.zeroes(php_output_buffer),
    opaq: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    dtor: ?*const fn (?*anyopaque) callconv(.c) void = @import("std").mem.zeroes(?*const fn (?*anyopaque) callconv(.c) void),
    func: union_unnamed_28 = @import("std").mem.zeroes(union_unnamed_28),
};
pub const php_output_handler_alias_ctor_t = ?*const fn ([*c]const u8, usize, usize, c_int) callconv(.c) ?*struct__php_output_handler;
pub const php_output_handler = struct__php_output_handler;
pub const struct__zend_output_globals = extern struct {
    handlers: zend_stack = @import("std").mem.zeroes(zend_stack),
    active: ?*php_output_handler = @import("std").mem.zeroes(?*php_output_handler),
    running: ?*php_output_handler = @import("std").mem.zeroes(?*php_output_handler),
    output_start_filename: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    output_start_lineno: c_int = @import("std").mem.zeroes(c_int),
    flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const zend_output_globals = struct__zend_output_globals;
pub extern var output_globals: zend_output_globals;
pub extern const php_output_default_handler_name: [23]u8;
pub extern const php_output_devnull_handler_name: [20]u8;
pub extern fn php_output_startup() void;
pub extern fn php_output_shutdown() void;
pub extern fn php_output_activate() c_int;
pub extern fn php_output_deactivate() void;
pub extern fn php_output_set_status(status: c_int) void;
pub extern fn php_output_get_status() c_int;
pub extern fn php_output_set_implicit_flush(flush: c_int) void;
pub extern fn php_output_get_start_filename() [*c]const u8;
pub extern fn php_output_get_start_lineno() c_int;
pub extern fn php_output_write_unbuffered(str: [*c]const u8, len: usize) usize;
pub extern fn php_output_write(str: [*c]const u8, len: usize) usize;
pub extern fn php_output_flush() zend_result;
pub extern fn php_output_flush_all() void;
pub extern fn php_output_clean() zend_result;
pub extern fn php_output_clean_all() void;
pub extern fn php_output_end() zend_result;
pub extern fn php_output_end_all() void;
pub extern fn php_output_discard() zend_result;
pub extern fn php_output_discard_all() void;
pub extern fn php_output_get_contents(p: [*c]zval) zend_result;
pub extern fn php_output_get_length(p: [*c]zval) zend_result;
pub extern fn php_output_get_level() c_int;
pub extern fn php_output_get_active_handler() ?*php_output_handler;
pub extern fn php_output_start_default() zend_result;
pub extern fn php_output_start_devnull() zend_result;
pub extern fn php_output_start_user(output_handler: [*c]zval, chunk_size: usize, flags: c_int) zend_result;
pub extern fn php_output_start_internal(name: [*c]const u8, name_len: usize, output_handler: php_output_handler_func_t, chunk_size: usize, flags: c_int) zend_result;
pub extern fn php_output_handler_create_user(handler: [*c]zval, chunk_size: usize, flags: c_int) ?*php_output_handler;
pub extern fn php_output_handler_create_internal(name: [*c]const u8, name_len: usize, handler: php_output_handler_context_func_t, chunk_size: usize, flags: c_int) ?*php_output_handler;
pub extern fn php_output_handler_set_context(handler: ?*php_output_handler, opaq: ?*anyopaque, dtor: ?*const fn (?*anyopaque) callconv(.c) void) void;
pub extern fn php_output_handler_start(handler: ?*php_output_handler) zend_result;
pub extern fn php_output_handler_started(name: [*c]const u8, name_len: usize) bool;
pub extern fn php_output_handler_hook(@"type": php_output_handler_hook_t, arg: ?*anyopaque) zend_result;
pub extern fn php_output_handler_dtor(handler: ?*php_output_handler) void;
pub extern fn php_output_handler_free(handler: [*c]?*php_output_handler) void;
pub extern fn php_output_handler_conflict(handler_new: [*c]const u8, handler_new_len: usize, handler_set: [*c]const u8, handler_set_len: usize) bool;
pub extern fn php_output_handler_conflict_register(handler_name: [*c]const u8, handler_name_len: usize, check_func: php_output_handler_conflict_check_t) zend_result;
pub extern fn php_output_handler_reverse_conflict_register(handler_name: [*c]const u8, handler_name_len: usize, check_func: php_output_handler_conflict_check_t) zend_result;
pub extern fn php_output_handler_alias(handler_name: [*c]const u8, handler_name_len: usize) php_output_handler_alias_ctor_t;
pub extern fn php_output_handler_alias_register(handler_name: [*c]const u8, handler_name_len: usize, func: php_output_handler_alias_ctor_t) zend_result;
pub const struct_timeval64 = extern struct {
    tv_sec: __int64_t = @import("std").mem.zeroes(__int64_t),
    tv_usec: __int64_t = @import("std").mem.zeroes(__int64_t),
};
pub const struct_itimerval = extern struct {
    it_interval: struct_timeval = @import("std").mem.zeroes(struct_timeval),
    it_value: struct_timeval = @import("std").mem.zeroes(struct_timeval),
};
pub const struct_timezone = extern struct {
    tz_minuteswest: c_int = @import("std").mem.zeroes(c_int),
    tz_dsttime: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_clockinfo = extern struct {
    hz: c_int = @import("std").mem.zeroes(c_int),
    tick: c_int = @import("std").mem.zeroes(c_int),
    tickadj: c_int = @import("std").mem.zeroes(c_int),
    stathz: c_int = @import("std").mem.zeroes(c_int),
    profhz: c_int = @import("std").mem.zeroes(c_int),
};
pub extern fn adjtime([*c]const struct_timeval, [*c]struct_timeval) c_int;
pub extern fn futimes(c_int, [*c]const struct_timeval) c_int;
pub extern fn lutimes([*c]const u8, [*c]const struct_timeval) c_int;
pub extern fn settimeofday([*c]const struct_timeval, [*c]const struct_timezone) c_int;
pub extern fn getitimer(c_int, [*c]struct_itimerval) c_int;
pub extern fn gettimeofday(noalias [*c]struct_timeval, noalias ?*anyopaque) c_int;
pub extern fn setitimer(c_int, noalias [*c]const struct_itimerval, noalias [*c]struct_itimerval) c_int;
pub extern fn utimes([*c]const u8, [*c]const struct_timeval) c_int;
pub extern fn php_file_le_stream() c_int;
pub extern fn php_file_le_pstream() c_int;
pub extern fn php_file_le_stream_filter() c_int;
pub const php_stream = struct__php_stream;
pub const struct__php_stream_statbuf = extern struct {
    sb: zend_stat_t = @import("std").mem.zeroes(zend_stat_t),
};
pub const php_stream_statbuf = struct__php_stream_statbuf;
pub const struct__php_stream_ops = extern struct {
    write: ?*const fn (?*php_stream, [*c]const u8, usize) callconv(.c) isize = @import("std").mem.zeroes(?*const fn (?*php_stream, [*c]const u8, usize) callconv(.c) isize),
    read: ?*const fn (?*php_stream, [*c]u8, usize) callconv(.c) isize = @import("std").mem.zeroes(?*const fn (?*php_stream, [*c]u8, usize) callconv(.c) isize),
    close: ?*const fn (?*php_stream, c_int) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (?*php_stream, c_int) callconv(.c) c_int),
    flush: ?*const fn (?*php_stream) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (?*php_stream) callconv(.c) c_int),
    label: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    seek: ?*const fn (?*php_stream, zend_off_t, c_int, [*c]zend_off_t) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (?*php_stream, zend_off_t, c_int, [*c]zend_off_t) callconv(.c) c_int),
    cast: ?*const fn (?*php_stream, c_int, [*c]?*anyopaque) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (?*php_stream, c_int, [*c]?*anyopaque) callconv(.c) c_int),
    stat: ?*const fn (?*php_stream, [*c]php_stream_statbuf) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (?*php_stream, [*c]php_stream_statbuf) callconv(.c) c_int),
    set_option: ?*const fn (?*php_stream, c_int, c_int, ?*anyopaque) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn (?*php_stream, c_int, c_int, ?*anyopaque) callconv(.c) c_int),
};
pub const php_stream_ops = struct__php_stream_ops;
pub const struct__php_stream_bucket = extern struct {
    next: [*c]php_stream_bucket = @import("std").mem.zeroes([*c]php_stream_bucket),
    prev: [*c]php_stream_bucket = @import("std").mem.zeroes([*c]php_stream_bucket),
    brigade: [*c]php_stream_bucket_brigade = @import("std").mem.zeroes([*c]php_stream_bucket_brigade),
    buf: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    buflen: usize = @import("std").mem.zeroes(usize),
    own_buf: u8 = @import("std").mem.zeroes(u8),
    is_persistent: u8 = @import("std").mem.zeroes(u8),
    refcount: c_int = @import("std").mem.zeroes(c_int),
};
pub const php_stream_bucket = struct__php_stream_bucket;
pub const struct__php_stream_bucket_brigade = extern struct {
    head: [*c]php_stream_bucket = @import("std").mem.zeroes([*c]php_stream_bucket),
    tail: [*c]php_stream_bucket = @import("std").mem.zeroes([*c]php_stream_bucket),
};
pub const php_stream_bucket_brigade = struct__php_stream_bucket_brigade;
pub const struct__php_stream_filter_ops = extern struct {
    filter: ?*const fn (?*php_stream, [*c]php_stream_filter, [*c]php_stream_bucket_brigade, [*c]php_stream_bucket_brigade, [*c]usize, c_int) callconv(.c) php_stream_filter_status_t = @import("std").mem.zeroes(?*const fn (?*php_stream, [*c]php_stream_filter, [*c]php_stream_bucket_brigade, [*c]php_stream_bucket_brigade, [*c]usize, c_int) callconv(.c) php_stream_filter_status_t),
    dtor: ?*const fn ([*c]php_stream_filter) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]php_stream_filter) callconv(.c) void),
    label: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
};
pub const php_stream_filter_ops = struct__php_stream_filter_ops;
pub const struct__php_stream_filter = extern struct {
    fops: [*c]const php_stream_filter_ops = @import("std").mem.zeroes([*c]const php_stream_filter_ops),
    abstract: zval = @import("std").mem.zeroes(zval),
    next: [*c]php_stream_filter = @import("std").mem.zeroes([*c]php_stream_filter),
    prev: [*c]php_stream_filter = @import("std").mem.zeroes([*c]php_stream_filter),
    is_persistent: c_int = @import("std").mem.zeroes(c_int),
    chain: [*c]php_stream_filter_chain = @import("std").mem.zeroes([*c]php_stream_filter_chain),
    buffer: php_stream_bucket_brigade = @import("std").mem.zeroes(php_stream_bucket_brigade),
    res: [*c]zend_resource = @import("std").mem.zeroes([*c]zend_resource),
};
pub const php_stream_filter = struct__php_stream_filter;
pub const struct__php_stream_filter_chain = extern struct {
    head: [*c]php_stream_filter = @import("std").mem.zeroes([*c]php_stream_filter),
    tail: [*c]php_stream_filter = @import("std").mem.zeroes([*c]php_stream_filter),
    stream: ?*php_stream = @import("std").mem.zeroes(?*php_stream),
};
pub const php_stream_filter_chain = struct__php_stream_filter_chain;
pub const php_stream_notification_func = ?*const fn ([*c]php_stream_context, c_int, c_int, [*c]u8, c_int, usize, usize, ?*anyopaque) callconv(.c) void;
pub const struct__php_stream_notifier = extern struct {
    func: php_stream_notification_func = @import("std").mem.zeroes(php_stream_notification_func),
    dtor: ?*const fn ([*c]php_stream_notifier) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]php_stream_notifier) callconv(.c) void),
    ptr: zval = @import("std").mem.zeroes(zval),
    mask: c_int = @import("std").mem.zeroes(c_int),
    progress: usize = @import("std").mem.zeroes(usize),
    progress_max: usize = @import("std").mem.zeroes(usize),
};
pub const php_stream_notifier = struct__php_stream_notifier;
pub const struct__php_stream_context = extern struct {
    notifier: [*c]php_stream_notifier = @import("std").mem.zeroes([*c]php_stream_notifier),
    options: zval = @import("std").mem.zeroes(zval),
    res: [*c]zend_resource = @import("std").mem.zeroes([*c]zend_resource),
};
pub const php_stream_context = struct__php_stream_context;
pub const struct__php_stream_wrapper_ops = extern struct {
    stream_opener: ?*const fn ([*c]php_stream_wrapper, [*c]const u8, [*c]const u8, c_int, [*c][*c]zend_string, [*c]php_stream_context) callconv(.c) ?*php_stream = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, [*c]const u8, [*c]const u8, c_int, [*c][*c]zend_string, [*c]php_stream_context) callconv(.c) ?*php_stream),
    stream_closer: ?*const fn ([*c]php_stream_wrapper, ?*php_stream) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, ?*php_stream) callconv(.c) c_int),
    stream_stat: ?*const fn ([*c]php_stream_wrapper, ?*php_stream, [*c]php_stream_statbuf) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, ?*php_stream, [*c]php_stream_statbuf) callconv(.c) c_int),
    url_stat: ?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, [*c]php_stream_statbuf, [*c]php_stream_context) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, [*c]php_stream_statbuf, [*c]php_stream_context) callconv(.c) c_int),
    dir_opener: ?*const fn ([*c]php_stream_wrapper, [*c]const u8, [*c]const u8, c_int, [*c][*c]zend_string, [*c]php_stream_context) callconv(.c) ?*php_stream = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, [*c]const u8, [*c]const u8, c_int, [*c][*c]zend_string, [*c]php_stream_context) callconv(.c) ?*php_stream),
    label: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    unlink: ?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, [*c]php_stream_context) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, [*c]php_stream_context) callconv(.c) c_int),
    rename: ?*const fn ([*c]php_stream_wrapper, [*c]const u8, [*c]const u8, c_int, [*c]php_stream_context) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, [*c]const u8, [*c]const u8, c_int, [*c]php_stream_context) callconv(.c) c_int),
    stream_mkdir: ?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, c_int, [*c]php_stream_context) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, c_int, [*c]php_stream_context) callconv(.c) c_int),
    stream_rmdir: ?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, [*c]php_stream_context) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, [*c]php_stream_context) callconv(.c) c_int),
    stream_metadata: ?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, ?*anyopaque, [*c]php_stream_context) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]php_stream_wrapper, [*c]const u8, c_int, ?*anyopaque, [*c]php_stream_context) callconv(.c) c_int),
};
pub const php_stream_wrapper_ops = struct__php_stream_wrapper_ops;
pub const struct__php_stream_wrapper = extern struct {
    wops: [*c]const php_stream_wrapper_ops = @import("std").mem.zeroes([*c]const php_stream_wrapper_ops),
    abstract: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    is_url: c_int = @import("std").mem.zeroes(c_int),
};
pub const php_stream_wrapper = struct__php_stream_wrapper;
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_streams.h:206:11: warning: struct demoted to opaque type - has bitfield
pub const struct__php_stream = opaque {};
pub extern fn php_stream_context_free(context: [*c]php_stream_context) void;
pub extern fn php_stream_context_alloc() [*c]php_stream_context;
pub extern fn php_stream_context_get_option(context: [*c]php_stream_context, wrappername: [*c]const u8, optionname: [*c]const u8) [*c]zval;
pub extern fn php_stream_context_set_option(context: [*c]php_stream_context, wrappername: [*c]const u8, optionname: [*c]const u8, optionvalue: [*c]zval) void;
pub extern fn php_stream_context_unset_option(context: [*c]php_stream_context, wrappername: [*c]const u8, optionname: [*c]const u8) void;
pub extern fn php_stream_notification_alloc() [*c]php_stream_notifier;
pub extern fn php_stream_notification_free(notifier: [*c]php_stream_notifier) void;
pub extern fn php_stream_notification_notify(context: [*c]php_stream_context, notifycode: c_int, severity: c_int, xmsg: [*c]u8, xcode: c_int, bytes_sofar: usize, bytes_max: usize, ptr: ?*anyopaque) void;
pub extern fn php_stream_context_set(stream: ?*php_stream, context: [*c]php_stream_context) [*c]php_stream_context;
pub const PSFS_ERR_FATAL: c_int = 0;
pub const PSFS_FEED_ME: c_int = 1;
pub const PSFS_PASS_ON: c_int = 2;
pub const php_stream_filter_status_t = c_uint;
pub extern fn php_stream_bucket_new(stream: ?*php_stream, buf: [*c]u8, buflen: usize, own_buf: u8, buf_persistent: u8) [*c]php_stream_bucket;
pub extern fn php_stream_bucket_split(in: [*c]php_stream_bucket, left: [*c][*c]php_stream_bucket, right: [*c][*c]php_stream_bucket, length: usize) c_int;
pub extern fn php_stream_bucket_delref(bucket: [*c]php_stream_bucket) void;
pub extern fn php_stream_bucket_prepend(brigade: [*c]php_stream_bucket_brigade, bucket: [*c]php_stream_bucket) void;
pub extern fn php_stream_bucket_append(brigade: [*c]php_stream_bucket_brigade, bucket: [*c]php_stream_bucket) void;
pub extern fn php_stream_bucket_unlink(bucket: [*c]php_stream_bucket) void;
pub extern fn php_stream_bucket_make_writeable(bucket: [*c]php_stream_bucket) [*c]php_stream_bucket;
pub extern fn _php_stream_filter_prepend(chain: [*c]php_stream_filter_chain, filter: [*c]php_stream_filter) void;
pub extern fn php_stream_filter_prepend_ex(chain: [*c]php_stream_filter_chain, filter: [*c]php_stream_filter) c_int;
pub extern fn _php_stream_filter_append(chain: [*c]php_stream_filter_chain, filter: [*c]php_stream_filter) void;
pub extern fn php_stream_filter_append_ex(chain: [*c]php_stream_filter_chain, filter: [*c]php_stream_filter) c_int;
pub extern fn _php_stream_filter_flush(filter: [*c]php_stream_filter, finish: c_int) c_int;
pub extern fn php_stream_filter_remove(filter: [*c]php_stream_filter, call_dtor: c_int) [*c]php_stream_filter;
pub extern fn php_stream_filter_free(filter: [*c]php_stream_filter) void;
pub extern fn _php_stream_filter_alloc(fops: [*c]const php_stream_filter_ops, abstract: ?*anyopaque, persistent: u8) [*c]php_stream_filter;
pub const struct__php_stream_filter_factory = extern struct {
    create_filter: ?*const fn ([*c]const u8, [*c]zval, u8) callconv(.c) [*c]php_stream_filter = @import("std").mem.zeroes(?*const fn ([*c]const u8, [*c]zval, u8) callconv(.c) [*c]php_stream_filter),
};
pub const php_stream_filter_factory = struct__php_stream_filter_factory;
pub extern fn php_stream_filter_register_factory(filterpattern: [*c]const u8, factory: [*c]const php_stream_filter_factory) c_int;
pub extern fn php_stream_filter_unregister_factory(filterpattern: [*c]const u8) c_int;
pub extern fn php_stream_filter_register_factory_volatile(filterpattern: [*c]zend_string, factory: [*c]const php_stream_filter_factory) c_int;
pub extern fn php_stream_filter_create(filtername: [*c]const u8, filterparams: [*c]zval, persistent: u8) [*c]php_stream_filter;
pub const struct__php_stream_dirent = extern struct {
    d_name: [1024]u8 = @import("std").mem.zeroes([1024]u8),
    d_type: u8 = @import("std").mem.zeroes(u8),
};
pub const php_stream_dirent = struct__php_stream_dirent;
pub extern fn _php_stream_alloc(ops: [*c]const php_stream_ops, abstract: ?*anyopaque, persistent_id: [*c]const u8, mode: [*c]const u8) ?*php_stream;
pub extern fn php_stream_encloses(enclosing: ?*php_stream, enclosed: ?*php_stream) ?*php_stream;
pub extern fn _php_stream_free_enclosed(stream_enclosed: ?*php_stream, close_options: c_int) c_int;
pub extern fn php_stream_from_persistent_id(persistent_id: [*c]const u8, stream: [*c]?*php_stream) c_int;
pub extern fn _php_stream_free(stream: ?*php_stream, close_options: c_int) c_int;
pub extern fn _php_stream_seek(stream: ?*php_stream, offset: zend_off_t, whence: c_int) c_int;
pub extern fn _php_stream_tell(stream: ?*php_stream) zend_off_t;
pub extern fn _php_stream_read(stream: ?*php_stream, buf: [*c]u8, count: usize) isize;
pub extern fn php_stream_read_to_str(stream: ?*php_stream, len: usize) [*c]zend_string;
pub extern fn _php_stream_write(stream: ?*php_stream, buf: [*c]const u8, count: usize) isize;
pub extern fn _php_stream_fill_read_buffer(stream: ?*php_stream, size: usize) zend_result;
pub extern fn _php_stream_printf(stream: ?*php_stream, fmt: [*c]const u8, ...) isize;
pub extern fn _php_stream_eof(stream: ?*php_stream) bool;
pub extern fn _php_stream_getc(stream: ?*php_stream) c_int;
pub extern fn _php_stream_putc(stream: ?*php_stream, c: c_int) c_int;
pub extern fn _php_stream_flush(stream: ?*php_stream, closing: c_int) c_int;
pub extern fn _php_stream_sync(stream: ?*php_stream, data_only: bool) c_int;
pub extern fn _php_stream_get_line(stream: ?*php_stream, buf: [*c]u8, maxlen: usize, returned_len: [*c]usize) [*c]u8;
pub extern fn php_stream_get_record(stream: ?*php_stream, maxlen: usize, delim: [*c]const u8, delim_len: usize) [*c]zend_string;
pub extern fn _php_stream_puts(stream: ?*php_stream, buf: [*c]const u8) bool;
pub extern fn _php_stream_stat(stream: ?*php_stream, ssb: [*c]php_stream_statbuf) c_int;
pub extern fn _php_stream_stat_path(path: [*c]const u8, flags: c_int, ssb: [*c]php_stream_statbuf, context: [*c]php_stream_context) c_int;
pub extern fn _php_stream_mkdir(path: [*c]const u8, mode: c_int, options: c_int, context: [*c]php_stream_context) c_int;
pub extern fn _php_stream_rmdir(path: [*c]const u8, options: c_int, context: [*c]php_stream_context) c_int;
pub extern fn _php_stream_opendir(path: [*c]const u8, options: c_int, context: [*c]php_stream_context) ?*php_stream;
pub extern fn _php_stream_readdir(dirstream: ?*php_stream, ent: [*c]php_stream_dirent) [*c]php_stream_dirent;
pub extern fn php_stream_dirent_alphasort(a: [*c][*c]const zend_string, b: [*c][*c]const zend_string) c_int;
pub extern fn php_stream_dirent_alphasortr(a: [*c][*c]const zend_string, b: [*c][*c]const zend_string) c_int;
pub extern fn _php_stream_scandir(dirname: [*c]const u8, namelist: [*c][*c][*c]zend_string, flags: c_int, context: [*c]php_stream_context, compare: ?*const fn ([*c][*c]const zend_string, [*c][*c]const zend_string) callconv(.c) c_int) c_int;
pub extern fn _php_stream_set_option(stream: ?*php_stream, option: c_int, value: c_int, ptrparam: ?*anyopaque) c_int;
pub extern fn _php_stream_truncate_set_size(stream: ?*php_stream, newsize: usize) c_int;
pub extern fn _php_stream_copy_to_stream(src: ?*php_stream, dest: ?*php_stream, maxlen: usize) usize;
pub extern fn _php_stream_copy_to_stream_ex(src: ?*php_stream, dest: ?*php_stream, maxlen: usize, len: [*c]usize) zend_result;
pub extern fn _php_stream_copy_to_mem(src: ?*php_stream, maxlen: usize, persistent: c_int) [*c]zend_string;
pub extern fn _php_stream_passthru(src: ?*php_stream) isize;
pub const sa_family_t = __uint8_t;
pub const socklen_t = __darwin_socklen_t;
pub const struct_iovec = extern struct {
    iov_base: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    iov_len: usize = @import("std").mem.zeroes(usize),
};
pub const sae_associd_t = __uint32_t;
pub const sae_connid_t = __uint32_t;
pub const struct_sockaddr = extern struct {
    sa_len: __uint8_t = @import("std").mem.zeroes(__uint8_t),
    sa_family: sa_family_t = @import("std").mem.zeroes(sa_family_t),
    sa_data: [14]u8 = @import("std").mem.zeroes([14]u8),
};
pub const struct_sa_endpoints = extern struct {
    sae_srcif: c_uint = @import("std").mem.zeroes(c_uint),
    sae_srcaddr: [*c]const struct_sockaddr = @import("std").mem.zeroes([*c]const struct_sockaddr),
    sae_srcaddrlen: socklen_t = @import("std").mem.zeroes(socklen_t),
    sae_dstaddr: [*c]const struct_sockaddr = @import("std").mem.zeroes([*c]const struct_sockaddr),
    sae_dstaddrlen: socklen_t = @import("std").mem.zeroes(socklen_t),
};
pub const sa_endpoints_t = struct_sa_endpoints;
pub const struct_linger = extern struct {
    l_onoff: c_int = @import("std").mem.zeroes(c_int),
    l_linger: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_so_np_extensions = extern struct {
    npx_flags: u_int32_t = @import("std").mem.zeroes(u_int32_t),
    npx_mask: u_int32_t = @import("std").mem.zeroes(u_int32_t),
};
pub const struct___sockaddr_header = extern struct {
    sa_len: __uint8_t = @import("std").mem.zeroes(__uint8_t),
    sa_family: sa_family_t = @import("std").mem.zeroes(sa_family_t),
};
pub const struct_sockproto = extern struct {
    sp_family: __uint16_t = @import("std").mem.zeroes(__uint16_t),
    sp_protocol: __uint16_t = @import("std").mem.zeroes(__uint16_t),
};
pub const struct_sockaddr_storage = extern struct {
    ss_len: __uint8_t = @import("std").mem.zeroes(__uint8_t),
    ss_family: sa_family_t = @import("std").mem.zeroes(sa_family_t),
    __ss_pad1: [6]u8 = @import("std").mem.zeroes([6]u8),
    __ss_align: __int64_t = @import("std").mem.zeroes(__int64_t),
    __ss_pad2: [112]u8 = @import("std").mem.zeroes([112]u8),
};
pub const struct_msghdr = extern struct {
    msg_name: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    msg_namelen: socklen_t = @import("std").mem.zeroes(socklen_t),
    msg_iov: [*c]struct_iovec = @import("std").mem.zeroes([*c]struct_iovec),
    msg_iovlen: c_int = @import("std").mem.zeroes(c_int),
    msg_control: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    msg_controllen: socklen_t = @import("std").mem.zeroes(socklen_t),
    msg_flags: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_cmsghdr = extern struct {
    cmsg_len: socklen_t = @import("std").mem.zeroes(socklen_t),
    cmsg_level: c_int = @import("std").mem.zeroes(c_int),
    cmsg_type: c_int = @import("std").mem.zeroes(c_int),
};
pub const struct_sf_hdtr = extern struct {
    headers: [*c]struct_iovec = @import("std").mem.zeroes([*c]struct_iovec),
    hdr_cnt: c_int = @import("std").mem.zeroes(c_int),
    trailers: [*c]struct_iovec = @import("std").mem.zeroes([*c]struct_iovec),
    trl_cnt: c_int = @import("std").mem.zeroes(c_int),
};
pub extern fn accept(c_int, noalias [*c]struct_sockaddr, noalias [*c]socklen_t) c_int;
pub extern fn bind(c_int, [*c]const struct_sockaddr, socklen_t) c_int;
pub extern fn connect(c_int, [*c]const struct_sockaddr, socklen_t) c_int;
pub extern fn getpeername(c_int, noalias [*c]struct_sockaddr, noalias [*c]socklen_t) c_int;
pub extern fn getsockname(c_int, noalias [*c]struct_sockaddr, noalias [*c]socklen_t) c_int;
pub extern fn getsockopt(c_int, c_int, c_int, noalias ?*anyopaque, noalias [*c]socklen_t) c_int;
pub extern fn listen(c_int, c_int) c_int;
pub extern fn recv(c_int, ?*anyopaque, usize, c_int) isize;
pub extern fn recvfrom(c_int, ?*anyopaque, usize, c_int, noalias [*c]struct_sockaddr, noalias [*c]socklen_t) isize;
pub extern fn recvmsg(c_int, [*c]struct_msghdr, c_int) isize;
pub extern fn send(c_int, ?*const anyopaque, usize, c_int) isize;
pub extern fn sendmsg(c_int, [*c]const struct_msghdr, c_int) isize;
pub extern fn sendto(c_int, ?*const anyopaque, usize, c_int, [*c]const struct_sockaddr, socklen_t) isize;
pub extern fn setsockopt(c_int, c_int, c_int, ?*const anyopaque, socklen_t) c_int;
pub extern fn shutdown(c_int, c_int) c_int;
pub extern fn sockatmark(c_int) c_int;
pub extern fn socket(c_int, c_int, c_int) c_int;
pub extern fn socketpair(c_int, c_int, c_int, [*c]c_int) c_int;
pub extern fn sendfile(c_int, c_int, off_t, [*c]off_t, [*c]struct_sf_hdtr, c_int) c_int;
pub extern fn pfctlinput(c_int, [*c]struct_sockaddr) void;
pub extern fn connectx(c_int, [*c]const sa_endpoints_t, sae_associd_t, c_uint, [*c]const struct_iovec, c_uint, [*c]usize, [*c]sae_connid_t) c_int;
pub extern fn disconnectx(c_int, sae_associd_t, sae_connid_t) c_int;
pub const php_stream_transport_factory_func = fn ([*c]const u8, usize, [*c]const u8, usize, [*c]const u8, c_int, c_int, [*c]struct_timeval, [*c]php_stream_context) callconv(.c) ?*php_stream;
pub const php_stream_transport_factory = ?*const php_stream_transport_factory_func;
pub extern fn php_stream_xport_register(protocol: [*c]const u8, factory: php_stream_transport_factory) c_int;
pub extern fn php_stream_xport_unregister(protocol: [*c]const u8) c_int;
pub extern fn _php_stream_xport_create(name: [*c]const u8, namelen: usize, options: c_int, flags: c_int, persistent_id: [*c]const u8, timeout: [*c]struct_timeval, context: [*c]php_stream_context, error_string: [*c][*c]zend_string, error_code: [*c]c_int) ?*php_stream;
pub extern fn php_stream_xport_bind(stream: ?*php_stream, name: [*c]const u8, namelen: usize, error_text: [*c][*c]zend_string) c_int;
pub extern fn php_stream_xport_connect(stream: ?*php_stream, name: [*c]const u8, namelen: usize, asynchronous: c_int, timeout: [*c]struct_timeval, error_text: [*c][*c]zend_string, error_code: [*c]c_int) c_int;
pub extern fn php_stream_xport_listen(stream: ?*php_stream, backlog: c_int, error_text: [*c][*c]zend_string) c_int;
pub extern fn php_stream_xport_accept(stream: ?*php_stream, client: [*c]?*php_stream, textaddr: [*c][*c]zend_string, addr: [*c]?*anyopaque, addrlen: [*c]socklen_t, timeout: [*c]struct_timeval, error_text: [*c][*c]zend_string) c_int;
pub extern fn php_stream_xport_get_name(stream: ?*php_stream, want_peer: c_int, textaddr: [*c][*c]zend_string, addr: [*c]?*anyopaque, addrlen: [*c]socklen_t) c_int;
pub const STREAM_OOB: c_int = 1;
pub const STREAM_PEEK: c_int = 2;
pub const enum_php_stream_xport_send_recv_flags = c_uint;
pub extern fn php_stream_xport_recvfrom(stream: ?*php_stream, buf: [*c]u8, buflen: usize, flags: c_int, addr: [*c]?*anyopaque, addrlen: [*c]socklen_t, textaddr: [*c][*c]zend_string) c_int;
pub extern fn php_stream_xport_sendto(stream: ?*php_stream, buf: [*c]const u8, buflen: usize, flags: c_int, addr: ?*anyopaque, addrlen: socklen_t) c_int;
pub const STREAM_SHUT_RD: c_int = 0;
pub const STREAM_SHUT_WR: c_int = 1;
pub const STREAM_SHUT_RDWR: c_int = 2;
pub const stream_shutdown_t = c_uint;
pub extern fn php_stream_xport_shutdown(stream: ?*php_stream, how: stream_shutdown_t) c_int;
pub const STREAM_XPORT_OP_BIND: c_int = 0;
pub const STREAM_XPORT_OP_CONNECT: c_int = 1;
pub const STREAM_XPORT_OP_LISTEN: c_int = 2;
pub const STREAM_XPORT_OP_ACCEPT: c_int = 3;
pub const STREAM_XPORT_OP_CONNECT_ASYNC: c_int = 4;
pub const STREAM_XPORT_OP_GET_NAME: c_int = 5;
pub const STREAM_XPORT_OP_GET_PEER_NAME: c_int = 6;
pub const STREAM_XPORT_OP_RECV: c_int = 7;
pub const STREAM_XPORT_OP_SEND: c_int = 8;
pub const STREAM_XPORT_OP_SHUTDOWN: c_int = 9;
const enum_unnamed_29 = c_uint;
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_transport.h:134:15: warning: struct demoted to opaque type - has bitfield
pub const struct__php_stream_xport_param = opaque {};
pub const php_stream_xport_param = struct__php_stream_xport_param;
pub const STREAM_CRYPTO_METHOD_SSLv2_CLIENT: c_int = 3;
pub const STREAM_CRYPTO_METHOD_SSLv3_CLIENT: c_int = 5;
pub const STREAM_CRYPTO_METHOD_SSLv23_CLIENT: c_int = 57;
pub const STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT: c_int = 9;
pub const STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT: c_int = 17;
pub const STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT: c_int = 33;
pub const STREAM_CRYPTO_METHOD_TLSv1_3_CLIENT: c_int = 65;
pub const STREAM_CRYPTO_METHOD_TLS_CLIENT: c_int = 121;
pub const STREAM_CRYPTO_METHOD_TLS_ANY_CLIENT: c_int = 121;
pub const STREAM_CRYPTO_METHOD_ANY_CLIENT: c_int = 127;
pub const STREAM_CRYPTO_METHOD_SSLv2_SERVER: c_int = 2;
pub const STREAM_CRYPTO_METHOD_SSLv3_SERVER: c_int = 4;
pub const STREAM_CRYPTO_METHOD_SSLv23_SERVER: c_int = 120;
pub const STREAM_CRYPTO_METHOD_TLSv1_0_SERVER: c_int = 8;
pub const STREAM_CRYPTO_METHOD_TLSv1_1_SERVER: c_int = 16;
pub const STREAM_CRYPTO_METHOD_TLSv1_2_SERVER: c_int = 32;
pub const STREAM_CRYPTO_METHOD_TLSv1_3_SERVER: c_int = 64;
pub const STREAM_CRYPTO_METHOD_TLS_SERVER: c_int = 120;
pub const STREAM_CRYPTO_METHOD_TLS_ANY_SERVER: c_int = 120;
pub const STREAM_CRYPTO_METHOD_ANY_SERVER: c_int = 126;
pub const php_stream_xport_crypt_method_t = c_uint;
pub extern fn php_stream_xport_crypto_setup(stream: ?*php_stream, crypto_method: php_stream_xport_crypt_method_t, session_stream: ?*php_stream) c_int;
pub extern fn php_stream_xport_crypto_enable(stream: ?*php_stream, activate: c_int) c_int;
const struct_unnamed_30 = extern struct {
    session: ?*php_stream = @import("std").mem.zeroes(?*php_stream),
    activate: c_int = @import("std").mem.zeroes(c_int),
    method: php_stream_xport_crypt_method_t = @import("std").mem.zeroes(php_stream_xport_crypt_method_t),
};
const struct_unnamed_31 = extern struct {
    returncode: c_int = @import("std").mem.zeroes(c_int),
};
pub const STREAM_XPORT_CRYPTO_OP_SETUP: c_int = 0;
pub const STREAM_XPORT_CRYPTO_OP_ENABLE: c_int = 1;
const enum_unnamed_32 = c_uint;
pub const struct__php_stream_xport_crypto_param = extern struct {
    inputs: struct_unnamed_30 = @import("std").mem.zeroes(struct_unnamed_30),
    outputs: struct_unnamed_31 = @import("std").mem.zeroes(struct_unnamed_31),
    op: enum_unnamed_32 = @import("std").mem.zeroes(enum_unnamed_32),
};
pub const php_stream_xport_crypto_param = struct__php_stream_xport_crypto_param;
pub extern fn php_stream_xport_get_hash() [*c]HashTable;
pub const php_stream_generic_socket_factory = @compileError("unable to resolve function type clang.TypeClass.Elaborated");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_transport.h:215:42
pub extern var php_stream_stdio_ops: php_stream_ops;
pub extern var php_plain_files_wrapper: php_stream_wrapper;
pub extern fn _php_stream_fopen(filename: [*c]const u8, mode: [*c]const u8, opened_path: [*c][*c]zend_string, options: c_int) ?*php_stream;
pub extern fn _php_stream_fopen_with_path(filename: [*c]const u8, mode: [*c]const u8, path: [*c]const u8, opened_path: [*c][*c]zend_string, options: c_int) ?*php_stream;
pub extern fn _php_stream_fopen_from_file(file: [*c]FILE, mode: [*c]const u8) ?*php_stream;
pub extern fn _php_stream_fopen_from_fd(fd: c_int, mode: [*c]const u8, persistent_id: [*c]const u8, zero_position: bool) ?*php_stream;
pub extern fn _php_stream_fopen_from_pipe(file: [*c]FILE, mode: [*c]const u8) ?*php_stream;
pub extern fn _php_stream_fopen_tmpfile(dummy: c_int) ?*php_stream;
pub extern fn _php_stream_fopen_temporary_file(dir: [*c]const u8, pfx: [*c]const u8, opened_path: [*c][*c]zend_string) ?*php_stream;
pub extern fn _php_stream_open_wrapper_as_file(path: [*c]u8, mode: [*c]u8, options: c_int, opened_path: [*c][*c]zend_string) [*c]FILE;
pub extern fn php_stream_parse_fopen_modes(mode: [*c]const u8, open_flags: [*c]c_int) c_int;
pub extern const php_glob_stream_wrapper: php_stream_wrapper;
pub extern const php_glob_stream_ops: php_stream_ops;
pub extern fn _php_glob_stream_get_path(stream: ?*php_stream, plen: [*c]usize) [*c]u8;
pub extern fn _php_glob_stream_get_pattern(stream: ?*php_stream, plen: [*c]usize) [*c]u8;
pub extern fn _php_glob_stream_get_count(stream: ?*php_stream, pflags: [*c]c_int) c_int;
pub extern const php_stream_userspace_ops: php_stream_ops;
pub extern const php_stream_userspace_dir_ops: php_stream_ops;
pub const PHP_STREAM_MMAP_SUPPORTED: c_int = 0;
pub const PHP_STREAM_MMAP_MAP_RANGE: c_int = 1;
pub const PHP_STREAM_MMAP_UNMAP: c_int = 2;
pub const php_stream_mmap_operation_t = c_uint;
pub const PHP_STREAM_MAP_MODE_READONLY: c_int = 0;
pub const PHP_STREAM_MAP_MODE_READWRITE: c_int = 1;
pub const PHP_STREAM_MAP_MODE_SHARED_READONLY: c_int = 2;
pub const PHP_STREAM_MAP_MODE_SHARED_READWRITE: c_int = 3;
pub const php_stream_mmap_access_t = c_uint;
pub const php_stream_mmap_range = extern struct {
    offset: usize = @import("std").mem.zeroes(usize),
    length: usize = @import("std").mem.zeroes(usize),
    mode: php_stream_mmap_access_t = @import("std").mem.zeroes(php_stream_mmap_access_t),
    mapped: [*c]u8 = @import("std").mem.zeroes([*c]u8),
};
pub extern fn _php_stream_mmap_range(stream: ?*php_stream, offset: usize, length: usize, mode: php_stream_mmap_access_t, mapped_len: [*c]usize) [*c]u8;
pub extern fn _php_stream_mmap_unmap(stream: ?*php_stream) c_int;
pub extern fn _php_stream_mmap_unmap_ex(stream: ?*php_stream, readden: zend_off_t) c_int;
pub extern fn _php_stream_cast(stream: ?*php_stream, castas: c_int, ret: [*c]?*anyopaque, show_err: c_int) c_int;
pub extern fn php_init_stream_wrappers(module_number: c_int) c_int;
pub extern fn php_shutdown_stream_wrappers(module_number: c_int) void;
pub extern fn php_shutdown_stream_hashes() void;
pub extern fn zm_deactivate_streams(@"type": c_int, module_number: c_int) zend_result;
pub extern fn php_register_url_stream_wrapper(protocol: [*c]const u8, wrapper: [*c]const php_stream_wrapper) zend_result;
pub extern fn php_unregister_url_stream_wrapper(protocol: [*c]const u8) zend_result;
pub extern fn php_register_url_stream_wrapper_volatile(protocol: [*c]zend_string, wrapper: [*c]php_stream_wrapper) zend_result;
pub extern fn php_unregister_url_stream_wrapper_volatile(protocol: [*c]zend_string) zend_result;
pub extern fn _php_stream_open_wrapper_ex(path: [*c]const u8, mode: [*c]const u8, options: c_int, opened_path: [*c][*c]zend_string, context: [*c]php_stream_context) ?*php_stream;
pub extern fn php_stream_locate_url_wrapper(path: [*c]const u8, path_for_open: [*c][*c]const u8, options: c_int) [*c]php_stream_wrapper;
pub extern fn php_stream_locate_eol(stream: ?*php_stream, buf: [*c]zend_string) [*c]const u8;
pub extern fn php_stream_wrapper_log_error(wrapper: [*c]const php_stream_wrapper, options: c_int, fmt: [*c]const u8, ...) void;
pub extern fn _php_stream_make_seekable(origstream: ?*php_stream, newstream: [*c]?*php_stream, flags: c_int) c_int;
pub extern fn _php_stream_get_url_stream_wrappers_hash() [*c]HashTable;
pub extern fn php_stream_get_url_stream_wrappers_hash_global() [*c]HashTable;
pub extern fn _php_get_stream_filters_hash() [*c]HashTable;
pub extern fn php_get_stream_filters_hash_global() [*c]HashTable;
pub extern var php_stream_user_wrapper_ops: [*c]const php_stream_wrapper_ops;
pub fn php_is_stream_path(arg_filename: [*c]const u8) callconv(.c) bool {
    var filename = arg_filename;
    _ = &filename;
    var p: [*c]const u8 = undefined;
    _ = &p;
    {
        p = filename;
        while (((((((@as(c_int, @bitCast(@as(c_uint, p.*))) >= @as(c_int, 'a')) and (@as(c_int, @bitCast(@as(c_uint, p.*))) <= @as(c_int, 'z'))) or ((@as(c_int, @bitCast(@as(c_uint, p.*))) >= @as(c_int, 'A')) and (@as(c_int, @bitCast(@as(c_uint, p.*))) <= @as(c_int, 'Z')))) or ((@as(c_int, @bitCast(@as(c_uint, p.*))) >= @as(c_int, '0')) and (@as(c_int, @bitCast(@as(c_uint, p.*))) <= @as(c_int, '9')))) or (@as(c_int, @bitCast(@as(c_uint, p.*))) == @as(c_int, '+'))) or (@as(c_int, @bitCast(@as(c_uint, p.*))) == @as(c_int, '-'))) or (@as(c_int, @bitCast(@as(c_uint, p.*))) == @as(c_int, '.'))) : (p += 1) {}
    }
    return (((p != filename) and (@as(c_int, @bitCast(@as(c_uint, p[@as(c_uint, @intCast(@as(c_int, 0)))]))) == @as(c_int, ':'))) and (@as(c_int, @bitCast(@as(c_uint, p[@as(c_uint, @intCast(@as(c_int, 1)))]))) == @as(c_int, '/'))) and (@as(c_int, @bitCast(@as(c_uint, p[@as(c_uint, @intCast(@as(c_int, 2)))]))) == @as(c_int, '/'));
}
pub extern fn _php_stream_memory_create(mode: c_int) ?*php_stream;
pub extern fn _php_stream_memory_open(mode: c_int, buf: [*c]zend_string) ?*php_stream;
pub extern fn _php_stream_memory_get_buffer(stream: ?*php_stream) [*c]zend_string;
pub extern fn _php_stream_temp_create(mode: c_int, max_memory_usage: usize) ?*php_stream;
pub extern fn _php_stream_temp_create_ex(mode: c_int, max_memory_usage: usize, tmpdir: [*c]const u8) ?*php_stream;
pub extern fn _php_stream_temp_open(mode: c_int, max_memory_usage: usize, buf: [*c]const u8, length: usize) ?*php_stream;
pub extern fn php_stream_mode_from_str(mode: [*c]const u8) c_int;
pub extern fn _php_stream_mode_to_str(mode: c_int) [*c]const u8;
pub extern const php_stream_memory_ops: php_stream_ops;
pub extern const php_stream_temp_ops: php_stream_ops;
pub extern const php_stream_rfc2397_ops: php_stream_ops;
pub extern const php_stream_rfc2397_wrapper: php_stream_wrapper;
pub const struct__arg_separators = extern struct {
    output: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    input: [*c]u8 = @import("std").mem.zeroes([*c]u8),
};
pub const arg_separators = struct__arg_separators;
pub const struct__php_core_globals = extern struct {
    output_buffering: zend_long = @import("std").mem.zeroes(zend_long),
    implicit_flush: bool = @import("std").mem.zeroes(bool),
    enable_dl: bool = @import("std").mem.zeroes(bool),
    display_errors: u8 = @import("std").mem.zeroes(u8),
    display_startup_errors: bool = @import("std").mem.zeroes(bool),
    log_errors: bool = @import("std").mem.zeroes(bool),
    ignore_repeated_errors: bool = @import("std").mem.zeroes(bool),
    ignore_repeated_source: bool = @import("std").mem.zeroes(bool),
    report_memleaks: bool = @import("std").mem.zeroes(bool),
    output_handler: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    unserialize_callback_func: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    serialize_precision: zend_long = @import("std").mem.zeroes(zend_long),
    memory_limit: zend_long = @import("std").mem.zeroes(zend_long),
    max_input_time: zend_long = @import("std").mem.zeroes(zend_long),
    error_log: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    doc_root: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    user_dir: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    include_path: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    open_basedir: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    open_basedir_modified: bool = @import("std").mem.zeroes(bool),
    extension_dir: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    php_binary: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    sys_temp_dir: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    upload_tmp_dir: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    upload_max_filesize: zend_long = @import("std").mem.zeroes(zend_long),
    error_append_string: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    error_prepend_string: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    auto_prepend_file: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    auto_append_file: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    input_encoding: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    internal_encoding: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    output_encoding: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    arg_separator: arg_separators = @import("std").mem.zeroes(arg_separators),
    variables_order: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    rfc1867_protected_variables: HashTable = @import("std").mem.zeroes(HashTable),
    connection_status: c_short = @import("std").mem.zeroes(c_short),
    ignore_user_abort: bool = @import("std").mem.zeroes(bool),
    header_is_being_sent: u8 = @import("std").mem.zeroes(u8),
    tick_functions: zend_llist = @import("std").mem.zeroes(zend_llist),
    http_globals: [6]zval = @import("std").mem.zeroes([6]zval),
    expose_php: bool = @import("std").mem.zeroes(bool),
    register_argc_argv: bool = @import("std").mem.zeroes(bool),
    auto_globals_jit: bool = @import("std").mem.zeroes(bool),
    html_errors: bool = @import("std").mem.zeroes(bool),
    xmlrpc_errors: bool = @import("std").mem.zeroes(bool),
    docref_root: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    docref_ext: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    xmlrpc_error_number: zend_long = @import("std").mem.zeroes(zend_long),
    activated_auto_globals: [8]bool = @import("std").mem.zeroes([8]bool),
    modules_activated: bool = @import("std").mem.zeroes(bool),
    file_uploads: bool = @import("std").mem.zeroes(bool),
    during_request_startup: bool = @import("std").mem.zeroes(bool),
    allow_url_fopen: bool = @import("std").mem.zeroes(bool),
    enable_post_data_reading: bool = @import("std").mem.zeroes(bool),
    report_zend_debug: bool = @import("std").mem.zeroes(bool),
    last_error_type: c_int = @import("std").mem.zeroes(c_int),
    last_error_lineno: c_int = @import("std").mem.zeroes(c_int),
    last_error_message: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    last_error_file: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
    php_sys_temp_dir: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    disable_classes: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    max_input_nesting_level: zend_long = @import("std").mem.zeroes(zend_long),
    max_input_vars: zend_long = @import("std").mem.zeroes(zend_long),
    user_ini_filename: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    user_ini_cache_ttl: zend_long = @import("std").mem.zeroes(zend_long),
    request_order: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    mail_log: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    mail_x_header: bool = @import("std").mem.zeroes(bool),
    mail_mixed_lf_and_crlf: bool = @import("std").mem.zeroes(bool),
    in_error_log: bool = @import("std").mem.zeroes(bool),
    allow_url_include: bool = @import("std").mem.zeroes(bool),
    in_user_include: bool = @import("std").mem.zeroes(bool),
    have_called_openlog: bool = @import("std").mem.zeroes(bool),
    syslog_facility: zend_long = @import("std").mem.zeroes(zend_long),
    syslog_ident: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    syslog_filter: zend_long = @import("std").mem.zeroes(zend_long),
    error_log_mode: zend_long = @import("std").mem.zeroes(zend_long),
};
pub const php_core_globals = struct__php_core_globals;
pub extern var core_globals: struct__php_core_globals;
pub const struct__php_tick_function_entry = opaque {};
pub const struct__zend_ini_entry_def = extern struct {
    name: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    on_modify: ?*const fn ([*c]zend_ini_entry, [*c]zend_string, ?*anyopaque, ?*anyopaque, ?*anyopaque, c_int) callconv(.c) c_int = @import("std").mem.zeroes(?*const fn ([*c]zend_ini_entry, [*c]zend_string, ?*anyopaque, ?*anyopaque, ?*anyopaque, c_int) callconv(.c) c_int),
    mh_arg1: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    mh_arg2: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    mh_arg3: ?*anyopaque = @import("std").mem.zeroes(?*anyopaque),
    value: [*c]const u8 = @import("std").mem.zeroes([*c]const u8),
    displayer: ?*const fn ([*c]zend_ini_entry, c_int) callconv(.c) void = @import("std").mem.zeroes(?*const fn ([*c]zend_ini_entry, c_int) callconv(.c) void),
    value_length: u32 = @import("std").mem.zeroes(u32),
    name_length: u16 = @import("std").mem.zeroes(u16),
    modifiable: u8 = @import("std").mem.zeroes(u8),
};
pub const zend_ini_entry_def = struct__zend_ini_entry_def;
pub extern fn zend_ini_startup() void;
pub extern fn zend_ini_shutdown() void;
pub extern fn zend_ini_global_shutdown() void;
pub extern fn zend_ini_deactivate() void;
pub extern fn zend_ini_dtor(ini_directives: [*c]HashTable) void;
pub extern fn zend_copy_ini_directives() void;
pub extern fn zend_ini_sort_entries() void;
pub extern fn zend_register_ini_entries(ini_entry: [*c]const zend_ini_entry_def, module_number: c_int) zend_result;
pub extern fn zend_register_ini_entries_ex(ini_entry: [*c]const zend_ini_entry_def, module_number: c_int, module_type: c_int) zend_result;
pub extern fn zend_unregister_ini_entries(module_number: c_int) void;
pub extern fn zend_unregister_ini_entries_ex(module_number: c_int, module_type: c_int) void;
pub extern fn zend_ini_refresh_caches(stage: c_int) void;
pub extern fn zend_alter_ini_entry(name: [*c]zend_string, new_value: [*c]zend_string, modify_type: c_int, stage: c_int) zend_result;
pub extern fn zend_alter_ini_entry_ex(name: [*c]zend_string, new_value: [*c]zend_string, modify_type: c_int, stage: c_int, force_change: bool) zend_result;
pub extern fn zend_alter_ini_entry_chars(name: [*c]zend_string, value: [*c]const u8, value_length: usize, modify_type: c_int, stage: c_int) zend_result;
pub extern fn zend_alter_ini_entry_chars_ex(name: [*c]zend_string, value: [*c]const u8, value_length: usize, modify_type: c_int, stage: c_int, force_change: c_int) zend_result;
pub extern fn zend_restore_ini_entry(name: [*c]zend_string, stage: c_int) zend_result;
pub extern fn display_ini_entries(module: [*c]zend_module_entry) void;
pub extern fn zend_ini_long(name: [*c]const u8, name_length: usize, orig: c_int) zend_long;
pub extern fn zend_ini_double(name: [*c]const u8, name_length: usize, orig: c_int) f64;
pub extern fn zend_ini_string(name: [*c]const u8, name_length: usize, orig: c_int) [*c]u8;
pub extern fn zend_ini_string_ex(name: [*c]const u8, name_length: usize, orig: c_int, exists: [*c]bool) [*c]u8;
pub extern fn zend_ini_str(name: [*c]const u8, name_length: usize, orig: bool) [*c]zend_string;
pub extern fn zend_ini_str_ex(name: [*c]const u8, name_length: usize, orig: bool, exists: [*c]bool) [*c]zend_string;
pub extern fn zend_ini_get_value(name: [*c]zend_string) [*c]zend_string;
pub extern fn zend_ini_parse_bool(str: [*c]zend_string) bool;
pub extern fn zend_ini_parse_quantity(value: [*c]zend_string, errstr: [*c][*c]zend_string) zend_long;
pub extern fn zend_ini_parse_uquantity(value: [*c]zend_string, errstr: [*c][*c]zend_string) zend_ulong;
pub extern fn zend_ini_parse_quantity_warn(value: [*c]zend_string, setting: [*c]zend_string) zend_long;
pub extern fn zend_ini_parse_uquantity_warn(value: [*c]zend_string, setting: [*c]zend_string) zend_ulong;
pub extern fn zend_ini_register_displayer(name: [*c]const u8, name_length: u32, displayer: ?*const fn ([*c]zend_ini_entry, c_int) callconv(.c) void) zend_result;
pub extern fn zend_ini_boolean_displayer_cb(ini_entry: [*c]zend_ini_entry, @"type": c_int) void;
pub extern fn zend_ini_color_displayer_cb(ini_entry: [*c]zend_ini_entry, @"type": c_int) void;
pub extern fn display_link_numbers(ini_entry: [*c]zend_ini_entry, @"type": c_int) void;
pub extern fn OnUpdateBool(entry: [*c]zend_ini_entry, new_value: [*c]zend_string, mh_arg1: ?*anyopaque, mh_arg2: ?*anyopaque, mh_arg3: ?*anyopaque, stage: c_int) c_int;
pub extern fn OnUpdateLong(entry: [*c]zend_ini_entry, new_value: [*c]zend_string, mh_arg1: ?*anyopaque, mh_arg2: ?*anyopaque, mh_arg3: ?*anyopaque, stage: c_int) c_int;
pub extern fn OnUpdateLongGEZero(entry: [*c]zend_ini_entry, new_value: [*c]zend_string, mh_arg1: ?*anyopaque, mh_arg2: ?*anyopaque, mh_arg3: ?*anyopaque, stage: c_int) c_int;
pub extern fn OnUpdateReal(entry: [*c]zend_ini_entry, new_value: [*c]zend_string, mh_arg1: ?*anyopaque, mh_arg2: ?*anyopaque, mh_arg3: ?*anyopaque, stage: c_int) c_int;
pub extern fn OnUpdateString(entry: [*c]zend_ini_entry, new_value: [*c]zend_string, mh_arg1: ?*anyopaque, mh_arg2: ?*anyopaque, mh_arg3: ?*anyopaque, stage: c_int) c_int;
pub extern fn OnUpdateStringUnempty(entry: [*c]zend_ini_entry, new_value: [*c]zend_string, mh_arg1: ?*anyopaque, mh_arg2: ?*anyopaque, mh_arg3: ?*anyopaque, stage: c_int) c_int;
pub extern fn OnUpdateStr(entry: [*c]zend_ini_entry, new_value: [*c]zend_string, mh_arg1: ?*anyopaque, mh_arg2: ?*anyopaque, mh_arg3: ?*anyopaque, stage: c_int) c_int;
pub extern fn OnUpdateStrNotEmpty(entry: [*c]zend_ini_entry, new_value: [*c]zend_string, mh_arg1: ?*anyopaque, mh_arg2: ?*anyopaque, mh_arg3: ?*anyopaque, stage: c_int) c_int;
pub extern fn zend_parse_ini_file(fh: [*c]zend_file_handle, unbuffered_errors: bool, scanner_mode: c_int, ini_parser_cb: zend_ini_parser_cb_t, arg: ?*anyopaque) zend_result;
pub extern fn zend_parse_ini_string(str: [*c]const u8, unbuffered_errors: bool, scanner_mode: c_int, ini_parser_cb: zend_ini_parser_cb_t, arg: ?*anyopaque) zend_result;
pub const zend_ini_parser_param = struct__zend_ini_parser_param;
pub extern fn config_zval_dtor(zvalue: [*c]zval) void;
pub extern fn php_init_config() c_int;
pub extern fn php_shutdown_config() c_int;
pub extern fn php_ini_register_extensions() void;
pub extern fn cfg_get_entry_ex(name: [*c]zend_string) [*c]zval;
pub extern fn cfg_get_entry(name: [*c]const u8, name_length: usize) [*c]zval;
pub extern fn cfg_get_long(varname: [*c]const u8, result: [*c]zend_long) c_int;
pub extern fn cfg_get_double(varname: [*c]const u8, result: [*c]f64) c_int;
pub extern fn cfg_get_string(varname: [*c]const u8, result: [*c][*c]u8) c_int;
pub extern fn php_parse_user_ini_file(dirname: [*c]const u8, ini_filename: [*c]const u8, target_hash: [*c]HashTable) c_int;
pub extern fn php_ini_activate_config(source_hash: [*c]HashTable, modify_type: c_int, stage: c_int) void;
pub extern fn php_ini_has_per_dir_config() c_int;
pub extern fn php_ini_has_per_host_config() c_int;
pub extern fn php_ini_activate_per_dir_config(path: [*c]u8, path_len: usize) void;
pub extern fn php_ini_activate_per_host_config(host: [*c]const u8, host_len: usize) void;
pub extern fn php_ini_get_configuration_hash() [*c]HashTable;
pub extern fn php_fopen_primary_script(file_handle: [*c]zend_file_handle) c_int;
pub extern fn expand_filepath(filepath: [*c]const u8, real_path: [*c]u8) [*c]u8;
pub extern fn expand_filepath_ex(filepath: [*c]const u8, real_path: [*c]u8, relative_to: [*c]const u8, relative_to_len: usize) [*c]u8;
pub extern fn expand_filepath_with_mode(filepath: [*c]const u8, real_path: [*c]u8, relative_to: [*c]const u8, relative_to_len: usize, use_realpath: c_int) [*c]u8;
pub extern fn php_check_open_basedir(path: [*c]const u8) c_int;
pub extern fn php_check_open_basedir_ex(path: [*c]const u8, warn: c_int) c_int;
pub extern fn php_check_specific_open_basedir(basedir: [*c]const u8, path: [*c]const u8) c_int;
pub extern fn php_check_safe_mode_include_dir(path: [*c]const u8) c_int;
pub extern fn php_resolve_path(filename: [*c]const u8, filename_len: usize, path: [*c]const u8) [*c]zend_string;
pub extern fn php_fopen_with_path(filename: [*c]const u8, mode: [*c]const u8, path: [*c]const u8, opened_path: [*c][*c]zend_string) [*c]FILE;
pub extern fn php_strip_url_passwd(path: [*c]u8) [*c]u8;
pub extern fn OnUpdateBaseDir(entry: [*c]zend_ini_entry, new_value: [*c]zend_string, mh_arg1: ?*anyopaque, mh_arg2: ?*anyopaque, mh_arg3: ?*anyopaque, stage: c_int) c_int;
pub const struct_utimbuf = extern struct {
    actime: time_t = @import("std").mem.zeroes(time_t),
    modtime: time_t = @import("std").mem.zeroes(time_t),
};
pub extern fn utime([*c]const u8, [*c]const struct_utimbuf) c_int;
pub const struct_dirent = extern struct {
    d_ino: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    d_seekoff: __uint64_t = @import("std").mem.zeroes(__uint64_t),
    d_reclen: __uint16_t = @import("std").mem.zeroes(__uint16_t),
    d_namlen: __uint16_t = @import("std").mem.zeroes(__uint16_t),
    d_type: __uint8_t = @import("std").mem.zeroes(__uint8_t),
    d_name: [1024]u8 = @import("std").mem.zeroes([1024]u8),
};
pub const struct__telldir = opaque {};
pub const DIR = extern struct {
    __dd_fd: c_int = @import("std").mem.zeroes(c_int),
    __dd_loc: c_long = @import("std").mem.zeroes(c_long),
    __dd_size: c_long = @import("std").mem.zeroes(c_long),
    __dd_buf: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    __dd_len: c_int = @import("std").mem.zeroes(c_int),
    __dd_seek: c_long = @import("std").mem.zeroes(c_long),
    __padding: c_long = @import("std").mem.zeroes(c_long),
    __dd_flags: c_int = @import("std").mem.zeroes(c_int),
    __dd_lock: __darwin_pthread_mutex_t = @import("std").mem.zeroes(__darwin_pthread_mutex_t),
    __dd_td: ?*struct__telldir = @import("std").mem.zeroes(?*struct__telldir),
};
pub extern fn closedir([*c]DIR) c_int;
pub extern fn opendir([*c]const u8) [*c]DIR;
pub extern fn readdir([*c]DIR) [*c]struct_dirent;
pub extern fn readdir_r([*c]DIR, [*c]struct_dirent, [*c][*c]struct_dirent) c_int;
pub extern fn rewinddir([*c]DIR) void;
pub extern fn seekdir([*c]DIR, c_long) void;
pub extern fn telldir([*c]DIR) c_long;
pub extern fn fdopendir(c_int) [*c]DIR;
pub extern fn alphasort([*c][*c]const struct_dirent, [*c][*c]const struct_dirent) c_int;
pub extern fn dirfd(dirp: [*c]DIR) c_int;
pub extern fn scandir([*c]const u8, [*c][*c][*c]struct_dirent, ?*const fn ([*c]const struct_dirent) callconv(.c) c_int, ?*const fn ([*c][*c]const struct_dirent, [*c][*c]const struct_dirent) callconv(.c) c_int) c_int;
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/dirent.h:161:5: warning: unsupported type: 'BlockPointer'
pub const scandir_b = @compileError("unable to resolve prototype of function");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/dirent.h:161:5
pub extern fn getdirentries(c_int, [*c]u8, __nbytes: c_int, [*c]c_long) c_int;
pub extern fn __opendir2([*c]const u8, c_int) [*c]DIR;
pub const struct__cwd_state = extern struct {
    cwd: [*c]u8 = @import("std").mem.zeroes([*c]u8),
    cwd_length: usize = @import("std").mem.zeroes(usize),
};
pub const cwd_state = struct__cwd_state;
pub const verify_path_func = ?*const fn ([*c]const cwd_state) callconv(.c) c_int;
pub extern fn virtual_cwd_startup() void;
pub extern fn virtual_cwd_shutdown() void;
pub extern fn virtual_cwd_activate() void;
pub extern fn virtual_cwd_deactivate() void;
pub extern fn virtual_getcwd_ex(length: [*c]usize) [*c]u8;
pub extern fn virtual_getcwd(buf: [*c]u8, size: usize) [*c]u8;
pub extern fn virtual_chdir(path: [*c]const u8) zend_result;
pub extern fn virtual_chdir_file(path: [*c]const u8, p_chdir: ?*const fn ([*c]const u8) callconv(.c) c_int) c_int;
pub extern fn virtual_filepath(path: [*c]const u8, filepath: [*c][*c]u8) c_int;
pub extern fn virtual_filepath_ex(path: [*c]const u8, filepath: [*c][*c]u8, verify_path: verify_path_func) c_int;
pub extern fn virtual_realpath(path: [*c]const u8, real_path: [*c]u8) [*c]u8;
pub extern fn virtual_fopen(path: [*c]const u8, mode: [*c]const u8) [*c]FILE;
pub extern fn virtual_open(path: [*c]const u8, flags: c_int, ...) c_int;
pub extern fn virtual_creat(path: [*c]const u8, mode: mode_t) c_int;
pub extern fn virtual_rename(oldname: [*c]const u8, newname: [*c]const u8) c_int;
pub extern fn virtual_stat(path: [*c]const u8, buf: [*c]zend_stat_t) c_int;
pub extern fn virtual_lstat(path: [*c]const u8, buf: [*c]zend_stat_t) c_int;
pub extern fn virtual_unlink(path: [*c]const u8) c_int;
pub extern fn virtual_mkdir(pathname: [*c]const u8, mode: mode_t) c_int;
pub extern fn virtual_rmdir(pathname: [*c]const u8) c_int;
pub extern fn virtual_opendir(pathname: [*c]const u8) [*c]DIR;
pub extern fn virtual_popen(command: [*c]const u8, @"type": [*c]const u8) [*c]FILE;
pub extern fn virtual_access(pathname: [*c]const u8, mode: c_int) c_int;
pub extern fn virtual_utime(filename: [*c]const u8, buf: [*c]struct_utimbuf) c_int;
pub extern fn virtual_chmod(filename: [*c]const u8, mode: mode_t) c_int;
pub extern fn virtual_chown(filename: [*c]const u8, owner: uid_t, group: gid_t, link: c_int) c_int;
pub extern fn virtual_file_ex(state: [*c]cwd_state, path: [*c]const u8, verify_path: verify_path_func, use_realpath: c_int) c_int;
pub extern fn tsrm_realpath(path: [*c]const u8, real_path: [*c]u8) [*c]u8;
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_virtual_cwd.h:229:33: warning: struct demoted to opaque type - has bitfield
pub const struct__realpath_cache_bucket = opaque {};
pub const realpath_cache_bucket = struct__realpath_cache_bucket;
pub const struct__virtual_cwd_globals = extern struct {
    cwd: cwd_state = @import("std").mem.zeroes(cwd_state),
    realpath_cache_size: zend_long = @import("std").mem.zeroes(zend_long),
    realpath_cache_size_limit: zend_long = @import("std").mem.zeroes(zend_long),
    realpath_cache_ttl: zend_long = @import("std").mem.zeroes(zend_long),
    realpath_cache: [1024]?*realpath_cache_bucket = @import("std").mem.zeroes([1024]?*realpath_cache_bucket),
};
pub const virtual_cwd_globals = struct__virtual_cwd_globals;
pub extern var cwd_globals: virtual_cwd_globals;
pub extern fn realpath_cache_clean() void;
pub extern fn realpath_cache_del(path: [*c]const u8, path_len: usize) void;
pub extern fn realpath_cache_lookup(path: [*c]const u8, path_len: usize, t: time_t) ?*realpath_cache_bucket;
pub extern fn realpath_cache_size() zend_long;
pub extern fn realpath_cache_max_buckets() zend_long;
pub extern fn realpath_cache_get_buckets() [*c]?*realpath_cache_bucket;
pub const struct__zend_constant = extern struct {
    value: zval = @import("std").mem.zeroes(zval),
    name: [*c]zend_string = @import("std").mem.zeroes([*c]zend_string),
};
pub const zend_constant = struct__zend_constant;
pub extern fn clean_module_constants(module_number: c_int) void;
pub extern fn free_zend_constant(zv: [*c]zval) void;
pub extern fn zend_startup_constants() void;
pub extern fn zend_register_standard_constants() void;
pub extern fn zend_verify_const_access(c: [*c]zend_class_constant, ce: [*c]zend_class_entry) bool;
pub extern fn zend_get_constant(name: [*c]zend_string) [*c]zval;
pub extern fn zend_get_constant_ptr(name: [*c]zend_string) [*c]zend_constant;
pub extern fn zend_get_constant_str(name: [*c]const u8, name_len: usize) [*c]zval;
pub extern fn zend_get_constant_ex(name: [*c]zend_string, scope: [*c]zend_class_entry, flags: u32) [*c]zval;
pub extern fn zend_get_class_constant_ex(class_name: [*c]zend_string, constant_name: [*c]zend_string, scope: [*c]zend_class_entry, flags: u32) [*c]zval;
pub extern fn zend_register_bool_constant(name: [*c]const u8, name_len: usize, bval: bool, flags: c_int, module_number: c_int) void;
pub extern fn zend_register_null_constant(name: [*c]const u8, name_len: usize, flags: c_int, module_number: c_int) void;
pub extern fn zend_register_long_constant(name: [*c]const u8, name_len: usize, lval: zend_long, flags: c_int, module_number: c_int) void;
pub extern fn zend_register_double_constant(name: [*c]const u8, name_len: usize, dval: f64, flags: c_int, module_number: c_int) void;
pub extern fn zend_register_string_constant(name: [*c]const u8, name_len: usize, strval: [*c]const u8, flags: c_int, module_number: c_int) void;
pub extern fn zend_register_stringl_constant(name: [*c]const u8, name_len: usize, strval: [*c]const u8, strlen: usize, flags: c_int, module_number: c_int) void;
pub extern fn zend_register_constant(c: [*c]zend_constant) zend_result;
pub extern fn _zend_get_special_const(name: [*c]const u8, name_len: usize) [*c]zend_constant;
pub inline fn zend_get_special_const(arg_name: [*c]const u8, arg_name_len: usize) [*c]zend_constant {
    var name = arg_name;
    _ = &name;
    var name_len = arg_name_len;
    _ = &name_len;
    if ((name_len == @as(usize, @bitCast(@as(c_long, @as(c_int, 4))))) or (name_len == @as(usize, @bitCast(@as(c_long, @as(c_int, 5)))))) {
        return _zend_get_special_const(name, name_len);
    }
    return null;
}
pub const zend_bool = bool;
pub const zend_intptr_t = isize;
pub const zend_uintptr_t = usize;
pub const __llvm__ = @as(c_int, 1);
pub const __clang__ = @as(c_int, 1);
pub const __clang_major__ = @as(c_int, 19);
pub const __clang_minor__ = @as(c_int, 1);
pub const __clang_patchlevel__ = @as(c_int, 7);
pub const __clang_version__ = "19.1.7 ";
pub const __GNUC__ = @as(c_int, 4);
pub const __GNUC_MINOR__ = @as(c_int, 2);
pub const __GNUC_PATCHLEVEL__ = @as(c_int, 1);
pub const __GXX_ABI_VERSION = @as(c_int, 1002);
pub const __ATOMIC_RELAXED = @as(c_int, 0);
pub const __ATOMIC_CONSUME = @as(c_int, 1);
pub const __ATOMIC_ACQUIRE = @as(c_int, 2);
pub const __ATOMIC_RELEASE = @as(c_int, 3);
pub const __ATOMIC_ACQ_REL = @as(c_int, 4);
pub const __ATOMIC_SEQ_CST = @as(c_int, 5);
pub const __MEMORY_SCOPE_SYSTEM = @as(c_int, 0);
pub const __MEMORY_SCOPE_DEVICE = @as(c_int, 1);
pub const __MEMORY_SCOPE_WRKGRP = @as(c_int, 2);
pub const __MEMORY_SCOPE_WVFRNT = @as(c_int, 3);
pub const __MEMORY_SCOPE_SINGLE = @as(c_int, 4);
pub const __OPENCL_MEMORY_SCOPE_WORK_ITEM = @as(c_int, 0);
pub const __OPENCL_MEMORY_SCOPE_WORK_GROUP = @as(c_int, 1);
pub const __OPENCL_MEMORY_SCOPE_DEVICE = @as(c_int, 2);
pub const __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES = @as(c_int, 3);
pub const __OPENCL_MEMORY_SCOPE_SUB_GROUP = @as(c_int, 4);
pub const __FPCLASS_SNAN = @as(c_int, 0x0001);
pub const __FPCLASS_QNAN = @as(c_int, 0x0002);
pub const __FPCLASS_NEGINF = @as(c_int, 0x0004);
pub const __FPCLASS_NEGNORMAL = @as(c_int, 0x0008);
pub const __FPCLASS_NEGSUBNORMAL = @as(c_int, 0x0010);
pub const __FPCLASS_NEGZERO = @as(c_int, 0x0020);
pub const __FPCLASS_POSZERO = @as(c_int, 0x0040);
pub const __FPCLASS_POSSUBNORMAL = @as(c_int, 0x0080);
pub const __FPCLASS_POSNORMAL = @as(c_int, 0x0100);
pub const __FPCLASS_POSINF = @as(c_int, 0x0200);
pub const __PRAGMA_REDEFINE_EXTNAME = @as(c_int, 1);
pub const __VERSION__ = "Homebrew Clang 19.1.7";
pub const __OBJC_BOOL_IS_BOOL = @as(c_int, 1);
pub const __CONSTANT_CFSTRINGS__ = @as(c_int, 1);
pub const __block = @compileError("unable to translate macro: undefined identifier `__blocks__`");
// (no file):42:9
pub const __BLOCKS__ = @as(c_int, 1);
pub const __clang_literal_encoding__ = "UTF-8";
pub const __clang_wide_literal_encoding__ = "UTF-32";
pub const __ORDER_LITTLE_ENDIAN__ = @as(c_int, 1234);
pub const __ORDER_BIG_ENDIAN__ = @as(c_int, 4321);
pub const __ORDER_PDP_ENDIAN__ = @as(c_int, 3412);
pub const __BYTE_ORDER__ = __ORDER_LITTLE_ENDIAN__;
pub const __LITTLE_ENDIAN__ = @as(c_int, 1);
pub const _LP64 = @as(c_int, 1);
pub const __LP64__ = @as(c_int, 1);
pub const __CHAR_BIT__ = @as(c_int, 8);
pub const __BOOL_WIDTH__ = @as(c_int, 8);
pub const __SHRT_WIDTH__ = @as(c_int, 16);
pub const __INT_WIDTH__ = @as(c_int, 32);
pub const __LONG_WIDTH__ = @as(c_int, 64);
pub const __LLONG_WIDTH__ = @as(c_int, 64);
pub const __BITINT_MAXWIDTH__ = @as(c_int, 128);
pub const __SCHAR_MAX__ = @as(c_int, 127);
pub const __SHRT_MAX__ = @as(c_int, 32767);
pub const __INT_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __LONG_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __LONG_LONG_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __WCHAR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __WCHAR_WIDTH__ = @as(c_int, 32);
pub const __WINT_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __WINT_WIDTH__ = @as(c_int, 32);
pub const __INTMAX_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INTMAX_WIDTH__ = @as(c_int, 64);
pub const __SIZE_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __SIZE_WIDTH__ = @as(c_int, 64);
pub const __UINTMAX_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINTMAX_WIDTH__ = @as(c_int, 64);
pub const __PTRDIFF_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __PTRDIFF_WIDTH__ = @as(c_int, 64);
pub const __INTPTR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const __INTPTR_WIDTH__ = @as(c_int, 64);
pub const __UINTPTR_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const __UINTPTR_WIDTH__ = @as(c_int, 64);
pub const __SIZEOF_DOUBLE__ = @as(c_int, 8);
pub const __SIZEOF_FLOAT__ = @as(c_int, 4);
pub const __SIZEOF_INT__ = @as(c_int, 4);
pub const __SIZEOF_LONG__ = @as(c_int, 8);
pub const __SIZEOF_LONG_DOUBLE__ = @as(c_int, 8);
pub const __SIZEOF_LONG_LONG__ = @as(c_int, 8);
pub const __SIZEOF_POINTER__ = @as(c_int, 8);
pub const __SIZEOF_SHORT__ = @as(c_int, 2);
pub const __SIZEOF_PTRDIFF_T__ = @as(c_int, 8);
pub const __SIZEOF_SIZE_T__ = @as(c_int, 8);
pub const __SIZEOF_WCHAR_T__ = @as(c_int, 4);
pub const __SIZEOF_WINT_T__ = @as(c_int, 4);
pub const __SIZEOF_INT128__ = @as(c_int, 16);
pub const __INTMAX_TYPE__ = c_long;
pub const __INTMAX_FMTd__ = "ld";
pub const __INTMAX_FMTi__ = "li";
pub const __INTMAX_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `L`");
// (no file):97:9
pub const __UINTMAX_TYPE__ = c_ulong;
pub const __UINTMAX_FMTo__ = "lo";
pub const __UINTMAX_FMTu__ = "lu";
pub const __UINTMAX_FMTx__ = "lx";
pub const __UINTMAX_FMTX__ = "lX";
pub const __UINTMAX_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `UL`");
// (no file):103:9
pub const __PTRDIFF_TYPE__ = c_long;
pub const __PTRDIFF_FMTd__ = "ld";
pub const __PTRDIFF_FMTi__ = "li";
pub const __INTPTR_TYPE__ = c_long;
pub const __INTPTR_FMTd__ = "ld";
pub const __INTPTR_FMTi__ = "li";
pub const __SIZE_TYPE__ = c_ulong;
pub const __SIZE_FMTo__ = "lo";
pub const __SIZE_FMTu__ = "lu";
pub const __SIZE_FMTx__ = "lx";
pub const __SIZE_FMTX__ = "lX";
pub const __WCHAR_TYPE__ = c_int;
pub const __WINT_TYPE__ = c_int;
pub const __SIG_ATOMIC_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __SIG_ATOMIC_WIDTH__ = @as(c_int, 32);
pub const __CHAR16_TYPE__ = c_ushort;
pub const __CHAR32_TYPE__ = c_uint;
pub const __UINTPTR_TYPE__ = c_ulong;
pub const __UINTPTR_FMTo__ = "lo";
pub const __UINTPTR_FMTu__ = "lu";
pub const __UINTPTR_FMTx__ = "lx";
pub const __UINTPTR_FMTX__ = "lX";
pub const __FLT16_DENORM_MIN__ = @as(f16, 5.9604644775390625e-8);
pub const __FLT16_NORM_MAX__ = @as(f16, 6.5504e+4);
pub const __FLT16_HAS_DENORM__ = @as(c_int, 1);
pub const __FLT16_DIG__ = @as(c_int, 3);
pub const __FLT16_DECIMAL_DIG__ = @as(c_int, 5);
pub const __FLT16_EPSILON__ = @as(f16, 9.765625e-4);
pub const __FLT16_HAS_INFINITY__ = @as(c_int, 1);
pub const __FLT16_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __FLT16_MANT_DIG__ = @as(c_int, 11);
pub const __FLT16_MAX_10_EXP__ = @as(c_int, 4);
pub const __FLT16_MAX_EXP__ = @as(c_int, 16);
pub const __FLT16_MAX__ = @as(f16, 6.5504e+4);
pub const __FLT16_MIN_10_EXP__ = -@as(c_int, 4);
pub const __FLT16_MIN_EXP__ = -@as(c_int, 13);
pub const __FLT16_MIN__ = @as(f16, 6.103515625e-5);
pub const __FLT_DENORM_MIN__ = @as(f32, 1.40129846e-45);
pub const __FLT_NORM_MAX__ = @as(f32, 3.40282347e+38);
pub const __FLT_HAS_DENORM__ = @as(c_int, 1);
pub const __FLT_DIG__ = @as(c_int, 6);
pub const __FLT_DECIMAL_DIG__ = @as(c_int, 9);
pub const __FLT_EPSILON__ = @as(f32, 1.19209290e-7);
pub const __FLT_HAS_INFINITY__ = @as(c_int, 1);
pub const __FLT_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __FLT_MANT_DIG__ = @as(c_int, 24);
pub const __FLT_MAX_10_EXP__ = @as(c_int, 38);
pub const __FLT_MAX_EXP__ = @as(c_int, 128);
pub const __FLT_MAX__ = @as(f32, 3.40282347e+38);
pub const __FLT_MIN_10_EXP__ = -@as(c_int, 37);
pub const __FLT_MIN_EXP__ = -@as(c_int, 125);
pub const __FLT_MIN__ = @as(f32, 1.17549435e-38);
pub const __DBL_DENORM_MIN__ = @as(f64, 4.9406564584124654e-324);
pub const __DBL_NORM_MAX__ = @as(f64, 1.7976931348623157e+308);
pub const __DBL_HAS_DENORM__ = @as(c_int, 1);
pub const __DBL_DIG__ = @as(c_int, 15);
pub const __DBL_DECIMAL_DIG__ = @as(c_int, 17);
pub const __DBL_EPSILON__ = @as(f64, 2.2204460492503131e-16);
pub const __DBL_HAS_INFINITY__ = @as(c_int, 1);
pub const __DBL_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __DBL_MANT_DIG__ = @as(c_int, 53);
pub const __DBL_MAX_10_EXP__ = @as(c_int, 308);
pub const __DBL_MAX_EXP__ = @as(c_int, 1024);
pub const __DBL_MAX__ = @as(f64, 1.7976931348623157e+308);
pub const __DBL_MIN_10_EXP__ = -@as(c_int, 307);
pub const __DBL_MIN_EXP__ = -@as(c_int, 1021);
pub const __DBL_MIN__ = @as(f64, 2.2250738585072014e-308);
pub const __LDBL_DENORM_MIN__ = @as(c_longdouble, 4.9406564584124654e-324);
pub const __LDBL_NORM_MAX__ = @as(c_longdouble, 1.7976931348623157e+308);
pub const __LDBL_HAS_DENORM__ = @as(c_int, 1);
pub const __LDBL_DIG__ = @as(c_int, 15);
pub const __LDBL_DECIMAL_DIG__ = @as(c_int, 17);
pub const __LDBL_EPSILON__ = @as(c_longdouble, 2.2204460492503131e-16);
pub const __LDBL_HAS_INFINITY__ = @as(c_int, 1);
pub const __LDBL_HAS_QUIET_NAN__ = @as(c_int, 1);
pub const __LDBL_MANT_DIG__ = @as(c_int, 53);
pub const __LDBL_MAX_10_EXP__ = @as(c_int, 308);
pub const __LDBL_MAX_EXP__ = @as(c_int, 1024);
pub const __LDBL_MAX__ = @as(c_longdouble, 1.7976931348623157e+308);
pub const __LDBL_MIN_10_EXP__ = -@as(c_int, 307);
pub const __LDBL_MIN_EXP__ = -@as(c_int, 1021);
pub const __LDBL_MIN__ = @as(c_longdouble, 2.2250738585072014e-308);
pub const __POINTER_WIDTH__ = @as(c_int, 64);
pub const __BIGGEST_ALIGNMENT__ = @as(c_int, 8);
pub const __INT8_TYPE__ = i8;
pub const __INT8_FMTd__ = "hhd";
pub const __INT8_FMTi__ = "hhi";
pub const __INT8_C_SUFFIX__ = "";
pub const __INT16_TYPE__ = c_short;
pub const __INT16_FMTd__ = "hd";
pub const __INT16_FMTi__ = "hi";
pub const __INT16_C_SUFFIX__ = "";
pub const __INT32_TYPE__ = c_int;
pub const __INT32_FMTd__ = "d";
pub const __INT32_FMTi__ = "i";
pub const __INT32_C_SUFFIX__ = "";
pub const __INT64_TYPE__ = c_longlong;
pub const __INT64_FMTd__ = "lld";
pub const __INT64_FMTi__ = "lli";
pub const __INT64_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `LL`");
// (no file):203:9
pub const __UINT8_TYPE__ = u8;
pub const __UINT8_FMTo__ = "hho";
pub const __UINT8_FMTu__ = "hhu";
pub const __UINT8_FMTx__ = "hhx";
pub const __UINT8_FMTX__ = "hhX";
pub const __UINT8_C_SUFFIX__ = "";
pub const __UINT8_MAX__ = @as(c_int, 255);
pub const __INT8_MAX__ = @as(c_int, 127);
pub const __UINT16_TYPE__ = c_ushort;
pub const __UINT16_FMTo__ = "ho";
pub const __UINT16_FMTu__ = "hu";
pub const __UINT16_FMTx__ = "hx";
pub const __UINT16_FMTX__ = "hX";
pub const __UINT16_C_SUFFIX__ = "";
pub const __UINT16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __INT16_MAX__ = @as(c_int, 32767);
pub const __UINT32_TYPE__ = c_uint;
pub const __UINT32_FMTo__ = "o";
pub const __UINT32_FMTu__ = "u";
pub const __UINT32_FMTx__ = "x";
pub const __UINT32_FMTX__ = "X";
pub const __UINT32_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `U`");
// (no file):225:9
pub const __UINT32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __INT32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __UINT64_TYPE__ = c_ulonglong;
pub const __UINT64_FMTo__ = "llo";
pub const __UINT64_FMTu__ = "llu";
pub const __UINT64_FMTx__ = "llx";
pub const __UINT64_FMTX__ = "llX";
pub const __UINT64_C_SUFFIX__ = @compileError("unable to translate macro: undefined identifier `ULL`");
// (no file):233:9
pub const __UINT64_MAX__ = @as(c_ulonglong, 18446744073709551615);
pub const __INT64_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __INT_LEAST8_TYPE__ = i8;
pub const __INT_LEAST8_MAX__ = @as(c_int, 127);
pub const __INT_LEAST8_WIDTH__ = @as(c_int, 8);
pub const __INT_LEAST8_FMTd__ = "hhd";
pub const __INT_LEAST8_FMTi__ = "hhi";
pub const __UINT_LEAST8_TYPE__ = u8;
pub const __UINT_LEAST8_MAX__ = @as(c_int, 255);
pub const __UINT_LEAST8_FMTo__ = "hho";
pub const __UINT_LEAST8_FMTu__ = "hhu";
pub const __UINT_LEAST8_FMTx__ = "hhx";
pub const __UINT_LEAST8_FMTX__ = "hhX";
pub const __INT_LEAST16_TYPE__ = c_short;
pub const __INT_LEAST16_MAX__ = @as(c_int, 32767);
pub const __INT_LEAST16_WIDTH__ = @as(c_int, 16);
pub const __INT_LEAST16_FMTd__ = "hd";
pub const __INT_LEAST16_FMTi__ = "hi";
pub const __UINT_LEAST16_TYPE__ = c_ushort;
pub const __UINT_LEAST16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __UINT_LEAST16_FMTo__ = "ho";
pub const __UINT_LEAST16_FMTu__ = "hu";
pub const __UINT_LEAST16_FMTx__ = "hx";
pub const __UINT_LEAST16_FMTX__ = "hX";
pub const __INT_LEAST32_TYPE__ = c_int;
pub const __INT_LEAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __INT_LEAST32_WIDTH__ = @as(c_int, 32);
pub const __INT_LEAST32_FMTd__ = "d";
pub const __INT_LEAST32_FMTi__ = "i";
pub const __UINT_LEAST32_TYPE__ = c_uint;
pub const __UINT_LEAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __UINT_LEAST32_FMTo__ = "o";
pub const __UINT_LEAST32_FMTu__ = "u";
pub const __UINT_LEAST32_FMTx__ = "x";
pub const __UINT_LEAST32_FMTX__ = "X";
pub const __INT_LEAST64_TYPE__ = c_longlong;
pub const __INT_LEAST64_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __INT_LEAST64_WIDTH__ = @as(c_int, 64);
pub const __INT_LEAST64_FMTd__ = "lld";
pub const __INT_LEAST64_FMTi__ = "lli";
pub const __UINT_LEAST64_TYPE__ = c_ulonglong;
pub const __UINT_LEAST64_MAX__ = @as(c_ulonglong, 18446744073709551615);
pub const __UINT_LEAST64_FMTo__ = "llo";
pub const __UINT_LEAST64_FMTu__ = "llu";
pub const __UINT_LEAST64_FMTx__ = "llx";
pub const __UINT_LEAST64_FMTX__ = "llX";
pub const __INT_FAST8_TYPE__ = i8;
pub const __INT_FAST8_MAX__ = @as(c_int, 127);
pub const __INT_FAST8_WIDTH__ = @as(c_int, 8);
pub const __INT_FAST8_FMTd__ = "hhd";
pub const __INT_FAST8_FMTi__ = "hhi";
pub const __UINT_FAST8_TYPE__ = u8;
pub const __UINT_FAST8_MAX__ = @as(c_int, 255);
pub const __UINT_FAST8_FMTo__ = "hho";
pub const __UINT_FAST8_FMTu__ = "hhu";
pub const __UINT_FAST8_FMTx__ = "hhx";
pub const __UINT_FAST8_FMTX__ = "hhX";
pub const __INT_FAST16_TYPE__ = c_short;
pub const __INT_FAST16_MAX__ = @as(c_int, 32767);
pub const __INT_FAST16_WIDTH__ = @as(c_int, 16);
pub const __INT_FAST16_FMTd__ = "hd";
pub const __INT_FAST16_FMTi__ = "hi";
pub const __UINT_FAST16_TYPE__ = c_ushort;
pub const __UINT_FAST16_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const __UINT_FAST16_FMTo__ = "ho";
pub const __UINT_FAST16_FMTu__ = "hu";
pub const __UINT_FAST16_FMTx__ = "hx";
pub const __UINT_FAST16_FMTX__ = "hX";
pub const __INT_FAST32_TYPE__ = c_int;
pub const __INT_FAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const __INT_FAST32_WIDTH__ = @as(c_int, 32);
pub const __INT_FAST32_FMTd__ = "d";
pub const __INT_FAST32_FMTi__ = "i";
pub const __UINT_FAST32_TYPE__ = c_uint;
pub const __UINT_FAST32_MAX__ = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const __UINT_FAST32_FMTo__ = "o";
pub const __UINT_FAST32_FMTu__ = "u";
pub const __UINT_FAST32_FMTx__ = "x";
pub const __UINT_FAST32_FMTX__ = "X";
pub const __INT_FAST64_TYPE__ = c_longlong;
pub const __INT_FAST64_MAX__ = @as(c_longlong, 9223372036854775807);
pub const __INT_FAST64_WIDTH__ = @as(c_int, 64);
pub const __INT_FAST64_FMTd__ = "lld";
pub const __INT_FAST64_FMTi__ = "lli";
pub const __UINT_FAST64_TYPE__ = c_ulonglong;
pub const __UINT_FAST64_MAX__ = @as(c_ulonglong, 18446744073709551615);
pub const __UINT_FAST64_FMTo__ = "llo";
pub const __UINT_FAST64_FMTu__ = "llu";
pub const __UINT_FAST64_FMTx__ = "llx";
pub const __UINT_FAST64_FMTX__ = "llX";
pub const __USER_LABEL_PREFIX__ = @compileError("unable to translate macro: undefined identifier `_`");
// (no file):324:9
pub const __NO_MATH_ERRNO__ = @as(c_int, 1);
pub const __FINITE_MATH_ONLY__ = @as(c_int, 0);
pub const __GNUC_STDC_INLINE__ = @as(c_int, 1);
pub const __GCC_ATOMIC_TEST_AND_SET_TRUEVAL = @as(c_int, 1);
pub const __GCC_DESTRUCTIVE_SIZE = @as(c_int, 64);
pub const __GCC_CONSTRUCTIVE_SIZE = @as(c_int, 64);
pub const __CLANG_ATOMIC_BOOL_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR16_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_CHAR32_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_WCHAR_T_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_SHORT_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_INT_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_LONG_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_LLONG_LOCK_FREE = @as(c_int, 2);
pub const __CLANG_ATOMIC_POINTER_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_BOOL_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR16_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_CHAR32_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_WCHAR_T_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_SHORT_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_INT_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_LONG_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_LLONG_LOCK_FREE = @as(c_int, 2);
pub const __GCC_ATOMIC_POINTER_LOCK_FREE = @as(c_int, 2);
pub const __NO_INLINE__ = @as(c_int, 1);
pub const __PIC__ = @as(c_int, 2);
pub const __pic__ = @as(c_int, 2);
pub const __FLT_RADIX__ = @as(c_int, 2);
pub const __DECIMAL_DIG__ = __LDBL_DECIMAL_DIG__;
pub const __SSP_STRONG__ = @as(c_int, 2);
pub const __nonnull = @compileError("unable to translate macro: undefined identifier `_Nonnull`");
// (no file):359:9
pub const __null_unspecified = @compileError("unable to translate macro: undefined identifier `_Null_unspecified`");
// (no file):360:9
pub const __nullable = @compileError("unable to translate macro: undefined identifier `_Nullable`");
// (no file):361:9
pub const TARGET_OS_WIN32 = @as(c_int, 0);
pub const TARGET_OS_WINDOWS = @as(c_int, 0);
pub const TARGET_OS_LINUX = @as(c_int, 0);
pub const TARGET_OS_UNIX = @as(c_int, 0);
pub const TARGET_OS_MAC = @as(c_int, 1);
pub const TARGET_OS_OSX = @as(c_int, 1);
pub const TARGET_OS_IPHONE = @as(c_int, 0);
pub const TARGET_OS_IOS = @as(c_int, 0);
pub const TARGET_OS_TV = @as(c_int, 0);
pub const TARGET_OS_WATCH = @as(c_int, 0);
pub const TARGET_OS_VISION = @as(c_int, 0);
pub const TARGET_OS_DRIVERKIT = @as(c_int, 0);
pub const TARGET_OS_MACCATALYST = @as(c_int, 0);
pub const TARGET_OS_SIMULATOR = @as(c_int, 0);
pub const TARGET_OS_EMBEDDED = @as(c_int, 0);
pub const TARGET_OS_NANO = @as(c_int, 0);
pub const TARGET_IPHONE_SIMULATOR = @as(c_int, 0);
pub const TARGET_OS_UIKITFORMAC = @as(c_int, 0);
pub const __AARCH64EL__ = @as(c_int, 1);
pub const __aarch64__ = @as(c_int, 1);
pub const __GCC_ASM_FLAG_OUTPUTS__ = @as(c_int, 1);
pub const __AARCH64_CMODEL_SMALL__ = @as(c_int, 1);
pub const __ARM_ACLE = @as(c_int, 200);
pub const __ARM_ARCH = @as(c_int, 8);
pub const __ARM_ARCH_PROFILE = 'A';
pub const __ARM_64BIT_STATE = @as(c_int, 1);
pub const __ARM_PCS_AAPCS64 = @as(c_int, 1);
pub const __ARM_ARCH_ISA_A64 = @as(c_int, 1);
pub const __ARM_FEATURE_CLZ = @as(c_int, 1);
pub const __ARM_FEATURE_FMA = @as(c_int, 1);
pub const __ARM_FEATURE_LDREX = @as(c_int, 0xF);
pub const __ARM_FEATURE_IDIV = @as(c_int, 1);
pub const __ARM_FEATURE_DIV = @as(c_int, 1);
pub const __ARM_FEATURE_NUMERIC_MAXMIN = @as(c_int, 1);
pub const __ARM_FEATURE_DIRECTED_ROUNDING = @as(c_int, 1);
pub const __ARM_ALIGN_MAX_STACK_PWR = @as(c_int, 4);
pub const __ARM_STATE_ZA = @as(c_int, 1);
pub const __ARM_STATE_ZT0 = @as(c_int, 1);
pub const __ARM_FP = @as(c_int, 0xE);
pub const __ARM_FP16_FORMAT_IEEE = @as(c_int, 1);
pub const __ARM_FP16_ARGS = @as(c_int, 1);
pub const __ARM_SIZEOF_WCHAR_T = @as(c_int, 4);
pub const __ARM_SIZEOF_MINIMAL_ENUM = @as(c_int, 4);
pub const __ARM_NEON = @as(c_int, 1);
pub const __ARM_NEON_FP = @as(c_int, 0xE);
pub const __ARM_FEATURE_SME = @as(c_int, 1);
pub const __ARM_FEATURE_LOCALLY_STREAMING = @as(c_int, 1);
pub const __ARM_FEATURE_SME2 = @as(c_int, 1);
pub const __ARM_FEATURE_CRC32 = @as(c_int, 1);
pub const __ARM_FEATURE_RCPC = @as(c_int, 1);
pub const __ARM_FEATURE_CRYPTO = @as(c_int, 1);
pub const __ARM_FEATURE_AES = @as(c_int, 1);
pub const __ARM_FEATURE_SHA2 = @as(c_int, 1);
pub const __ARM_FEATURE_SHA3 = @as(c_int, 1);
pub const __ARM_FEATURE_SHA512 = @as(c_int, 1);
pub const __ARM_FEATURE_PAUTH = @as(c_int, 1);
pub const __ARM_FEATURE_BTI = @as(c_int, 1);
pub const __ARM_FEATURE_UNALIGNED = @as(c_int, 1);
pub const __ARM_FEATURE_FP16_VECTOR_ARITHMETIC = @as(c_int, 1);
pub const __ARM_FEATURE_FP16_SCALAR_ARITHMETIC = @as(c_int, 1);
pub const __ARM_FEATURE_DOTPROD = @as(c_int, 1);
pub const __ARM_FEATURE_MATMUL_INT8 = @as(c_int, 1);
pub const __ARM_FEATURE_ATOMICS = @as(c_int, 1);
pub const __ARM_FEATURE_BF16 = @as(c_int, 1);
pub const __ARM_FEATURE_BF16_VECTOR_ARITHMETIC = @as(c_int, 1);
pub const __ARM_BF16_FORMAT_ALTERNATIVE = @as(c_int, 1);
pub const __ARM_FEATURE_BF16_SCALAR_ARITHMETIC = @as(c_int, 1);
pub const __ARM_FEATURE_FP16_FML = @as(c_int, 1);
pub const __ARM_FEATURE_FRINT = @as(c_int, 1);
pub const __ARM_FEATURE_COMPLEX = @as(c_int, 1);
pub const __ARM_FEATURE_JCVT = @as(c_int, 1);
pub const __ARM_FEATURE_QRDMX = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 = @as(c_int, 1);
pub const __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 = @as(c_int, 1);
pub const __FP_FAST_FMA = @as(c_int, 1);
pub const __FP_FAST_FMAF = @as(c_int, 1);
pub const __AARCH64_SIMD__ = @as(c_int, 1);
pub const __ARM64_ARCH_8__ = @as(c_int, 1);
pub const __ARM_NEON__ = @as(c_int, 1);
pub const __REGISTER_PREFIX__ = "";
pub const __arm64 = @as(c_int, 1);
pub const __arm64__ = @as(c_int, 1);
pub const __APPLE_CC__ = @as(c_int, 6000);
pub const __APPLE__ = @as(c_int, 1);
pub const __STDC_NO_THREADS__ = @as(c_int, 1);
pub const __weak = @compileError("unable to translate macro: undefined identifier `objc_gc`");
// (no file):450:9
pub const __strong = "";
pub const __unsafe_unretained = "";
pub const __DYNAMIC__ = @as(c_int, 1);
pub const __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150600, .decimal);
pub const __ENVIRONMENT_OS_VERSION_MIN_REQUIRED__ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150600, .decimal);
pub const __MACH__ = @as(c_int, 1);
pub const __STDC__ = @as(c_int, 1);
pub const __STDC_HOSTED__ = @as(c_int, 1);
pub const __STDC_VERSION__ = @as(c_long, 201710);
pub const __STDC_UTF_16__ = @as(c_int, 1);
pub const __STDC_UTF_32__ = @as(c_int, 1);
pub const __STDC_EMBED_NOT_FOUND__ = @as(c_int, 0);
pub const __STDC_EMBED_FOUND__ = @as(c_int, 1);
pub const __STDC_EMBED_EMPTY__ = @as(c_int, 2);
pub const _DEBUG = @as(c_int, 1);
pub const __GCC_HAVE_DWARF2_CFI_ASM = @as(c_int, 1);
pub const PHP_H = "";
pub const PHP_API_VERSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 20240924, .decimal);
pub const PHP_HAVE_STREAMS = "";
pub const YYDEBUG = @as(c_int, 0);
pub const PHP_DEFAULT_CHARSET = "UTF-8";
pub const PHP_MAJOR_VERSION = @as(c_int, 8);
pub const PHP_MINOR_VERSION = @as(c_int, 4);
pub const PHP_RELEASE_VERSION = @as(c_int, 10);
pub const PHP_EXTRA_VERSION = "";
pub const PHP_VERSION = "8.4.10";
pub const PHP_VERSION_ID = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80410, .decimal);
pub const ZEND_H = "";
pub const ZEND_VERSION = "4.4.10";
pub const ZEND_ENGINE_3 = "";
pub const ZEND_TYPES_H = "";
pub const ZEND_PORTABILITY_H = "";
pub const BEGIN_EXTERN_C = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:28:9
pub const END_EXTERN_C = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:29:9
pub const PHP_CONFIG_H = "";
pub const ZEND_API = @compileError("unable to translate macro: undefined identifier `visibility`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/../main/php_config.h:9:10
pub const ZEND_DLEXPORT = @compileError("unable to translate macro: undefined identifier `visibility`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/../main/php_config.h:10:10
pub const ZEND_DLIMPORT = "";
pub const COMPILE_DL_OPCACHE = @as(c_int, 1);
pub const DBA_CDB = @as(c_int, 1);
pub const DBA_CDB_BUILTIN = @as(c_int, 1);
pub const DBA_FLATFILE = @as(c_int, 1);
pub const DBA_INIFILE = @as(c_int, 1);
pub const DBA_NDBM = @as(c_int, 1);
pub const DEFAULT_SHORT_OPEN_TAG = "1";
pub const HAVE_3ARG_SETREBINDPROC = @as(c_int, 1);
pub const HAVE_ALIGNOF = @as(c_int, 1);
pub const HAVE_ALLOCA = @as(c_int, 1);
pub const HAVE_ALLOCA_H = @as(c_int, 1);
pub const HAVE_ALPHASORT = @as(c_int, 1);
pub const HAVE_ARC4RANDOM_BUF = @as(c_int, 1);
pub const HAVE_ARGON2LIB = @as(c_int, 1);
pub const HAVE_ARPA_INET_H = @as(c_int, 1);
pub const HAVE_ARPA_NAMESER_H = @as(c_int, 1);
pub const HAVE_ASCTIME_R = @as(c_int, 1);
pub const HAVE_ASM_GOTO = @as(c_int, 1);
pub const HAVE_ASPRINTF = @as(c_int, 1);
pub const HAVE_ATOLL = @as(c_int, 1);
pub const HAVE_ATTRIBUTE_ALIGNED = @as(c_int, 1);
pub const HAVE_BCMATH = @as(c_int, 1);
pub const HAVE_BIND_TEXTDOMAIN_CODESET = @as(c_int, 1);
pub const HAVE_BUILD_DEFS_H = @as(c_int, 1);
pub const HAVE_BUILTIN_ATOMIC = @as(c_int, 1);
pub const HAVE_BZ2 = @as(c_int, 1);
pub const HAVE_CALENDAR = @as(c_int, 1);
pub const HAVE_CANCEL_CALLBACK = @as(c_int, 1);
pub const HAVE_CHROOT = @as(c_int, 1);
pub const HAVE_CLOCK_GETTIME = @as(c_int, 1);
pub const HAVE_COMMONCRYPTO_COMMONRANDOM_H = @as(c_int, 1);
pub const HAVE_CTERMID = @as(c_int, 1);
pub const HAVE_CTIME_R = @as(c_int, 1);
pub const HAVE_CTYPE = @as(c_int, 1);
pub const HAVE_CURL = @as(c_int, 1);
pub const HAVE_DBA = @as(c_int, 1);
pub const HAVE_DCNGETTEXT = @as(c_int, 1);
pub const HAVE_DECL_PGRES_TUPLES_CHUNK = @as(c_int, 1);
pub const HAVE_DECL_P_ALL = @as(c_int, 1);
pub const HAVE_DECL_P_JAILID = @as(c_int, 0);
pub const HAVE_DECL_P_PIDFD = @as(c_int, 0);
pub const HAVE_DECL_P_UID = @as(c_int, 0);
pub const HAVE_DECL_STRERROR_R = @as(c_int, 1);
pub const HAVE_DECL_STRPTIME = @as(c_int, 1);
pub const HAVE_DECL_WCONTINUED = @as(c_int, 1);
pub const HAVE_DECL_WEXITED = @as(c_int, 1);
pub const HAVE_DECL_WNOWAIT = @as(c_int, 1);
pub const HAVE_DECL_WSTOPPED = @as(c_int, 1);
pub const HAVE_DIRENT_H = @as(c_int, 1);
pub const HAVE_DLFCN_H = @as(c_int, 1);
pub const HAVE_DNGETTEXT = @as(c_int, 1);
pub const HAVE_DNS_H = @as(c_int, 1);
pub const HAVE_DNS_SEARCH = @as(c_int, 1);
pub const HAVE_DN_EXPAND = @as(c_int, 1);
pub const HAVE_DN_SKIPNAME = @as(c_int, 1);
pub const HAVE_DOM = @as(c_int, 1);
pub const HAVE_DTRACE = @as(c_int, 1);
pub const HAVE_ENCRYPTION = @as(c_int, 1);
pub const HAVE_EXIF = @as(c_int, 1);
pub const HAVE_FCNTL_H = @as(c_int, 1);
pub const HAVE_FDATASYNC = @as(c_int, 1);
pub const HAVE_FFI = @as(c_int, 1);
pub const HAVE_FFI_SYSV = @as(c_int, 1);
pub const HAVE_FLOCK = @as(c_int, 1);
pub const HAVE_FLUSHIO = @as(c_int, 1);
pub const HAVE_FNMATCH = @as(c_int, 1);
pub const HAVE_FORK = @as(c_int, 1);
pub const HAVE_FPATHCONF = @as(c_int, 1);
pub const HAVE_FTOK = @as(c_int, 1);
pub const HAVE_FTP = @as(c_int, 1);
pub const HAVE_FTP_SSL = @as(c_int, 1);
pub const HAVE_FUNC_ATTRIBUTE_IFUNC = @as(c_int, 1);
pub const HAVE_FUNC_ATTRIBUTE_TARGET = @as(c_int, 1);
pub const HAVE_FUNOPEN = @as(c_int, 1);
pub const HAVE_GAI_STRERROR = @as(c_int, 1);
pub const HAVE_GD_AVIF = @as(c_int, 1);
pub const HAVE_GD_BMP = @as(c_int, 1);
pub const HAVE_GD_FREETYPE = @as(c_int, 1);
pub const HAVE_GD_GET_INTERPOLATION = @as(c_int, 1);
pub const HAVE_GD_JPG = @as(c_int, 1);
pub const HAVE_GD_LIBVERSION = @as(c_int, 1);
pub const HAVE_GD_PNG = @as(c_int, 1);
pub const HAVE_GD_TGA = @as(c_int, 1);
pub const HAVE_GD_WEBP = @as(c_int, 1);
pub const HAVE_GETADDRINFO = @as(c_int, 1);
pub const HAVE_GETCWD = @as(c_int, 1);
pub const HAVE_GETGRGID_R = @as(c_int, 1);
pub const HAVE_GETGRNAM_R = @as(c_int, 1);
pub const HAVE_GETGROUPS = @as(c_int, 1);
pub const HAVE_GETHOSTNAME = @as(c_int, 1);
pub const HAVE_GETIFADDRS = @as(c_int, 1);
pub const HAVE_GETLOADAVG = @as(c_int, 1);
pub const HAVE_GETLOGIN = @as(c_int, 1);
pub const HAVE_GETOPT = @as(c_int, 1);
pub const HAVE_GETPGID = @as(c_int, 1);
pub const HAVE_GETPID = @as(c_int, 1);
pub const HAVE_GETPRIORITY = @as(c_int, 1);
pub const HAVE_GETPROTOBYNAME = @as(c_int, 1);
pub const HAVE_GETPROTOBYNUMBER = @as(c_int, 1);
pub const HAVE_GETPWNAM_R = @as(c_int, 1);
pub const HAVE_GETPWUID_R = @as(c_int, 1);
pub const HAVE_GETRLIMIT = @as(c_int, 1);
pub const HAVE_GETRUSAGE = @as(c_int, 1);
pub const HAVE_GETSERVBYNAME = @as(c_int, 1);
pub const HAVE_GETSERVBYPORT = @as(c_int, 1);
pub const HAVE_GETSID = @as(c_int, 1);
pub const HAVE_GETTIMEOFDAY = @as(c_int, 1);
pub const HAVE_GETWD = @as(c_int, 1);
pub const HAVE_GLOB = @as(c_int, 1);
pub const HAVE_GMP = @as(c_int, 1);
pub const HAVE_GMTIME_R = @as(c_int, 1);
pub const HAVE_GRP_H = @as(c_int, 1);
pub const HAVE_HSTRERROR = @as(c_int, 1);
pub const HAVE_HUGE_CODE_PAGES = @as(c_int, 1);
pub const HAVE_ICONV = @as(c_int, 1);
pub const HAVE_IF_INDEXTONAME = @as(c_int, 1);
pub const HAVE_IF_NAMETOINDEX = @as(c_int, 1);
pub const HAVE_INITGROUPS = @as(c_int, 1);
pub const HAVE_INTMAX_T = @as(c_int, 1);
pub const HAVE_INTTYPES_H = @as(c_int, 1);
pub const HAVE_IPV6 = @as(c_int, 1);
pub const HAVE_JIT = @as(c_int, 1);
pub const HAVE_KILL = @as(c_int, 1);
pub const HAVE_KQUEUE = @as(c_int, 1);
pub const HAVE_LANGINFO_H = @as(c_int, 1);
pub const HAVE_LCHOWN = @as(c_int, 1);
pub const HAVE_LDAP = @as(c_int, 1);
pub const HAVE_LDAP_CONTROL_FIND = @as(c_int, 1);
pub const HAVE_LDAP_EXTENDED_OPERATION = @as(c_int, 1);
pub const HAVE_LDAP_EXTENDED_OPERATION_S = @as(c_int, 1);
pub const HAVE_LDAP_PARSE_EXTENDED_RESULT = @as(c_int, 1);
pub const HAVE_LDAP_PARSE_REFERENCE = @as(c_int, 1);
pub const HAVE_LDAP_PARSE_RESULT = @as(c_int, 1);
pub const HAVE_LDAP_PASSWD = @as(c_int, 1);
pub const HAVE_LDAP_REFRESH_S = @as(c_int, 1);
pub const HAVE_LDAP_SASL = @as(c_int, 1);
pub const HAVE_LDAP_START_TLS_S = @as(c_int, 1);
pub const HAVE_LDAP_WHOAMI_S = @as(c_int, 1);
pub const HAVE_LIBDL = @as(c_int, 1);
pub const HAVE_LIBEDIT = @as(c_int, 1);
pub const HAVE_LIBGD = @as(c_int, 1);
pub const HAVE_LIBICONV = @as(c_int, 1);
pub const HAVE_LIBINTL = @as(c_int, 1);
pub const HAVE_LIBPROC_H = @as(c_int, 1);
pub const HAVE_LIBRESOLV = @as(c_int, 1);
pub const HAVE_LIBSODIUMLIB = @as(c_int, 1);
pub const HAVE_LIBXML = @as(c_int, 1);
pub const HAVE_LIBZIP_VERSION = @as(c_int, 1);
pub const HAVE_LOCALTIME_R = @as(c_int, 1);
pub const HAVE_LONG_DOUBLE = @as(c_int, 1);
pub const HAVE_LQ_TCP_CONNECTION_INFO = @as(c_int, 1);
pub const HAVE_MACH_VM_READ = @as(c_int, 1);
pub const HAVE_MAKEDEV = @as(c_int, 1);
pub const HAVE_MBREGEX = @as(c_int, 1);
pub const HAVE_MBSTRING = @as(c_int, 1);
pub const HAVE_MEMMEM = @as(c_int, 1);
pub const HAVE_METHOD_SUPPORTED = @as(c_int, 1);
pub const HAVE_MKFIFO = @as(c_int, 1);
pub const HAVE_MKNOD = @as(c_int, 1);
pub const HAVE_MKSTEMP = @as(c_int, 1);
pub const HAVE_MMAP = @as(c_int, 1);
pub const HAVE_MPROTECT = @as(c_int, 1);
pub const HAVE_NANOSLEEP = @as(c_int, 1);
pub const HAVE_NETINET_IN_H = @as(c_int, 1);
pub const HAVE_NET_IF_H = @as(c_int, 1);
pub const HAVE_NGETTEXT = @as(c_int, 1);
pub const HAVE_NICE = @as(c_int, 1);
pub const HAVE_NL_LANGINFO = @as(c_int, 1);
pub const HAVE_OPENPTY = @as(c_int, 1);
pub const HAVE_OPENSSL_EXT = @as(c_int, 1);
pub const HAVE_PATHCONF = @as(c_int, 1);
pub const HAVE_PCRE_JIT_SUPPORT = @as(c_int, 1);
pub const HAVE_PDO_PGSQL = @as(c_int, 1);
pub const HAVE_PGSQL = @as(c_int, 1);
pub const HAVE_PG_CHANGE_PASSWORD = @as(c_int, 1);
pub const HAVE_PG_RESULT_MEMORY_SIZE = @as(c_int, 1);
pub const HAVE_PG_SET_CHUNKED_ROWS_SIZE = @as(c_int, 1);
pub const HAVE_PG_SOCKET_POLL = @as(c_int, 1);
pub const HAVE_PHPDBG_READLINE = @as(c_int, 1);
pub const HAVE_PHP_SESSION = @as(c_int, 1);
pub const HAVE_POLL = @as(c_int, 1);
pub const HAVE_POLL_H = @as(c_int, 1);
pub const HAVE_POSIX = @as(c_int, 1);
pub const HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR_NP = @as(c_int, 1);
pub const HAVE_PQCLOSEPREPARED = @as(c_int, 1);
pub const HAVE_PQERRORS_SQLSTATE = @as(c_int, 1);
pub const HAVE_PREAD = @as(c_int, 1);
pub const HAVE_PROGRESS_CALLBACK = @as(c_int, 1);
pub const HAVE_PTHREAD_ATTR_GETSTACK = @as(c_int, 1);
pub const HAVE_PTHREAD_GET_STACKADDR_NP = @as(c_int, 1);
pub const HAVE_PTHREAD_JIT_WRITE_PROTECT_NP = @as(c_int, 1);
pub const HAVE_PTHREAD_SET_QOS_CLASS_SELF_NP = @as(c_int, 1);
pub const HAVE_PTRDIFF_T = @as(c_int, 1);
pub const HAVE_PUTENV = @as(c_int, 1);
pub const HAVE_PWD_H = @as(c_int, 1);
pub const HAVE_PWRITE = @as(c_int, 1);
pub const HAVE_RESOLV_H = @as(c_int, 1);
pub const HAVE_RES_SEARCH = @as(c_int, 1);
pub const HAVE_RL_CALLBACK_READ_CHAR = @as(c_int, 1);
pub const HAVE_RL_COMPLETION_MATCHES = @as(c_int, 1);
pub const HAVE_RL_ON_NEW_LINE = @as(c_int, 1);
pub const HAVE_SCANDIR = @as(c_int, 1);
pub const HAVE_SELECT = @as(c_int, 1);
pub const HAVE_SETEGID = @as(c_int, 1);
pub const HAVE_SETENV = @as(c_int, 1);
pub const HAVE_SETEUID = @as(c_int, 1);
pub const HAVE_SETITIMER = @as(c_int, 1);
pub const HAVE_SETPRIORITY = @as(c_int, 1);
pub const HAVE_SETRLIMIT = @as(c_int, 1);
pub const HAVE_SETSID = @as(c_int, 1);
pub const HAVE_SET_MTIME = @as(c_int, 1);
pub const HAVE_SHMOP = @as(c_int, 1);
pub const HAVE_SHM_IPC = @as(c_int, 1);
pub const HAVE_SHM_MMAP_ANON = @as(c_int, 1);
pub const HAVE_SHM_MMAP_POSIX = @as(c_int, 1);
pub const HAVE_SHUTDOWN = @as(c_int, 1);
pub const HAVE_SHUTDOWN_SNMP_LOGGING = @as(c_int, 1);
pub const HAVE_SIGACTION = @as(c_int, 1);
pub const HAVE_SIGPROCMASK = @as(c_int, 1);
pub const HAVE_SIMPLEXML = @as(c_int, 1);
pub const HAVE_SNMP = @as(c_int, 1);
pub const HAVE_SNMP_SHA256 = @as(c_int, 1);
pub const HAVE_SNMP_SHA512 = @as(c_int, 1);
pub const HAVE_SOAP = @as(c_int, 1);
pub const HAVE_SOCKATMARK = @as(c_int, 1);
pub const HAVE_SOCKETPAIR = @as(c_int, 1);
pub const HAVE_SOCKETS = @as(c_int, 1);
pub const HAVE_SOCKLEN_T = @as(c_int, 1);
pub const HAVE_SQLDATASOURCES = @as(c_int, 1);
pub const HAVE_SQLEXT_H = @as(c_int, 1);
pub const HAVE_SQLITE3 = @as(c_int, 1);
pub const HAVE_SQLITE3_CLOSE_V2 = @as(c_int, 1);
pub const HAVE_SQLITE3_COLUMN_TABLE_NAME = @as(c_int, 1);
pub const HAVE_SQLITE3_ERRSTR = @as(c_int, 1);
pub const HAVE_SQLITE3_EXPANDED_SQL = @as(c_int, 1);
pub const HAVE_SQLTYPES_H = @as(c_int, 1);
pub const HAVE_SQLUCODE_H = @as(c_int, 1);
pub const HAVE_SQL_H = @as(c_int, 1);
pub const HAVE_SSIZE_T = @as(c_int, 1);
pub const HAVE_STATFS = @as(c_int, 1);
pub const HAVE_STATVFS = @as(c_int, 1);
pub const HAVE_STDINT_H = @as(c_int, 1);
pub const HAVE_STDIO_H = @as(c_int, 1);
pub const HAVE_STDLIB_H = @as(c_int, 1);
pub const HAVE_STRCASECMP = @as(c_int, 1);
pub const HAVE_STRCASESTR = @as(c_int, 1);
pub const HAVE_STRERROR_R = @as(c_int, 1);
pub const HAVE_STRINGS_H = @as(c_int, 1);
pub const HAVE_STRING_H = @as(c_int, 1);
pub const HAVE_STRLCAT = @as(c_int, 1);
pub const HAVE_STRLCPY = @as(c_int, 1);
pub const HAVE_STRNDUP = @as(c_int, 1);
pub const HAVE_STRNLEN = @as(c_int, 1);
pub const HAVE_STRPTIME = @as(c_int, 1);
pub const HAVE_STRTOK_R = @as(c_int, 1);
pub const HAVE_STRTOLL = @as(c_int, 1);
pub const HAVE_STRUCT_FLOCK = @as(c_int, 1);
pub const HAVE_STRUCT_SOCKADDR_SA_LEN = @as(c_int, 1);
pub const HAVE_STRUCT_SOCKADDR_STORAGE = @as(c_int, 1);
pub const HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY = @as(c_int, 1);
pub const HAVE_STRUCT_SOCKADDR_UN_SUN_LEN = @as(c_int, 1);
pub const HAVE_STRUCT_STAT_ST_BLKSIZE = @as(c_int, 1);
pub const HAVE_STRUCT_STAT_ST_BLOCKS = @as(c_int, 1);
pub const HAVE_STRUCT_STAT_ST_RDEV = @as(c_int, 1);
pub const HAVE_STRUCT_TM_TM_GMTOFF = @as(c_int, 1);
pub const HAVE_STRUCT_TM_TM_ZONE = @as(c_int, 1);
pub const HAVE_ST_BLOCKS = @as(c_int, 1);
pub const HAVE_SYMLINK = @as(c_int, 1);
pub const HAVE_SYSEXITS_H = @as(c_int, 1);
pub const HAVE_SYSLOG_H = @as(c_int, 1);
pub const HAVE_SYSVMSG = @as(c_int, 1);
pub const HAVE_SYSVSEM = @as(c_int, 1);
pub const HAVE_SYSVSHM = @as(c_int, 1);
pub const HAVE_SYS_FILE_H = @as(c_int, 1);
pub const HAVE_SYS_IOCTL_H = @as(c_int, 1);
pub const HAVE_SYS_IPC_H = @as(c_int, 1);
pub const HAVE_SYS_MMAN_H = @as(c_int, 1);
pub const HAVE_SYS_MOUNT_H = @as(c_int, 1);
pub const HAVE_SYS_PARAM_H = @as(c_int, 1);
pub const HAVE_SYS_POLL_H = @as(c_int, 1);
pub const HAVE_SYS_RESOURCE_H = @as(c_int, 1);
pub const HAVE_SYS_SELECT_H = @as(c_int, 1);
pub const HAVE_SYS_SOCKET_H = @as(c_int, 1);
pub const HAVE_SYS_SOCKIO_H = @as(c_int, 1);
pub const HAVE_SYS_STATVFS_H = @as(c_int, 1);
pub const HAVE_SYS_STAT_H = @as(c_int, 1);
pub const HAVE_SYS_TIME_H = @as(c_int, 1);
pub const HAVE_SYS_TYPES_H = @as(c_int, 1);
pub const HAVE_SYS_UIO_H = @as(c_int, 1);
pub const HAVE_SYS_UTSNAME_H = @as(c_int, 1);
pub const HAVE_SYS_WAIT_H = @as(c_int, 1);
pub const HAVE_TIDY = @as(c_int, 1);
pub const HAVE_TIDYBUFFIO_H = @as(c_int, 1);
pub const HAVE_TIDYOPTGETCATEGORY = @as(c_int, 1);
pub const HAVE_TIDYOPTGETDOC = @as(c_int, 1);
pub const HAVE_TIDYRELEASEDATE = @as(c_int, 1);
pub const HAVE_TIDY_H = @as(c_int, 1);
pub const HAVE_TIMELIB_CONFIG_H = @as(c_int, 1);
pub const HAVE_TIMES = @as(c_int, 1);
pub const HAVE_TM_ZONE = @as(c_int, 1);
pub const HAVE_TTYNAME_R = @as(c_int, 1);
pub const HAVE_TZSET = @as(c_int, 1);
pub const HAVE_UNION_SEMUN = @as(c_int, 1);
pub const HAVE_UNISTD_H = @as(c_int, 1);
pub const HAVE_UNIXODBC = @as(c_int, 1);
pub const HAVE_UNSETENV = @as(c_int, 1);
pub const HAVE_UODBC = @as(c_int, 1);
pub const HAVE_USLEEP = @as(c_int, 1);
pub const HAVE_UTIME = @as(c_int, 1);
pub const HAVE_UTIMES = @as(c_int, 1);
pub const HAVE_UTIME_H = @as(c_int, 1);
pub const HAVE_VASPRINTF = @as(c_int, 1);
pub const HAVE_WAIT3 = @as(c_int, 1);
pub const HAVE_WAIT4 = @as(c_int, 1);
pub const HAVE_WAITID = @as(c_int, 1);
pub const HAVE_WCHAR_H = @as(c_int, 1);
pub const HAVE_WIFCONTINUED = @as(c_int, 1);
pub const HAVE_XML = @as(c_int, 1);
pub const HAVE_XMLREADER = @as(c_int, 1);
pub const HAVE_XMLWRITER = @as(c_int, 1);
pub const HAVE_XSL = @as(c_int, 1);
pub const HAVE_XSL_EXSLT = @as(c_int, 1);
pub const HAVE_ZIP = @as(c_int, 1);
pub const HAVE_ZLIB = @as(c_int, 1);
pub const MYSQLND_COMPRESSION_ENABLED = @as(c_int, 1);
pub const MYSQLND_HAVE_SSL = @as(c_int, 1);
pub const MYSQLND_SSL_SUPPORTED = @as(c_int, 1);
pub const NDBM_INCLUDE_FILE = "/Library/Developer/CommandLineTools/SDKs/MacOSX15.sdk/usr/include/ndbm.h";
pub const ODBCVER = @as(c_int, 0x0350);
pub const PCRE2_CODE_UNIT_WIDTH = @as(c_int, 8);
pub const PDO_ODBC_TYPE = "unixODBC";
pub const PDO_USE_MYSQLND = @as(c_int, 1);
pub const PHAR_HAVE_OPENSSL = @as(c_int, 1);
pub const PHP_BUILD_PROVIDER = "Homebrew";
pub const PHP_BUILD_SYSTEM = "Darwin Sequoia-arm64.local 24.4.0 Darwin Kernel Version 24.4.0: Fri Apr 11 18:33:24 PDT 2025; root:xnu-11417.101.15~117/RELEASE_ARM64_VMAPPLE arm64";
pub const PHP_CAN_SUPPORT_PROC_OPEN = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_CLZ = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_CLZL = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_CLZLL = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_CPU_SUPPORTS = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_CTZL = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_CTZLL = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_EXPECT = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_FRAME_ADDRESS = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_SADDLL_OVERFLOW = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_SADDL_OVERFLOW = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_SMULLL_OVERFLOW = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_SMULL_OVERFLOW = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_SSUBLL_OVERFLOW = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_SSUBL_OVERFLOW = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_UNREACHABLE = @as(c_int, 1);
pub const PHP_HAVE_BUILTIN_USUB_OVERFLOW = @as(c_int, 1);
pub const PHP_ICONV_IMPL = "libiconv";
pub const PHP_MHASH_BC = @as(c_int, 1);
pub const PHP_MYSQL_UNIX_SOCK_ADDR = "/tmp/mysql.sock";
pub const PHP_ONIG_BAD_KOI8_ENTRY = @as(c_int, 1);
pub const PHP_OS = "Darwin";
pub const PHP_SIGCHILD = @as(c_int, 0);
pub const PHP_UNAME = "Darwin Sequoia-arm64.local 24.4.0 Darwin Kernel Version 24.4.0: Fri Apr 11 18:33:24 PDT 2025; root:xnu-11417.101.15~117/RELEASE_ARM64_VMAPPLE arm64";
pub const PHP_USE_PHP_CRYPT_R = @as(c_int, 1);
pub const PHP_WRITE_STDOUT = @as(c_int, 1);
pub const SIZEOF_INT = @as(c_int, 4);
pub const SIZEOF_INTMAX_T = @as(c_int, 8);
pub const SIZEOF_LONG = @as(c_int, 8);
pub const SIZEOF_LONG_LONG = @as(c_int, 8);
pub const SIZEOF_OFF_T = @as(c_int, 8);
pub const SIZEOF_PTRDIFF_T = @as(c_int, 8);
pub const SIZEOF_SIZE_T = @as(c_int, 8);
pub const SIZEOF_SSIZE_T = @as(c_int, 8);
pub const STDC_HEADERS = @as(c_int, 1);
pub const _ALL_SOURCE = @as(c_int, 1);
pub const _DARWIN_C_SOURCE = @as(c_int, 1);
pub const __EXTENSIONS__ = @as(c_int, 1);
pub const _GNU_SOURCE = @as(c_int, 1);
pub const _HPUX_ALT_XOPEN_SOCKET_API = @as(c_int, 1);
pub const _NETBSD_SOURCE = @as(c_int, 1);
pub const _OPENBSD_SOURCE = @as(c_int, 1);
pub const _POSIX_PTHREAD_SEMANTICS = @as(c_int, 1);
pub const __STDC_WANT_IEC_60559_ATTRIBS_EXT__ = @as(c_int, 1);
pub const __STDC_WANT_IEC_60559_BFP_EXT__ = @as(c_int, 1);
pub const __STDC_WANT_IEC_60559_DFP_EXT__ = @as(c_int, 1);
pub const __STDC_WANT_IEC_60559_EXT__ = @as(c_int, 1);
pub const __STDC_WANT_IEC_60559_FUNCS_EXT__ = @as(c_int, 1);
pub const __STDC_WANT_IEC_60559_TYPES_EXT__ = @as(c_int, 1);
pub const __STDC_WANT_LIB_EXT2__ = @as(c_int, 1);
pub const __STDC_WANT_MATH_SPEC_FUNCS__ = @as(c_int, 1);
pub const _TANDEM_SOURCE = @as(c_int, 1);
pub const ZEND_CHECK_STACK_LIMIT = @as(c_int, 1);
pub const ZEND_DEBUG = @as(c_int, 0);
pub const ZEND_MM_ALIGNMENT = @import("std").zig.c_translation.cast(usize, @as(c_int, 8));
pub const ZEND_MM_ALIGNMENT_LOG2 = @import("std").zig.c_translation.cast(usize, @as(c_int, 3));
pub const ZEND_MM_NEED_EIGHT_BYTE_REALIGNMENT = @as(c_int, 0);
pub const ZEND_SIGNALS = @as(c_int, 1);
pub const _STDLIB_H_ = "";
pub const _LIBC_COUNT__MB_LEN_MAX = _LIBC_UNSAFE_INDEXABLE;
pub const _LIBC_COUNT__PATH_MAX = _LIBC_UNSAFE_INDEXABLE;
pub const __AVAILABILITY__ = "";
pub const __API_TO_BE_DEPRECATED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_MACOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_MACOSAPPLICATIONEXTENSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_IOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_IOSAPPLICATIONEXTENSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_MACCATALYST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_MACCATALYSTAPPLICATIONEXTENSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_WATCHOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_WATCHOSAPPLICATIONEXTENSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_TVOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_TVOSAPPLICATIONEXTENSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_DRIVERKIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_VISIONOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_VISIONOSAPPLICATIONEXTENSION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __API_TO_BE_DEPRECATED_KERNELKIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __AVAILABILITY_VERSIONS__ = "";
pub const __MAC_10_0 = @as(c_int, 1000);
pub const __MAC_10_1 = @as(c_int, 1010);
pub const __MAC_10_2 = @as(c_int, 1020);
pub const __MAC_10_3 = @as(c_int, 1030);
pub const __MAC_10_4 = @as(c_int, 1040);
pub const __MAC_10_5 = @as(c_int, 1050);
pub const __MAC_10_6 = @as(c_int, 1060);
pub const __MAC_10_7 = @as(c_int, 1070);
pub const __MAC_10_8 = @as(c_int, 1080);
pub const __MAC_10_9 = @as(c_int, 1090);
pub const __MAC_10_10 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101000, .decimal);
pub const __MAC_10_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101002, .decimal);
pub const __MAC_10_10_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101003, .decimal);
pub const __MAC_10_11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101100, .decimal);
pub const __MAC_10_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101102, .decimal);
pub const __MAC_10_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101103, .decimal);
pub const __MAC_10_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101104, .decimal);
pub const __MAC_10_12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101200, .decimal);
pub const __MAC_10_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101201, .decimal);
pub const __MAC_10_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101202, .decimal);
pub const __MAC_10_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101204, .decimal);
pub const __MAC_10_13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101300, .decimal);
pub const __MAC_10_13_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101301, .decimal);
pub const __MAC_10_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101302, .decimal);
pub const __MAC_10_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101304, .decimal);
pub const __MAC_10_14 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101400, .decimal);
pub const __MAC_10_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101401, .decimal);
pub const __MAC_10_14_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101404, .decimal);
pub const __MAC_10_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101405, .decimal);
pub const __MAC_10_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101406, .decimal);
pub const __MAC_10_15 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101500, .decimal);
pub const __MAC_10_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101501, .decimal);
pub const __MAC_10_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101504, .decimal);
pub const __MAC_10_16 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 101600, .decimal);
pub const __MAC_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __MAC_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __MAC_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __MAC_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __MAC_11_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110500, .decimal);
pub const __MAC_11_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110600, .decimal);
pub const __MAC_12_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120000, .decimal);
pub const __MAC_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120100, .decimal);
pub const __MAC_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120200, .decimal);
pub const __MAC_12_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120300, .decimal);
pub const __MAC_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120400, .decimal);
pub const __MAC_12_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120500, .decimal);
pub const __MAC_12_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120600, .decimal);
pub const __MAC_12_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120700, .decimal);
pub const __MAC_13_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130000, .decimal);
pub const __MAC_13_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130100, .decimal);
pub const __MAC_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130200, .decimal);
pub const __MAC_13_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130300, .decimal);
pub const __MAC_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130400, .decimal);
pub const __MAC_13_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130500, .decimal);
pub const __MAC_13_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130600, .decimal);
pub const __MAC_13_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130700, .decimal);
pub const __MAC_14_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140000, .decimal);
pub const __MAC_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140100, .decimal);
pub const __MAC_14_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140200, .decimal);
pub const __MAC_14_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __MAC_14_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140400, .decimal);
pub const __MAC_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __MAC_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140600, .decimal);
pub const __MAC_14_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140700, .decimal);
pub const __MAC_15_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150000, .decimal);
pub const __MAC_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150100, .decimal);
pub const __MAC_15_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150200, .decimal);
pub const __MAC_15_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150300, .decimal);
pub const __MAC_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150400, .decimal);
pub const __MAC_15_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150500, .decimal);
pub const __IPHONE_2_0 = @as(c_int, 20000);
pub const __IPHONE_2_1 = @as(c_int, 20100);
pub const __IPHONE_2_2 = @as(c_int, 20200);
pub const __IPHONE_3_0 = @as(c_int, 30000);
pub const __IPHONE_3_1 = @as(c_int, 30100);
pub const __IPHONE_3_2 = @as(c_int, 30200);
pub const __IPHONE_4_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40000, .decimal);
pub const __IPHONE_4_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40100, .decimal);
pub const __IPHONE_4_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40200, .decimal);
pub const __IPHONE_4_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40300, .decimal);
pub const __IPHONE_5_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50000, .decimal);
pub const __IPHONE_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50100, .decimal);
pub const __IPHONE_6_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60000, .decimal);
pub const __IPHONE_6_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60100, .decimal);
pub const __IPHONE_7_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70000, .decimal);
pub const __IPHONE_7_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70100, .decimal);
pub const __IPHONE_8_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80000, .decimal);
pub const __IPHONE_8_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80100, .decimal);
pub const __IPHONE_8_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80200, .decimal);
pub const __IPHONE_8_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80300, .decimal);
pub const __IPHONE_8_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80400, .decimal);
pub const __IPHONE_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __IPHONE_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __IPHONE_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __IPHONE_9_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90300, .decimal);
pub const __IPHONE_10_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __IPHONE_10_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100100, .decimal);
pub const __IPHONE_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100200, .decimal);
pub const __IPHONE_10_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100300, .decimal);
pub const __IPHONE_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __IPHONE_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __IPHONE_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110200, .decimal);
pub const __IPHONE_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __IPHONE_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __IPHONE_12_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120000, .decimal);
pub const __IPHONE_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120100, .decimal);
pub const __IPHONE_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120200, .decimal);
pub const __IPHONE_12_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120300, .decimal);
pub const __IPHONE_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120400, .decimal);
pub const __IPHONE_13_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130000, .decimal);
pub const __IPHONE_13_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130100, .decimal);
pub const __IPHONE_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130200, .decimal);
pub const __IPHONE_13_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130300, .decimal);
pub const __IPHONE_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130400, .decimal);
pub const __IPHONE_13_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130500, .decimal);
pub const __IPHONE_13_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130600, .decimal);
pub const __IPHONE_13_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130700, .decimal);
pub const __IPHONE_14_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140000, .decimal);
pub const __IPHONE_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140100, .decimal);
pub const __IPHONE_14_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140200, .decimal);
pub const __IPHONE_14_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __IPHONE_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __IPHONE_14_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140400, .decimal);
pub const __IPHONE_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140600, .decimal);
pub const __IPHONE_14_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140700, .decimal);
pub const __IPHONE_14_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140800, .decimal);
pub const __IPHONE_15_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150000, .decimal);
pub const __IPHONE_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150100, .decimal);
pub const __IPHONE_15_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150200, .decimal);
pub const __IPHONE_15_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150300, .decimal);
pub const __IPHONE_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150400, .decimal);
pub const __IPHONE_15_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150500, .decimal);
pub const __IPHONE_15_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150600, .decimal);
pub const __IPHONE_15_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150700, .decimal);
pub const __IPHONE_15_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150800, .decimal);
pub const __IPHONE_16_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160000, .decimal);
pub const __IPHONE_16_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160100, .decimal);
pub const __IPHONE_16_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160200, .decimal);
pub const __IPHONE_16_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160300, .decimal);
pub const __IPHONE_16_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160400, .decimal);
pub const __IPHONE_16_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160500, .decimal);
pub const __IPHONE_16_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160600, .decimal);
pub const __IPHONE_16_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160700, .decimal);
pub const __IPHONE_17_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170000, .decimal);
pub const __IPHONE_17_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170100, .decimal);
pub const __IPHONE_17_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170200, .decimal);
pub const __IPHONE_17_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170300, .decimal);
pub const __IPHONE_17_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170400, .decimal);
pub const __IPHONE_17_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170500, .decimal);
pub const __IPHONE_17_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170600, .decimal);
pub const __IPHONE_17_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170700, .decimal);
pub const __IPHONE_18_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180000, .decimal);
pub const __IPHONE_18_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180100, .decimal);
pub const __IPHONE_18_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180200, .decimal);
pub const __IPHONE_18_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180300, .decimal);
pub const __IPHONE_18_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180400, .decimal);
pub const __IPHONE_18_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180500, .decimal);
pub const __WATCHOS_1_0 = @as(c_int, 10000);
pub const __WATCHOS_2_0 = @as(c_int, 20000);
pub const __WATCHOS_2_1 = @as(c_int, 20100);
pub const __WATCHOS_2_2 = @as(c_int, 20200);
pub const __WATCHOS_3_0 = @as(c_int, 30000);
pub const __WATCHOS_3_1 = @as(c_int, 30100);
pub const __WATCHOS_3_1_1 = @as(c_int, 30101);
pub const __WATCHOS_3_2 = @as(c_int, 30200);
pub const __WATCHOS_4_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40000, .decimal);
pub const __WATCHOS_4_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40100, .decimal);
pub const __WATCHOS_4_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40200, .decimal);
pub const __WATCHOS_4_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40300, .decimal);
pub const __WATCHOS_5_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50000, .decimal);
pub const __WATCHOS_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50100, .decimal);
pub const __WATCHOS_5_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50200, .decimal);
pub const __WATCHOS_5_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50300, .decimal);
pub const __WATCHOS_6_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60000, .decimal);
pub const __WATCHOS_6_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60100, .decimal);
pub const __WATCHOS_6_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60200, .decimal);
pub const __WATCHOS_7_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70000, .decimal);
pub const __WATCHOS_7_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70100, .decimal);
pub const __WATCHOS_7_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70200, .decimal);
pub const __WATCHOS_7_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70300, .decimal);
pub const __WATCHOS_7_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70400, .decimal);
pub const __WATCHOS_7_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70500, .decimal);
pub const __WATCHOS_7_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70600, .decimal);
pub const __WATCHOS_8_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80000, .decimal);
pub const __WATCHOS_8_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80100, .decimal);
pub const __WATCHOS_8_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80300, .decimal);
pub const __WATCHOS_8_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80400, .decimal);
pub const __WATCHOS_8_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80500, .decimal);
pub const __WATCHOS_8_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80600, .decimal);
pub const __WATCHOS_8_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80700, .decimal);
pub const __WATCHOS_8_8 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80800, .decimal);
pub const __WATCHOS_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __WATCHOS_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __WATCHOS_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __WATCHOS_9_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90300, .decimal);
pub const __WATCHOS_9_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90400, .decimal);
pub const __WATCHOS_9_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90500, .decimal);
pub const __WATCHOS_9_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90600, .decimal);
pub const __WATCHOS_10_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __WATCHOS_10_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100100, .decimal);
pub const __WATCHOS_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100200, .decimal);
pub const __WATCHOS_10_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100300, .decimal);
pub const __WATCHOS_10_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100400, .decimal);
pub const __WATCHOS_10_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100500, .decimal);
pub const __WATCHOS_10_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100600, .decimal);
pub const __WATCHOS_10_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100700, .decimal);
pub const __WATCHOS_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __WATCHOS_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __WATCHOS_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110200, .decimal);
pub const __WATCHOS_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __WATCHOS_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __WATCHOS_11_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110500, .decimal);
pub const __TVOS_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __TVOS_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __TVOS_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __TVOS_10_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100000, .decimal);
pub const __TVOS_10_0_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100001, .decimal);
pub const __TVOS_10_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100100, .decimal);
pub const __TVOS_10_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 100200, .decimal);
pub const __TVOS_11_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110000, .decimal);
pub const __TVOS_11_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110100, .decimal);
pub const __TVOS_11_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110200, .decimal);
pub const __TVOS_11_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110300, .decimal);
pub const __TVOS_11_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 110400, .decimal);
pub const __TVOS_12_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120000, .decimal);
pub const __TVOS_12_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120100, .decimal);
pub const __TVOS_12_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120200, .decimal);
pub const __TVOS_12_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120300, .decimal);
pub const __TVOS_12_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 120400, .decimal);
pub const __TVOS_13_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130000, .decimal);
pub const __TVOS_13_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130200, .decimal);
pub const __TVOS_13_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130300, .decimal);
pub const __TVOS_13_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 130400, .decimal);
pub const __TVOS_14_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140000, .decimal);
pub const __TVOS_14_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140100, .decimal);
pub const __TVOS_14_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140200, .decimal);
pub const __TVOS_14_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140300, .decimal);
pub const __TVOS_14_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140500, .decimal);
pub const __TVOS_14_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140600, .decimal);
pub const __TVOS_14_7 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 140700, .decimal);
pub const __TVOS_15_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150000, .decimal);
pub const __TVOS_15_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150100, .decimal);
pub const __TVOS_15_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150200, .decimal);
pub const __TVOS_15_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150300, .decimal);
pub const __TVOS_15_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150400, .decimal);
pub const __TVOS_15_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150500, .decimal);
pub const __TVOS_15_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 150600, .decimal);
pub const __TVOS_16_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160000, .decimal);
pub const __TVOS_16_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160100, .decimal);
pub const __TVOS_16_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160200, .decimal);
pub const __TVOS_16_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160300, .decimal);
pub const __TVOS_16_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160400, .decimal);
pub const __TVOS_16_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160500, .decimal);
pub const __TVOS_16_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 160600, .decimal);
pub const __TVOS_17_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170000, .decimal);
pub const __TVOS_17_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170100, .decimal);
pub const __TVOS_17_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170200, .decimal);
pub const __TVOS_17_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170300, .decimal);
pub const __TVOS_17_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170400, .decimal);
pub const __TVOS_17_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170500, .decimal);
pub const __TVOS_17_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 170600, .decimal);
pub const __TVOS_18_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180000, .decimal);
pub const __TVOS_18_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180100, .decimal);
pub const __TVOS_18_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180200, .decimal);
pub const __TVOS_18_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180300, .decimal);
pub const __TVOS_18_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180400, .decimal);
pub const __TVOS_18_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 180500, .decimal);
pub const __BRIDGEOS_2_0 = @as(c_int, 20000);
pub const __BRIDGEOS_3_0 = @as(c_int, 30000);
pub const __BRIDGEOS_3_1 = @as(c_int, 30100);
pub const __BRIDGEOS_3_4 = @as(c_int, 30400);
pub const __BRIDGEOS_4_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40000, .decimal);
pub const __BRIDGEOS_4_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 40100, .decimal);
pub const __BRIDGEOS_5_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50000, .decimal);
pub const __BRIDGEOS_5_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50100, .decimal);
pub const __BRIDGEOS_5_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 50300, .decimal);
pub const __BRIDGEOS_6_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60000, .decimal);
pub const __BRIDGEOS_6_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60200, .decimal);
pub const __BRIDGEOS_6_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60400, .decimal);
pub const __BRIDGEOS_6_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60500, .decimal);
pub const __BRIDGEOS_6_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 60600, .decimal);
pub const __BRIDGEOS_7_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70000, .decimal);
pub const __BRIDGEOS_7_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70100, .decimal);
pub const __BRIDGEOS_7_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70200, .decimal);
pub const __BRIDGEOS_7_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70300, .decimal);
pub const __BRIDGEOS_7_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70400, .decimal);
pub const __BRIDGEOS_7_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 70600, .decimal);
pub const __BRIDGEOS_8_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80000, .decimal);
pub const __BRIDGEOS_8_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80100, .decimal);
pub const __BRIDGEOS_8_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80200, .decimal);
pub const __BRIDGEOS_8_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80300, .decimal);
pub const __BRIDGEOS_8_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80400, .decimal);
pub const __BRIDGEOS_8_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80500, .decimal);
pub const __BRIDGEOS_8_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 80600, .decimal);
pub const __BRIDGEOS_9_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90000, .decimal);
pub const __BRIDGEOS_9_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90100, .decimal);
pub const __BRIDGEOS_9_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90200, .decimal);
pub const __BRIDGEOS_9_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90300, .decimal);
pub const __BRIDGEOS_9_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90400, .decimal);
pub const __BRIDGEOS_9_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 90500, .decimal);
pub const __DRIVERKIT_19_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 190000, .decimal);
pub const __DRIVERKIT_20_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 200000, .decimal);
pub const __DRIVERKIT_21_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 210000, .decimal);
pub const __DRIVERKIT_22_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220000, .decimal);
pub const __DRIVERKIT_22_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220400, .decimal);
pub const __DRIVERKIT_22_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220500, .decimal);
pub const __DRIVERKIT_22_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 220600, .decimal);
pub const __DRIVERKIT_23_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230000, .decimal);
pub const __DRIVERKIT_23_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230100, .decimal);
pub const __DRIVERKIT_23_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230200, .decimal);
pub const __DRIVERKIT_23_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230300, .decimal);
pub const __DRIVERKIT_23_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230400, .decimal);
pub const __DRIVERKIT_23_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230500, .decimal);
pub const __DRIVERKIT_23_6 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 230600, .decimal);
pub const __DRIVERKIT_24_0 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 240000, .decimal);
pub const __DRIVERKIT_24_1 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 240100, .decimal);
pub const __DRIVERKIT_24_2 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 240200, .decimal);
pub const __DRIVERKIT_24_3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 240300, .decimal);
pub const __DRIVERKIT_24_4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 240400, .decimal);
pub const __DRIVERKIT_24_5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 240500, .decimal);
pub const __VISIONOS_1_0 = @as(c_int, 10000);
pub const __VISIONOS_1_1 = @as(c_int, 10100);
pub const __VISIONOS_1_2 = @as(c_int, 10200);
pub const __VISIONOS_1_3 = @as(c_int, 10300);
pub const __VISIONOS_2_0 = @as(c_int, 20000);
pub const __VISIONOS_2_1 = @as(c_int, 20100);
pub const __VISIONOS_2_2 = @as(c_int, 20200);
pub const __VISIONOS_2_3 = @as(c_int, 20300);
pub const __VISIONOS_2_4 = @as(c_int, 20400);
pub const __VISIONOS_2_5 = @as(c_int, 20500);
pub const MAC_OS_X_VERSION_10_0 = __MAC_10_0;
pub const MAC_OS_X_VERSION_10_1 = __MAC_10_1;
pub const MAC_OS_X_VERSION_10_2 = __MAC_10_2;
pub const MAC_OS_X_VERSION_10_3 = __MAC_10_3;
pub const MAC_OS_X_VERSION_10_4 = __MAC_10_4;
pub const MAC_OS_X_VERSION_10_5 = __MAC_10_5;
pub const MAC_OS_X_VERSION_10_6 = __MAC_10_6;
pub const MAC_OS_X_VERSION_10_7 = __MAC_10_7;
pub const MAC_OS_X_VERSION_10_8 = __MAC_10_8;
pub const MAC_OS_X_VERSION_10_9 = __MAC_10_9;
pub const MAC_OS_X_VERSION_10_10 = __MAC_10_10;
pub const MAC_OS_X_VERSION_10_10_2 = __MAC_10_10_2;
pub const MAC_OS_X_VERSION_10_10_3 = __MAC_10_10_3;
pub const MAC_OS_X_VERSION_10_11 = __MAC_10_11;
pub const MAC_OS_X_VERSION_10_11_2 = __MAC_10_11_2;
pub const MAC_OS_X_VERSION_10_11_3 = __MAC_10_11_3;
pub const MAC_OS_X_VERSION_10_11_4 = __MAC_10_11_4;
pub const MAC_OS_X_VERSION_10_12 = __MAC_10_12;
pub const MAC_OS_X_VERSION_10_12_1 = __MAC_10_12_1;
pub const MAC_OS_X_VERSION_10_12_2 = __MAC_10_12_2;
pub const MAC_OS_X_VERSION_10_12_4 = __MAC_10_12_4;
pub const MAC_OS_X_VERSION_10_13 = __MAC_10_13;
pub const MAC_OS_X_VERSION_10_13_1 = __MAC_10_13_1;
pub const MAC_OS_X_VERSION_10_13_2 = __MAC_10_13_2;
pub const MAC_OS_X_VERSION_10_13_4 = __MAC_10_13_4;
pub const MAC_OS_X_VERSION_10_14 = __MAC_10_14;
pub const MAC_OS_X_VERSION_10_14_1 = __MAC_10_14_1;
pub const MAC_OS_X_VERSION_10_14_4 = __MAC_10_14_4;
pub const MAC_OS_X_VERSION_10_14_5 = __MAC_10_14_5;
pub const MAC_OS_X_VERSION_10_14_6 = __MAC_10_14_6;
pub const MAC_OS_X_VERSION_10_15 = __MAC_10_15;
pub const MAC_OS_X_VERSION_10_15_1 = __MAC_10_15_1;
pub const MAC_OS_X_VERSION_10_15_4 = __MAC_10_15_4;
pub const MAC_OS_X_VERSION_10_16 = __MAC_10_16;
pub const MAC_OS_VERSION_11_0 = __MAC_11_0;
pub const MAC_OS_VERSION_11_1 = __MAC_11_1;
pub const MAC_OS_VERSION_11_3 = __MAC_11_3;
pub const MAC_OS_VERSION_11_4 = __MAC_11_4;
pub const MAC_OS_VERSION_11_5 = __MAC_11_5;
pub const MAC_OS_VERSION_11_6 = __MAC_11_6;
pub const MAC_OS_VERSION_12_0 = __MAC_12_0;
pub const MAC_OS_VERSION_12_1 = __MAC_12_1;
pub const MAC_OS_VERSION_12_2 = __MAC_12_2;
pub const MAC_OS_VERSION_12_3 = __MAC_12_3;
pub const MAC_OS_VERSION_12_4 = __MAC_12_4;
pub const MAC_OS_VERSION_12_5 = __MAC_12_5;
pub const MAC_OS_VERSION_12_6 = __MAC_12_6;
pub const MAC_OS_VERSION_12_7 = __MAC_12_7;
pub const MAC_OS_VERSION_13_0 = __MAC_13_0;
pub const MAC_OS_VERSION_13_1 = __MAC_13_1;
pub const MAC_OS_VERSION_13_2 = __MAC_13_2;
pub const MAC_OS_VERSION_13_3 = __MAC_13_3;
pub const MAC_OS_VERSION_13_4 = __MAC_13_4;
pub const MAC_OS_VERSION_13_5 = __MAC_13_5;
pub const MAC_OS_VERSION_13_6 = __MAC_13_6;
pub const MAC_OS_VERSION_13_7 = __MAC_13_7;
pub const MAC_OS_VERSION_14_0 = __MAC_14_0;
pub const MAC_OS_VERSION_14_1 = __MAC_14_1;
pub const MAC_OS_VERSION_14_2 = __MAC_14_2;
pub const MAC_OS_VERSION_14_3 = __MAC_14_3;
pub const MAC_OS_VERSION_14_4 = __MAC_14_4;
pub const MAC_OS_VERSION_14_5 = __MAC_14_5;
pub const MAC_OS_VERSION_14_6 = __MAC_14_6;
pub const MAC_OS_VERSION_14_7 = __MAC_14_7;
pub const MAC_OS_VERSION_15_0 = __MAC_15_0;
pub const MAC_OS_VERSION_15_1 = __MAC_15_1;
pub const MAC_OS_VERSION_15_2 = __MAC_15_2;
pub const MAC_OS_VERSION_15_3 = __MAC_15_3;
pub const MAC_OS_VERSION_15_4 = __MAC_15_4;
pub const MAC_OS_VERSION_15_5 = __MAC_15_5;
pub const __AVAILABILITY_VERSIONS_VERSION_HASH = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 93585900, .decimal);
pub const __AVAILABILITY_VERSIONS_VERSION_STRING = "Local";
pub const __AVAILABILITY_FILE = "AvailabilityVersions.h";
pub const __AVAILABILITY_INTERNAL__ = "";
pub const __MAC_OS_X_VERSION_MIN_REQUIRED = __ENVIRONMENT_OS_VERSION_MIN_REQUIRED__;
pub const __MAC_OS_X_VERSION_MAX_ALLOWED = __MAC_15_5;
pub const __AVAILABILITY_INTERNAL_DEPRECATED = @compileError("unable to translate macro: undefined identifier `deprecated`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:130:9
pub const __AVAILABILITY_INTERNAL_DEPRECATED_MSG = @compileError("unable to translate macro: undefined identifier `deprecated`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:133:17
pub const __AVAILABILITY_INTERNAL_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `unavailable`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:142:9
pub const __AVAILABILITY_INTERNAL_WEAK_IMPORT = @compileError("unable to translate macro: undefined identifier `weak_import`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:143:9
pub const __AVAILABILITY_INTERNAL_REGULAR = "";
pub const __API_AVAILABLE_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:148:12
pub const __API_DEPRECATED_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:149:12
pub const __API_OBSOLETED_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:150:12
pub const __API_UNAVAILABLE_PLATFORM_macos = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:151:12
pub const __API_AVAILABLE_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:152:12
pub const __API_DEPRECATED_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:153:12
pub const __API_OBSOLETED_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:154:12
pub const __API_UNAVAILABLE_PLATFORM_macosx = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:155:12
pub const __API_AVAILABLE_PLATFORM_macOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `macOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:156:12
pub const __API_DEPRECATED_PLATFORM_macOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `macOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:157:12
pub const __API_OBSOLETED_PLATFORM_macOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `macOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:158:12
pub const __API_UNAVAILABLE_PLATFORM_macOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `macOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:159:12
pub const __API_AVAILABLE_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:160:12
pub const __API_DEPRECATED_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:161:12
pub const __API_OBSOLETED_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:162:12
pub const __API_UNAVAILABLE_PLATFORM_ios = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:163:12
pub const __API_AVAILABLE_PLATFORM_iOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `iOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:164:12
pub const __API_DEPRECATED_PLATFORM_iOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `iOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:165:12
pub const __API_OBSOLETED_PLATFORM_iOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `iOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:166:12
pub const __API_UNAVAILABLE_PLATFORM_iOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `iOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:167:12
pub const __API_AVAILABLE_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:168:12
pub const __API_DEPRECATED_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:169:12
pub const __API_OBSOLETED_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:170:12
pub const __API_UNAVAILABLE_PLATFORM_macCatalyst = @compileError("unable to translate macro: undefined identifier `macCatalyst`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:171:12
pub const __API_AVAILABLE_PLATFORM_macCatalystApplicationExtension = @compileError("unable to translate macro: undefined identifier `macCatalystApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:172:12
pub const __API_DEPRECATED_PLATFORM_macCatalystApplicationExtension = @compileError("unable to translate macro: undefined identifier `macCatalystApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:173:12
pub const __API_OBSOLETED_PLATFORM_macCatalystApplicationExtension = @compileError("unable to translate macro: undefined identifier `macCatalystApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:174:12
pub const __API_UNAVAILABLE_PLATFORM_macCatalystApplicationExtension = @compileError("unable to translate macro: undefined identifier `macCatalystApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:175:12
pub const __API_AVAILABLE_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:176:12
pub const __API_DEPRECATED_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:177:12
pub const __API_OBSOLETED_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:178:12
pub const __API_UNAVAILABLE_PLATFORM_watchos = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:179:12
pub const __API_AVAILABLE_PLATFORM_watchOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `watchOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:180:12
pub const __API_DEPRECATED_PLATFORM_watchOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `watchOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:181:12
pub const __API_OBSOLETED_PLATFORM_watchOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `watchOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:182:12
pub const __API_UNAVAILABLE_PLATFORM_watchOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `watchOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:183:12
pub const __API_AVAILABLE_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:184:12
pub const __API_DEPRECATED_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:185:12
pub const __API_OBSOLETED_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:186:12
pub const __API_UNAVAILABLE_PLATFORM_tvos = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:187:12
pub const __API_AVAILABLE_PLATFORM_tvOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `tvOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:188:12
pub const __API_DEPRECATED_PLATFORM_tvOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `tvOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:189:12
pub const __API_OBSOLETED_PLATFORM_tvOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `tvOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:190:12
pub const __API_UNAVAILABLE_PLATFORM_tvOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `tvOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:191:12
pub const __API_AVAILABLE_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:193:12
pub const __API_DEPRECATED_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:194:12
pub const __API_OBSOLETED_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:195:12
pub const __API_UNAVAILABLE_PLATFORM_driverkit = @compileError("unable to translate macro: undefined identifier `driverkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:196:12
pub const __API_AVAILABLE_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:197:12
pub const __API_DEPRECATED_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:198:12
pub const __API_OBSOLETED_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:199:12
pub const __API_UNAVAILABLE_PLATFORM_visionos = @compileError("unable to translate macro: undefined identifier `visionos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:200:12
pub const __API_AVAILABLE_PLATFORM_visionOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `visionOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:201:12
pub const __API_DEPRECATED_PLATFORM_visionOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `visionOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:202:12
pub const __API_OBSOLETED_PLATFORM_visionOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `visionOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:203:12
pub const __API_UNAVAILABLE_PLATFORM_visionOSApplicationExtension = @compileError("unable to translate macro: undefined identifier `visionOSApplicationExtension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:204:12
pub const __API_UNAVAILABLE_PLATFORM_kernelkit = @compileError("unable to translate macro: undefined identifier `kernelkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:206:12
pub const __API_APPLY_TO = @compileError("unable to translate macro: undefined identifier `any`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:216:11
pub inline fn __API_RANGE_STRINGIFY(x: anytype) @TypeOf(__API_RANGE_STRINGIFY2(x)) {
    _ = &x;
    return __API_RANGE_STRINGIFY2(x);
}
pub const __API_RANGE_STRINGIFY2 = @compileError("unable to translate C expr: unexpected token '#'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:218:11
pub const __API_A = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:232:13
pub inline fn __API_AVAILABLE0(arg0: anytype) @TypeOf(__API_A(arg0)) {
    _ = &arg0;
    return __API_A(arg0);
}
pub inline fn __API_AVAILABLE1(arg0: anytype, arg1: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_A(arg0) ++ __API_A(arg1);
}
pub inline fn __API_AVAILABLE2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2);
}
pub inline fn __API_AVAILABLE3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3);
}
pub inline fn __API_AVAILABLE4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4);
}
pub inline fn __API_AVAILABLE5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5);
}
pub inline fn __API_AVAILABLE6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6);
}
pub inline fn __API_AVAILABLE7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7);
}
pub inline fn __API_AVAILABLE8(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8);
}
pub inline fn __API_AVAILABLE9(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9);
}
pub inline fn __API_AVAILABLE10(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10);
}
pub inline fn __API_AVAILABLE11(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11);
}
pub inline fn __API_AVAILABLE12(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11) ++ __API_A(arg12)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11) ++ __API_A(arg12);
}
pub inline fn __API_AVAILABLE13(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11) ++ __API_A(arg12) ++ __API_A(arg13)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11) ++ __API_A(arg12) ++ __API_A(arg13);
}
pub inline fn __API_AVAILABLE14(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11) ++ __API_A(arg12) ++ __API_A(arg13) ++ __API_A(arg14)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11) ++ __API_A(arg12) ++ __API_A(arg13) ++ __API_A(arg14);
}
pub inline fn __API_AVAILABLE15(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11) ++ __API_A(arg12) ++ __API_A(arg13) ++ __API_A(arg14) ++ __API_A(arg15)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_A(arg0) ++ __API_A(arg1) ++ __API_A(arg2) ++ __API_A(arg3) ++ __API_A(arg4) ++ __API_A(arg5) ++ __API_A(arg6) ++ __API_A(arg7) ++ __API_A(arg8) ++ __API_A(arg9) ++ __API_A(arg10) ++ __API_A(arg11) ++ __API_A(arg12) ++ __API_A(arg13) ++ __API_A(arg14) ++ __API_A(arg15);
}
pub const __API_AVAILABLE_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:250:13
pub const __API_A_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:252:13
pub inline fn __API_AVAILABLE_BEGIN0(arg0: anytype) @TypeOf(__API_A_BEGIN(arg0)) {
    _ = &arg0;
    return __API_A_BEGIN(arg0);
}
pub inline fn __API_AVAILABLE_BEGIN1(arg0: anytype, arg1: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1);
}
pub inline fn __API_AVAILABLE_BEGIN2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2);
}
pub inline fn __API_AVAILABLE_BEGIN3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3);
}
pub inline fn __API_AVAILABLE_BEGIN4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4);
}
pub inline fn __API_AVAILABLE_BEGIN5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5);
}
pub inline fn __API_AVAILABLE_BEGIN6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6);
}
pub inline fn __API_AVAILABLE_BEGIN7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7);
}
pub inline fn __API_AVAILABLE_BEGIN8(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8);
}
pub inline fn __API_AVAILABLE_BEGIN9(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9);
}
pub inline fn __API_AVAILABLE_BEGIN10(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10);
}
pub inline fn __API_AVAILABLE_BEGIN11(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11);
}
pub inline fn __API_AVAILABLE_BEGIN12(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11) ++ __API_A_BEGIN(arg12)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11) ++ __API_A_BEGIN(arg12);
}
pub inline fn __API_AVAILABLE_BEGIN13(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11) ++ __API_A_BEGIN(arg12) ++ __API_A_BEGIN(arg13)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11) ++ __API_A_BEGIN(arg12) ++ __API_A_BEGIN(arg13);
}
pub inline fn __API_AVAILABLE_BEGIN14(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11) ++ __API_A_BEGIN(arg12) ++ __API_A_BEGIN(arg13) ++ __API_A_BEGIN(arg14)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11) ++ __API_A_BEGIN(arg12) ++ __API_A_BEGIN(arg13) ++ __API_A_BEGIN(arg14);
}
pub inline fn __API_AVAILABLE_BEGIN15(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11) ++ __API_A_BEGIN(arg12) ++ __API_A_BEGIN(arg13) ++ __API_A_BEGIN(arg14) ++ __API_A_BEGIN(arg15)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_A_BEGIN(arg0) ++ __API_A_BEGIN(arg1) ++ __API_A_BEGIN(arg2) ++ __API_A_BEGIN(arg3) ++ __API_A_BEGIN(arg4) ++ __API_A_BEGIN(arg5) ++ __API_A_BEGIN(arg6) ++ __API_A_BEGIN(arg7) ++ __API_A_BEGIN(arg8) ++ __API_A_BEGIN(arg9) ++ __API_A_BEGIN(arg10) ++ __API_A_BEGIN(arg11) ++ __API_A_BEGIN(arg12) ++ __API_A_BEGIN(arg13) ++ __API_A_BEGIN(arg14) ++ __API_A_BEGIN(arg15);
}
pub const __API_AVAILABLE_BEGIN_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:270:13
pub const __API_D = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:274:13
pub inline fn __API_DEPRECATED_MSG0(msg: anytype, arg0: anytype) @TypeOf(__API_D(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_D(msg, arg0);
}
pub inline fn __API_DEPRECATED_MSG1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1);
}
pub inline fn __API_DEPRECATED_MSG2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2);
}
pub inline fn __API_DEPRECATED_MSG3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3);
}
pub inline fn __API_DEPRECATED_MSG4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4);
}
pub inline fn __API_DEPRECATED_MSG5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5);
}
pub inline fn __API_DEPRECATED_MSG6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6);
}
pub inline fn __API_DEPRECATED_MSG7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7);
}
pub inline fn __API_DEPRECATED_MSG8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8);
}
pub inline fn __API_DEPRECATED_MSG9(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9);
}
pub inline fn __API_DEPRECATED_MSG10(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10);
}
pub inline fn __API_DEPRECATED_MSG11(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11);
}
pub inline fn __API_DEPRECATED_MSG12(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11) ++ __API_D(msg, arg12)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11) ++ __API_D(msg, arg12);
}
pub inline fn __API_DEPRECATED_MSG13(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11) ++ __API_D(msg, arg12) ++ __API_D(msg, arg13)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11) ++ __API_D(msg, arg12) ++ __API_D(msg, arg13);
}
pub inline fn __API_DEPRECATED_MSG14(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11) ++ __API_D(msg, arg12) ++ __API_D(msg, arg13) ++ __API_D(msg, arg14)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11) ++ __API_D(msg, arg12) ++ __API_D(msg, arg13) ++ __API_D(msg, arg14);
}
pub inline fn __API_DEPRECATED_MSG15(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11) ++ __API_D(msg, arg12) ++ __API_D(msg, arg13) ++ __API_D(msg, arg14) ++ __API_D(msg, arg15)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_D(msg, arg0) ++ __API_D(msg, arg1) ++ __API_D(msg, arg2) ++ __API_D(msg, arg3) ++ __API_D(msg, arg4) ++ __API_D(msg, arg5) ++ __API_D(msg, arg6) ++ __API_D(msg, arg7) ++ __API_D(msg, arg8) ++ __API_D(msg, arg9) ++ __API_D(msg, arg10) ++ __API_D(msg, arg11) ++ __API_D(msg, arg12) ++ __API_D(msg, arg13) ++ __API_D(msg, arg14) ++ __API_D(msg, arg15);
}
pub const __API_DEPRECATED_MSG_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:292:13
pub const __API_D_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:294:13
pub inline fn __API_DEPRECATED_BEGIN0(msg: anytype, arg0: anytype) @TypeOf(__API_D_BEGIN(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_D_BEGIN(msg, arg0);
}
pub inline fn __API_DEPRECATED_BEGIN1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1);
}
pub inline fn __API_DEPRECATED_BEGIN2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2);
}
pub inline fn __API_DEPRECATED_BEGIN3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3);
}
pub inline fn __API_DEPRECATED_BEGIN4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4);
}
pub inline fn __API_DEPRECATED_BEGIN5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5);
}
pub inline fn __API_DEPRECATED_BEGIN6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6);
}
pub inline fn __API_DEPRECATED_BEGIN7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7);
}
pub inline fn __API_DEPRECATED_BEGIN8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8);
}
pub inline fn __API_DEPRECATED_BEGIN9(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9);
}
pub inline fn __API_DEPRECATED_BEGIN10(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10);
}
pub inline fn __API_DEPRECATED_BEGIN11(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11);
}
pub inline fn __API_DEPRECATED_BEGIN12(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11) ++ __API_D_BEGIN(msg, arg12)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11) ++ __API_D_BEGIN(msg, arg12);
}
pub inline fn __API_DEPRECATED_BEGIN13(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11) ++ __API_D_BEGIN(msg, arg12) ++ __API_D_BEGIN(msg, arg13)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11) ++ __API_D_BEGIN(msg, arg12) ++ __API_D_BEGIN(msg, arg13);
}
pub inline fn __API_DEPRECATED_BEGIN14(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11) ++ __API_D_BEGIN(msg, arg12) ++ __API_D_BEGIN(msg, arg13) ++ __API_D_BEGIN(msg, arg14)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11) ++ __API_D_BEGIN(msg, arg12) ++ __API_D_BEGIN(msg, arg13) ++ __API_D_BEGIN(msg, arg14);
}
pub inline fn __API_DEPRECATED_BEGIN15(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11) ++ __API_D_BEGIN(msg, arg12) ++ __API_D_BEGIN(msg, arg13) ++ __API_D_BEGIN(msg, arg14) ++ __API_D_BEGIN(msg, arg15)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_D_BEGIN(msg, arg0) ++ __API_D_BEGIN(msg, arg1) ++ __API_D_BEGIN(msg, arg2) ++ __API_D_BEGIN(msg, arg3) ++ __API_D_BEGIN(msg, arg4) ++ __API_D_BEGIN(msg, arg5) ++ __API_D_BEGIN(msg, arg6) ++ __API_D_BEGIN(msg, arg7) ++ __API_D_BEGIN(msg, arg8) ++ __API_D_BEGIN(msg, arg9) ++ __API_D_BEGIN(msg, arg10) ++ __API_D_BEGIN(msg, arg11) ++ __API_D_BEGIN(msg, arg12) ++ __API_D_BEGIN(msg, arg13) ++ __API_D_BEGIN(msg, arg14) ++ __API_D_BEGIN(msg, arg15);
}
pub const __API_DEPRECATED_BEGIN_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:312:13
pub const __API_DR = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:315:17
pub inline fn __API_DEPRECATED_REP0(msg: anytype, arg0: anytype) @TypeOf(__API_DR(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_DR(msg, arg0);
}
pub inline fn __API_DEPRECATED_REP1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1);
}
pub inline fn __API_DEPRECATED_REP2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2);
}
pub inline fn __API_DEPRECATED_REP3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3);
}
pub inline fn __API_DEPRECATED_REP4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4);
}
pub inline fn __API_DEPRECATED_REP5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5);
}
pub inline fn __API_DEPRECATED_REP6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6);
}
pub inline fn __API_DEPRECATED_REP7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7);
}
pub inline fn __API_DEPRECATED_REP8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8);
}
pub inline fn __API_DEPRECATED_REP9(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9);
}
pub inline fn __API_DEPRECATED_REP10(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10);
}
pub inline fn __API_DEPRECATED_REP11(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11);
}
pub inline fn __API_DEPRECATED_REP12(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11) ++ __API_DR(msg, arg12)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11) ++ __API_DR(msg, arg12);
}
pub inline fn __API_DEPRECATED_REP13(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11) ++ __API_DR(msg, arg12) ++ __API_DR(msg, arg13)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11) ++ __API_DR(msg, arg12) ++ __API_DR(msg, arg13);
}
pub inline fn __API_DEPRECATED_REP14(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11) ++ __API_DR(msg, arg12) ++ __API_DR(msg, arg13) ++ __API_DR(msg, arg14)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11) ++ __API_DR(msg, arg12) ++ __API_DR(msg, arg13) ++ __API_DR(msg, arg14);
}
pub inline fn __API_DEPRECATED_REP15(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11) ++ __API_DR(msg, arg12) ++ __API_DR(msg, arg13) ++ __API_DR(msg, arg14) ++ __API_DR(msg, arg15)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_DR(msg, arg0) ++ __API_DR(msg, arg1) ++ __API_DR(msg, arg2) ++ __API_DR(msg, arg3) ++ __API_DR(msg, arg4) ++ __API_DR(msg, arg5) ++ __API_DR(msg, arg6) ++ __API_DR(msg, arg7) ++ __API_DR(msg, arg8) ++ __API_DR(msg, arg9) ++ __API_DR(msg, arg10) ++ __API_DR(msg, arg11) ++ __API_DR(msg, arg12) ++ __API_DR(msg, arg13) ++ __API_DR(msg, arg14) ++ __API_DR(msg, arg15);
}
pub const __API_DEPRECATED_REP_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:336:13
pub const __API_DR_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:339:17
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN0(msg: anytype, arg0: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_DR_BEGIN(msg, arg0);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN9(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN10(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN11(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN12(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11) ++ __API_DR_BEGIN(msg, arg12)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11) ++ __API_DR_BEGIN(msg, arg12);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN13(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11) ++ __API_DR_BEGIN(msg, arg12) ++ __API_DR_BEGIN(msg, arg13)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11) ++ __API_DR_BEGIN(msg, arg12) ++ __API_DR_BEGIN(msg, arg13);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN14(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11) ++ __API_DR_BEGIN(msg, arg12) ++ __API_DR_BEGIN(msg, arg13) ++ __API_DR_BEGIN(msg, arg14)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11) ++ __API_DR_BEGIN(msg, arg12) ++ __API_DR_BEGIN(msg, arg13) ++ __API_DR_BEGIN(msg, arg14);
}
pub inline fn __API_DEPRECATED_WITH_REPLACEMENT_BEGIN15(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11) ++ __API_DR_BEGIN(msg, arg12) ++ __API_DR_BEGIN(msg, arg13) ++ __API_DR_BEGIN(msg, arg14) ++ __API_DR_BEGIN(msg, arg15)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_DR_BEGIN(msg, arg0) ++ __API_DR_BEGIN(msg, arg1) ++ __API_DR_BEGIN(msg, arg2) ++ __API_DR_BEGIN(msg, arg3) ++ __API_DR_BEGIN(msg, arg4) ++ __API_DR_BEGIN(msg, arg5) ++ __API_DR_BEGIN(msg, arg6) ++ __API_DR_BEGIN(msg, arg7) ++ __API_DR_BEGIN(msg, arg8) ++ __API_DR_BEGIN(msg, arg9) ++ __API_DR_BEGIN(msg, arg10) ++ __API_DR_BEGIN(msg, arg11) ++ __API_DR_BEGIN(msg, arg12) ++ __API_DR_BEGIN(msg, arg13) ++ __API_DR_BEGIN(msg, arg14) ++ __API_DR_BEGIN(msg, arg15);
}
pub const __API_DEPRECATED_WITH_REPLACEMENT_BEGIN_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:360:13
pub const __API_O = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:364:9
pub inline fn __API_OBSOLETED_MSG0(msg: anytype, arg0: anytype) @TypeOf(__API_O(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_O(msg, arg0);
}
pub inline fn __API_OBSOLETED_MSG1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1);
}
pub inline fn __API_OBSOLETED_MSG2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2);
}
pub inline fn __API_OBSOLETED_MSG3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3);
}
pub inline fn __API_OBSOLETED_MSG4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4);
}
pub inline fn __API_OBSOLETED_MSG5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5);
}
pub inline fn __API_OBSOLETED_MSG6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6);
}
pub inline fn __API_OBSOLETED_MSG7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7);
}
pub inline fn __API_OBSOLETED_MSG8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8);
}
pub inline fn __API_OBSOLETED_MSG9(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9);
}
pub inline fn __API_OBSOLETED_MSG10(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10);
}
pub inline fn __API_OBSOLETED_MSG11(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11);
}
pub inline fn __API_OBSOLETED_MSG12(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11) ++ __API_O(msg, arg12)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11) ++ __API_O(msg, arg12);
}
pub inline fn __API_OBSOLETED_MSG13(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11) ++ __API_O(msg, arg12) ++ __API_O(msg, arg13)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11) ++ __API_O(msg, arg12) ++ __API_O(msg, arg13);
}
pub inline fn __API_OBSOLETED_MSG14(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11) ++ __API_O(msg, arg12) ++ __API_O(msg, arg13) ++ __API_O(msg, arg14)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11) ++ __API_O(msg, arg12) ++ __API_O(msg, arg13) ++ __API_O(msg, arg14);
}
pub inline fn __API_OBSOLETED_MSG15(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11) ++ __API_O(msg, arg12) ++ __API_O(msg, arg13) ++ __API_O(msg, arg14) ++ __API_O(msg, arg15)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_O(msg, arg0) ++ __API_O(msg, arg1) ++ __API_O(msg, arg2) ++ __API_O(msg, arg3) ++ __API_O(msg, arg4) ++ __API_O(msg, arg5) ++ __API_O(msg, arg6) ++ __API_O(msg, arg7) ++ __API_O(msg, arg8) ++ __API_O(msg, arg9) ++ __API_O(msg, arg10) ++ __API_O(msg, arg11) ++ __API_O(msg, arg12) ++ __API_O(msg, arg13) ++ __API_O(msg, arg14) ++ __API_O(msg, arg15);
}
pub const __API_OBSOLETED_MSG_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:382:13
pub const __API_O_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:384:9
pub inline fn __API_OBSOLETED_BEGIN0(msg: anytype, arg0: anytype) @TypeOf(__API_O_BEGIN(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_O_BEGIN(msg, arg0);
}
pub inline fn __API_OBSOLETED_BEGIN1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1);
}
pub inline fn __API_OBSOLETED_BEGIN2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2);
}
pub inline fn __API_OBSOLETED_BEGIN3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3);
}
pub inline fn __API_OBSOLETED_BEGIN4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4);
}
pub inline fn __API_OBSOLETED_BEGIN5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5);
}
pub inline fn __API_OBSOLETED_BEGIN6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6);
}
pub inline fn __API_OBSOLETED_BEGIN7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7);
}
pub inline fn __API_OBSOLETED_BEGIN8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8);
}
pub inline fn __API_OBSOLETED_BEGIN9(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9);
}
pub inline fn __API_OBSOLETED_BEGIN10(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10);
}
pub inline fn __API_OBSOLETED_BEGIN11(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11);
}
pub inline fn __API_OBSOLETED_BEGIN12(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11) ++ __API_O_BEGIN(msg, arg12)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11) ++ __API_O_BEGIN(msg, arg12);
}
pub inline fn __API_OBSOLETED_BEGIN13(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11) ++ __API_O_BEGIN(msg, arg12) ++ __API_O_BEGIN(msg, arg13)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11) ++ __API_O_BEGIN(msg, arg12) ++ __API_O_BEGIN(msg, arg13);
}
pub inline fn __API_OBSOLETED_BEGIN14(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11) ++ __API_O_BEGIN(msg, arg12) ++ __API_O_BEGIN(msg, arg13) ++ __API_O_BEGIN(msg, arg14)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11) ++ __API_O_BEGIN(msg, arg12) ++ __API_O_BEGIN(msg, arg13) ++ __API_O_BEGIN(msg, arg14);
}
pub inline fn __API_OBSOLETED_BEGIN15(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11) ++ __API_O_BEGIN(msg, arg12) ++ __API_O_BEGIN(msg, arg13) ++ __API_O_BEGIN(msg, arg14) ++ __API_O_BEGIN(msg, arg15)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_O_BEGIN(msg, arg0) ++ __API_O_BEGIN(msg, arg1) ++ __API_O_BEGIN(msg, arg2) ++ __API_O_BEGIN(msg, arg3) ++ __API_O_BEGIN(msg, arg4) ++ __API_O_BEGIN(msg, arg5) ++ __API_O_BEGIN(msg, arg6) ++ __API_O_BEGIN(msg, arg7) ++ __API_O_BEGIN(msg, arg8) ++ __API_O_BEGIN(msg, arg9) ++ __API_O_BEGIN(msg, arg10) ++ __API_O_BEGIN(msg, arg11) ++ __API_O_BEGIN(msg, arg12) ++ __API_O_BEGIN(msg, arg13) ++ __API_O_BEGIN(msg, arg14) ++ __API_O_BEGIN(msg, arg15);
}
pub const __API_OBSOLETED_BEGIN_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:402:13
pub const __API_OR = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:405:13
pub inline fn __API_OBSOLETED_REP0(msg: anytype, arg0: anytype) @TypeOf(__API_OR(msg, arg0)) {
    _ = &msg;
    _ = &arg0;
    return __API_OR(msg, arg0);
}
pub inline fn __API_OBSOLETED_REP1(msg: anytype, arg0: anytype, arg1: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1);
}
pub inline fn __API_OBSOLETED_REP2(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2);
}
pub inline fn __API_OBSOLETED_REP3(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3);
}
pub inline fn __API_OBSOLETED_REP4(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4);
}
pub inline fn __API_OBSOLETED_REP5(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5);
}
pub inline fn __API_OBSOLETED_REP6(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6);
}
pub inline fn __API_OBSOLETED_REP7(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7);
}
pub inline fn __API_OBSOLETED_REP8(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8);
}
pub inline fn __API_OBSOLETED_REP9(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9);
}
pub inline fn __API_OBSOLETED_REP10(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10);
}
pub inline fn __API_OBSOLETED_REP11(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11);
}
pub inline fn __API_OBSOLETED_REP12(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11) ++ __API_OR(msg, arg12)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11) ++ __API_OR(msg, arg12);
}
pub inline fn __API_OBSOLETED_REP13(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11) ++ __API_OR(msg, arg12) ++ __API_OR(msg, arg13)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11) ++ __API_OR(msg, arg12) ++ __API_OR(msg, arg13);
}
pub inline fn __API_OBSOLETED_REP14(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11) ++ __API_OR(msg, arg12) ++ __API_OR(msg, arg13) ++ __API_OR(msg, arg14)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11) ++ __API_OR(msg, arg12) ++ __API_OR(msg, arg13) ++ __API_OR(msg, arg14);
}
pub inline fn __API_OBSOLETED_REP15(msg: anytype, arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11) ++ __API_OR(msg, arg12) ++ __API_OR(msg, arg13) ++ __API_OR(msg, arg14) ++ __API_OR(msg, arg15)) {
    _ = &msg;
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_OR(msg, arg0) ++ __API_OR(msg, arg1) ++ __API_OR(msg, arg2) ++ __API_OR(msg, arg3) ++ __API_OR(msg, arg4) ++ __API_OR(msg, arg5) ++ __API_OR(msg, arg6) ++ __API_OR(msg, arg7) ++ __API_OR(msg, arg8) ++ __API_OR(msg, arg9) ++ __API_OR(msg, arg10) ++ __API_OR(msg, arg11) ++ __API_OR(msg, arg12) ++ __API_OR(msg, arg13) ++ __API_OR(msg, arg14) ++ __API_OR(msg, arg15);
}
pub const __API_OBSOLETED_REP_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:426:13
pub const __API_OR_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:429:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN0 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:434:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN1 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:435:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN2 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:436:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN3 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:437:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN4 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:438:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN5 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:439:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN6 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:440:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN7 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:441:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN8 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:442:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN9 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:443:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN10 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:444:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN11 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:445:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN12 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:446:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN13 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:447:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN14 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:448:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN15 = @compileError("unable to translate macro: undefined identifier `__API_R_BEGIN`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:449:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:450:13
pub const __API_U = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:461:13
pub inline fn __API_UNAVAILABLE0(arg0: anytype) @TypeOf(__API_U(arg0)) {
    _ = &arg0;
    return __API_U(arg0);
}
pub inline fn __API_UNAVAILABLE1(arg0: anytype, arg1: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_U(arg0) ++ __API_U(arg1);
}
pub inline fn __API_UNAVAILABLE2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2);
}
pub inline fn __API_UNAVAILABLE3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3);
}
pub inline fn __API_UNAVAILABLE4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4);
}
pub inline fn __API_UNAVAILABLE5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5);
}
pub inline fn __API_UNAVAILABLE6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6);
}
pub inline fn __API_UNAVAILABLE7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7);
}
pub inline fn __API_UNAVAILABLE8(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8);
}
pub inline fn __API_UNAVAILABLE9(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9);
}
pub inline fn __API_UNAVAILABLE10(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10);
}
pub inline fn __API_UNAVAILABLE11(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11);
}
pub inline fn __API_UNAVAILABLE12(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11) ++ __API_U(arg12)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11) ++ __API_U(arg12);
}
pub inline fn __API_UNAVAILABLE13(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11) ++ __API_U(arg12) ++ __API_U(arg13)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11) ++ __API_U(arg12) ++ __API_U(arg13);
}
pub inline fn __API_UNAVAILABLE14(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11) ++ __API_U(arg12) ++ __API_U(arg13) ++ __API_U(arg14)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11) ++ __API_U(arg12) ++ __API_U(arg13) ++ __API_U(arg14);
}
pub inline fn __API_UNAVAILABLE15(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11) ++ __API_U(arg12) ++ __API_U(arg13) ++ __API_U(arg14) ++ __API_U(arg15)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_U(arg0) ++ __API_U(arg1) ++ __API_U(arg2) ++ __API_U(arg3) ++ __API_U(arg4) ++ __API_U(arg5) ++ __API_U(arg6) ++ __API_U(arg7) ++ __API_U(arg8) ++ __API_U(arg9) ++ __API_U(arg10) ++ __API_U(arg11) ++ __API_U(arg12) ++ __API_U(arg13) ++ __API_U(arg14) ++ __API_U(arg15);
}
pub const __API_UNAVAILABLE_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:479:13
pub const __API_U_BEGIN = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:481:13
pub inline fn __API_UNAVAILABLE_BEGIN0(arg0: anytype) @TypeOf(__API_U_BEGIN(arg0)) {
    _ = &arg0;
    return __API_U_BEGIN(arg0);
}
pub inline fn __API_UNAVAILABLE_BEGIN1(arg0: anytype, arg1: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1)) {
    _ = &arg0;
    _ = &arg1;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1);
}
pub inline fn __API_UNAVAILABLE_BEGIN2(arg0: anytype, arg1: anytype, arg2: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2);
}
pub inline fn __API_UNAVAILABLE_BEGIN3(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3);
}
pub inline fn __API_UNAVAILABLE_BEGIN4(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4);
}
pub inline fn __API_UNAVAILABLE_BEGIN5(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5);
}
pub inline fn __API_UNAVAILABLE_BEGIN6(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6);
}
pub inline fn __API_UNAVAILABLE_BEGIN7(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7);
}
pub inline fn __API_UNAVAILABLE_BEGIN8(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8);
}
pub inline fn __API_UNAVAILABLE_BEGIN9(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9);
}
pub inline fn __API_UNAVAILABLE_BEGIN10(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10);
}
pub inline fn __API_UNAVAILABLE_BEGIN11(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11);
}
pub inline fn __API_UNAVAILABLE_BEGIN12(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11) ++ __API_U_BEGIN(arg12)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11) ++ __API_U_BEGIN(arg12);
}
pub inline fn __API_UNAVAILABLE_BEGIN13(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11) ++ __API_U_BEGIN(arg12) ++ __API_U_BEGIN(arg13)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11) ++ __API_U_BEGIN(arg12) ++ __API_U_BEGIN(arg13);
}
pub inline fn __API_UNAVAILABLE_BEGIN14(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11) ++ __API_U_BEGIN(arg12) ++ __API_U_BEGIN(arg13) ++ __API_U_BEGIN(arg14)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11) ++ __API_U_BEGIN(arg12) ++ __API_U_BEGIN(arg13) ++ __API_U_BEGIN(arg14);
}
pub inline fn __API_UNAVAILABLE_BEGIN15(arg0: anytype, arg1: anytype, arg2: anytype, arg3: anytype, arg4: anytype, arg5: anytype, arg6: anytype, arg7: anytype, arg8: anytype, arg9: anytype, arg10: anytype, arg11: anytype, arg12: anytype, arg13: anytype, arg14: anytype, arg15: anytype) @TypeOf(__API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11) ++ __API_U_BEGIN(arg12) ++ __API_U_BEGIN(arg13) ++ __API_U_BEGIN(arg14) ++ __API_U_BEGIN(arg15)) {
    _ = &arg0;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    _ = &arg4;
    _ = &arg5;
    _ = &arg6;
    _ = &arg7;
    _ = &arg8;
    _ = &arg9;
    _ = &arg10;
    _ = &arg11;
    _ = &arg12;
    _ = &arg13;
    _ = &arg14;
    _ = &arg15;
    return __API_U_BEGIN(arg0) ++ __API_U_BEGIN(arg1) ++ __API_U_BEGIN(arg2) ++ __API_U_BEGIN(arg3) ++ __API_U_BEGIN(arg4) ++ __API_U_BEGIN(arg5) ++ __API_U_BEGIN(arg6) ++ __API_U_BEGIN(arg7) ++ __API_U_BEGIN(arg8) ++ __API_U_BEGIN(arg9) ++ __API_U_BEGIN(arg10) ++ __API_U_BEGIN(arg11) ++ __API_U_BEGIN(arg12) ++ __API_U_BEGIN(arg13) ++ __API_U_BEGIN(arg14) ++ __API_U_BEGIN(arg15);
}
pub const __API_UNAVAILABLE_BEGIN_GET_MACRO_93585900 = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:499:13
pub const __swift_compiler_version_at_least = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternal.h:521:13
pub const __AVAILABILITY_INTERNAL_LEGACY__ = "";
pub const __ENABLE_LEGACY_MAC_AVAILABILITY = @as(c_int, 1);
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2833:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2834:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2835:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2837:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2841:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2843:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2848:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2852:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2853:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2855:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2859:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2861:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2865:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2867:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2872:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2876:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2877:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2879:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2883:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2885:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2889:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2891:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2896:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2901:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2905:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2907:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2911:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2913:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2917:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2919:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2923:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2925:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2929:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2931:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2935:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2937:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2941:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2943:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2947:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2949:25
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2953:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2954:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2955:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2956:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2957:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2958:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2960:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2964:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2966:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2971:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2975:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2976:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2978:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2982:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2984:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2988:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2990:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2995:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:2999:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3000:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3002:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3006:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3008:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3012:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3014:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3019:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3023:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3024:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3026:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3030:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3032:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3036:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3038:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3042:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3044:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3048:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3050:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3054:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3056:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3060:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3062:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3066:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3068:25
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3072:21
pub const __AVAILABILITY_INTERNAL__MAC_10_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3073:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3074:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3075:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3076:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3077:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3079:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3083:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3085:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3090:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3094:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3095:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3097:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3101:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3103:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3107:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3109:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3114:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3118:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3119:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3121:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3125:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3127:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3131:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3133:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3138:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3142:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3143:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3145:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3149:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3151:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3155:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3157:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3161:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3163:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3167:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3169:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3173:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3175:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3179:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3181:25
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3185:21
pub const __AVAILABILITY_INTERNAL__MAC_10_3_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3186:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3187:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3188:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3189:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3190:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3192:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3196:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3198:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3203:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3207:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3208:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3210:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3214:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3216:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3220:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3222:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3227:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3231:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3232:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3234:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3238:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3240:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3244:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3246:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3251:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3255:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3256:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3258:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3262:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3264:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3268:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3270:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3274:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3276:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3280:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3282:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3286:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3288:25
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3292:21
pub const __AVAILABILITY_INTERNAL__MAC_10_4_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3293:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3294:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEPRECATED__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3295:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3296:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3297:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3298:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3300:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3304:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3306:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3311:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3315:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3316:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3318:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3322:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3324:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3328:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3330:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3335:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3339:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3340:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3342:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3346:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3348:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3352:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3354:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3359:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3363:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3365:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3369:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3371:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3375:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3377:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3381:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3383:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3387:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3389:25
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3393:21
pub const __AVAILABILITY_INTERNAL__MAC_10_5_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3394:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3395:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3396:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3397:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3398:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3400:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3404:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3406:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3411:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3415:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3416:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3418:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3422:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3424:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3428:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3430:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3435:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3439:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3440:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3442:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3446:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3448:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3452:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3454:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3459:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3463:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3464:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3466:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3470:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3472:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3476:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3478:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3482:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3484:25
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3488:21
pub const __AVAILABILITY_INTERNAL__MAC_10_6_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3489:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3490:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3491:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3492:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3493:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3495:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3499:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3501:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3506:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3510:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3511:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3513:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3517:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3519:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3523:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3525:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3530:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3534:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3535:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3537:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3541:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3543:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3547:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3549:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3554:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_13_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3558:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3559:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3561:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3565:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3567:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3571:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3573:25
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3577:21
pub const __AVAILABILITY_INTERNAL__MAC_10_7_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3578:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3579:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3580:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3581:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3582:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3584:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3588:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3590:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3595:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3599:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3600:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3602:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3606:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3608:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3612:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3614:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3619:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3623:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3624:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3626:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3630:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3632:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3636:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3638:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3643:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3647:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3648:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3650:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3654:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3656:25
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3660:21
pub const __AVAILABILITY_INTERNAL__MAC_10_8_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3661:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3662:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3663:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3664:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3665:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3667:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3671:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3673:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3678:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3682:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3683:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3685:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3689:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3691:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3695:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3697:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3702:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3706:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3707:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3709:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3713:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3715:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3719:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3721:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3726:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3730:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3731:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3732:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3734:25
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3738:21
pub const __AVAILABILITY_INTERNAL__MAC_10_9_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3739:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3740:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3741:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_0_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3743:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3747:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3748:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3749:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3751:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3755:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3757:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3762:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3766:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3767:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3769:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3773:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3775:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3779:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3781:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3786:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3790:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3791:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3793:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3797:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3799:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3803:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3805:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3810:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3814:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3816:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3820:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3822:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3826:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3828:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3832:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3834:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3838:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_5_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3840:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3844:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_6_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3846:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3850:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_7_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3852:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3856:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_8_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3858:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3862:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_9_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3864:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_10_13_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3869:25
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3873:21
pub const __AVAILABILITY_INTERNAL__MAC_10_0_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3874:21
pub const __AVAILABILITY_INTERNAL__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3875:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3876:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3877:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3878:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3880:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3884:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3886:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3890:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3891:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3893:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3897:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3899:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3903:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3905:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3910:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3914:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3915:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3917:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3921:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3923:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3927:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3929:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3934:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3938:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3939:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3940:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3941:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3943:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3947:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3948:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3950:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3954:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3956:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3960:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3962:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3967:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3971:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3972:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3974:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3978:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3980:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3984:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3986:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3991:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3995:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_3_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3996:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3997:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3998:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:3999:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4001:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4005:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4007:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_10_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4012:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4016:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4017:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4019:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4023:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4025:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4029:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4031:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4036:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4040:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4041:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4043:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4047:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4049:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4053:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4055:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4060:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4064:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_13_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4066:25
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_10_13_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4070:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4071:21
pub const __AVAILABILITY_INTERNAL__MAC_10_10_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4072:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4073:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4074:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4075:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4077:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4081:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4083:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4087:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4089:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4093:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4094:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4096:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4100:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4102:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4106:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4108:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4113:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4117:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4118:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4119:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4120:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4122:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4126:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4128:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4132:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4133:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4135:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4139:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4141:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4145:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4147:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4152:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4156:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_3_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4157:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4158:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4159:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4161:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4165:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4166:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4168:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4172:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4174:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4178:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4180:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4185:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4189:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_4_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4190:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4191:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4192:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4193:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4195:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4199:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_3_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4201:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4205:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4207:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_11_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4212:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4216:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4217:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4219:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4223:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4225:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4229:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4231:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4236:25
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4240:21
pub const __AVAILABILITY_INTERNAL__MAC_10_11_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4241:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4242:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4243:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4244:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4246:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4250:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4252:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4256:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4258:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4262:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_1_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4263:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4264:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4265:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4267:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4271:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4273:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4277:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_2_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4278:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4279:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4280:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4282:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4286:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_4_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4287:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4288:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_1 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4289:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_1_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4291:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_2 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4295:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_2_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4297:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4301:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_4_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4303:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_12_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4308:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4312:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_13_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4314:25
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_13_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4318:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4319:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4320:21
pub const __AVAILABILITY_INTERNAL__MAC_10_12_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4321:21
pub const __AVAILABILITY_INTERNAL__MAC_10_13 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4322:21
pub const __AVAILABILITY_INTERNAL__MAC_10_13_4 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4323:21
pub const __AVAILABILITY_INTERNAL__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4324:21
pub const __AVAILABILITY_INTERNAL__MAC_10_14_DEP__MAC_10_14 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4325:21
pub const __AVAILABILITY_INTERNAL__MAC_10_15 = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4326:21
pub const __AVAILABILITY_INTERNAL__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4328:21
pub const __AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4329:21
pub const __AVAILABILITY_INTERNAL__MAC_NA_DEP__MAC_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4330:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4332:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA__IPHONE_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4333:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4334:21
pub const __AVAILABILITY_INTERNAL__IPHONE_NA_DEP__IPHONE_NA_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4335:21
pub const __AVAILABILITY_INTERNAL__IPHONE_COMPAT_VERSION = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4338:22
pub const __AVAILABILITY_INTERNAL__IPHONE_COMPAT_VERSION_DEP__IPHONE_COMPAT_VERSION = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4339:22
pub const __AVAILABILITY_INTERNAL__IPHONE_COMPAT_VERSION_DEP__IPHONE_COMPAT_VERSION_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/AvailabilityInternalLegacy.h:4340:22
pub const __OSX_AVAILABLE_STARTING = @compileError("unable to translate macro: undefined identifier `__AVAILABILITY_INTERNAL`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:237:17
pub const __OSX_AVAILABLE_BUT_DEPRECATED = @compileError("unable to translate macro: undefined identifier `__AVAILABILITY_INTERNAL`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:238:17
pub const __OSX_AVAILABLE_BUT_DEPRECATED_MSG = @compileError("unable to translate macro: undefined identifier `__AVAILABILITY_INTERNAL`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:240:17
pub const __OS_AVAILABILITY = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:263:13
pub const __OS_AVAILABILITY_MSG = @compileError("unable to translate macro: undefined identifier `availability`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:264:13
pub const __OSX_EXTENSION_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `macosx_app_extension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:281:13
pub const __IOS_EXTENSION_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `ios_app_extension`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:282:13
pub inline fn __OS_EXTENSION_UNAVAILABLE(_msg: anytype) @TypeOf(__OSX_EXTENSION_UNAVAILABLE(_msg) ++ __IOS_EXTENSION_UNAVAILABLE(_msg)) {
    _ = &_msg;
    return __OSX_EXTENSION_UNAVAILABLE(_msg) ++ __IOS_EXTENSION_UNAVAILABLE(_msg);
}
pub const __OSX_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `macosx`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:299:13
pub const __OSX_AVAILABLE = @compileError("unable to translate macro: undefined identifier `macosx`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:300:13
pub const __OSX_DEPRECATED = @compileError("unable to translate macro: undefined identifier `macosx`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:301:13
pub const __IOS_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:325:13
pub const __IOS_PROHIBITED = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:327:15
pub const __IOS_AVAILABLE = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:329:13
pub const __IOS_DEPRECATED = @compileError("unable to translate macro: undefined identifier `ios`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:330:13
pub const __TVOS_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:354:13
pub const __TVOS_PROHIBITED = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:356:15
pub const __TVOS_AVAILABLE = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:358:13
pub const __TVOS_DEPRECATED = @compileError("unable to translate macro: undefined identifier `tvos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:359:13
pub const __WATCHOS_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:383:13
pub const __WATCHOS_PROHIBITED = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:385:15
pub const __WATCHOS_AVAILABLE = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:387:13
pub const __WATCHOS_DEPRECATED = @compileError("unable to translate macro: undefined identifier `watchos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:388:13
pub const __SWIFT_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `swift`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:411:13
pub const __SWIFT_UNAVAILABLE_MSG = @compileError("unable to translate macro: undefined identifier `swift`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:412:13
pub const __API_AVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:457:13
pub const __API_AVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:459:13
pub const __API_AVAILABLE_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:460:13
pub const __API_DEPRECATED = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:480:13
pub const __API_DEPRECATED_WITH_REPLACEMENT = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:481:13
pub const __API_DEPRECATED_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:483:13
pub const __API_DEPRECATED_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:484:13
pub const __API_DEPRECATED_WITH_REPLACEMENT_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:486:13
pub const __API_DEPRECATED_WITH_REPLACEMENT_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:487:13
pub const __API_OBSOLETED = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:490:13
pub const __API_OBSOLETED_WITH_REPLACEMENT = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:491:13
pub const __API_OBSOLETED_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:493:13
pub const __API_OBSOLETED_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:494:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:496:13
pub const __API_OBSOLETED_WITH_REPLACEMENT_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:497:13
pub const __API_UNAVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:507:13
pub const __API_UNAVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:509:13
pub const __API_UNAVAILABLE_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:510:13
pub const __SPI_AVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:595:11
pub const __SPI_AVAILABLE_BEGIN = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:599:11
pub const __SPI_AVAILABLE_END = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:603:11
pub const __SPI_DEPRECATED = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:607:11
pub const __SPI_DEPRECATED_WITH_REPLACEMENT = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/Availability.h:611:11
pub const _CDEFS_H_ = "";
pub const __BEGIN_DECLS = "";
pub const __END_DECLS = "";
pub inline fn __has_cpp_attribute(x: anytype) @TypeOf(@as(c_int, 0)) {
    _ = &x;
    return @as(c_int, 0);
}
pub inline fn __P(protos: anytype) @TypeOf(protos) {
    _ = &protos;
    return protos;
}
pub const __CONCAT = @compileError("unable to translate C expr: unexpected token '##'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:116:9
pub const __STRING = @compileError("unable to translate C expr: unexpected token '#'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:117:9
pub const __const = @compileError("unable to translate C expr: unexpected token 'const'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:119:9
pub const __signed = c_int;
pub const __volatile = @compileError("unable to translate C expr: unexpected token 'volatile'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:121:9
pub const __dead2 = @compileError("unable to translate macro: undefined identifier `__noreturn__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:165:9
pub const __pure2 = @compileError("unable to translate C expr: unexpected token '__attribute__'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:166:9
pub const __stateful_pure = @compileError("unable to translate macro: undefined identifier `__pure__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:167:9
pub const __unused = @compileError("unable to translate macro: undefined identifier `__unused__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:172:9
pub const __used = @compileError("unable to translate macro: undefined identifier `__used__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:177:9
pub const __cold = @compileError("unable to translate macro: undefined identifier `__cold__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:183:9
pub const __returns_nonnull = @compileError("unable to translate macro: undefined identifier `returns_nonnull`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:190:9
pub const __exported = @compileError("unable to translate macro: undefined identifier `__visibility__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:200:9
pub const __exported_push = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:201:9
pub const __exported_pop = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:202:9
pub const __deprecated = @compileError("unable to translate macro: undefined identifier `__deprecated__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:214:9
pub const __deprecated_msg = @compileError("unable to translate macro: undefined identifier `__deprecated__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:218:10
pub inline fn __deprecated_enum_msg(_msg: anytype) @TypeOf(__deprecated_msg(_msg)) {
    _ = &_msg;
    return __deprecated_msg(_msg);
}
pub const __kpi_deprecated = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:229:9
pub const __unavailable = @compileError("unable to translate macro: undefined identifier `__unavailable__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:235:9
pub const __kpi_unavailable = "";
pub const __kpi_deprecated_arm64_macos_unavailable = "";
pub const __dead = "";
pub const __pure = "";
pub const __restrict = @compileError("unable to translate C expr: unexpected token 'restrict'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:257:9
pub const __disable_tail_calls = @compileError("unable to translate macro: undefined identifier `__disable_tail_calls__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:290:9
pub const __not_tail_called = @compileError("unable to translate macro: undefined identifier `__not_tail_called__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:302:9
pub const __result_use_check = @compileError("unable to translate macro: undefined identifier `__warn_unused_result__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:313:9
pub const __swift_unavailable = @compileError("unable to translate macro: undefined identifier `__availability__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:323:9
pub const __swift_unavailable_from_async = @compileError("unable to translate macro: undefined identifier `__swift_attr__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:332:9
pub const __swift_nonisolated = @compileError("unable to translate macro: undefined identifier `__swift_attr__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:333:9
pub const __swift_nonisolated_unsafe = @compileError("unable to translate macro: undefined identifier `__swift_attr__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:334:9
pub const __abortlike = __dead2 ++ __cold ++ __not_tail_called;
pub const __header_inline = @compileError("unable to translate C expr: unexpected token 'inline'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:370:10
pub const __header_always_inline = @compileError("unable to translate macro: undefined identifier `__always_inline__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:383:10
pub const __unreachable_ok_push = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:396:10
pub const __unreachable_ok_pop = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:399:10
pub const __printflike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:420:9
pub const __printf0like = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:422:9
pub const __scanflike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:424:9
pub const __osloglike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:426:9
pub const __IDSTRING = @compileError("unable to translate C expr: unexpected token 'static'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:429:9
pub const __COPYRIGHT = @compileError("unable to translate macro: undefined identifier `copyright`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:432:9
pub const __RCSID = @compileError("unable to translate macro: undefined identifier `rcsid`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:436:9
pub const __SCCSID = @compileError("unable to translate macro: undefined identifier `sccsid`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:440:9
pub const __PROJECT_VERSION = @compileError("unable to translate macro: undefined identifier `project_version`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:444:9
pub const __FBSDID = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:449:9
pub const __DECONST = @compileError("unable to translate C expr: unexpected token 'const'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:453:9
pub const __DEVOLATILE = @compileError("unable to translate C expr: unexpected token 'volatile'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:457:9
pub const __DEQUALIFY = @compileError("unable to translate C expr: unexpected token 'const'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:461:9
pub const __alloc_align = @compileError("unable to translate macro: undefined identifier `alloc_align`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:470:9
pub const __alloc_size = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:491:9
pub const __has_safe_buffers = @as(c_int, 1);
pub const __unsafe_buffer_usage = @compileError("unable to translate macro: undefined identifier `__unsafe_buffer_usage__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:572:9
pub const __unsafe_buffer_usage_begin = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:578:9
pub const __unsafe_buffer_usage_end = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:579:9
pub const __DARWIN_ONLY_64_BIT_INO_T = @as(c_int, 1);
pub const __DARWIN_ONLY_UNIX_CONFORMANCE = @as(c_int, 1);
pub const __DARWIN_ONLY_VERS_1050 = @as(c_int, 1);
pub const __DARWIN_UNIX03 = @as(c_int, 1);
pub const __DARWIN_64_BIT_INO_T = @as(c_int, 1);
pub const __DARWIN_VERS_1050 = @as(c_int, 1);
pub const __DARWIN_NON_CANCELABLE = @as(c_int, 0);
pub const __DARWIN_SUF_UNIX03 = "";
pub const __DARWIN_SUF_64_BIT_INO_T = "";
pub const __DARWIN_SUF_1050 = "";
pub const __DARWIN_SUF_NON_CANCELABLE = "";
pub const __DARWIN_SUF_EXTSN = "$DARWIN_EXTSN";
pub const __DARWIN_ALIAS = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:764:9
pub const __DARWIN_ALIAS_C = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:765:9
pub const __DARWIN_ALIAS_I = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:766:9
pub const __DARWIN_NOCANCEL = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:767:9
pub const __DARWIN_INODE64 = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:768:9
pub const __DARWIN_1050 = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:770:9
pub const __DARWIN_1050ALIAS = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:771:9
pub const __DARWIN_1050ALIAS_C = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:772:9
pub const __DARWIN_1050ALIAS_I = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:773:9
pub const __DARWIN_1050INODE64 = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:774:9
pub const __DARWIN_EXTSN = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:776:9
pub const __DARWIN_EXTSN_C = @compileError("unable to translate C expr: unexpected token '__asm'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:777:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:35:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:41:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_2_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:47:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:53:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:59:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_3_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:65:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:71:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:77:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:83:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_4_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:89:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:95:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_5_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:101:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:107:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_6_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:113:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:119:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_7_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:125:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:131:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:137:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:143:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:149:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_8_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:155:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:161:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:167:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:173:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_9_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:179:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:185:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:191:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:197:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_10_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:203:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:209:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:215:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:221:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:227:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_11_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:233:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:239:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:245:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:251:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:257:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_12_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:263:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:269:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:275:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:281:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:287:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:293:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:299:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_6 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:305:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_13_7 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:311:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:317:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:323:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:329:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:335:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:341:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:347:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_6 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:359:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_7 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:365:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_14_8 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:371:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:377:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:383:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:389:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:395:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:401:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:407:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_6 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:413:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_7 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:419:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_15_8 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:425:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:431:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:437:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:443:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:449:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:455:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:461:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_6 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:467:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_16_7 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:473:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:479:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:485:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:491:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:497:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:503:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:509:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_6 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:515:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_17_7 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:521:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_18_0 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:527:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_18_1 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:533:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_18_2 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:539:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_18_3 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:545:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_18_4 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:551:9
pub const __DARWIN_ALIAS_STARTING_IPHONE___IPHONE_18_5 = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_symbol_aliasing.h:557:9
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_7(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_8(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_9(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_10(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_10_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_10_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_11_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_12_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_13_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_14_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_15(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_15_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_15_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_10_16(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_11_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_12_7(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_13_7(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_6(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_14_7(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_15_0(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_15_1(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_15_2(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_15_3(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_15_4(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn __DARWIN_ALIAS_STARTING_MAC___MAC_15_5(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub const __DARWIN_ALIAS_STARTING = @compileError("unable to translate macro: undefined identifier `__DARWIN_ALIAS_STARTING_MAC_`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:787:9
pub const ___POSIX_C_DEPRECATED_STARTING_198808L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199009L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199209L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199309L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_199506L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_200112L = "";
pub const ___POSIX_C_DEPRECATED_STARTING_200809L = "";
pub const __POSIX_C_DEPRECATED = @compileError("unable to translate macro: undefined identifier `___POSIX_C_DEPRECATED_STARTING_`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:850:9
pub const __DARWIN_C_ANSI = @as(c_long, 0o10000);
pub const __DARWIN_C_FULL = @as(c_long, 900000);
pub const __DARWIN_C_LEVEL = __DARWIN_C_FULL;
pub const __STDC_WANT_LIB_EXT1__ = @as(c_int, 1);
pub const __DARWIN_NO_LONG_LONG = @as(c_int, 0);
pub const _DARWIN_FEATURE_64_BIT_INODE = @as(c_int, 1);
pub const _DARWIN_FEATURE_ONLY_64_BIT_INODE = @as(c_int, 1);
pub const _DARWIN_FEATURE_ONLY_VERS_1050 = @as(c_int, 1);
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = @as(c_int, 1);
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE = @as(c_int, 3);
pub const __CAST_AWAY_QUALIFIER = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:948:9
pub const __XNU_PRIVATE_EXTERN = @compileError("unable to translate macro: undefined identifier `visibility`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:962:9
pub const __has_ptrcheck = @as(c_int, 0);
pub const __single = "";
pub const __unsafe_indexable = "";
pub const __counted_by = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:981:9
pub const __counted_by_or_null = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:982:9
pub const __sized_by = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:983:9
pub const __sized_by_or_null = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:984:9
pub const __ended_by = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:985:9
pub const __terminated_by = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:986:9
pub const __null_terminated = "";
pub const __ptrcheck_abi_assume_single = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:996:9
pub const __ptrcheck_abi_assume_unsafe_indexable = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:997:9
pub inline fn __unsafe_forge_bidi_indexable(T: anytype, P: anytype, S: anytype) @TypeOf(T(P)) {
    _ = &T;
    _ = &P;
    _ = &S;
    return T(P);
}
pub const __unsafe_forge_single = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub inline fn __unsafe_forge_terminated_by(T: anytype, P: anytype, E: anytype) @TypeOf(T(P)) {
    _ = &T;
    _ = &P;
    _ = &E;
    return T(P);
}
pub const __unsafe_forge_null_terminated = @import("std").zig.c_translation.Macros.CAST_OR_CALL;
pub inline fn __terminated_by_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub inline fn __unsafe_terminated_by_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub inline fn __null_terminated_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub inline fn __unsafe_null_terminated_to_indexable(P: anytype) @TypeOf(P) {
    _ = &P;
    return P;
}
pub const __unsafe_terminated_by_from_indexable = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1008:9
pub const __unsafe_null_terminated_from_indexable = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1009:9
pub const __array_decay_dicards_count_in_parameters = "";
pub const __unsafe_late_const = "";
pub const __ptrcheck_unavailable = "";
pub const __ptrcheck_unavailable_r = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1018:9
pub const __ASSUME_PTR_ABI_SINGLE_BEGIN = __ptrcheck_abi_assume_single();
pub const __ASSUME_PTR_ABI_SINGLE_END = __ptrcheck_abi_assume_unsafe_indexable();
pub const __header_indexable = "";
pub const __header_bidi_indexable = "";
pub const __compiler_barrier = @compileError("unable to translate C expr: unexpected token '__asm__'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1047:9
pub const __enum_open = @compileError("unable to translate macro: undefined identifier `__enum_extensibility__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1050:9
pub const __enum_closed = @compileError("unable to translate macro: undefined identifier `__enum_extensibility__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1051:9
pub const __enum_options = @compileError("unable to translate macro: undefined identifier `__flag_enum__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1058:9
pub const __enum_decl = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1071:9
pub const __enum_closed_decl = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1073:9
pub const __options_decl = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1075:9
pub const __options_closed_decl = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/cdefs.h:1077:9
pub const __kernel_ptr_semantics = "";
pub const __kernel_data_semantics = "";
pub const __kernel_dual_semantics = "";
pub const __xnu_data_size = "";
pub const __xnu_returns_data_pointer = "";
pub const _LIBC_BOUNDS_H_ = "";
pub const _LIBC_COUNT = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_bounds.h:47:9
pub const _LIBC_COUNT_OR_NULL = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_bounds.h:48:9
pub const _LIBC_SIZE = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_bounds.h:49:9
pub const _LIBC_SIZE_OR_NULL = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_bounds.h:50:9
pub const _LIBC_ENDED_BY = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_bounds.h:51:9
pub const _LIBC_SINGLE = "";
pub const _LIBC_UNSAFE_INDEXABLE = "";
pub const _LIBC_CSTR = "";
pub const _LIBC_NULL_TERMINATED = "";
pub inline fn _LIBC_FLEX_COUNT(FIELD: anytype, INTCOUNT: anytype) @TypeOf(INTCOUNT) {
    _ = &FIELD;
    _ = &INTCOUNT;
    return INTCOUNT;
}
pub const _LIBC_SINGLE_BY_DEFAULT = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_bounds.h:58:9
pub const _LIBC_PTRCHECK_REPLACED = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_bounds.h:59:9
pub const __TYPES_H_ = "";
pub const _SYS__TYPES_H_ = "";
pub const _BSD_MACHINE__TYPES_H_ = "";
pub const _BSD_ARM__TYPES_H_ = "";
pub const USE_CLANG_TYPES = @as(c_int, 0);
pub const __DARWIN_NULL = @import("std").zig.c_translation.cast(?*anyopaque, @as(c_int, 0));
pub const _SYS__PTHREAD_TYPES_H_ = "";
pub const __PTHREAD_SIZE__ = @as(c_int, 8176);
pub const __PTHREAD_ATTR_SIZE__ = @as(c_int, 56);
pub const __PTHREAD_MUTEXATTR_SIZE__ = @as(c_int, 8);
pub const __PTHREAD_MUTEX_SIZE__ = @as(c_int, 56);
pub const __PTHREAD_CONDATTR_SIZE__ = @as(c_int, 8);
pub const __PTHREAD_COND_SIZE__ = @as(c_int, 40);
pub const __PTHREAD_ONCE_SIZE__ = @as(c_int, 8);
pub const __PTHREAD_RWLOCK_SIZE__ = @as(c_int, 192);
pub const __PTHREAD_RWLOCKATTR_SIZE__ = @as(c_int, 16);
pub const __offsetof = @compileError("unable to translate C expr: unexpected token 'an identifier'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_types.h:97:9
pub const __strfmonlike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_types.h:34:9
pub const __strftimelike = @compileError("unable to translate macro: undefined identifier `__format__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_types.h:36:9
pub const __DARWIN_WCHAR_MAX = __WCHAR_MAX__;
pub const __DARWIN_WCHAR_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7fffffff, .hex) - @as(c_int, 1);
pub const __DARWIN_WEOF = @import("std").zig.c_translation.cast(__darwin_wint_t, -@as(c_int, 1));
pub const _FORTIFY_SOURCE = @as(c_int, 2);
pub const _SYS_WAIT_H_ = "";
pub const _PID_T = "";
pub const _ID_T = "";
pub const _SYS_SIGNAL_H_ = "";
pub const __SYS_APPLEAPIOPTS_H__ = "";
pub const __APPLE_API_STANDARD = "";
pub const __APPLE_API_STABLE = "";
pub const __APPLE_API_EVOLVING = "";
pub const __APPLE_API_UNSTABLE = "";
pub const __APPLE_API_PRIVATE = "";
pub const __APPLE_API_OBSOLETE = "";
pub const __DARWIN_NSIG = @as(c_int, 32);
pub const NSIG = __DARWIN_NSIG;
pub const _BSD_MACHINE_SIGNAL_H_ = "";
pub const _ARM_SIGNAL_ = @as(c_int, 1);
pub const SIGHUP = @as(c_int, 1);
pub const SIGINT = @as(c_int, 2);
pub const SIGQUIT = @as(c_int, 3);
pub const SIGILL = @as(c_int, 4);
pub const SIGTRAP = @as(c_int, 5);
pub const SIGABRT = @as(c_int, 6);
pub const SIGIOT = SIGABRT;
pub const SIGEMT = @as(c_int, 7);
pub const SIGFPE = @as(c_int, 8);
pub const SIGKILL = @as(c_int, 9);
pub const SIGBUS = @as(c_int, 10);
pub const SIGSEGV = @as(c_int, 11);
pub const SIGSYS = @as(c_int, 12);
pub const SIGPIPE = @as(c_int, 13);
pub const SIGALRM = @as(c_int, 14);
pub const SIGTERM = @as(c_int, 15);
pub const SIGURG = @as(c_int, 16);
pub const SIGSTOP = @as(c_int, 17);
pub const SIGTSTP = @as(c_int, 18);
pub const SIGCONT = @as(c_int, 19);
pub const SIGCHLD = @as(c_int, 20);
pub const SIGTTIN = @as(c_int, 21);
pub const SIGTTOU = @as(c_int, 22);
pub const SIGIO = @as(c_int, 23);
pub const SIGXCPU = @as(c_int, 24);
pub const SIGXFSZ = @as(c_int, 25);
pub const SIGVTALRM = @as(c_int, 26);
pub const SIGPROF = @as(c_int, 27);
pub const SIGWINCH = @as(c_int, 28);
pub const SIGINFO = @as(c_int, 29);
pub const SIGUSR1 = @as(c_int, 30);
pub const SIGUSR2 = @as(c_int, 31);
pub const SIG_DFL = @compileError("unable to translate C expr: expected ')' instead got '('");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/signal.h:131:9
pub const SIG_IGN = @compileError("unable to translate C expr: expected ')' instead got '('");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/signal.h:132:9
pub const SIG_HOLD = @compileError("unable to translate C expr: expected ')' instead got '('");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/signal.h:133:9
pub const SIG_ERR = @compileError("unable to translate C expr: expected ')' instead got '('");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/signal.h:134:9
pub const _BSD_MACHINE__MCONTEXT_H_ = "";
pub const __ARM_MCONTEXT_H_ = "";
pub const _MACH_MACHINE__STRUCTS_H_ = "";
pub const _MACH_ARM__STRUCTS_H_ = "";
pub const _BSD_MACHINE_TYPES_H_ = "";
pub const _ARM_MACHTYPES_H_ = "";
pub const _MACHTYPES_H_ = "";
pub const _INT8_T = "";
pub const _INT16_T = "";
pub const _INT32_T = "";
pub const _INT64_T = "";
pub const _U_INT8_T = "";
pub const _U_INT16_T = "";
pub const _U_INT32_T = "";
pub const _U_INT64_T = "";
pub const _INTPTR_T = "";
pub const _UINTPTR_T = "";
pub const USER_ADDR_NULL = @import("std").zig.c_translation.cast(user_addr_t, @as(c_int, 0));
pub inline fn CAST_USER_ADDR_T(a_ptr: anytype) user_addr_t {
    _ = &a_ptr;
    return @import("std").zig.c_translation.cast(user_addr_t, @import("std").zig.c_translation.cast(usize, a_ptr));
}
pub const _STRUCT_ARM_EXCEPTION_STATE = struct___darwin_arm_exception_state;
pub const _STRUCT_ARM_EXCEPTION_STATE64 = struct___darwin_arm_exception_state64;
pub const _STRUCT_ARM_EXCEPTION_STATE64_V2 = struct___darwin_arm_exception_state64_v2;
pub const _STRUCT_ARM_THREAD_STATE = struct___darwin_arm_thread_state;
pub const __DARWIN_OPAQUE_ARM_THREAD_STATE64 = @as(c_int, 0);
pub const _STRUCT_ARM_THREAD_STATE64 = struct___darwin_arm_thread_state64;
pub inline fn __darwin_arm_thread_state64_get_pc(ts: anytype) @TypeOf(ts.__pc) {
    _ = &ts;
    return ts.__pc;
}
pub inline fn __darwin_arm_thread_state64_get_pc_fptr(ts: anytype) ?*anyopaque {
    _ = &ts;
    return @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast(usize, ts.__pc));
}
pub const __darwin_arm_thread_state64_set_pc_fptr = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/_structs.h:436:9
pub const __darwin_arm_thread_state64_set_pc_presigned_fptr = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/_structs.h:439:9
pub inline fn __darwin_arm_thread_state64_get_lr(ts: anytype) @TypeOf(ts.__lr) {
    _ = &ts;
    return ts.__lr;
}
pub inline fn __darwin_arm_thread_state64_get_lr_fptr(ts: anytype) ?*anyopaque {
    _ = &ts;
    return @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast(usize, ts.__lr));
}
pub const __darwin_arm_thread_state64_set_lr_fptr = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/_structs.h:448:9
pub const __darwin_arm_thread_state64_set_lr_presigned_fptr = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/_structs.h:451:9
pub inline fn __darwin_arm_thread_state64_get_sp(ts: anytype) @TypeOf(ts.__sp) {
    _ = &ts;
    return ts.__sp;
}
pub const __darwin_arm_thread_state64_set_sp = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/_structs.h:457:9
pub inline fn __darwin_arm_thread_state64_get_fp(ts: anytype) @TypeOf(ts.__fp) {
    _ = &ts;
    return ts.__fp;
}
pub const __darwin_arm_thread_state64_set_fp = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/_structs.h:463:9
pub const __darwin_arm_thread_state64_ptrauth_strip = @import("std").zig.c_translation.Macros.DISCARD;
pub const _STRUCT_ARM_VFP_STATE = struct___darwin_arm_vfp_state;
pub const _STRUCT_ARM_NEON_STATE64 = struct___darwin_arm_neon_state64;
pub const _STRUCT_ARM_NEON_STATE = struct___darwin_arm_neon_state;
pub const _STRUCT_ARM_PAGEIN_STATE = struct___arm_pagein_state;
pub const _STRUCT_ARM_SME_STATE = struct___darwin_arm_sme_state;
pub const _STRUCT_ARM_SVE_Z_STATE = struct___darwin_arm_sve_z_state;
pub const _STRUCT_ARM_SVE_P_STATE = struct___darwin_arm_sve_p_state;
pub const _STRUCT_ARM_SME_ZA_STATE = struct___darwin_arm_sme_za_state;
pub const _STRUCT_ARM_SME2_STATE = struct___darwin_arm_sme2_state;
pub const _STRUCT_ARM_LEGACY_DEBUG_STATE = struct___arm_legacy_debug_state;
pub const _STRUCT_ARM_DEBUG_STATE32 = struct___darwin_arm_debug_state32;
pub const _STRUCT_ARM_DEBUG_STATE64 = struct___darwin_arm_debug_state64;
pub const _STRUCT_ARM_CPMU_STATE64 = struct___darwin_arm_cpmu_state64;
pub const _STRUCT_MCONTEXT32 = struct___darwin_mcontext32;
pub const _STRUCT_MCONTEXT64 = struct___darwin_mcontext64;
pub const _MCONTEXT_T = "";
pub const _STRUCT_MCONTEXT = _STRUCT_MCONTEXT64;
pub const _PTHREAD_ATTR_T = "";
pub const _STRUCT_SIGALTSTACK = struct___darwin_sigaltstack;
pub const _STRUCT_UCONTEXT = struct___darwin_ucontext;
pub const _SIGSET_T = "";
pub const USE_CLANG_STDDEF = @as(c_int, 0);
pub const _SIZE_T = "";
pub const _UID_T = "";
pub const SIGEV_NONE = @as(c_int, 0);
pub const SIGEV_SIGNAL = @as(c_int, 1);
pub const SIGEV_THREAD = @as(c_int, 3);
pub const ILL_NOOP = @as(c_int, 0);
pub const ILL_ILLOPC = @as(c_int, 1);
pub const ILL_ILLTRP = @as(c_int, 2);
pub const ILL_PRVOPC = @as(c_int, 3);
pub const ILL_ILLOPN = @as(c_int, 4);
pub const ILL_ILLADR = @as(c_int, 5);
pub const ILL_PRVREG = @as(c_int, 6);
pub const ILL_COPROC = @as(c_int, 7);
pub const ILL_BADSTK = @as(c_int, 8);
pub const FPE_NOOP = @as(c_int, 0);
pub const FPE_FLTDIV = @as(c_int, 1);
pub const FPE_FLTOVF = @as(c_int, 2);
pub const FPE_FLTUND = @as(c_int, 3);
pub const FPE_FLTRES = @as(c_int, 4);
pub const FPE_FLTINV = @as(c_int, 5);
pub const FPE_FLTSUB = @as(c_int, 6);
pub const FPE_INTDIV = @as(c_int, 7);
pub const FPE_INTOVF = @as(c_int, 8);
pub const SEGV_NOOP = @as(c_int, 0);
pub const SEGV_MAPERR = @as(c_int, 1);
pub const SEGV_ACCERR = @as(c_int, 2);
pub const BUS_NOOP = @as(c_int, 0);
pub const BUS_ADRALN = @as(c_int, 1);
pub const BUS_ADRERR = @as(c_int, 2);
pub const BUS_OBJERR = @as(c_int, 3);
pub const TRAP_BRKPT = @as(c_int, 1);
pub const TRAP_TRACE = @as(c_int, 2);
pub const CLD_NOOP = @as(c_int, 0);
pub const CLD_EXITED = @as(c_int, 1);
pub const CLD_KILLED = @as(c_int, 2);
pub const CLD_DUMPED = @as(c_int, 3);
pub const CLD_TRAPPED = @as(c_int, 4);
pub const CLD_STOPPED = @as(c_int, 5);
pub const CLD_CONTINUED = @as(c_int, 6);
pub const POLL_IN = @as(c_int, 1);
pub const POLL_OUT = @as(c_int, 2);
pub const POLL_MSG = @as(c_int, 3);
pub const POLL_ERR = @as(c_int, 4);
pub const POLL_PRI = @as(c_int, 5);
pub const POLL_HUP = @as(c_int, 6);
pub const sa_handler = __sigaction_u.__sa_handler;
pub const sa_sigaction = __sigaction_u.__sa_sigaction;
pub const SA_ONSTACK = @as(c_int, 0x0001);
pub const SA_RESTART = @as(c_int, 0x0002);
pub const SA_RESETHAND = @as(c_int, 0x0004);
pub const SA_NOCLDSTOP = @as(c_int, 0x0008);
pub const SA_NODEFER = @as(c_int, 0x0010);
pub const SA_NOCLDWAIT = @as(c_int, 0x0020);
pub const SA_SIGINFO = @as(c_int, 0x0040);
pub const SA_USERTRAMP = @as(c_int, 0x0100);
pub const SA_64REGSET = @as(c_int, 0x0200);
pub const SA_USERSPACE_MASK = (((((SA_ONSTACK | SA_RESTART) | SA_RESETHAND) | SA_NOCLDSTOP) | SA_NODEFER) | SA_NOCLDWAIT) | SA_SIGINFO;
pub const SIG_BLOCK = @as(c_int, 1);
pub const SIG_UNBLOCK = @as(c_int, 2);
pub const SIG_SETMASK = @as(c_int, 3);
pub const SI_USER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10001, .hex);
pub const SI_QUEUE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10002, .hex);
pub const SI_TIMER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10003, .hex);
pub const SI_ASYNCIO = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004, .hex);
pub const SI_MESGQ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10005, .hex);
pub const SS_ONSTACK = @as(c_int, 0x0001);
pub const SS_DISABLE = @as(c_int, 0x0004);
pub const MINSIGSTKSZ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const SIGSTKSZ = @import("std").zig.c_translation.promoteIntLiteral(c_int, 131072, .decimal);
pub const SV_ONSTACK = SA_ONSTACK;
pub const SV_INTERRUPT = SA_RESTART;
pub const SV_RESETHAND = SA_RESETHAND;
pub const SV_NODEFER = SA_NODEFER;
pub const SV_NOCLDSTOP = SA_NOCLDSTOP;
pub const SV_SIGINFO = SA_SIGINFO;
pub const sv_onstack = @compileError("unable to translate macro: undefined identifier `sv_flags`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/signal.h:361:9
pub inline fn sigmask(m: anytype) @TypeOf(@as(c_int, 1) << (m - @as(c_int, 1))) {
    _ = &m;
    return @as(c_int, 1) << (m - @as(c_int, 1));
}
pub const BADSIG = SIG_ERR;
pub const _SYS_RESOURCE_H_ = "";
pub const __CLANG_STDINT_H = "";
pub const _STDINT_H_ = "";
pub const __WORDSIZE = @as(c_int, 64);
pub const _UINT8_T = "";
pub const _UINT16_T = "";
pub const _UINT32_T = "";
pub const _UINT64_T = "";
pub const _INTMAX_T = "";
pub const _UINTMAX_T = "";
pub inline fn INT8_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub inline fn INT16_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub inline fn INT32_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub const INT64_C = @import("std").zig.c_translation.Macros.LL_SUFFIX;
pub inline fn UINT8_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub inline fn UINT16_C(v: anytype) @TypeOf(v) {
    _ = &v;
    return v;
}
pub const UINT32_C = @import("std").zig.c_translation.Macros.U_SUFFIX;
pub const UINT64_C = @import("std").zig.c_translation.Macros.ULL_SUFFIX;
pub const INTMAX_C = @import("std").zig.c_translation.Macros.L_SUFFIX;
pub const UINTMAX_C = @import("std").zig.c_translation.Macros.UL_SUFFIX;
pub const INT8_MAX = @as(c_int, 127);
pub const INT16_MAX = @as(c_int, 32767);
pub const INT32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const INT64_MAX = @as(c_longlong, 9223372036854775807);
pub const INT8_MIN = -@as(c_int, 128);
pub const INT16_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const INT32_MIN = -INT32_MAX - @as(c_int, 1);
pub const INT64_MIN = -INT64_MAX - @as(c_int, 1);
pub const UINT8_MAX = @as(c_int, 255);
pub const UINT16_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const UINT32_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 4294967295, .decimal);
pub const UINT64_MAX = @as(c_ulonglong, 18446744073709551615);
pub const INT_LEAST8_MIN = INT8_MIN;
pub const INT_LEAST16_MIN = INT16_MIN;
pub const INT_LEAST32_MIN = INT32_MIN;
pub const INT_LEAST64_MIN = INT64_MIN;
pub const INT_LEAST8_MAX = INT8_MAX;
pub const INT_LEAST16_MAX = INT16_MAX;
pub const INT_LEAST32_MAX = INT32_MAX;
pub const INT_LEAST64_MAX = INT64_MAX;
pub const UINT_LEAST8_MAX = UINT8_MAX;
pub const UINT_LEAST16_MAX = UINT16_MAX;
pub const UINT_LEAST32_MAX = UINT32_MAX;
pub const UINT_LEAST64_MAX = UINT64_MAX;
pub const INT_FAST8_MIN = INT8_MIN;
pub const INT_FAST16_MIN = INT16_MIN;
pub const INT_FAST32_MIN = INT32_MIN;
pub const INT_FAST64_MIN = INT64_MIN;
pub const INT_FAST8_MAX = INT8_MAX;
pub const INT_FAST16_MAX = INT16_MAX;
pub const INT_FAST32_MAX = INT32_MAX;
pub const INT_FAST64_MAX = INT64_MAX;
pub const UINT_FAST8_MAX = UINT8_MAX;
pub const UINT_FAST16_MAX = UINT16_MAX;
pub const UINT_FAST32_MAX = UINT32_MAX;
pub const UINT_FAST64_MAX = UINT64_MAX;
pub const INTPTR_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_long, 9223372036854775807, .decimal);
pub const INTPTR_MIN = -INTPTR_MAX - @as(c_int, 1);
pub const UINTPTR_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 18446744073709551615, .decimal);
pub const INTMAX_MAX = INTMAX_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 9223372036854775807, .decimal));
pub const UINTMAX_MAX = UINTMAX_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 18446744073709551615, .decimal));
pub const INTMAX_MIN = -INTMAX_MAX - @as(c_int, 1);
pub const PTRDIFF_MIN = INTMAX_MIN;
pub const PTRDIFF_MAX = INTMAX_MAX;
pub const SIZE_MAX = UINTPTR_MAX;
pub const RSIZE_MAX = SIZE_MAX >> @as(c_int, 1);
pub const WCHAR_MAX = __WCHAR_MAX__;
pub const WCHAR_MIN = -WCHAR_MAX - @as(c_int, 1);
pub const WINT_MIN = INT32_MIN;
pub const WINT_MAX = INT32_MAX;
pub const SIG_ATOMIC_MIN = INT32_MIN;
pub const SIG_ATOMIC_MAX = INT32_MAX;
pub const _STRUCT_TIMEVAL = struct_timeval;
pub const PRIO_PROCESS = @as(c_int, 0);
pub const PRIO_PGRP = @as(c_int, 1);
pub const PRIO_USER = @as(c_int, 2);
pub const PRIO_DARWIN_THREAD = @as(c_int, 3);
pub const PRIO_DARWIN_PROCESS = @as(c_int, 4);
pub const PRIO_MIN = -@as(c_int, 20);
pub const PRIO_MAX = @as(c_int, 20);
pub const PRIO_DARWIN_BG = @as(c_int, 0x1000);
pub const PRIO_DARWIN_NONUI = @as(c_int, 0x1001);
pub const RUSAGE_SELF = @as(c_int, 0);
pub const RUSAGE_CHILDREN = -@as(c_int, 1);
pub const ru_first = @compileError("unable to translate macro: undefined identifier `ru_ixrss`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/resource.h:164:9
pub const ru_last = @compileError("unable to translate macro: undefined identifier `ru_nivcsw`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/resource.h:178:9
pub const RUSAGE_INFO_V0 = @as(c_int, 0);
pub const RUSAGE_INFO_V1 = @as(c_int, 1);
pub const RUSAGE_INFO_V2 = @as(c_int, 2);
pub const RUSAGE_INFO_V3 = @as(c_int, 3);
pub const RUSAGE_INFO_V4 = @as(c_int, 4);
pub const RUSAGE_INFO_V5 = @as(c_int, 5);
pub const RUSAGE_INFO_V6 = @as(c_int, 6);
pub const RUSAGE_INFO_CURRENT = RUSAGE_INFO_V6;
pub const RU_PROC_RUNS_RESLIDE = @as(c_int, 0x00000001);
pub const RLIM_INFINITY = (@import("std").zig.c_translation.cast(__uint64_t, @as(c_int, 1)) << @as(c_int, 63)) - @as(c_int, 1);
pub const RLIM_SAVED_MAX = RLIM_INFINITY;
pub const RLIM_SAVED_CUR = RLIM_INFINITY;
pub const RLIMIT_CPU = @as(c_int, 0);
pub const RLIMIT_FSIZE = @as(c_int, 1);
pub const RLIMIT_DATA = @as(c_int, 2);
pub const RLIMIT_STACK = @as(c_int, 3);
pub const RLIMIT_CORE = @as(c_int, 4);
pub const RLIMIT_AS = @as(c_int, 5);
pub const RLIMIT_RSS = RLIMIT_AS;
pub const RLIMIT_MEMLOCK = @as(c_int, 6);
pub const RLIMIT_NPROC = @as(c_int, 7);
pub const RLIMIT_NOFILE = @as(c_int, 8);
pub const RLIM_NLIMITS = @as(c_int, 9);
pub const _RLIMIT_POSIX_FLAG = @as(c_int, 0x1000);
pub const RLIMIT_WAKEUPS_MONITOR = @as(c_int, 0x1);
pub const RLIMIT_CPU_USAGE_MONITOR = @as(c_int, 0x2);
pub const RLIMIT_THREAD_CPULIMITS = @as(c_int, 0x3);
pub const RLIMIT_FOOTPRINT_INTERVAL = @as(c_int, 0x4);
pub const WAKEMON_ENABLE = @as(c_int, 0x01);
pub const WAKEMON_DISABLE = @as(c_int, 0x02);
pub const WAKEMON_GET_PARAMS = @as(c_int, 0x04);
pub const WAKEMON_SET_DEFAULTS = @as(c_int, 0x08);
pub const WAKEMON_MAKE_FATAL = @as(c_int, 0x10);
pub const CPUMON_MAKE_FATAL = @as(c_int, 0x1000);
pub const FOOTPRINT_INTERVAL_RESET = @as(c_int, 0x1);
pub const IOPOL_TYPE_DISK = @as(c_int, 0);
pub const IOPOL_TYPE_VFS_ATIME_UPDATES = @as(c_int, 2);
pub const IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES = @as(c_int, 3);
pub const IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME = @as(c_int, 4);
pub const IOPOL_TYPE_VFS_TRIGGER_RESOLVE = @as(c_int, 5);
pub const IOPOL_TYPE_VFS_IGNORE_CONTENT_PROTECTION = @as(c_int, 6);
pub const IOPOL_TYPE_VFS_IGNORE_PERMISSIONS = @as(c_int, 7);
pub const IOPOL_TYPE_VFS_SKIP_MTIME_UPDATE = @as(c_int, 8);
pub const IOPOL_TYPE_VFS_ALLOW_LOW_SPACE_WRITES = @as(c_int, 9);
pub const IOPOL_TYPE_VFS_DISALLOW_RW_FOR_O_EVTONLY = @as(c_int, 10);
pub const IOPOL_SCOPE_PROCESS = @as(c_int, 0);
pub const IOPOL_SCOPE_THREAD = @as(c_int, 1);
pub const IOPOL_SCOPE_DARWIN_BG = @as(c_int, 2);
pub const IOPOL_DEFAULT = @as(c_int, 0);
pub const IOPOL_IMPORTANT = @as(c_int, 1);
pub const IOPOL_PASSIVE = @as(c_int, 2);
pub const IOPOL_THROTTLE = @as(c_int, 3);
pub const IOPOL_UTILITY = @as(c_int, 4);
pub const IOPOL_STANDARD = @as(c_int, 5);
pub const IOPOL_APPLICATION = IOPOL_STANDARD;
pub const IOPOL_NORMAL = IOPOL_IMPORTANT;
pub const IOPOL_ATIME_UPDATES_DEFAULT = @as(c_int, 0);
pub const IOPOL_ATIME_UPDATES_OFF = @as(c_int, 1);
pub const IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT = @as(c_int, 0);
pub const IOPOL_MATERIALIZE_DATALESS_FILES_OFF = @as(c_int, 1);
pub const IOPOL_MATERIALIZE_DATALESS_FILES_ON = @as(c_int, 2);
pub const IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME = @as(c_int, 1);
pub const IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_TRIGGER_RESOLVE_OFF = @as(c_int, 1);
pub const IOPOL_VFS_CONTENT_PROTECTION_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_CONTENT_PROTECTION_IGNORE = @as(c_int, 1);
pub const IOPOL_VFS_IGNORE_PERMISSIONS_OFF = @as(c_int, 0);
pub const IOPOL_VFS_IGNORE_PERMISSIONS_ON = @as(c_int, 1);
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_OFF = @as(c_int, 0);
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_ON = @as(c_int, 1);
pub const IOPOL_VFS_SKIP_MTIME_UPDATE_IGNORE = @as(c_int, 2);
pub const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_OFF = @as(c_int, 0);
pub const IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_ON = @as(c_int, 1);
pub const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_DISALLOW_RW_FOR_O_EVTONLY_ON = @as(c_int, 1);
pub const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_DEFAULT = @as(c_int, 0);
pub const IOPOL_VFS_NOCACHE_WRITE_FS_BLKSIZE_ON = @as(c_int, 1);
pub const WNOHANG = @as(c_int, 0x00000001);
pub const WUNTRACED = @as(c_int, 0x00000002);
pub inline fn _W_INT(w: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]c_int, &w).*) {
    _ = &w;
    return @import("std").zig.c_translation.cast([*c]c_int, &w).*;
}
pub const WCOREFLAG = @as(c_int, 0o200);
pub inline fn _WSTATUS(x: anytype) @TypeOf(_W_INT(x) & @as(c_int, 0o177)) {
    _ = &x;
    return _W_INT(x) & @as(c_int, 0o177);
}
pub const _WSTOPPED = @as(c_int, 0o177);
pub inline fn WEXITSTATUS(x: anytype) @TypeOf((_W_INT(x) >> @as(c_int, 8)) & @as(c_int, 0x000000ff)) {
    _ = &x;
    return (_W_INT(x) >> @as(c_int, 8)) & @as(c_int, 0x000000ff);
}
pub inline fn WSTOPSIG(x: anytype) @TypeOf(_W_INT(x) >> @as(c_int, 8)) {
    _ = &x;
    return _W_INT(x) >> @as(c_int, 8);
}
pub inline fn WIFCONTINUED(x: anytype) @TypeOf((_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) == @as(c_int, 0x13))) {
    _ = &x;
    return (_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) == @as(c_int, 0x13));
}
pub inline fn WIFSTOPPED(x: anytype) @TypeOf((_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) != @as(c_int, 0x13))) {
    _ = &x;
    return (_WSTATUS(x) == _WSTOPPED) and (WSTOPSIG(x) != @as(c_int, 0x13));
}
pub inline fn WIFEXITED(x: anytype) @TypeOf(_WSTATUS(x) == @as(c_int, 0)) {
    _ = &x;
    return _WSTATUS(x) == @as(c_int, 0);
}
pub inline fn WIFSIGNALED(x: anytype) @TypeOf((_WSTATUS(x) != _WSTOPPED) and (_WSTATUS(x) != @as(c_int, 0))) {
    _ = &x;
    return (_WSTATUS(x) != _WSTOPPED) and (_WSTATUS(x) != @as(c_int, 0));
}
pub inline fn WTERMSIG(x: anytype) @TypeOf(_WSTATUS(x)) {
    _ = &x;
    return _WSTATUS(x);
}
pub inline fn WCOREDUMP(x: anytype) @TypeOf(_W_INT(x) & WCOREFLAG) {
    _ = &x;
    return _W_INT(x) & WCOREFLAG;
}
pub inline fn W_EXITCODE(ret: anytype, sig: anytype) @TypeOf((ret << @as(c_int, 8)) | sig) {
    _ = &ret;
    _ = &sig;
    return (ret << @as(c_int, 8)) | sig;
}
pub inline fn W_STOPCODE(sig: anytype) @TypeOf((sig << @as(c_int, 8)) | _WSTOPPED) {
    _ = &sig;
    return (sig << @as(c_int, 8)) | _WSTOPPED;
}
pub const WEXITED = @as(c_int, 0x00000004);
pub const WSTOPPED = @as(c_int, 0x00000008);
pub const WCONTINUED = @as(c_int, 0x00000010);
pub const WNOWAIT = @as(c_int, 0x00000020);
pub const WAIT_ANY = -@as(c_int, 1);
pub const WAIT_MYPGRP = @as(c_int, 0);
pub const _BSD_MACHINE_ENDIAN_H_ = "";
pub const _ARM__ENDIAN_H_ = "";
pub const _QUAD_HIGHWORD = @as(c_int, 1);
pub const _QUAD_LOWWORD = @as(c_int, 0);
pub const _SYS__ENDIAN_H_ = "";
pub const _BSD_MACHINE__ENDIAN_H_ = "";
pub const _ARM___ENDIAN_H_ = "";
pub const _SYS___ENDIAN_H_ = "";
pub const __DARWIN_LITTLE_ENDIAN = @as(c_int, 1234);
pub const __DARWIN_BIG_ENDIAN = @as(c_int, 4321);
pub const __DARWIN_PDP_ENDIAN = @as(c_int, 3412);
pub const LITTLE_ENDIAN = __DARWIN_LITTLE_ENDIAN;
pub const BIG_ENDIAN = __DARWIN_BIG_ENDIAN;
pub const PDP_ENDIAN = __DARWIN_PDP_ENDIAN;
pub const __DARWIN_BYTE_ORDER = __DARWIN_LITTLE_ENDIAN;
pub const BYTE_ORDER = __DARWIN_BYTE_ORDER;
pub const _OS__OSBYTEORDER_H = "";
pub inline fn __DARWIN_OSSwapConstInt16(x: anytype) __uint16_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint16_t, ((@import("std").zig.c_translation.cast(__uint16_t, x) & @as(c_uint, 0xff00)) >> @as(c_int, 8)) | ((@import("std").zig.c_translation.cast(__uint16_t, x) & @as(c_uint, 0x00ff)) << @as(c_int, 8)));
}
pub inline fn __DARWIN_OSSwapConstInt32(x: anytype) __uint32_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint32_t, ((((@import("std").zig.c_translation.cast(__uint32_t, x) & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0xff000000, .hex)) >> @as(c_int, 24)) | ((@import("std").zig.c_translation.cast(__uint32_t, x) & @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x00ff0000, .hex)) >> @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint32_t, x) & @as(c_uint, 0x0000ff00)) << @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint32_t, x) & @as(c_uint, 0x000000ff)) << @as(c_int, 24)));
}
pub inline fn __DARWIN_OSSwapConstInt64(x: anytype) __uint64_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint64_t, ((((((((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0xff00000000000000)) >> @as(c_int, 56)) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x00ff000000000000)) >> @as(c_int, 40))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x0000ff0000000000)) >> @as(c_int, 24))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x000000ff00000000)) >> @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x00000000ff000000)) << @as(c_int, 8))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x0000000000ff0000)) << @as(c_int, 24))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x000000000000ff00)) << @as(c_int, 40))) | ((@import("std").zig.c_translation.cast(__uint64_t, x) & @as(c_ulonglong, 0x00000000000000ff)) << @as(c_int, 56)));
}
pub const _OS__OSBYTEORDERARM_H = "";
pub const __DARWIN_OS_INLINE = @compileError("unable to translate C expr: unexpected token 'static'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/libkern/arm/_OSByteOrder.h:38:17
pub inline fn __DARWIN_OSSwapInt16(x: anytype) __uint16_t {
    _ = &x;
    return @import("std").zig.c_translation.cast(__uint16_t, if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt16(x) else _OSSwapInt16(x));
}
pub inline fn __DARWIN_OSSwapInt32(x: anytype) @TypeOf(if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt32(x) else _OSSwapInt32(x)) {
    _ = &x;
    return if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt32(x) else _OSSwapInt32(x);
}
pub inline fn __DARWIN_OSSwapInt64(x: anytype) @TypeOf(if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt64(x) else _OSSwapInt64(x)) {
    _ = &x;
    return if (__builtin_constant_p(x)) __DARWIN_OSSwapConstInt64(x) else _OSSwapInt64(x);
}
pub inline fn ntohs(x: anytype) @TypeOf(__DARWIN_OSSwapInt16(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt16(x);
}
pub inline fn htons(x: anytype) @TypeOf(__DARWIN_OSSwapInt16(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt16(x);
}
pub inline fn ntohl(x: anytype) @TypeOf(__DARWIN_OSSwapInt32(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt32(x);
}
pub inline fn htonl(x: anytype) @TypeOf(__DARWIN_OSSwapInt32(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt32(x);
}
pub inline fn ntohll(x: anytype) @TypeOf(__DARWIN_OSSwapInt64(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt64(x);
}
pub inline fn htonll(x: anytype) @TypeOf(__DARWIN_OSSwapInt64(x)) {
    _ = &x;
    return __DARWIN_OSSwapInt64(x);
}
pub const NTOHL = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_endian.h:144:9
pub const NTOHS = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_endian.h:145:9
pub const NTOHLL = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_endian.h:146:9
pub const HTONL = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_endian.h:147:9
pub const HTONS = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_endian.h:148:9
pub const HTONLL = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_endian.h:149:9
pub const w_termsig = @compileError("unable to translate macro: undefined identifier `w_T`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/wait.h:229:9
pub const w_coredump = @compileError("unable to translate macro: undefined identifier `w_T`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/wait.h:230:9
pub const w_retcode = @compileError("unable to translate macro: undefined identifier `w_T`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/wait.h:231:9
pub const w_stopval = @compileError("unable to translate macro: undefined identifier `w_S`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/wait.h:232:9
pub const w_stopsig = @compileError("unable to translate macro: undefined identifier `w_S`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/wait.h:233:9
pub const _ALLOCA_H_ = "";
pub const __alloca = @compileError("unable to translate macro: undefined identifier `__builtin_alloca`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/alloca.h:43:9
pub const _CT_RUNE_T = "";
pub const _RUNE_T = "";
pub const _WCHAR_T = "";
pub const NULL = __DARWIN_NULL;
pub const EXIT_FAILURE = @as(c_int, 1);
pub const EXIT_SUCCESS = @as(c_int, 0);
pub const RAND_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7fffffff, .hex);
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:135:9: warning: macro 'MB_CUR_MAX' contains a runtime value, translated to function
pub inline fn MB_CUR_MAX() @TypeOf(__mb_cur_max) {
    return __mb_cur_max;
}
pub const _MALLOC_UNDERSCORE_MALLOC_H_ = "";
pub const _MALLOC_UNDERSCORE_MALLOC_TYPE_H_ = "";
pub const _MALLOC_UNDERSCORE_PTRCHECK_H_ = "";
pub const _MALLOC_TYPE_AVAILABILITY = @compileError("unable to translate macro: undefined identifier `macos`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/malloc/_malloc_type.h:45:9
pub const _MALLOC_TYPED = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/malloc/_malloc_type.h:85:9
pub const __ABORT_H_ = "";
pub const _DEV_T = "";
pub const _MODE_T = "";
pub const __bsearch_noescape = @compileError("unable to translate macro: undefined identifier `__noescape__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:297:9
pub const __sort_noescape = @compileError("unable to translate macro: undefined identifier `__noescape__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdlib.h:330:9
pub const _SYS_TYPES_H_ = "";
pub const _U_CHAR = "";
pub const _U_SHORT = "";
pub const _U_INT = "";
pub const _U_LONG = "";
pub const __DARWIN_UINT = "";
pub const _CADDR_T = "";
pub const _BLKCNT_T = "";
pub const _BLKSIZE_T = "";
pub const _GID_T = "";
pub const _IN_ADDR_T = "";
pub const _IN_PORT_T = "";
pub const _INO_T = "";
pub const _INO64_T = "";
pub const _KEY_T = "";
pub const _NLINK_T = "";
pub const _OFF_T = "";
pub inline fn major(x: anytype) i32 {
    _ = &x;
    return @import("std").zig.c_translation.cast(i32, (@import("std").zig.c_translation.cast(u_int32_t, x) >> @as(c_int, 24)) & @as(c_int, 0xff));
}
pub inline fn minor(x: anytype) i32 {
    _ = &x;
    return @import("std").zig.c_translation.cast(i32, x & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xffffff, .hex));
}
pub inline fn makedev(x: anytype, y: anytype) dev_t {
    _ = &x;
    _ = &y;
    return @import("std").zig.c_translation.cast(dev_t, (x << @as(c_int, 24)) | y);
}
pub const _CLOCK_T = "";
pub const _SSIZE_T = "";
pub const _TIME_T = "";
pub const _USECONDS_T = "";
pub const _SUSECONDS_T = "";
pub const _RSIZE_T = "";
pub const _ERRNO_T = "";
pub const _FD_SET = "";
pub const __DARWIN_FD_SETSIZE = @as(c_int, 1024);
pub const __DARWIN_NBBY = @as(c_int, 8);
pub const __DARWIN_NFDBITS = @import("std").zig.c_translation.sizeof(__int32_t) * __DARWIN_NBBY;
pub inline fn __DARWIN_howmany(x: anytype, y: anytype) @TypeOf(if (@import("std").zig.c_translation.MacroArithmetic.rem(x, y) == @as(c_int, 0)) @import("std").zig.c_translation.MacroArithmetic.div(x, y) else @import("std").zig.c_translation.MacroArithmetic.div(x, y) + @as(c_int, 1)) {
    _ = &x;
    _ = &y;
    return if (@import("std").zig.c_translation.MacroArithmetic.rem(x, y) == @as(c_int, 0)) @import("std").zig.c_translation.MacroArithmetic.div(x, y) else @import("std").zig.c_translation.MacroArithmetic.div(x, y) + @as(c_int, 1);
}
pub inline fn __DARWIN_FD_SET(n: anytype, p: anytype) @TypeOf(__darwin_fd_set(n, p)) {
    _ = &n;
    _ = &p;
    return __darwin_fd_set(n, p);
}
pub inline fn __DARWIN_FD_CLR(n: anytype, p: anytype) @TypeOf(__darwin_fd_clr(n, p)) {
    _ = &n;
    _ = &p;
    return __darwin_fd_clr(n, p);
}
pub inline fn __DARWIN_FD_ISSET(n: anytype, p: anytype) @TypeOf(__darwin_fd_isset(n, p)) {
    _ = &n;
    _ = &p;
    return __darwin_fd_isset(n, p);
}
pub const __DARWIN_FD_ZERO = @compileError("unable to translate macro: undefined identifier `__builtin_bzero`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_types/_fd_def.h:115:9
pub const __DARWIN_FD_COPY = @compileError("unable to translate C expr: unexpected token '*'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/_types/_fd_def.h:120:9
pub const NBBY = __DARWIN_NBBY;
pub const NFDBITS = __DARWIN_NFDBITS;
pub inline fn howmany(x: anytype, y: anytype) @TypeOf(__DARWIN_howmany(x, y)) {
    _ = &x;
    _ = &y;
    return __DARWIN_howmany(x, y);
}
pub const FD_SETSIZE = __DARWIN_FD_SETSIZE;
pub inline fn FD_SET(n: anytype, p: anytype) @TypeOf(__DARWIN_FD_SET(n, p)) {
    _ = &n;
    _ = &p;
    return __DARWIN_FD_SET(n, p);
}
pub inline fn FD_CLR(n: anytype, p: anytype) @TypeOf(__DARWIN_FD_CLR(n, p)) {
    _ = &n;
    _ = &p;
    return __DARWIN_FD_CLR(n, p);
}
pub inline fn FD_ZERO(p: anytype) @TypeOf(__DARWIN_FD_ZERO(p)) {
    _ = &p;
    return __DARWIN_FD_ZERO(p);
}
pub inline fn FD_ISSET(n: anytype, p: anytype) @TypeOf(__DARWIN_FD_ISSET(n, p)) {
    _ = &n;
    _ = &p;
    return __DARWIN_FD_ISSET(n, p);
}
pub inline fn FD_COPY(f: anytype, t: anytype) @TypeOf(__DARWIN_FD_COPY(f, t)) {
    _ = &f;
    _ = &t;
    return __DARWIN_FD_COPY(f, t);
}
pub const _PTHREAD_COND_T = "";
pub const _PTHREAD_CONDATTR_T = "";
pub const _PTHREAD_MUTEX_T = "";
pub const _PTHREAD_MUTEXATTR_T = "";
pub const _PTHREAD_ONCE_T = "";
pub const _PTHREAD_RWLOCK_T = "";
pub const _PTHREAD_RWLOCKATTR_T = "";
pub const _PTHREAD_T = "";
pub const _PTHREAD_KEY_T = "";
pub const _FSBLKCNT_T = "";
pub const _FSFILCNT_T = "";
pub const _SYS_SELECT_H_ = "";
pub const _STRUCT_TIMESPEC = struct_timespec;
pub const _SYS__SELECT_H_ = "";
pub const _STRING_H_ = "";
pub const __STRINGS_H_ = "";
pub const _SECURE__STRINGS_H_ = "";
pub const _SECURE__COMMON_H_ = "";
pub const _USE_FORTIFY_LEVEL = @as(c_int, 2);
pub inline fn __darwin_obsz0(object: anytype) @TypeOf(__builtin_object_size(object, @as(c_int, 0))) {
    _ = &object;
    return __builtin_object_size(object, @as(c_int, 0));
}
pub inline fn __darwin_obsz(object: anytype) @TypeOf(__builtin_object_size(object, if (_USE_FORTIFY_LEVEL > @as(c_int, 1)) @as(c_int, 1) else @as(c_int, 0))) {
    _ = &object;
    return __builtin_object_size(object, if (_USE_FORTIFY_LEVEL > @as(c_int, 1)) @as(c_int, 1) else @as(c_int, 0));
}
pub const _SECURE__STRING_H_ = "";
pub const __HAS_FIXED_CHK_PROTOTYPES = @as(c_int, 1);
pub const ZEND_PATHS_SEPARATOR = ':';
pub const TSRM_H = "";
pub const __STDBOOL_H = "";
pub const __bool_true_false_are_defined = @as(c_int, 1);
pub const @"bool" = bool;
pub const @"true" = @as(c_int, 1);
pub const @"false" = @as(c_int, 0);
pub const TSRM_API = @compileError("unable to translate macro: undefined identifier `visibility`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/../TSRM/TSRM.h:33:10
pub const tsrm_env_lock = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/../TSRM/TSRM.h:191:9
pub const tsrm_env_unlock = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/../TSRM/TSRM.h:192:9
pub const TSRMG_STATIC = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/../TSRM/TSRM.h:194:9
pub const TSRMLS_MAIN_CACHE_EXTERN = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/../TSRM/TSRM.h:195:9
pub const TSRMLS_MAIN_CACHE_DEFINE = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/../TSRM/TSRM.h:196:9
pub const TSRMLS_CACHE_EXTERN = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/../TSRM/TSRM.h:197:9
pub const TSRMLS_CACHE_DEFINE = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/../TSRM/TSRM.h:198:9
pub const TSRMLS_CACHE_UPDATE = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/../TSRM/TSRM.h:199:9
pub const TSRMLS_CACHE = "";
pub const TSRM_TLS = "";
pub const _STDIO_H_ = "";
pub const __STDIO_H_ = "";
pub const _VA_LIST_T = "";
pub const USE_CLANG_STDARG = @as(c_int, 0);
pub const _SYS_STDIO_H_ = "";
pub const RENAME_SECLUDE = @as(c_int, 0x00000001);
pub const RENAME_SWAP = @as(c_int, 0x00000002);
pub const RENAME_EXCL = @as(c_int, 0x00000004);
pub const RENAME_RESERVED1 = @as(c_int, 0x00000008);
pub const RENAME_NOFOLLOW_ANY = @as(c_int, 0x00000010);
pub const __PRINTF_H_ = "";
pub const _FSTDIO = "";
pub const _SEEK_SET_H_ = "";
pub const SEEK_SET = @as(c_int, 0);
pub const SEEK_CUR = @as(c_int, 1);
pub const SEEK_END = @as(c_int, 2);
pub const SEEK_HOLE = @as(c_int, 3);
pub const SEEK_DATA = @as(c_int, 4);
pub const __SLBF = @as(c_int, 0x0001);
pub const __SNBF = @as(c_int, 0x0002);
pub const __SRD = @as(c_int, 0x0004);
pub const __SWR = @as(c_int, 0x0008);
pub const __SRW = @as(c_int, 0x0010);
pub const __SEOF = @as(c_int, 0x0020);
pub const __SERR = @as(c_int, 0x0040);
pub const __SMBF = @as(c_int, 0x0080);
pub const __SAPP = @as(c_int, 0x0100);
pub const __SSTR = @as(c_int, 0x0200);
pub const __SOPT = @as(c_int, 0x0400);
pub const __SNPT = @as(c_int, 0x0800);
pub const __SOFF = @as(c_int, 0x1000);
pub const __SMOD = @as(c_int, 0x2000);
pub const __SALC = @as(c_int, 0x4000);
pub const __SIGN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8000, .hex);
pub const _IOFBF = @as(c_int, 0);
pub const _IOLBF = @as(c_int, 1);
pub const _IONBF = @as(c_int, 2);
pub const BUFSIZ = @as(c_int, 1024);
pub const EOF = -@as(c_int, 1);
pub const FOPEN_MAX = @as(c_int, 20);
pub const FILENAME_MAX = @as(c_int, 1024);
pub const P_tmpdir = "/var/tmp/";
pub const L_tmpnam = @as(c_int, 1024);
pub const TMP_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 308915776, .decimal);
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdio.h:217:9: warning: macro 'stdin' contains a runtime value, translated to function
pub inline fn stdin() @TypeOf(__stdinp) {
    return __stdinp;
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdio.h:218:9: warning: macro 'stdout' contains a runtime value, translated to function
pub inline fn stdout() @TypeOf(__stdoutp) {
    return __stdoutp;
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdio.h:219:9: warning: macro 'stderr' contains a runtime value, translated to function
pub inline fn stderr() @TypeOf(__stderrp) {
    return __stderrp;
}
pub const _CTERMID_H_ = "";
pub const L_ctermid = @as(c_int, 1024);
pub const __sgetc = @compileError("TODO unary inc/dec expr");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdio.h:359:9
pub inline fn __sfeof(p: anytype) @TypeOf((p.*._flags & __SEOF) != @as(c_int, 0)) {
    _ = &p;
    return (p.*._flags & __SEOF) != @as(c_int, 0);
}
pub inline fn __sferror(p: anytype) @TypeOf((p.*._flags & __SERR) != @as(c_int, 0)) {
    _ = &p;
    return (p.*._flags & __SERR) != @as(c_int, 0);
}
pub const __sclearerr = @compileError("unable to translate C expr: expected ')' instead got '&='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_stdio.h:383:9
pub inline fn __sfileno(p: anytype) @TypeOf(p.*._file) {
    _ = &p;
    return p.*._file;
}
pub inline fn fropen(cookie: anytype, @"fn": anytype) @TypeOf(funopen(cookie, @"fn", @as(c_int, 0), @as(c_int, 0), @as(c_int, 0))) {
    _ = &cookie;
    _ = &@"fn";
    return funopen(cookie, @"fn", @as(c_int, 0), @as(c_int, 0), @as(c_int, 0));
}
pub inline fn fwopen(cookie: anytype, @"fn": anytype) @TypeOf(funopen(cookie, @as(c_int, 0), @"fn", @as(c_int, 0), @as(c_int, 0))) {
    _ = &cookie;
    _ = &@"fn";
    return funopen(cookie, @as(c_int, 0), @"fn", @as(c_int, 0), @as(c_int, 0));
}
pub inline fn feof_unlocked(p: anytype) @TypeOf(__sfeof(p)) {
    _ = &p;
    return __sfeof(p);
}
pub inline fn ferror_unlocked(p: anytype) @TypeOf(__sferror(p)) {
    _ = &p;
    return __sferror(p);
}
pub inline fn clearerr_unlocked(p: anytype) @TypeOf(__sclearerr(p)) {
    _ = &p;
    return __sclearerr(p);
}
pub inline fn fileno_unlocked(p: anytype) @TypeOf(__sfileno(p)) {
    _ = &p;
    return __sfileno(p);
}
pub const _SECURE__STDIO_H_ = "";
pub const __ASSERT_H_ = "";
pub const __assert = @compileError("unable to translate C expr: unexpected token 'const'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_assert.h:74:9
pub const __ASSERT_FILE_NAME = @compileError("unable to translate macro: undefined identifier `__FILE_NAME__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/assert.h:61:9
pub const assert = @compileError("unable to translate macro: undefined identifier `__LINE__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/assert.h:74:9
pub const _ASSERT_H_ = "";
pub const static_assert = @compileError("unable to translate C expr: unexpected token '_Static_assert'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/_static_assert.h:29:9
pub const __MATH_H__ = "";
pub const __MATH__ = "";
pub const HUGE_VAL = @compileError("unable to translate macro: undefined identifier `__builtin_huge_val`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:63:15
pub const HUGE_VALF = __builtin_huge_valf();
pub const HUGE_VALL = @compileError("unable to translate macro: undefined identifier `__builtin_huge_vall`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:65:15
pub const NAN = __builtin_nanf("0x7fc00000");
pub const INFINITY = HUGE_VALF;
pub const FP_NAN = @as(c_int, 1);
pub const FP_INFINITE = @as(c_int, 2);
pub const FP_ZERO = @as(c_int, 3);
pub const FP_NORMAL = @as(c_int, 4);
pub const FP_SUBNORMAL = @as(c_int, 5);
pub const FP_SUPERNORMAL = @as(c_int, 6);
pub const FP_FAST_FMA = @as(c_int, 1);
pub const FP_FAST_FMAF = @as(c_int, 1);
pub const FP_FAST_FMAL = @as(c_int, 1);
pub const FP_ILOGB0 = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const FP_ILOGBNAN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const MATH_ERRNO = @as(c_int, 1);
pub const MATH_ERREXCEPT = @as(c_int, 2);
pub const math_errhandling = __math_errhandling();
pub const fpclassify = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:132:9
pub const isnormal = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:155:9
pub const isfinite = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:160:9
pub const isinf = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:165:9
pub const isnan = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:170:9
pub const signbit = @compileError("unable to translate: TODO long double");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:175:9
pub const isgreater = @compileError("unable to translate macro: undefined identifier `__builtin_isgreater`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:549:9
pub const isgreaterequal = @compileError("unable to translate macro: undefined identifier `__builtin_isgreaterequal`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:550:9
pub const isless = @compileError("unable to translate macro: undefined identifier `__builtin_isless`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:551:9
pub const islessequal = @compileError("unable to translate macro: undefined identifier `__builtin_islessequal`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:552:9
pub const islessgreater = @compileError("unable to translate macro: undefined identifier `__builtin_islessgreater`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:553:9
pub const isunordered = @compileError("unable to translate macro: undefined identifier `__builtin_isunordered`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/math.h:554:9
pub const M_E = @as(f64, 2.71828182845904523536028747135266250);
pub const M_LOG2E = @as(f64, 1.44269504088896340735992468100189214);
pub const M_LOG10E = @as(f64, 0.434294481903251827651128918916605082);
pub const M_LN2 = @as(f64, 0.693147180559945309417232121458176568);
pub const M_LN10 = @as(f64, 2.30258509299404568401799145468436421);
pub const M_PI = @as(f64, 3.14159265358979323846264338327950288);
pub const M_PI_2 = @as(f64, 1.57079632679489661923132169163975144);
pub const M_PI_4 = @as(f64, 0.785398163397448309615660845819875721);
pub const M_1_PI = @as(f64, 0.318309886183790671537767526745028724);
pub const M_2_PI = @as(f64, 0.636619772367581343075535053490057448);
pub const M_2_SQRTPI = @as(f64, 1.12837916709551257389615890312154517);
pub const M_SQRT2 = @as(f64, 1.41421356237309504880168872420969808);
pub const M_SQRT1_2 = @as(f64, 0.707106781186547524400844362104849039);
pub const MAXFLOAT = @as(f32, 0x1.fffffep+127);
pub const FP_SNAN = FP_NAN;
pub const FP_QNAN = FP_NAN;
pub const HUGE = MAXFLOAT;
pub const X_TLOSS = @as(f64, 1.41484755040568800000e+16);
pub const DOMAIN = @as(c_int, 1);
pub const SING = @as(c_int, 2);
pub const OVERFLOW = @as(c_int, 3);
pub const UNDERFLOW = @as(c_int, 4);
pub const TLOSS = @as(c_int, 5);
pub const PLOSS = @as(c_int, 6);
pub const __need___va_list = "";
pub const __need_va_list = "";
pub const __need_va_arg = "";
pub const __need___va_copy = "";
pub const __need_va_copy = "";
pub const __STDARG_H = "";
pub const __GNUC_VA_LIST = "";
pub const _VA_LIST = "";
pub const va_start = @compileError("unable to translate macro: undefined identifier `__builtin_va_start`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/__stdarg_va_arg.h:17:9
pub const va_end = @compileError("unable to translate macro: undefined identifier `__builtin_va_end`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/__stdarg_va_arg.h:19:9
pub const va_arg = @compileError("unable to translate C expr: unexpected token 'an identifier'");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/__stdarg_va_arg.h:20:9
pub const __va_copy = @compileError("unable to translate macro: undefined identifier `__builtin_va_copy`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/__stdarg___va_copy.h:11:9
pub const va_copy = @compileError("unable to translate macro: undefined identifier `__builtin_va_copy`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/__stdarg_va_copy.h:11:9
pub const __need_ptrdiff_t = "";
pub const __need_size_t = "";
pub const __need_rsize_t = "";
pub const __need_wchar_t = "";
pub const __need_NULL = "";
pub const __need_max_align_t = "";
pub const __need_offsetof = "";
pub const __STDDEF_H = "";
pub const _PTRDIFF_T = "";
pub const __CLANG_MAX_ALIGN_T_DEFINED = "";
pub const offsetof = @compileError("unable to translate C expr: unexpected token 'an identifier'");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/__stddef_offsetof.h:16:9
pub const _DLFCN_H_ = "";
pub const __DYLDDL_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `driverkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/dlfcn.h:39:9
pub const __DYLDDL_DLSYM_UNAVAILABLE = @compileError("unable to translate macro: undefined identifier `driverkit`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/dlfcn.h:41:9
pub const RTLD_LAZY = @as(c_int, 0x1);
pub const RTLD_NOW = @as(c_int, 0x2);
pub const RTLD_LOCAL = @as(c_int, 0x4);
pub const RTLD_GLOBAL = @as(c_int, 0x8);
pub const RTLD_NOLOAD = @as(c_int, 0x10);
pub const RTLD_NODELETE = @as(c_int, 0x80);
pub const RTLD_FIRST = @as(c_int, 0x100);
pub const RTLD_NEXT = @import("std").zig.c_translation.cast(?*anyopaque, -@as(c_int, 1));
pub const RTLD_DEFAULT = @import("std").zig.c_translation.cast(?*anyopaque, -@as(c_int, 2));
pub const RTLD_SELF = @import("std").zig.c_translation.cast(?*anyopaque, -@as(c_int, 3));
pub const RTLD_MAIN_ONLY = @import("std").zig.c_translation.cast(?*anyopaque, -@as(c_int, 5));
pub const __CLANG_LIMITS_H = "";
pub const _GCC_LIMITS_H_ = "";
pub const _LIMITS_H_ = "";
pub const _BSD_MACHINE_LIMITS_H_ = "";
pub const _ARM_LIMITS_H_ = "";
pub const _ARM__LIMITS_H_ = "";
pub const __DARWIN_CLK_TCK = @as(c_int, 100);
pub const USE_CLANG_LIMITS = @as(c_int, 0);
pub const MB_LEN_MAX = @as(c_int, 6);
pub const CLK_TCK = __DARWIN_CLK_TCK;
pub const CHAR_BIT = @as(c_int, 8);
pub const SCHAR_MAX = @as(c_int, 127);
pub const SCHAR_MIN = -@as(c_int, 128);
pub const UCHAR_MAX = @as(c_int, 255);
pub const CHAR_MAX = @as(c_int, 127);
pub const CHAR_MIN = -@as(c_int, 128);
pub const USHRT_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const SHRT_MAX = @as(c_int, 32767);
pub const SHRT_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 32768, .decimal);
pub const UINT_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xffffffff, .hex);
pub const INT_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal);
pub const INT_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_int, 2147483647, .decimal) - @as(c_int, 1);
pub const ULONG_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_ulong, 0xffffffffffffffff, .hex);
pub const LONG_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0x7fffffffffffffff, .hex);
pub const LONG_MIN = -@import("std").zig.c_translation.promoteIntLiteral(c_long, 0x7fffffffffffffff, .hex) - @as(c_int, 1);
pub const ULLONG_MAX = @as(c_ulonglong, 0xffffffffffffffff);
pub const LLONG_MAX = @as(c_longlong, 0x7fffffffffffffff);
pub const LLONG_MIN = -@as(c_longlong, 0x7fffffffffffffff) - @as(c_int, 1);
pub const LONG_BIT = @as(c_int, 64);
pub const SSIZE_MAX = LONG_MAX;
pub const WORD_BIT = @as(c_int, 32);
pub const SIZE_T_MAX = ULONG_MAX;
pub const UQUAD_MAX = ULLONG_MAX;
pub const QUAD_MAX = LLONG_MAX;
pub const QUAD_MIN = LLONG_MIN;
pub const _SYS_SYSLIMITS_H_ = "";
pub const ARG_MAX = @as(c_int, 1024) * @as(c_int, 1024);
pub const CHILD_MAX = @as(c_int, 266);
pub const GID_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 2147483647, .decimal);
pub const LINK_MAX = @as(c_int, 32767);
pub const MAX_CANON = @as(c_int, 1024);
pub const MAX_INPUT = @as(c_int, 1024);
pub const NAME_MAX = @as(c_int, 255);
pub const NGROUPS_MAX = @as(c_int, 16);
pub const UID_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 2147483647, .decimal);
pub const OPEN_MAX = @as(c_int, 10240);
pub const PATH_MAX = @as(c_int, 1024);
pub const PIPE_BUF = @as(c_int, 512);
pub const BC_BASE_MAX = @as(c_int, 99);
pub const BC_DIM_MAX = @as(c_int, 2048);
pub const BC_SCALE_MAX = @as(c_int, 99);
pub const BC_STRING_MAX = @as(c_int, 1000);
pub const CHARCLASS_NAME_MAX = @as(c_int, 14);
pub const COLL_WEIGHTS_MAX = @as(c_int, 2);
pub const EQUIV_CLASS_MAX = @as(c_int, 2);
pub const EXPR_NEST_MAX = @as(c_int, 32);
pub const LINE_MAX = @as(c_int, 2048);
pub const RE_DUP_MAX = @as(c_int, 255);
pub const NZERO = @as(c_int, 20);
pub const _POSIX_ARG_MAX = @as(c_int, 4096);
pub const _POSIX_CHILD_MAX = @as(c_int, 25);
pub const _POSIX_LINK_MAX = @as(c_int, 8);
pub const _POSIX_MAX_CANON = @as(c_int, 255);
pub const _POSIX_MAX_INPUT = @as(c_int, 255);
pub const _POSIX_NAME_MAX = @as(c_int, 14);
pub const _POSIX_NGROUPS_MAX = @as(c_int, 8);
pub const _POSIX_OPEN_MAX = @as(c_int, 20);
pub const _POSIX_PATH_MAX = @as(c_int, 256);
pub const _POSIX_PIPE_BUF = @as(c_int, 512);
pub const _POSIX_SSIZE_MAX = @as(c_int, 32767);
pub const _POSIX_STREAM_MAX = @as(c_int, 8);
pub const _POSIX_TZNAME_MAX = @as(c_int, 6);
pub const _POSIX2_BC_BASE_MAX = @as(c_int, 99);
pub const _POSIX2_BC_DIM_MAX = @as(c_int, 2048);
pub const _POSIX2_BC_SCALE_MAX = @as(c_int, 99);
pub const _POSIX2_BC_STRING_MAX = @as(c_int, 1000);
pub const _POSIX2_EQUIV_CLASS_MAX = @as(c_int, 2);
pub const _POSIX2_EXPR_NEST_MAX = @as(c_int, 32);
pub const _POSIX2_LINE_MAX = @as(c_int, 2048);
pub const _POSIX2_RE_DUP_MAX = @as(c_int, 255);
pub const _POSIX_AIO_LISTIO_MAX = @as(c_int, 2);
pub const _POSIX_AIO_MAX = @as(c_int, 1);
pub const _POSIX_DELAYTIMER_MAX = @as(c_int, 32);
pub const _POSIX_MQ_OPEN_MAX = @as(c_int, 8);
pub const _POSIX_MQ_PRIO_MAX = @as(c_int, 32);
pub const _POSIX_RTSIG_MAX = @as(c_int, 8);
pub const _POSIX_SEM_NSEMS_MAX = @as(c_int, 256);
pub const _POSIX_SEM_VALUE_MAX = @as(c_int, 32767);
pub const _POSIX_SIGQUEUE_MAX = @as(c_int, 32);
pub const _POSIX_TIMER_MAX = @as(c_int, 32);
pub const _POSIX_CLOCKRES_MIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 20000000, .decimal);
pub const _POSIX_THREAD_DESTRUCTOR_ITERATIONS = @as(c_int, 4);
pub const _POSIX_THREAD_KEYS_MAX = @as(c_int, 128);
pub const _POSIX_THREAD_THREADS_MAX = @as(c_int, 64);
pub const PTHREAD_DESTRUCTOR_ITERATIONS = @as(c_int, 4);
pub const PTHREAD_KEYS_MAX = @as(c_int, 512);
pub const PTHREAD_STACK_MIN = @as(c_int, 16384);
pub const _POSIX_HOST_NAME_MAX = @as(c_int, 255);
pub const _POSIX_LOGIN_NAME_MAX = @as(c_int, 9);
pub const _POSIX_SS_REPL_MAX = @as(c_int, 4);
pub const _POSIX_SYMLINK_MAX = @as(c_int, 255);
pub const _POSIX_SYMLOOP_MAX = @as(c_int, 8);
pub const _POSIX_TRACE_EVENT_NAME_MAX = @as(c_int, 30);
pub const _POSIX_TRACE_NAME_MAX = @as(c_int, 8);
pub const _POSIX_TRACE_SYS_MAX = @as(c_int, 8);
pub const _POSIX_TRACE_USER_EVENT_MAX = @as(c_int, 32);
pub const _POSIX_TTY_NAME_MAX = @as(c_int, 9);
pub const _POSIX2_CHARCLASS_NAME_MAX = @as(c_int, 14);
pub const _POSIX2_COLL_WEIGHTS_MAX = @as(c_int, 2);
pub const _POSIX_RE_DUP_MAX = _POSIX2_RE_DUP_MAX;
pub const OFF_MIN = LLONG_MIN;
pub const OFF_MAX = LLONG_MAX;
pub const PASS_MAX = @as(c_int, 128);
pub const NL_ARGMAX = @as(c_int, 9);
pub const NL_LANGMAX = @as(c_int, 14);
pub const NL_MSGMAX = @as(c_int, 32767);
pub const NL_NMAX = @as(c_int, 1);
pub const NL_SETMAX = @as(c_int, 255);
pub const NL_TEXTMAX = @as(c_int, 2048);
pub const _XOPEN_IOV_MAX = @as(c_int, 16);
pub const IOV_MAX = @as(c_int, 1024);
pub const _XOPEN_NAME_MAX = @as(c_int, 255);
pub const _XOPEN_PATH_MAX = @as(c_int, 1024);
pub const LONG_LONG_MAX = __LONG_LONG_MAX__;
pub const LONG_LONG_MIN = -__LONG_LONG_MAX__ - @as(c_longlong, 1);
pub const ULONG_LONG_MAX = (__LONG_LONG_MAX__ * @as(c_ulonglong, 2)) + @as(c_ulonglong, 1);
pub const ZEND_RANGE_CHECK_H = "";
pub const ZEND_LONG_H = "";
pub const __CLANG_INTTYPES_H = "";
pub const _INTTYPES_H_ = "";
pub const __PRI_8_LENGTH_MODIFIER__ = "hh";
pub const __PRI_64_LENGTH_MODIFIER__ = "ll";
pub const __SCN_64_LENGTH_MODIFIER__ = "ll";
pub const __PRI_MAX_LENGTH_MODIFIER__ = "j";
pub const __SCN_MAX_LENGTH_MODIFIER__ = "j";
pub const PRId8 = __PRI_8_LENGTH_MODIFIER__ ++ "d";
pub const PRIi8 = __PRI_8_LENGTH_MODIFIER__ ++ "i";
pub const PRIo8 = __PRI_8_LENGTH_MODIFIER__ ++ "o";
pub const PRIu8 = __PRI_8_LENGTH_MODIFIER__ ++ "u";
pub const PRIx8 = __PRI_8_LENGTH_MODIFIER__ ++ "x";
pub const PRIX8 = __PRI_8_LENGTH_MODIFIER__ ++ "X";
pub const PRId16 = "hd";
pub const PRIi16 = "hi";
pub const PRIo16 = "ho";
pub const PRIu16 = "hu";
pub const PRIx16 = "hx";
pub const PRIX16 = "hX";
pub const PRId32 = "d";
pub const PRIi32 = "i";
pub const PRIo32 = "o";
pub const PRIu32 = "u";
pub const PRIx32 = "x";
pub const PRIX32 = "X";
pub const PRId64 = __PRI_64_LENGTH_MODIFIER__ ++ "d";
pub const PRIi64 = __PRI_64_LENGTH_MODIFIER__ ++ "i";
pub const PRIo64 = __PRI_64_LENGTH_MODIFIER__ ++ "o";
pub const PRIu64 = __PRI_64_LENGTH_MODIFIER__ ++ "u";
pub const PRIx64 = __PRI_64_LENGTH_MODIFIER__ ++ "x";
pub const PRIX64 = __PRI_64_LENGTH_MODIFIER__ ++ "X";
pub const PRIdLEAST8 = PRId8;
pub const PRIiLEAST8 = PRIi8;
pub const PRIoLEAST8 = PRIo8;
pub const PRIuLEAST8 = PRIu8;
pub const PRIxLEAST8 = PRIx8;
pub const PRIXLEAST8 = PRIX8;
pub const PRIdLEAST16 = PRId16;
pub const PRIiLEAST16 = PRIi16;
pub const PRIoLEAST16 = PRIo16;
pub const PRIuLEAST16 = PRIu16;
pub const PRIxLEAST16 = PRIx16;
pub const PRIXLEAST16 = PRIX16;
pub const PRIdLEAST32 = PRId32;
pub const PRIiLEAST32 = PRIi32;
pub const PRIoLEAST32 = PRIo32;
pub const PRIuLEAST32 = PRIu32;
pub const PRIxLEAST32 = PRIx32;
pub const PRIXLEAST32 = PRIX32;
pub const PRIdLEAST64 = PRId64;
pub const PRIiLEAST64 = PRIi64;
pub const PRIoLEAST64 = PRIo64;
pub const PRIuLEAST64 = PRIu64;
pub const PRIxLEAST64 = PRIx64;
pub const PRIXLEAST64 = PRIX64;
pub const PRIdFAST8 = PRId8;
pub const PRIiFAST8 = PRIi8;
pub const PRIoFAST8 = PRIo8;
pub const PRIuFAST8 = PRIu8;
pub const PRIxFAST8 = PRIx8;
pub const PRIXFAST8 = PRIX8;
pub const PRIdFAST16 = PRId16;
pub const PRIiFAST16 = PRIi16;
pub const PRIoFAST16 = PRIo16;
pub const PRIuFAST16 = PRIu16;
pub const PRIxFAST16 = PRIx16;
pub const PRIXFAST16 = PRIX16;
pub const PRIdFAST32 = PRId32;
pub const PRIiFAST32 = PRIi32;
pub const PRIoFAST32 = PRIo32;
pub const PRIuFAST32 = PRIu32;
pub const PRIxFAST32 = PRIx32;
pub const PRIXFAST32 = PRIX32;
pub const PRIdFAST64 = PRId64;
pub const PRIiFAST64 = PRIi64;
pub const PRIoFAST64 = PRIo64;
pub const PRIuFAST64 = PRIu64;
pub const PRIxFAST64 = PRIx64;
pub const PRIXFAST64 = PRIX64;
pub const PRIdPTR = "ld";
pub const PRIiPTR = "li";
pub const PRIoPTR = "lo";
pub const PRIuPTR = "lu";
pub const PRIxPTR = "lx";
pub const PRIXPTR = "lX";
pub const PRIdMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "d";
pub const PRIiMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "i";
pub const PRIoMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "o";
pub const PRIuMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "u";
pub const PRIxMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "x";
pub const PRIXMAX = __PRI_MAX_LENGTH_MODIFIER__ ++ "X";
pub const SCNd8 = __PRI_8_LENGTH_MODIFIER__ ++ "d";
pub const SCNi8 = __PRI_8_LENGTH_MODIFIER__ ++ "i";
pub const SCNo8 = __PRI_8_LENGTH_MODIFIER__ ++ "o";
pub const SCNu8 = __PRI_8_LENGTH_MODIFIER__ ++ "u";
pub const SCNx8 = __PRI_8_LENGTH_MODIFIER__ ++ "x";
pub const SCNd16 = "hd";
pub const SCNi16 = "hi";
pub const SCNo16 = "ho";
pub const SCNu16 = "hu";
pub const SCNx16 = "hx";
pub const SCNd32 = "d";
pub const SCNi32 = "i";
pub const SCNo32 = "o";
pub const SCNu32 = "u";
pub const SCNx32 = "x";
pub const SCNd64 = __SCN_64_LENGTH_MODIFIER__ ++ "d";
pub const SCNi64 = __SCN_64_LENGTH_MODIFIER__ ++ "i";
pub const SCNo64 = __SCN_64_LENGTH_MODIFIER__ ++ "o";
pub const SCNu64 = __SCN_64_LENGTH_MODIFIER__ ++ "u";
pub const SCNx64 = __SCN_64_LENGTH_MODIFIER__ ++ "x";
pub const SCNdLEAST8 = SCNd8;
pub const SCNiLEAST8 = SCNi8;
pub const SCNoLEAST8 = SCNo8;
pub const SCNuLEAST8 = SCNu8;
pub const SCNxLEAST8 = SCNx8;
pub const SCNdLEAST16 = SCNd16;
pub const SCNiLEAST16 = SCNi16;
pub const SCNoLEAST16 = SCNo16;
pub const SCNuLEAST16 = SCNu16;
pub const SCNxLEAST16 = SCNx16;
pub const SCNdLEAST32 = SCNd32;
pub const SCNiLEAST32 = SCNi32;
pub const SCNoLEAST32 = SCNo32;
pub const SCNuLEAST32 = SCNu32;
pub const SCNxLEAST32 = SCNx32;
pub const SCNdLEAST64 = SCNd64;
pub const SCNiLEAST64 = SCNi64;
pub const SCNoLEAST64 = SCNo64;
pub const SCNuLEAST64 = SCNu64;
pub const SCNxLEAST64 = SCNx64;
pub const SCNdFAST8 = SCNd8;
pub const SCNiFAST8 = SCNi8;
pub const SCNoFAST8 = SCNo8;
pub const SCNuFAST8 = SCNu8;
pub const SCNxFAST8 = SCNx8;
pub const SCNdFAST16 = SCNd16;
pub const SCNiFAST16 = SCNi16;
pub const SCNoFAST16 = SCNo16;
pub const SCNuFAST16 = SCNu16;
pub const SCNxFAST16 = SCNx16;
pub const SCNdFAST32 = SCNd32;
pub const SCNiFAST32 = SCNi32;
pub const SCNoFAST32 = SCNo32;
pub const SCNuFAST32 = SCNu32;
pub const SCNxFAST32 = SCNx32;
pub const SCNdFAST64 = SCNd64;
pub const SCNiFAST64 = SCNi64;
pub const SCNoFAST64 = SCNo64;
pub const SCNuFAST64 = SCNu64;
pub const SCNxFAST64 = SCNx64;
pub const SCNdPTR = "ld";
pub const SCNiPTR = "li";
pub const SCNoPTR = "lo";
pub const SCNuPTR = "lu";
pub const SCNxPTR = "lx";
pub const SCNdMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "d";
pub const SCNiMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "i";
pub const SCNoMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "o";
pub const SCNuMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "u";
pub const SCNxMAX = __SCN_MAX_LENGTH_MODIFIER__ ++ "x";
pub const ZEND_ENABLE_ZVAL_LONG64 = @as(c_int, 1);
pub const ZEND_LONG_MAX = INT64_MAX;
pub const ZEND_LONG_MIN = INT64_MIN;
pub const ZEND_ULONG_MAX = UINT64_MAX;
pub inline fn Z_L(i: anytype) @TypeOf(INT64_C(i)) {
    _ = &i;
    return INT64_C(i);
}
pub inline fn Z_UL(i: anytype) @TypeOf(UINT64_C(i)) {
    _ = &i;
    return UINT64_C(i);
}
pub const SIZEOF_ZEND_LONG = @as(c_int, 8);
pub const ZEND_LTOA_BUF_LEN = @as(c_int, 65);
pub const ZEND_LONG_FMT = "%" ++ PRId64;
pub const ZEND_ULONG_FMT = "%" ++ PRIu64;
pub const ZEND_XLONG_FMT = "%" ++ PRIx64;
pub const ZEND_LONG_FMT_SPEC = PRId64;
pub const ZEND_ULONG_FMT_SPEC = PRIu64;
pub const ZEND_LTOA = @compileError("unable to translate macro: undefined identifier `st`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_long.h:72:11
pub inline fn ZEND_ATOL(s: anytype) @TypeOf(atoll(s)) {
    _ = &s;
    return atoll(s);
}
pub inline fn ZEND_STRTOL(s0: anytype, s1: anytype, base: anytype) @TypeOf(strtoll(s0, s1, base)) {
    _ = &s0;
    _ = &s1;
    _ = &base;
    return strtoll(s0, s1, base);
}
pub inline fn ZEND_STRTOUL(s0: anytype, s1: anytype, base: anytype) @TypeOf(strtoull(s0, s1, base)) {
    _ = &s0;
    _ = &s1;
    _ = &base;
    return strtoull(s0, s1, base);
}
pub const ZEND_STRTOL_PTR = strtoll;
pub const ZEND_STRTOUL_PTR = strtoull;
pub const ZEND_ABS = imaxabs;
pub const MAX_LENGTH_OF_LONG = @as(c_int, 20);
pub const LONG_MIN_DIGITS = "9223372036854775808";
pub const ZEND_ADDR_FMT = "0x%016zx";
pub const ZEND_LONG_CAN_OVFL_INT = @as(c_int, 1);
pub const ZEND_LONG_CAN_OVFL_UINT = @as(c_int, 1);
pub const ZEND_SIZE_T_CAN_OVFL_UINT = @as(c_int, 1);
pub inline fn ZEND_LONG_INT_OVFL(zlong: anytype) @TypeOf(UNEXPECTED(zlong > @import("std").zig.c_translation.cast(zend_long, INT_MAX))) {
    _ = &zlong;
    return UNEXPECTED(zlong > @import("std").zig.c_translation.cast(zend_long, INT_MAX));
}
pub inline fn ZEND_LONG_INT_UDFL(zlong: anytype) @TypeOf(UNEXPECTED(zlong < @import("std").zig.c_translation.cast(zend_long, INT_MIN))) {
    _ = &zlong;
    return UNEXPECTED(zlong < @import("std").zig.c_translation.cast(zend_long, INT_MIN));
}
pub inline fn ZEND_LONG_EXCEEDS_INT(zlong: anytype) @TypeOf(UNEXPECTED((ZEND_LONG_INT_OVFL(zlong) != 0) or (ZEND_LONG_INT_UDFL(zlong) != 0))) {
    _ = &zlong;
    return UNEXPECTED((ZEND_LONG_INT_OVFL(zlong) != 0) or (ZEND_LONG_INT_UDFL(zlong) != 0));
}
pub inline fn ZEND_LONG_UINT_OVFL(zlong: anytype) @TypeOf(UNEXPECTED((zlong < @as(c_int, 0)) or (zlong > @import("std").zig.c_translation.cast(zend_long, UINT_MAX)))) {
    _ = &zlong;
    return UNEXPECTED((zlong < @as(c_int, 0)) or (zlong > @import("std").zig.c_translation.cast(zend_long, UINT_MAX)));
}
pub inline fn ZEND_SIZE_T_INT_OVFL(size: anytype) @TypeOf(UNEXPECTED(size > @import("std").zig.c_translation.cast(usize, INT_MAX))) {
    _ = &size;
    return UNEXPECTED(size > @import("std").zig.c_translation.cast(usize, INT_MAX));
}
pub inline fn ZEND_SIZE_T_UINT_OVFL(size: anytype) @TypeOf(UNEXPECTED(size > @import("std").zig.c_translation.cast(usize, UINT_MAX))) {
    _ = &size;
    return UNEXPECTED(size > @import("std").zig.c_translation.cast(usize, UINT_MAX));
}
pub inline fn ZEND_SIZE_T_GT_ZEND_LONG(size: anytype, zlong: anytype) @TypeOf((zlong < @as(c_int, 0)) or (size > @import("std").zig.c_translation.cast(usize, zlong))) {
    _ = &size;
    _ = &zlong;
    return (zlong < @as(c_int, 0)) or (size > @import("std").zig.c_translation.cast(usize, zlong));
}
pub inline fn ZEND_SIZE_T_GTE_ZEND_LONG(size: anytype, zlong: anytype) @TypeOf((zlong < @as(c_int, 0)) or (size >= @import("std").zig.c_translation.cast(usize, zlong))) {
    _ = &size;
    _ = &zlong;
    return (zlong < @as(c_int, 0)) or (size >= @import("std").zig.c_translation.cast(usize, zlong));
}
pub inline fn ZEND_SIZE_T_LT_ZEND_LONG(size: anytype, zlong: anytype) @TypeOf((zlong >= @as(c_int, 0)) and (size < @import("std").zig.c_translation.cast(usize, zlong))) {
    _ = &size;
    _ = &zlong;
    return (zlong >= @as(c_int, 0)) and (size < @import("std").zig.c_translation.cast(usize, zlong));
}
pub inline fn ZEND_SIZE_T_LTE_ZEND_LONG(size: anytype, zlong: anytype) @TypeOf((zlong >= @as(c_int, 0)) and (size <= @import("std").zig.c_translation.cast(usize, zlong))) {
    _ = &size;
    _ = &zlong;
    return (zlong >= @as(c_int, 0)) and (size <= @import("std").zig.c_translation.cast(usize, zlong));
}
pub const ZEND_GCC_VERSION = (__GNUC__ * @as(c_int, 1000)) + __GNUC_MINOR__;
pub inline fn ZEND_ASSUME(c: anytype) @TypeOf(__builtin_assume(c)) {
    _ = &c;
    return __builtin_assume(c);
}
pub inline fn ZEND_ASSERT(c: anytype) @TypeOf(ZEND_ASSUME(c)) {
    _ = &c;
    return ZEND_ASSUME(c);
}
pub inline fn _ZEND_UNREACHABLE() @TypeOf(__builtin_unreachable()) {
    return __builtin_unreachable();
}
pub inline fn ZEND_UNREACHABLE() @TypeOf(_ZEND_UNREACHABLE()) {
    return _ZEND_UNREACHABLE();
}
pub const ZEND_FALLTHROUGH = @import("std").zig.c_translation.cast(anyopaque, @as(c_int, 0));
pub const EMPTY_SWITCH_DEFAULT_CASE = @compileError("unable to translate C expr: unexpected token 'default'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:130:9
pub const ZEND_IGNORE_VALUE = @compileError("unable to translate macro: undefined identifier `__x`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:133:10
pub const zend_quiet_write = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:138:9
pub const PHP_RTLD_MODE = RTLD_LAZY;
pub inline fn DL_LOAD(libname: anytype) @TypeOf(dlopen(libname, PHP_RTLD_MODE | RTLD_GLOBAL)) {
    _ = &libname;
    return dlopen(libname, PHP_RTLD_MODE | RTLD_GLOBAL);
}
pub const DL_UNLOAD = dlclose;
pub const DL_FETCH_SYMBOL = dlsym;
pub const DL_ERROR = dlerror;
pub const DL_HANDLE = ?*anyopaque;
pub const ZEND_EXTENSIONS_SUPPORT = @as(c_int, 1);
pub const ALLOCA_FLAG = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:218:10
pub const SET_ALLOCA_FLAG = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:219:10
pub inline fn do_alloca(p: anytype, use_heap: anytype) @TypeOf(emalloc(p)) {
    _ = &p;
    _ = &use_heap;
    return emalloc(p);
}
pub inline fn free_alloca(p: anytype, use_heap: anytype) @TypeOf(efree(p)) {
    _ = &p;
    _ = &use_heap;
    return efree(p);
}
pub const ZEND_ATTRIBUTE_MALLOC = @compileError("unable to translate macro: undefined identifier `__malloc__`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:225:10
pub const ZEND_ATTRIBUTE_ALLOC_SIZE = @compileError("unable to translate macro: undefined identifier `alloc_size`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:233:10
pub const ZEND_ATTRIBUTE_ALLOC_SIZE2 = @compileError("unable to translate macro: undefined identifier `alloc_size`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:234:10
pub const ZEND_ATTRIBUTE_CONST = @compileError("unable to translate C expr: unexpected token '__attribute__'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:241:10
pub const ZEND_ATTRIBUTE_FORMAT = @compileError("unable to translate macro: undefined identifier `format`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:247:10
pub const ZEND_ATTRIBUTE_PTR_FORMAT = @compileError("unable to translate macro: undefined identifier `format`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:253:10
pub const ZEND_ATTRIBUTE_DEPRECATED = @compileError("unable to translate macro: undefined identifier `deprecated`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:259:10
pub const ZEND_ATTRIBUTE_UNUSED = @compileError("unable to translate macro: undefined identifier `unused`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:267:10
pub const ZEND_ATTRIBUTE_NONNULL = @compileError("unable to translate macro: undefined identifier `nonnull`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:274:10
pub const ZEND_ATTRIBUTE_NONNULL_ARGS = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:276:10
pub const ZEND_COLD = "";
pub const ZEND_OPT_SIZE = "";
pub const ZEND_OPT_SPEED = "";
pub const ZEND_ATTRIBUTE_UNUSED_LABEL = "";
pub const ZEND_ATTRIBUTE_COLD_LABEL = "";
pub const ZEND_FASTCALL = "";
pub const HAVE_NORETURN = "";
pub const ZEND_NORETURN = @compileError("unable to translate macro: undefined identifier `noreturn`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:317:10
pub const ZEND_STACK_ALIGNED = "";
pub const HAVE_BUILTIN_CONSTANT_P = "";
pub const ZEND_ELEMENT_COUNT = @compileError("unable to translate macro: undefined identifier `counted_by`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:343:9
pub inline fn ZEND_CONST_COND(_condition: anytype, _default: anytype) @TypeOf(if (__builtin_constant_p(_condition)) _condition else _default) {
    _ = &_condition;
    _ = &_default;
    return if (__builtin_constant_p(_condition)) _condition else _default;
}
pub const zend_always_inline = @compileError("unable to translate macro: undefined identifier `always_inline`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:362:12
pub const zend_never_inline = @compileError("unable to translate macro: undefined identifier `noinline`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:363:12
pub inline fn EXPECTED(condition: anytype) @TypeOf(__builtin_expect(!!(condition != 0), @as(c_int, 1))) {
    _ = &condition;
    return __builtin_expect(!!(condition != 0), @as(c_int, 1));
}
pub inline fn UNEXPECTED(condition: anytype) @TypeOf(__builtin_expect(!!(condition != 0), @as(c_int, 0))) {
    _ = &condition;
    return __builtin_expect(!!(condition != 0), @as(c_int, 0));
}
pub inline fn XtOffsetOf(s_type: anytype, field: anytype) @TypeOf(offsetof(s_type, field)) {
    _ = &s_type;
    _ = &field;
    return offsetof(s_type, field);
}
pub inline fn SETJMP(a: anytype) @TypeOf(sigsetjmp(a, @as(c_int, 0))) {
    _ = &a;
    return sigsetjmp(a, @as(c_int, 0));
}
pub inline fn LONGJMP(a: anytype, b: anytype) @TypeOf(siglongjmp(a, b)) {
    _ = &a;
    _ = &b;
    return siglongjmp(a, b);
}
pub const JMP_BUF = sigjmp_buf;
pub const ZEND_FILE_LINE_D = anyopaque;
pub const ZEND_FILE_LINE_DC = "";
pub const ZEND_FILE_LINE_ORIG_D = anyopaque;
pub const ZEND_FILE_LINE_ORIG_DC = "";
pub const ZEND_FILE_LINE_RELAY_C = "";
pub const ZEND_FILE_LINE_RELAY_CC = "";
pub const ZEND_FILE_LINE_C = "";
pub const ZEND_FILE_LINE_CC = "";
pub const ZEND_FILE_LINE_EMPTY_C = "";
pub const ZEND_FILE_LINE_EMPTY_CC = "";
pub const ZEND_FILE_LINE_ORIG_RELAY_C = "";
pub const ZEND_FILE_LINE_ORIG_RELAY_CC = "";
pub const Z_DBG = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:438:10
pub const ZTS_V = @as(c_int, 0);
pub const MAX_LENGTH_OF_DOUBLE = @as(c_int, 32);
pub inline fn MAX(a: anytype, b: anytype) @TypeOf(if (a > b) a else b) {
    _ = &a;
    _ = &b;
    return if (a > b) a else b;
}
pub inline fn MIN(a: anytype, b: anytype) @TypeOf(if (a < b) a else b) {
    _ = &a;
    _ = &b;
    return if (a < b) a else b;
}
pub const ZEND_BIT_TEST = @compileError("unable to translate C expr: unexpected token '('");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:462:9
pub const ZEND_INFINITY = INFINITY;
pub const ZEND_NAN = NAN;
pub inline fn zend_isnan(a: anytype) @TypeOf(isnan(a)) {
    _ = &a;
    return isnan(a);
}
pub inline fn zend_isinf(a: anytype) @TypeOf(isinf(a)) {
    _ = &a;
    return isinf(a);
}
pub inline fn zend_finite(a: anytype) @TypeOf(isfinite(a)) {
    _ = &a;
    return isfinite(a);
}
pub inline fn ZEND_STRL(str: anytype) @TypeOf(@import("std").zig.c_translation.sizeof(str) - @as(c_int, 1)) {
    _ = &str;
    return blk: {
        _ = &str;
        break :blk @import("std").zig.c_translation.sizeof(str) - @as(c_int, 1);
    };
}
pub inline fn ZEND_STRS(str: anytype) @TypeOf(@import("std").zig.c_translation.sizeof(str)) {
    _ = &str;
    return blk: {
        _ = &str;
        break :blk @import("std").zig.c_translation.sizeof(str);
    };
}
pub inline fn ZEND_NORMALIZE_BOOL(n: anytype) @TypeOf(if (n) if (n < @as(c_int, 0)) -@as(c_int, 1) else @as(c_int, 1) else @as(c_int, 0)) {
    _ = &n;
    return if (n) if (n < @as(c_int, 0)) -@as(c_int, 1) else @as(c_int, 1) else @as(c_int, 0);
}
pub inline fn ZEND_TRUTH(x: anytype) @TypeOf(if (x) @as(c_int, 1) else @as(c_int, 0)) {
    _ = &x;
    return if (x) @as(c_int, 1) else @as(c_int, 0);
}
pub inline fn ZEND_LOG_XOR(a: anytype, b: anytype) @TypeOf(ZEND_TRUTH(a) ^ ZEND_TRUTH(b)) {
    _ = &a;
    _ = &b;
    return ZEND_TRUTH(a) ^ ZEND_TRUTH(b);
}
pub inline fn ZEND_THREEWAY_COMPARE(a: anytype, b: anytype) @TypeOf(if (a == b) @as(c_int, 0) else if (a < b) -@as(c_int, 1) else @as(c_int, 1)) {
    _ = &a;
    _ = &b;
    return if (a == b) @as(c_int, 0) else if (a < b) -@as(c_int, 1) else @as(c_int, 1);
}
pub const ZEND_MAX_RESERVED_RESOURCES = @as(c_int, 6);
pub inline fn ZEND_SECURE_ZERO(@"var": anytype, size: anytype) @TypeOf(explicit_bzero(@"var", size)) {
    _ = &@"var";
    _ = &size;
    return explicit_bzero(@"var", size);
}
pub inline fn ZEND_VALID_SOCKET(sock: anytype) @TypeOf(sock >= @as(c_int, 0)) {
    _ = &sock;
    return sock >= @as(c_int, 0);
}
pub const ZEND_INTRIN_SSSE3_FUNC_DECL = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:575:10
pub const ZEND_INTRIN_SSE4_2_FUNC_DECL = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:600:10
pub const ZEND_INTRIN_PCLMUL_FUNC_DECL = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:626:10
pub const ZEND_INTRIN_SSE4_2_PCLMUL_FUNC_DECL = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:652:10
pub const ZEND_INTRIN_AVX2_FUNC_DECL = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:675:10
pub const ZEND_INTRIN_AVX512_FUNC_DECL = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:695:10
pub const ZEND_INTRIN_AVX512_VBMI_FUNC_DECL = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:715:10
pub const ZEND_SET_ALIGNED = @compileError("unable to translate macro: undefined identifier `__aligned__`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:723:10
pub inline fn ZEND_SLIDE_TO_ALIGNED(alignment: anytype, ptr: anytype) @TypeOf((@import("std").zig.c_translation.cast(usize, ptr) + (alignment - @as(c_int, 1))) & ~(alignment - @as(c_int, 1))) {
    _ = &alignment;
    _ = &ptr;
    return (@import("std").zig.c_translation.cast(usize, ptr) + (alignment - @as(c_int, 1))) & ~(alignment - @as(c_int, 1));
}
pub inline fn ZEND_SLIDE_TO_ALIGNED16(ptr: anytype) @TypeOf(ZEND_SLIDE_TO_ALIGNED(Z_UL(@as(c_int, 16)), ptr)) {
    _ = &ptr;
    return ZEND_SLIDE_TO_ALIGNED(Z_UL(@as(c_int, 16)), ptr);
}
pub inline fn ZEND_EXPAND_VA(code: anytype) @TypeOf(code) {
    _ = &code;
    return code;
}
pub const ZEND_IGNORE_LEAKS_BEGIN = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:747:10
pub const ZEND_IGNORE_LEAKS_END = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:748:10
pub inline fn ZEND_VOIDP(ptr: anytype) @TypeOf(ptr) {
    _ = &ptr;
    return ptr;
}
pub const ZEND_INDIRECT_RETURN = "";
pub const __ZEND_DO_PRAGMA = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:764:9
pub inline fn _ZEND_DO_PRAGMA(x: anytype) @TypeOf(__ZEND_DO_PRAGMA(x)) {
    _ = &x;
    return __ZEND_DO_PRAGMA(x);
}
pub const ZEND_DIAGNOSTIC_IGNORED_START = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:767:10
pub const ZEND_DIAGNOSTIC_IGNORED_END = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:770:10
pub const ZEND_CGG_DIAGNOSTIC_IGNORED_START = ZEND_DIAGNOSTIC_IGNORED_START;
pub const ZEND_CGG_DIAGNOSTIC_IGNORED_END = ZEND_DIAGNOSTIC_IGNORED_END;
pub const ZEND_STATIC_ASSERT = @compileError("unable to translate C expr: unexpected token '_Static_assert'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_portability.h:789:10
pub inline fn ZEND_BYTES_SWAP32(u: anytype) @TypeOf(__builtin_bswap32(u)) {
    _ = &u;
    return __builtin_bswap32(u);
}
pub inline fn ZEND_BYTES_SWAP64(u: anytype) @TypeOf(__builtin_bswap64(u)) {
    _ = &u;
    return __builtin_bswap64(u);
}
pub const __ARM_NEON_H = "";
pub const __ARM_BF16_H = "";
pub const __ai = @compileError("unable to translate macro: undefined identifier `__always_inline__`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_bf16.h:15:9
pub const __ARM_NEON_TYPES_H = "";
pub const splatq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:127:9
pub const splat_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:151:9
pub const splatq_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:175:9
pub const splat_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:199:9
pub const vcreate_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:354:9
pub const vduph_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:373:9
pub const vdupq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_0`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:390:9
pub const vdup_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_2`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:408:9
pub const vduph_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:426:9
pub const vdupq_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_4`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:443:9
pub const vdup_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_6`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:461:9
pub const vgetq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:530:9
pub const vget_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:553:9
pub const vld1q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:597:9
pub const vld1_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:612:9
pub const vld1q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:627:9
pub const vld1_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:642:9
pub const vld1q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:657:9
pub const vld1_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:675:9
pub const vld1q_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:693:9
pub const vld1_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:710:9
pub const vld1q_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:727:9
pub const vld1_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:745:9
pub const vld1q_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:763:9
pub const vld1_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:782:9
pub const vld2q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:801:9
pub const vld2_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:818:9
pub const vld2q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:835:9
pub const vld2_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:852:9
pub const vld2q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:869:9
pub const vld2_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:891:9
pub const vld3q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:913:9
pub const vld3_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:931:9
pub const vld3q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:949:9
pub const vld3_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:967:9
pub const vld3q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:985:9
pub const vld3_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1009:9
pub const vld4q_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1033:9
pub const vld4_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1052:9
pub const vld4q_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1071:9
pub const vld4_dup_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1090:9
pub const vld4q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1109:9
pub const vld4_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1135:9
pub const vsetq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1161:9
pub const vset_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1188:9
pub const vst1q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1215:9
pub const vst1_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1228:9
pub const vst1q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1241:9
pub const vst1_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1254:9
pub const vst1q_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1267:9
pub const vst1_bf16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1282:9
pub const vst1q_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1297:9
pub const vst1_bf16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1313:9
pub const vst1q_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1329:9
pub const vst1_bf16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1346:9
pub const vst2q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1363:9
pub const vst2_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1378:9
pub const vst2q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1393:9
pub const vst2_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1408:9
pub const vst3q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1423:9
pub const vst3_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1439:9
pub const vst3q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1455:9
pub const vst3_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1471:9
pub const vst4q_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1487:9
pub const vst4_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1504:9
pub const vst4q_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1521:9
pub const vst4_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:1538:9
pub const vcvtq_n_f16_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2277:9
pub const vcvtq_n_f16_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2295:9
pub const vcvt_n_f16_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2313:9
pub const vcvt_n_f16_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2331:9
pub const vcvtq_n_s16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2349:9
pub const vcvt_n_s16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2367:9
pub const vcvtq_n_u16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2385:9
pub const vcvt_n_u16_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2403:9
pub const vmulq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2925:9
pub const vmul_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:2945:9
pub const splat_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3314:9
pub const splat_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3337:9
pub const splat_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3344:9
pub const splatq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3368:9
pub const splatq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3392:9
pub const splatq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3415:9
pub const splatq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3439:9
pub const splatq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3463:9
pub const splatq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3487:9
pub const splatq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3510:9
pub const splatq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3534:9
pub const splatq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3558:9
pub const splatq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3581:9
pub const splatq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3605:9
pub const splatq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3629:9
pub const splatq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3653:9
pub const splatq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3676:9
pub const splat_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3700:9
pub const splat_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3724:9
pub const splat_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3747:9
pub const splat_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3754:9
pub const splat_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3778:9
pub const splat_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3801:9
pub const splat_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3808:9
pub const splat_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3832:9
pub const splat_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3856:9
pub const splat_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3879:9
pub const splat_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3886:9
pub const splat_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3910:9
pub const splat_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3934:9
pub const splat_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3957:9
pub const splatq_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:3981:9
pub const splatq_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4005:9
pub const splatq_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4029:9
pub const splatq_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4053:9
pub const splatq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4077:9
pub const splatq_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4101:9
pub const splatq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4125:9
pub const splatq_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4149:9
pub const splatq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4173:9
pub const splatq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4197:9
pub const splatq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4221:9
pub const splatq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4245:9
pub const splatq_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4269:9
pub const splatq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4293:9
pub const splat_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4317:9
pub const splat_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4341:9
pub const splat_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4365:9
pub const splat_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4388:9
pub const splat_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4412:9
pub const splat_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4436:9
pub const splat_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4459:9
pub const splat_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4483:9
pub const splat_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4507:9
pub const splat_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4531:9
pub const splat_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:4554:9
pub const vcreate_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8489:9
pub const vcreate_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8495:9
pub const vcreate_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8501:9
pub const vcreate_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8507:9
pub const vcreate_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8513:9
pub const vcreate_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8519:9
pub const vcreate_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8525:9
pub const vcreate_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8531:9
pub const vcreate_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8537:9
pub const vcreate_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8543:9
pub const vcreate_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8549:9
pub const vcreate_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8555:9
pub const vcvtq_n_f32_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8626:9
pub const vcvtq_n_f32_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8644:9
pub const vcvt_n_f32_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8662:9
pub const vcvt_n_f32_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8680:9
pub const vcvtq_n_s32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8698:9
pub const vcvt_n_s32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8716:9
pub const vcvtq_n_u32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8734:9
pub const vcvt_n_u32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8752:9
pub const vdup_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_8`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8834:9
pub const vdup_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_10`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8852:9
pub const vdupq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_12`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8870:9
pub const vdupq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_14`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8888:9
pub const vdupq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_16`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8906:9
pub const vdupq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_18`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8924:9
pub const vdupq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_20`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8942:9
pub const vdupq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_22`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8959:9
pub const vdupq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_24`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8977:9
pub const vdupq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_26`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:8995:9
pub const vdupq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_28`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9013:9
pub const vdupq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_30`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9031:9
pub const vdupq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_32`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9049:9
pub const vdupq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_34`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9066:9
pub const vdup_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_36`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9084:9
pub const vdup_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_38`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9102:9
pub const vdup_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_40`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9119:9
pub const vdup_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_41`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9126:9
pub const vdup_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_43`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9144:9
pub const vdup_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_45`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9162:9
pub const vdup_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_47`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9180:9
pub const vdup_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_49`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9198:9
pub const vdup_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_51`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9215:9
pub const vdup_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_52`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9222:9
pub const vdupq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9390:9
pub const vdup_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9532:9
pub const vext_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9832:9
pub const vext_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9853:9
pub const vextq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9874:9
pub const vextq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9895:9
pub const vextq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9916:9
pub const vextq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9937:9
pub const vextq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9958:9
pub const vextq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:9979:9
pub const vextq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10000:9
pub const vextq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10021:9
pub const vextq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10042:9
pub const vextq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10063:9
pub const vextq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10084:9
pub const vext_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10105:9
pub const vext_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10126:9
pub const vext_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10146:9
pub const vext_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10154:9
pub const vext_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10175:9
pub const vext_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10196:9
pub const vext_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10217:9
pub const vext_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10237:9
pub const vext_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10245:9
pub const vextq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10266:9
pub const vext_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10287:9
pub const vget_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10543:9
pub const vget_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10566:9
pub const vgetq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10589:9
pub const vgetq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10612:9
pub const vgetq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10635:9
pub const vgetq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10658:9
pub const vgetq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10681:9
pub const vgetq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10704:9
pub const vgetq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10727:9
pub const vgetq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10750:9
pub const vgetq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10773:9
pub const vgetq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10796:9
pub const vgetq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10819:9
pub const vget_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10842:9
pub const vget_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10865:9
pub const vget_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10887:9
pub const vget_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10894:9
pub const vget_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10917:9
pub const vget_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10940:9
pub const vget_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10963:9
pub const vget_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10985:9
pub const vget_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:10992:9
pub const vld1_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11613:9
pub const vld1_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11628:9
pub const vld1q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11643:9
pub const vld1q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11658:9
pub const vld1q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11673:9
pub const vld1q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11688:9
pub const vld1q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11703:9
pub const vld1q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11718:9
pub const vld1q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11733:9
pub const vld1q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11748:9
pub const vld1q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11763:9
pub const vld1q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11778:9
pub const vld1q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11793:9
pub const vld1_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11808:9
pub const vld1_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11823:9
pub const vld1_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11837:9
pub const vld1_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11843:9
pub const vld1_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11858:9
pub const vld1_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11873:9
pub const vld1_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11888:9
pub const vld1_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11902:9
pub const vld1_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11908:9
pub const vld1_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11923:9
pub const vld1_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11938:9
pub const vld1q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11953:9
pub const vld1q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11968:9
pub const vld1q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11983:9
pub const vld1q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:11998:9
pub const vld1q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12013:9
pub const vld1q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12028:9
pub const vld1q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12043:9
pub const vld1q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12058:9
pub const vld1q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12073:9
pub const vld1q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12088:9
pub const vld1q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12103:9
pub const vld1_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12118:9
pub const vld1_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12133:9
pub const vld1_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12147:9
pub const vld1_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12153:9
pub const vld1_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12168:9
pub const vld1_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12183:9
pub const vld1_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12198:9
pub const vld1_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12212:9
pub const vld1_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12218:9
pub const vld1_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12233:9
pub const vld1_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12251:9
pub const vld1q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12269:9
pub const vld1q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12287:9
pub const vld1q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12305:9
pub const vld1q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12323:9
pub const vld1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12341:9
pub const vld1q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12359:9
pub const vld1q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12377:9
pub const vld1q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12395:9
pub const vld1q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12413:9
pub const vld1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12431:9
pub const vld1q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12449:9
pub const vld1_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12467:9
pub const vld1_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12485:9
pub const vld1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12502:9
pub const vld1_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12509:9
pub const vld1_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12527:9
pub const vld1_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12545:9
pub const vld1_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12563:9
pub const vld1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12580:9
pub const vld1_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12587:9
pub const vld1_p8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12605:9
pub const vld1_p16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12622:9
pub const vld1q_p8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12639:9
pub const vld1q_p16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12656:9
pub const vld1q_u8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12673:9
pub const vld1q_u32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12690:9
pub const vld1q_u64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12707:9
pub const vld1q_u16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12724:9
pub const vld1q_s8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12741:9
pub const vld1q_f32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12758:9
pub const vld1q_s32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12775:9
pub const vld1q_s64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12792:9
pub const vld1q_s16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12809:9
pub const vld1_u8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12826:9
pub const vld1_u32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12843:9
pub const vld1_u64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12859:9
pub const vld1_u16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12865:9
pub const vld1_s8_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12882:9
pub const vld1_f32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12899:9
pub const vld1_s32_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12916:9
pub const vld1_s64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12932:9
pub const vld1_s16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12938:9
pub const vld1_p8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12955:9
pub const vld1_p16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12973:9
pub const vld1q_p8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:12991:9
pub const vld1q_p16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13009:9
pub const vld1q_u8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13027:9
pub const vld1q_u32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13045:9
pub const vld1q_u64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13063:9
pub const vld1q_u16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13081:9
pub const vld1q_s8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13099:9
pub const vld1q_f32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13117:9
pub const vld1q_s32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13135:9
pub const vld1q_s64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13153:9
pub const vld1q_s16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13171:9
pub const vld1_u8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13189:9
pub const vld1_u32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13207:9
pub const vld1_u64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13224:9
pub const vld1_u16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13230:9
pub const vld1_s8_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13248:9
pub const vld1_f32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13266:9
pub const vld1_s32_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13284:9
pub const vld1_s64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13301:9
pub const vld1_s16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13307:9
pub const vld1_p8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13325:9
pub const vld1_p16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13344:9
pub const vld1q_p8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13363:9
pub const vld1q_p16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13382:9
pub const vld1q_u8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13401:9
pub const vld1q_u32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13420:9
pub const vld1q_u64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13439:9
pub const vld1q_u16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13458:9
pub const vld1q_s8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13477:9
pub const vld1q_f32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13496:9
pub const vld1q_s32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13515:9
pub const vld1q_s64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13534:9
pub const vld1q_s16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13553:9
pub const vld1_u8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13572:9
pub const vld1_u32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13591:9
pub const vld1_u64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13609:9
pub const vld1_u16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13615:9
pub const vld1_s8_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13634:9
pub const vld1_f32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13653:9
pub const vld1_s32_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13672:9
pub const vld1_s64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13690:9
pub const vld1_s16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13696:9
pub const vld2_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13715:9
pub const vld2_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13732:9
pub const vld2q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13749:9
pub const vld2q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13766:9
pub const vld2q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13783:9
pub const vld2q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13800:9
pub const vld2q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13817:9
pub const vld2q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13834:9
pub const vld2q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13851:9
pub const vld2q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13868:9
pub const vld2q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13885:9
pub const vld2_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13902:9
pub const vld2_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13919:9
pub const vld2_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13935:9
pub const vld2_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13941:9
pub const vld2_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13958:9
pub const vld2_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13975:9
pub const vld2_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:13992:9
pub const vld2_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14008:9
pub const vld2_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14014:9
pub const vld2_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14031:9
pub const vld2_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14048:9
pub const vld2q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14065:9
pub const vld2q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14082:9
pub const vld2q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14099:9
pub const vld2q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14116:9
pub const vld2q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14133:9
pub const vld2q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14150:9
pub const vld2q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14167:9
pub const vld2q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14184:9
pub const vld2q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14201:9
pub const vld2q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14218:9
pub const vld2q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14235:9
pub const vld2_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14252:9
pub const vld2_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14269:9
pub const vld2_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14285:9
pub const vld2_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14291:9
pub const vld2_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14308:9
pub const vld2_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14325:9
pub const vld2_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14342:9
pub const vld2_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14358:9
pub const vld2_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14364:9
pub const vld2_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14381:9
pub const vld2_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14403:9
pub const vld2q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14425:9
pub const vld2q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14447:9
pub const vld2q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14469:9
pub const vld2q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14491:9
pub const vld2q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14513:9
pub const vld2q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14535:9
pub const vld2_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14557:9
pub const vld2_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14579:9
pub const vld2_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14601:9
pub const vld2_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14623:9
pub const vld2_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14645:9
pub const vld2_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14667:9
pub const vld2_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14689:9
pub const vld3_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14711:9
pub const vld3_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14729:9
pub const vld3q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14747:9
pub const vld3q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14765:9
pub const vld3q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14783:9
pub const vld3q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14801:9
pub const vld3q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14819:9
pub const vld3q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14837:9
pub const vld3q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14855:9
pub const vld3q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14873:9
pub const vld3q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14891:9
pub const vld3_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14909:9
pub const vld3_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14927:9
pub const vld3_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14944:9
pub const vld3_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14950:9
pub const vld3_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14968:9
pub const vld3_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:14986:9
pub const vld3_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15004:9
pub const vld3_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15021:9
pub const vld3_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15027:9
pub const vld3_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15045:9
pub const vld3_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15063:9
pub const vld3q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15081:9
pub const vld3q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15099:9
pub const vld3q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15117:9
pub const vld3q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15135:9
pub const vld3q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15153:9
pub const vld3q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15171:9
pub const vld3q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15189:9
pub const vld3q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15207:9
pub const vld3q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15225:9
pub const vld3q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15243:9
pub const vld3q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15261:9
pub const vld3_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15279:9
pub const vld3_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15297:9
pub const vld3_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15314:9
pub const vld3_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15320:9
pub const vld3_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15338:9
pub const vld3_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15356:9
pub const vld3_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15374:9
pub const vld3_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15391:9
pub const vld3_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15397:9
pub const vld3_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15415:9
pub const vld3_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15439:9
pub const vld3q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15463:9
pub const vld3q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15487:9
pub const vld3q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15511:9
pub const vld3q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15535:9
pub const vld3q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15559:9
pub const vld3q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15583:9
pub const vld3_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15607:9
pub const vld3_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15631:9
pub const vld3_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15655:9
pub const vld3_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15679:9
pub const vld3_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15703:9
pub const vld3_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15727:9
pub const vld3_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15751:9
pub const vld4_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15775:9
pub const vld4_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15794:9
pub const vld4q_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15813:9
pub const vld4q_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15832:9
pub const vld4q_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15851:9
pub const vld4q_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15870:9
pub const vld4q_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15889:9
pub const vld4q_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15908:9
pub const vld4q_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15927:9
pub const vld4q_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15946:9
pub const vld4q_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15965:9
pub const vld4_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:15984:9
pub const vld4_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16003:9
pub const vld4_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16021:9
pub const vld4_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16027:9
pub const vld4_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16046:9
pub const vld4_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16065:9
pub const vld4_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16084:9
pub const vld4_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16102:9
pub const vld4_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16108:9
pub const vld4_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16127:9
pub const vld4_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16146:9
pub const vld4q_dup_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16165:9
pub const vld4q_dup_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16184:9
pub const vld4q_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16203:9
pub const vld4q_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16222:9
pub const vld4q_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16241:9
pub const vld4q_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16260:9
pub const vld4q_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16279:9
pub const vld4q_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16298:9
pub const vld4q_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16317:9
pub const vld4q_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16336:9
pub const vld4q_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16355:9
pub const vld4_dup_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16374:9
pub const vld4_dup_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16393:9
pub const vld4_dup_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16411:9
pub const vld4_dup_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16417:9
pub const vld4_dup_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16436:9
pub const vld4_dup_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16455:9
pub const vld4_dup_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16474:9
pub const vld4_dup_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16492:9
pub const vld4_dup_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16498:9
pub const vld4_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16517:9
pub const vld4_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16543:9
pub const vld4q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16569:9
pub const vld4q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16595:9
pub const vld4q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16621:9
pub const vld4q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16647:9
pub const vld4q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16673:9
pub const vld4q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16699:9
pub const vld4_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16725:9
pub const vld4_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16751:9
pub const vld4_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16777:9
pub const vld4_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16803:9
pub const vld4_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16829:9
pub const vld4_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16855:9
pub const vld4_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:16881:9
pub const vmlaq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_54`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17635:9
pub const vmlaq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_56`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17659:9
pub const vmlaq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_58`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17683:9
pub const vmlaq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_60`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17707:9
pub const vmlaq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_62`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17731:9
pub const vmla_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_64`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17755:9
pub const vmla_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_66`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17779:9
pub const vmla_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_68`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17803:9
pub const vmla_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_70`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17827:9
pub const vmla_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_72`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:17851:9
pub const vmlsq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_74`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18297:9
pub const vmlsq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_76`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18321:9
pub const vmlsq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_78`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18345:9
pub const vmlsq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_80`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18369:9
pub const vmlsq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_82`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18393:9
pub const vmls_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_84`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18417:9
pub const vmls_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_86`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18441:9
pub const vmls_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_88`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18465:9
pub const vmls_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_90`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18489:9
pub const vmls_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_92`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18513:9
pub const vmovq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18857:9
pub const vmov_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:18999:9
pub const vmulq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_94`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19575:9
pub const vmulq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_96`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19596:9
pub const vmulq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_98`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19617:9
pub const vmulq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_100`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19638:9
pub const vmulq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_102`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19659:9
pub const vmul_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_104`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19680:9
pub const vmul_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_106`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19701:9
pub const vmul_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_108`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19722:9
pub const vmul_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_110`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19743:9
pub const vmul_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_112`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:19764:9
pub const vmull_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_114`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20099:9
pub const vmull_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_116`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20120:9
pub const vmull_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_118`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20141:9
pub const vmull_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_120`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:20162:9
pub const vqdmlal_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_122`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22252:9
pub const vqdmlal_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_124`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22276:9
pub const vqdmlsl_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_126`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22390:9
pub const vqdmlsl_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_128`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22414:9
pub const vqdmull_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_130`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22678:9
pub const vqdmull_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_132`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:22699:9
pub const vqrshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23447:9
pub const vqrshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23471:9
pub const vqrshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23495:9
pub const vqrshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23519:9
pub const vqrshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23543:9
pub const vqrshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23567:9
pub const vqrshrun_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23591:9
pub const vqrshrun_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23615:9
pub const vqrshrun_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23639:9
pub const vqshlq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23911:9
pub const vqshlq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23929:9
pub const vqshlq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23947:9
pub const vqshlq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23965:9
pub const vqshlq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:23983:9
pub const vqshlq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24001:9
pub const vqshlq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24019:9
pub const vqshlq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24037:9
pub const vqshl_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24055:9
pub const vqshl_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24073:9
pub const vqshl_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24090:9
pub const vqshl_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24097:9
pub const vqshl_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24115:9
pub const vqshl_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24133:9
pub const vqshl_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24150:9
pub const vqshl_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24157:9
pub const vqshluq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24175:9
pub const vqshluq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24193:9
pub const vqshluq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24211:9
pub const vqshluq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24229:9
pub const vqshlu_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24247:9
pub const vqshlu_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24265:9
pub const vqshlu_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24282:9
pub const vqshlu_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24289:9
pub const vqshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24307:9
pub const vqshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24331:9
pub const vqshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24355:9
pub const vqshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24379:9
pub const vqshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24403:9
pub const vqshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24427:9
pub const vqshrun_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24451:9
pub const vqshrun_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24475:9
pub const vqshrun_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:24499:9
pub const vrshrq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26061:9
pub const vrshrq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26079:9
pub const vrshrq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26097:9
pub const vrshrq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26115:9
pub const vrshrq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26133:9
pub const vrshrq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26151:9
pub const vrshrq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26169:9
pub const vrshrq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26187:9
pub const vrshr_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26205:9
pub const vrshr_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26223:9
pub const vrshr_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26240:9
pub const vrshr_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26247:9
pub const vrshr_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26265:9
pub const vrshr_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26283:9
pub const vrshr_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26300:9
pub const vrshr_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26307:9
pub const vrshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26325:9
pub const vrshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26349:9
pub const vrshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26373:9
pub const vrshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26397:9
pub const vrshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26421:9
pub const vrshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26445:9
pub const vrsraq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26567:9
pub const vrsraq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26588:9
pub const vrsraq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26609:9
pub const vrsraq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26630:9
pub const vrsraq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26651:9
pub const vrsraq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26672:9
pub const vrsraq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26693:9
pub const vrsraq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26714:9
pub const vrsra_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26735:9
pub const vrsra_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26756:9
pub const vrsra_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26776:9
pub const vrsra_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26784:9
pub const vrsra_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26805:9
pub const vrsra_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26826:9
pub const vrsra_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26846:9
pub const vrsra_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:26854:9
pub const vset_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27007:9
pub const vset_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27034:9
pub const vsetq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27061:9
pub const vsetq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27088:9
pub const vsetq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27115:9
pub const vsetq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27142:9
pub const vsetq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27169:9
pub const vsetq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27196:9
pub const vsetq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27223:9
pub const vsetq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27250:9
pub const vsetq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27277:9
pub const vsetq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27304:9
pub const vsetq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27331:9
pub const vset_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27358:9
pub const vset_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27385:9
pub const vset_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27411:9
pub const vset_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27419:9
pub const vset_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27446:9
pub const vset_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27473:9
pub const vset_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27500:9
pub const vset_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27526:9
pub const vset_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27534:9
pub const vshlq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27809:9
pub const vshlq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27827:9
pub const vshlq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27845:9
pub const vshlq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27863:9
pub const vshlq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27881:9
pub const vshlq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27899:9
pub const vshlq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27917:9
pub const vshlq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27935:9
pub const vshl_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27953:9
pub const vshl_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27971:9
pub const vshl_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27988:9
pub const vshl_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:27995:9
pub const vshl_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28013:9
pub const vshl_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28031:9
pub const vshl_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28048:9
pub const vshl_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28055:9
pub const vshll_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28073:9
pub const vshll_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28097:9
pub const vshll_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28121:9
pub const vshll_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28145:9
pub const vshll_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28169:9
pub const vshll_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28193:9
pub const vshrq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28217:9
pub const vshrq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28235:9
pub const vshrq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28253:9
pub const vshrq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28271:9
pub const vshrq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28289:9
pub const vshrq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28307:9
pub const vshrq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28325:9
pub const vshrq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28343:9
pub const vshr_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28361:9
pub const vshr_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28379:9
pub const vshr_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28396:9
pub const vshr_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28403:9
pub const vshr_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28421:9
pub const vshr_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28439:9
pub const vshr_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28456:9
pub const vshr_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28463:9
pub const vshrn_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28481:9
pub const vshrn_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28505:9
pub const vshrn_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28529:9
pub const vshrn_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28553:9
pub const vshrn_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28577:9
pub const vshrn_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28601:9
pub const vsli_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28625:9
pub const vsli_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28646:9
pub const vsliq_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28667:9
pub const vsliq_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28688:9
pub const vsliq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28709:9
pub const vsliq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28730:9
pub const vsliq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28751:9
pub const vsliq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28772:9
pub const vsliq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28793:9
pub const vsliq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28814:9
pub const vsliq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28835:9
pub const vsliq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28856:9
pub const vsli_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28877:9
pub const vsli_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28898:9
pub const vsli_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28918:9
pub const vsli_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28926:9
pub const vsli_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28947:9
pub const vsli_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28968:9
pub const vsli_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28988:9
pub const vsli_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:28996:9
pub const vsraq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29017:9
pub const vsraq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29038:9
pub const vsraq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29059:9
pub const vsraq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29080:9
pub const vsraq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29101:9
pub const vsraq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29122:9
pub const vsraq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29143:9
pub const vsraq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29164:9
pub const vsra_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29185:9
pub const vsra_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29206:9
pub const vsra_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29226:9
pub const vsra_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29234:9
pub const vsra_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29255:9
pub const vsra_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29276:9
pub const vsra_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29296:9
pub const vsra_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29304:9
pub const vsri_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29325:9
pub const vsri_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29346:9
pub const vsriq_n_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29367:9
pub const vsriq_n_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29388:9
pub const vsriq_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29409:9
pub const vsriq_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29430:9
pub const vsriq_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29451:9
pub const vsriq_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29472:9
pub const vsriq_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29493:9
pub const vsriq_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29514:9
pub const vsriq_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29535:9
pub const vsriq_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29556:9
pub const vsri_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29577:9
pub const vsri_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29598:9
pub const vsri_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29618:9
pub const vsri_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29626:9
pub const vsri_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29647:9
pub const vsri_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29668:9
pub const vsri_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29688:9
pub const vsri_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29696:9
pub const vst1_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29717:9
pub const vst1_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29730:9
pub const vst1q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29743:9
pub const vst1q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29756:9
pub const vst1q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29769:9
pub const vst1q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29782:9
pub const vst1q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29795:9
pub const vst1q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29808:9
pub const vst1q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29821:9
pub const vst1q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29834:9
pub const vst1q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29847:9
pub const vst1q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29860:9
pub const vst1q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29873:9
pub const vst1_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29886:9
pub const vst1_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29899:9
pub const vst1_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29911:9
pub const vst1_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29916:9
pub const vst1_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29929:9
pub const vst1_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29942:9
pub const vst1_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29955:9
pub const vst1_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29967:9
pub const vst1_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29972:9
pub const vst1_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29985:9
pub const vst1_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:29998:9
pub const vst1q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30011:9
pub const vst1q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30024:9
pub const vst1q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30037:9
pub const vst1q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30050:9
pub const vst1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30063:9
pub const vst1q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30076:9
pub const vst1q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30089:9
pub const vst1q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30102:9
pub const vst1q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30115:9
pub const vst1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30128:9
pub const vst1q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30141:9
pub const vst1_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30154:9
pub const vst1_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30167:9
pub const vst1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30179:9
pub const vst1_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30184:9
pub const vst1_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30197:9
pub const vst1_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30210:9
pub const vst1_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30223:9
pub const vst1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30235:9
pub const vst1_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30240:9
pub const vst1_p8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30253:9
pub const vst1_p16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30268:9
pub const vst1q_p8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30283:9
pub const vst1q_p16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30298:9
pub const vst1q_u8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30313:9
pub const vst1q_u32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30328:9
pub const vst1q_u64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30343:9
pub const vst1q_u16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30358:9
pub const vst1q_s8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30373:9
pub const vst1q_f32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30388:9
pub const vst1q_s32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30403:9
pub const vst1q_s64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30418:9
pub const vst1q_s16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30433:9
pub const vst1_u8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30448:9
pub const vst1_u32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30463:9
pub const vst1_u64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30477:9
pub const vst1_u16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30482:9
pub const vst1_s8_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30497:9
pub const vst1_f32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30512:9
pub const vst1_s32_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30527:9
pub const vst1_s64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30541:9
pub const vst1_s16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30546:9
pub const vst1_p8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30561:9
pub const vst1_p16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30577:9
pub const vst1q_p8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30593:9
pub const vst1q_p16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30609:9
pub const vst1q_u8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30625:9
pub const vst1q_u32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30641:9
pub const vst1q_u64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30657:9
pub const vst1q_u16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30673:9
pub const vst1q_s8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30689:9
pub const vst1q_f32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30705:9
pub const vst1q_s32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30721:9
pub const vst1q_s64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30737:9
pub const vst1q_s16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30753:9
pub const vst1_u8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30769:9
pub const vst1_u32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30785:9
pub const vst1_u64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30800:9
pub const vst1_u16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30805:9
pub const vst1_s8_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30821:9
pub const vst1_f32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30837:9
pub const vst1_s32_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30853:9
pub const vst1_s64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30868:9
pub const vst1_s16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30873:9
pub const vst1_p8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30889:9
pub const vst1_p16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30906:9
pub const vst1q_p8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30923:9
pub const vst1q_p16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30940:9
pub const vst1q_u8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30957:9
pub const vst1q_u32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30974:9
pub const vst1q_u64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:30991:9
pub const vst1q_u16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31008:9
pub const vst1q_s8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31025:9
pub const vst1q_f32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31042:9
pub const vst1q_s32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31059:9
pub const vst1q_s64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31076:9
pub const vst1q_s16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31093:9
pub const vst1_u8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31110:9
pub const vst1_u32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31127:9
pub const vst1_u64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31143:9
pub const vst1_u16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31148:9
pub const vst1_s8_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31165:9
pub const vst1_f32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31182:9
pub const vst1_s32_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31199:9
pub const vst1_s64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31215:9
pub const vst1_s16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31220:9
pub const vst2_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31237:9
pub const vst2_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31252:9
pub const vst2q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31267:9
pub const vst2q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31282:9
pub const vst2q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31297:9
pub const vst2q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31312:9
pub const vst2q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31327:9
pub const vst2q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31342:9
pub const vst2q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31357:9
pub const vst2q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31372:9
pub const vst2q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31387:9
pub const vst2_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31402:9
pub const vst2_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31417:9
pub const vst2_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31431:9
pub const vst2_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31436:9
pub const vst2_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31451:9
pub const vst2_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31466:9
pub const vst2_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31481:9
pub const vst2_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31495:9
pub const vst2_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31500:9
pub const vst2_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31515:9
pub const vst2_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31530:9
pub const vst2q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31545:9
pub const vst2q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31560:9
pub const vst2q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31575:9
pub const vst2q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31590:9
pub const vst2q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31605:9
pub const vst2q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31620:9
pub const vst2_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31635:9
pub const vst2_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31650:9
pub const vst2_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31665:9
pub const vst2_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31680:9
pub const vst2_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31695:9
pub const vst2_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31710:9
pub const vst2_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31725:9
pub const vst3_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31740:9
pub const vst3_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31756:9
pub const vst3q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31772:9
pub const vst3q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31788:9
pub const vst3q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31804:9
pub const vst3q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31820:9
pub const vst3q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31836:9
pub const vst3q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31852:9
pub const vst3q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31868:9
pub const vst3q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31884:9
pub const vst3q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31900:9
pub const vst3_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31916:9
pub const vst3_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31932:9
pub const vst3_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31947:9
pub const vst3_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31952:9
pub const vst3_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31968:9
pub const vst3_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:31984:9
pub const vst3_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32000:9
pub const vst3_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32015:9
pub const vst3_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32020:9
pub const vst3_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32036:9
pub const vst3_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32052:9
pub const vst3q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32068:9
pub const vst3q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32084:9
pub const vst3q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32100:9
pub const vst3q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32116:9
pub const vst3q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32132:9
pub const vst3q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32148:9
pub const vst3_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32164:9
pub const vst3_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32180:9
pub const vst3_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32196:9
pub const vst3_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32212:9
pub const vst3_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32228:9
pub const vst3_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32244:9
pub const vst3_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32260:9
pub const vst4_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32276:9
pub const vst4_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32293:9
pub const vst4q_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32310:9
pub const vst4q_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32327:9
pub const vst4q_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32344:9
pub const vst4q_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32361:9
pub const vst4q_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32378:9
pub const vst4q_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32395:9
pub const vst4q_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32412:9
pub const vst4q_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32429:9
pub const vst4q_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32446:9
pub const vst4_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32463:9
pub const vst4_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32480:9
pub const vst4_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32496:9
pub const vst4_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32501:9
pub const vst4_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32518:9
pub const vst4_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32535:9
pub const vst4_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32552:9
pub const vst4_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32568:9
pub const vst4_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32573:9
pub const vst4_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32590:9
pub const vst4_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32607:9
pub const vst4q_lane_p16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32624:9
pub const vst4q_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32641:9
pub const vst4q_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32658:9
pub const vst4q_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32675:9
pub const vst4q_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32692:9
pub const vst4q_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32709:9
pub const vst4_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32726:9
pub const vst4_lane_u32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32743:9
pub const vst4_lane_u16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32760:9
pub const vst4_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32777:9
pub const vst4_lane_f32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32794:9
pub const vst4_lane_s32 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32811:9
pub const vst4_lane_s16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:32828:9
pub const vqrdmlahq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_134`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35441:9
pub const vqrdmlahq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_136`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35465:9
pub const vqrdmlah_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_138`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35489:9
pub const vqrdmlah_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_140`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35513:9
pub const vqrdmlshq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_142`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35629:9
pub const vqrdmlshq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_144`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35653:9
pub const vqrdmlsh_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_146`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35677:9
pub const vqrdmlsh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_148`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35701:9
pub const vcmla_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_150`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35839:9
pub const vcmlaq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_152`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35867:9
pub const vcmla_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_154`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35895:9
pub const vcmlaq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_156`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35923:9
pub const vcmla_rot180_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_158`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:35997:9
pub const vcmlaq_rot180_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_160`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36025:9
pub const vcmla_rot180_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_162`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36053:9
pub const vcmlaq_rot180_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_164`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36081:9
pub const vcmla_rot270_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_166`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36155:9
pub const vcmlaq_rot270_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_168`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36183:9
pub const vcmla_rot270_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_170`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36211:9
pub const vcmlaq_rot270_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_172`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36239:9
pub const vcmla_rot90_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_174`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36313:9
pub const vcmlaq_rot90_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_176`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36341:9
pub const vcmla_rot90_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_178`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36369:9
pub const vcmlaq_rot90_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_180`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36397:9
pub const vcmla_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_182`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36539:9
pub const vcmlaq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_184`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36567:9
pub const vcmla_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_186`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36595:9
pub const vcmlaq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_188`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36623:9
pub const vcmla_rot180_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_190`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36697:9
pub const vcmlaq_rot180_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_192`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36725:9
pub const vcmla_rot180_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_194`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36753:9
pub const vcmlaq_rot180_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_196`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36781:9
pub const vcmla_rot270_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_198`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36855:9
pub const vcmlaq_rot270_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_200`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36883:9
pub const vcmla_rot270_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_202`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36911:9
pub const vcmlaq_rot270_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_204`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:36939:9
pub const vcmla_rot90_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_206`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:37013:9
pub const vcmlaq_rot90_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_208`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:37041:9
pub const vcmla_rot90_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_210`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:37069:9
pub const vcmlaq_rot90_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_212`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:37097:9
pub const vld1q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:38988:9
pub const vld1_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39003:9
pub const vld1q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39018:9
pub const vld1_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39033:9
pub const vld1q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39048:9
pub const vld1_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39066:9
pub const vld1q_f16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39084:9
pub const vld1_f16_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39101:9
pub const vld1q_f16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39118:9
pub const vld1_f16_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39136:9
pub const vld1q_f16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39154:9
pub const vld1_f16_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39173:9
pub const vld2q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39192:9
pub const vld2_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39209:9
pub const vld2q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39226:9
pub const vld2_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39243:9
pub const vld2q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39260:9
pub const vld2_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39282:9
pub const vld3q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39304:9
pub const vld3_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39322:9
pub const vld3q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39340:9
pub const vld3_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39358:9
pub const vld3q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39376:9
pub const vld3_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39400:9
pub const vld4q_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39424:9
pub const vld4_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39443:9
pub const vld4q_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39462:9
pub const vld4_dup_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39481:9
pub const vld4q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39500:9
pub const vld4_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39526:9
pub const vst1q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39552:9
pub const vst1_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39565:9
pub const vst1q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39578:9
pub const vst1_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39591:9
pub const vst1q_f16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39604:9
pub const vst1_f16_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39619:9
pub const vst1q_f16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39634:9
pub const vst1_f16_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39650:9
pub const vst1q_f16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39666:9
pub const vst1_f16_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39683:9
pub const vst2q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39700:9
pub const vst2_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39715:9
pub const vst2q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39730:9
pub const vst2_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39745:9
pub const vst3q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39760:9
pub const vst3_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39776:9
pub const vst3q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39792:9
pub const vst3_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39808:9
pub const vst4q_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39824:9
pub const vst4_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39841:9
pub const vst4q_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39858:9
pub const vst4_lane_f16 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:39875:9
pub const vcopyq_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_230`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41280:9
pub const vcopy_lane_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_232`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41301:9
pub const vcopyq_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_234`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41322:9
pub const vcopy_laneq_bf16 = @compileError("unable to translate macro: undefined identifier `__ret_236`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41343:9
pub const vdotq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_238`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41703:9
pub const vdotq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_240`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41731:9
pub const vdot_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_242`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41759:9
pub const vdot_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_244`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:41787:9
pub const vfmah_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42033:9
pub const vfmaq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42062:9
pub const vfma_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42094:9
pub const vfmah_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42126:9
pub const vfmaq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42155:9
pub const vfma_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42187:9
pub const vfmaq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42219:9
pub const vfma_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42242:9
pub const vfmsh_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_246`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42265:9
pub const vfmsq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_248`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42286:9
pub const vfms_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_250`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42310:9
pub const vfmsh_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_252`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42334:9
pub const vfmsq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_254`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42355:9
pub const vfms_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_256`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42379:9
pub const vfmsq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42403:9
pub const vfms_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42426:9
pub const vmaxnmvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42449:9
pub const vmaxnmv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42466:9
pub const vmaxvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42483:9
pub const vmaxv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42500:9
pub const vminnmvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42517:9
pub const vminnmv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42534:9
pub const vminvq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42551:9
pub const vminv_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42568:9
pub const vmulq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_258`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42585:9
pub const vmul_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_260`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42606:9
pub const vmulxh_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42671:9
pub const vmulxq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_262`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42690:9
pub const vmulx_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_264`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42711:9
pub const vmulxh_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42732:9
pub const vmulxq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_266`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42751:9
pub const vmulx_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_268`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42772:9
pub const vmulxq_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42793:9
pub const vmulx_n_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:42813:9
pub const vsudotq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_270`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43016:9
pub const vsudot_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_272`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43042:9
pub const vusdotq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_274`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43068:9
pub const vusdot_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_276`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:43094:9
pub const vcopyq_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_278`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45535:9
pub const vcopyq_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_280`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45556:9
pub const vcopyq_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_282`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45577:9
pub const vcopyq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_284`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45598:9
pub const vcopyq_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_286`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45619:9
pub const vcopyq_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_288`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45639:9
pub const vcopyq_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_290`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45660:9
pub const vcopyq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_292`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45681:9
pub const vcopyq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_294`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45702:9
pub const vcopyq_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_296`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45723:9
pub const vcopyq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_298`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45743:9
pub const vcopy_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret_300`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45764:9
pub const vcopy_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret_302`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45785:9
pub const vcopy_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret_304`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45806:9
pub const vcopy_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_306`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45827:9
pub const vcopy_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret_308`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45847:9
pub const vcopy_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_309`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45855:9
pub const vcopy_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret_311`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45876:9
pub const vcopy_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_313`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45897:9
pub const vcopy_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_315`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45918:9
pub const vcopy_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret_317`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45938:9
pub const vcopy_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_318`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45946:9
pub const vcopyq_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_320`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45967:9
pub const vcopyq_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_322`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:45988:9
pub const vcopyq_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_324`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46009:9
pub const vcopyq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_326`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46030:9
pub const vcopyq_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_328`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46051:9
pub const vcopyq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_330`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46072:9
pub const vcopyq_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_332`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46093:9
pub const vcopyq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_334`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46114:9
pub const vcopyq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_336`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46135:9
pub const vcopyq_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_338`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46156:9
pub const vcopyq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_340`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46177:9
pub const vcopy_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_342`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46198:9
pub const vcopy_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_344`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46219:9
pub const vcopy_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_346`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46240:9
pub const vcopy_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_348`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46261:9
pub const vcopy_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_350`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46282:9
pub const vcopy_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_352`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46301:9
pub const vcopy_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_354`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46322:9
pub const vcopy_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_356`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46343:9
pub const vcopy_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_358`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46364:9
pub const vcopy_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_360`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46385:9
pub const vcopy_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_362`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46404:9
pub const vcreate_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46424:9
pub const vcreate_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46430:9
pub const vcvts_n_f32_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46606:9
pub const vcvts_n_f32_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46612:9
pub const vcvtq_n_f64_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46619:9
pub const vcvtq_n_f64_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46637:9
pub const vcvt_n_f64_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46654:9
pub const vcvt_n_f64_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46660:9
pub const vcvtd_n_f64_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46666:9
pub const vcvtd_n_f64_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46672:9
pub const vcvts_n_s32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46678:9
pub const vcvtq_n_s64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46685:9
pub const vcvt_n_s64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46702:9
pub const vcvtd_n_s64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46708:9
pub const vcvts_n_u32_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46714:9
pub const vcvtq_n_u64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46721:9
pub const vcvt_n_u64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46738:9
pub const vcvtd_n_u64_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:46744:9
pub const vdupb_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47160:9
pub const vduph_lane_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47177:9
pub const vdupb_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47194:9
pub const vdups_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47211:9
pub const vdupd_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47227:9
pub const vduph_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47234:9
pub const vdupb_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47251:9
pub const vdupd_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47267:9
pub const vdups_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47274:9
pub const vdups_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47291:9
pub const vdupd_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47307:9
pub const vduph_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47314:9
pub const vduph_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47331:9
pub const vdup_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_364`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47347:9
pub const vdupq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_365`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47354:9
pub const vdupq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_367`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47371:9
pub const vdup_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_369`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47387:9
pub const vdupb_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47394:9
pub const vduph_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47411:9
pub const vdupb_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47428:9
pub const vdups_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47445:9
pub const vdupd_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47462:9
pub const vduph_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47479:9
pub const vdupb_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47496:9
pub const vdupd_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47513:9
pub const vdups_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47530:9
pub const vdups_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47547:9
pub const vdupd_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47564:9
pub const vduph_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47581:9
pub const vduph_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47598:9
pub const vdup_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_370`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47615:9
pub const vdup_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_372`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47633:9
pub const vdup_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_374`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47650:9
pub const vdupq_laneq_p8 = @compileError("unable to translate macro: undefined identifier `__ret_376`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47668:9
pub const vdupq_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_378`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47686:9
pub const vdupq_laneq_p16 = @compileError("unable to translate macro: undefined identifier `__ret_380`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47704:9
pub const vdupq_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_382`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47722:9
pub const vdupq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_384`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47740:9
pub const vdupq_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_386`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47758:9
pub const vdupq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_388`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47776:9
pub const vdupq_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_390`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47794:9
pub const vdupq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_392`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47812:9
pub const vdupq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_394`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47830:9
pub const vdupq_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_396`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47848:9
pub const vdupq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_398`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47866:9
pub const vdupq_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_400`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47884:9
pub const vdupq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_402`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47902:9
pub const vdup_laneq_u8 = @compileError("unable to translate macro: undefined identifier `__ret_404`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47920:9
pub const vdup_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_406`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47938:9
pub const vdup_laneq_u64 = @compileError("unable to translate macro: undefined identifier `__ret_408`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47956:9
pub const vdup_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_410`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47973:9
pub const vdup_laneq_s8 = @compileError("unable to translate macro: undefined identifier `__ret_412`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:47991:9
pub const vdup_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_414`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48009:9
pub const vdup_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_416`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48026:9
pub const vdup_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_418`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48044:9
pub const vdup_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_420`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48062:9
pub const vdup_laneq_s64 = @compileError("unable to translate macro: undefined identifier `__ret_422`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48080:9
pub const vdup_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_424`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48097:9
pub const vext_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48154:9
pub const vextq_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48162:9
pub const vextq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48183:9
pub const vext_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48203:9
pub const vfmad_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48238:9
pub const vfmas_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48247:9
pub const vfmaq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48276:9
pub const vfmaq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48307:9
pub const vfma_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48338:9
pub const vfma_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48347:9
pub const vfmad_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48379:9
pub const vfmas_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48408:9
pub const vfmaq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48437:9
pub const vfmaq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48469:9
pub const vfma_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48501:9
pub const vfma_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48530:9
pub const vfmsd_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_426`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48606:9
pub const vfmss_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_427`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48615:9
pub const vfmsq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_429`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48636:9
pub const vfmsq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_431`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48659:9
pub const vfms_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_433`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48682:9
pub const vfms_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_434`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48691:9
pub const vfmsd_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_436`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48715:9
pub const vfmss_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_438`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48736:9
pub const vfmsq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_440`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48757:9
pub const vfmsq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_442`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48781:9
pub const vfms_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_444`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48805:9
pub const vfms_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_446`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48826:9
pub const vget_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48940:9
pub const vgetq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48947:9
pub const vgetq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48970:9
pub const vget_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:48992:9
pub const vld1_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49028:9
pub const vld1q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49034:9
pub const vld1q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49049:9
pub const vld1_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49063:9
pub const vld1_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49068:9
pub const vld1q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49074:9
pub const vld1q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49089:9
pub const vld1_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49103:9
pub const vld1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49108:9
pub const vld1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49115:9
pub const vld1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49133:9
pub const vld1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49150:9
pub const vld1_p64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49156:9
pub const vld1q_p64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49162:9
pub const vld1q_f64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49179:9
pub const vld1_f64_x2 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49195:9
pub const vld1_p64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49200:9
pub const vld1q_p64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49206:9
pub const vld1q_f64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49224:9
pub const vld1_f64_x3 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49241:9
pub const vld1_p64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49246:9
pub const vld1q_p64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49252:9
pub const vld1q_f64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49271:9
pub const vld1_f64_x4 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49289:9
pub const vld2_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49294:9
pub const vld2q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49300:9
pub const vld2q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49317:9
pub const vld2q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49334:9
pub const vld2q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49351:9
pub const vld2_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49367:9
pub const vld2_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49372:9
pub const vld2q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49378:9
pub const vld2q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49395:9
pub const vld2_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49411:9
pub const vld2_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49416:9
pub const vld2q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49423:9
pub const vld2q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49445:9
pub const vld2q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49467:9
pub const vld2q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49489:9
pub const vld2q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49511:9
pub const vld2q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49533:9
pub const vld2q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49555:9
pub const vld2_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49576:9
pub const vld2_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49582:9
pub const vld2_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49588:9
pub const vld3_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49594:9
pub const vld3q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49600:9
pub const vld3q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49618:9
pub const vld3q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49636:9
pub const vld3q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49654:9
pub const vld3_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49671:9
pub const vld3_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49676:9
pub const vld3q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49682:9
pub const vld3q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49700:9
pub const vld3_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49717:9
pub const vld3_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49722:9
pub const vld3q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49729:9
pub const vld3q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49753:9
pub const vld3q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49777:9
pub const vld3q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49801:9
pub const vld3q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49825:9
pub const vld3q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49849:9
pub const vld3q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49873:9
pub const vld3_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49896:9
pub const vld3_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49902:9
pub const vld3_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49908:9
pub const vld4_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49914:9
pub const vld4q_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49920:9
pub const vld4q_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49939:9
pub const vld4q_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49958:9
pub const vld4q_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49977:9
pub const vld4_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:49995:9
pub const vld4_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50000:9
pub const vld4q_dup_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50006:9
pub const vld4q_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50025:9
pub const vld4_dup_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50043:9
pub const vld4_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50048:9
pub const vld4q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50055:9
pub const vld4q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50081:9
pub const vld4q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50107:9
pub const vld4q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50133:9
pub const vld4q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50159:9
pub const vld4q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50185:9
pub const vld4q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50211:9
pub const vld4_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50236:9
pub const vld4_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50242:9
pub const vld4_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50248:9
pub const vldrq_p128 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50254:9
pub const vmlaq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_448`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50867:9
pub const vmlaq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_450`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50891:9
pub const vmlaq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_452`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50915:9
pub const vmlaq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_454`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50939:9
pub const vmlaq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_456`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50963:9
pub const vmla_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_458`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:50987:9
pub const vmla_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_460`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51011:9
pub const vmla_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_462`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51035:9
pub const vmla_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_464`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51059:9
pub const vmla_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_466`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51083:9
pub const vmlal_high_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_468`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51107:9
pub const vmlal_high_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_470`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51131:9
pub const vmlal_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_472`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51155:9
pub const vmlal_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_474`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51179:9
pub const vmlal_high_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_476`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51203:9
pub const vmlal_high_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_478`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51227:9
pub const vmlal_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_480`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51251:9
pub const vmlal_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_482`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51275:9
pub const vmlal_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_484`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51299:9
pub const vmlal_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_486`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51323:9
pub const vmlal_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_488`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51347:9
pub const vmlal_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_490`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51371:9
pub const vmlsq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_492`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51418:9
pub const vmlsq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_494`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51442:9
pub const vmlsq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_496`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51466:9
pub const vmlsq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_498`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51490:9
pub const vmlsq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_500`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51514:9
pub const vmls_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_502`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51538:9
pub const vmls_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_504`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51562:9
pub const vmls_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_506`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51586:9
pub const vmls_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_508`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51610:9
pub const vmls_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_510`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51634:9
pub const vmlsl_high_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_512`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51658:9
pub const vmlsl_high_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_514`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51682:9
pub const vmlsl_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_516`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51706:9
pub const vmlsl_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_518`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51730:9
pub const vmlsl_high_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_520`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51754:9
pub const vmlsl_high_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_522`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51778:9
pub const vmlsl_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_524`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51802:9
pub const vmlsl_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_526`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51826:9
pub const vmlsl_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_528`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51850:9
pub const vmlsl_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_530`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51874:9
pub const vmlsl_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_532`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51898:9
pub const vmlsl_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_534`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:51922:9
pub const vmuld_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_554`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52253:9
pub const vmuls_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_555`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52261:9
pub const vmul_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52279:9
pub const vmulq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_557`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52287:9
pub const vmuld_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_559`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52307:9
pub const vmuls_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_561`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52326:9
pub const vmul_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52345:9
pub const vmulq_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_563`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52364:9
pub const vmulq_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_565`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52385:9
pub const vmulq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_567`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52406:9
pub const vmulq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_569`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52427:9
pub const vmulq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_571`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52448:9
pub const vmulq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_573`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52469:9
pub const vmul_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_575`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52490:9
pub const vmul_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_577`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52511:9
pub const vmul_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_579`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52532:9
pub const vmul_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_581`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52553:9
pub const vmul_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_583`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52574:9
pub const vmull_high_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_585`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52735:9
pub const vmull_high_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_587`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52756:9
pub const vmull_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_589`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52777:9
pub const vmull_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_591`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52798:9
pub const vmull_high_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_593`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52819:9
pub const vmull_high_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_595`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52840:9
pub const vmull_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_597`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52861:9
pub const vmull_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_599`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52882:9
pub const vmull_laneq_u32 = @compileError("unable to translate macro: undefined identifier `__ret_601`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52967:9
pub const vmull_laneq_u16 = @compileError("unable to translate macro: undefined identifier `__ret_603`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:52988:9
pub const vmull_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_605`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53009:9
pub const vmull_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_607`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53030:9
pub const vmulxd_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_609`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53131:9
pub const vmulxs_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_610`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53139:9
pub const vmulxq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_612`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53158:9
pub const vmulxq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_614`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53178:9
pub const vmulx_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_616`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53199:9
pub const vmulxd_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_618`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53220:9
pub const vmulxs_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_620`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53239:9
pub const vmulxq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_622`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53258:9
pub const vmulxq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_624`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53279:9
pub const vmulx_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_626`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:53300:9
pub const vqdmlal_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_628`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54219:9
pub const vqdmlal_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_630`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54243:9
pub const vqdmlal_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_632`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54267:9
pub const vqdmlal_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_634`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54291:9
pub const vqdmlals_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54349:9
pub const vqdmlalh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54370:9
pub const vqdmlals_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54391:9
pub const vqdmlalh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54412:9
pub const vqdmlal_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_636`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54433:9
pub const vqdmlal_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_638`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54457:9
pub const vqdmlsl_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_640`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54527:9
pub const vqdmlsl_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_642`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54551:9
pub const vqdmlsl_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_644`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54575:9
pub const vqdmlsl_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_646`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54599:9
pub const vqdmlsls_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54657:9
pub const vqdmlslh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54678:9
pub const vqdmlsls_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54699:9
pub const vqdmlslh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54720:9
pub const vqdmlsl_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_648`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54741:9
pub const vqdmlsl_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_650`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54765:9
pub const vqdmulhq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54799:9
pub const vqdmulhq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54820:9
pub const vqdmulh_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54841:9
pub const vqdmulh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54862:9
pub const vqdmulhs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_652`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54883:9
pub const vqdmulhh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_654`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54902:9
pub const vqdmulhs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_656`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54921:9
pub const vqdmulhh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_658`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54940:9
pub const vqdmulhq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54959:9
pub const vqdmulhq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:54980:9
pub const vqdmulh_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55001:9
pub const vqdmulh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55022:9
pub const vqdmull_high_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_660`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55087:9
pub const vqdmull_high_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_662`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55108:9
pub const vqdmull_high_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_664`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55129:9
pub const vqdmull_high_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_666`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55150:9
pub const vqdmulls_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_668`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55203:9
pub const vqdmullh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_670`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55222:9
pub const vqdmulls_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_672`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55241:9
pub const vqdmullh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_674`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55260:9
pub const vqdmull_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_676`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55279:9
pub const vqdmull_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_678`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55300:9
pub const vqrdmulhq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55570:9
pub const vqrdmulhq_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55591:9
pub const vqrdmulh_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55612:9
pub const vqrdmulh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55633:9
pub const vqrdmulhs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_680`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55654:9
pub const vqrdmulhh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_682`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55673:9
pub const vqrdmulhs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_684`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55692:9
pub const vqrdmulhh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_686`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55711:9
pub const vqrdmulhq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55730:9
pub const vqrdmulhq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55751:9
pub const vqrdmulh_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55772:9
pub const vqrdmulh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55793:9
pub const vqrshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_688`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55854:9
pub const vqrshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_690`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55875:9
pub const vqrshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_692`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55896:9
pub const vqrshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_694`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55917:9
pub const vqrshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_696`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55938:9
pub const vqrshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_698`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55959:9
pub const vqrshrns_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55979:9
pub const vqrshrnd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55985:9
pub const vqrshrnh_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55991:9
pub const vqrshrns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:55997:9
pub const vqrshrnd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56003:9
pub const vqrshrnh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56009:9
pub const vqrshrun_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_700`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56016:9
pub const vqrshrun_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_702`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56037:9
pub const vqrshrun_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_704`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56058:9
pub const vqrshruns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56078:9
pub const vqrshrund_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56084:9
pub const vqrshrunh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56090:9
pub const vqshlb_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56136:9
pub const vqshls_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56142:9
pub const vqshld_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56148:9
pub const vqshlh_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56154:9
pub const vqshlb_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56160:9
pub const vqshls_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56166:9
pub const vqshld_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56172:9
pub const vqshlh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56178:9
pub const vqshlub_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56184:9
pub const vqshlus_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56190:9
pub const vqshlud_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56196:9
pub const vqshluh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56202:9
pub const vqshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_706`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56209:9
pub const vqshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_708`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56230:9
pub const vqshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_710`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56251:9
pub const vqshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_712`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56272:9
pub const vqshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_714`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56293:9
pub const vqshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_716`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56314:9
pub const vqshrns_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56334:9
pub const vqshrnd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56340:9
pub const vqshrnh_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56346:9
pub const vqshrns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56352:9
pub const vqshrnd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56358:9
pub const vqshrnh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56364:9
pub const vqshrun_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_718`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56371:9
pub const vqshrun_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_720`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56392:9
pub const vqshrun_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_722`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56413:9
pub const vqshruns_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56433:9
pub const vqshrund_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56439:9
pub const vqshrunh_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:56445:9
pub const vrshrd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59686:9
pub const vrshrd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59692:9
pub const vrshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_724`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59699:9
pub const vrshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_726`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59720:9
pub const vrshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_728`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59741:9
pub const vrshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_730`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59762:9
pub const vrshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_732`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59783:9
pub const vrshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_734`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59804:9
pub const vrsrad_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59887:9
pub const vrsrad_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:59894:9
pub const vset_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60009:9
pub const vsetq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60017:9
pub const vsetq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60044:9
pub const vset_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60070:9
pub const vshld_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60087:9
pub const vshld_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60093:9
pub const vshll_high_n_u8 = @compileError("unable to translate macro: undefined identifier `__ret_736`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60100:9
pub const vshll_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_738`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60118:9
pub const vshll_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_740`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60136:9
pub const vshll_high_n_s8 = @compileError("unable to translate macro: undefined identifier `__ret_742`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60154:9
pub const vshll_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_744`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60172:9
pub const vshll_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_746`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60190:9
pub const vshrd_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60207:9
pub const vshrd_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60213:9
pub const vshrn_high_n_u32 = @compileError("unable to translate macro: undefined identifier `__ret_748`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60220:9
pub const vshrn_high_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret_750`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60241:9
pub const vshrn_high_n_u16 = @compileError("unable to translate macro: undefined identifier `__ret_752`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60262:9
pub const vshrn_high_n_s32 = @compileError("unable to translate macro: undefined identifier `__ret_754`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60283:9
pub const vshrn_high_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret_756`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60304:9
pub const vshrn_high_n_s16 = @compileError("unable to translate macro: undefined identifier `__ret_758`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60325:9
pub const vslid_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60345:9
pub const vslid_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60352:9
pub const vsli_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60359:9
pub const vsliq_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60367:9
pub const vsrad_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60584:9
pub const vsrad_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60591:9
pub const vsrid_n_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60598:9
pub const vsrid_n_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60605:9
pub const vsri_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60612:9
pub const vsriq_n_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60620:9
pub const vst1_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60640:9
pub const vst1q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60645:9
pub const vst1q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60658:9
pub const vst1_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60670:9
pub const vst1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60674:9
pub const vst1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60679:9
pub const vst1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60692:9
pub const vst1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60704:9
pub const vst1_p64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60708:9
pub const vst1q_p64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60713:9
pub const vst1q_f64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60728:9
pub const vst1_f64_x2 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60742:9
pub const vst1_p64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60746:9
pub const vst1q_p64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60751:9
pub const vst1q_f64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60767:9
pub const vst1_f64_x3 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60782:9
pub const vst1_p64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60786:9
pub const vst1q_p64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60791:9
pub const vst1q_f64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60808:9
pub const vst1_f64_x4 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60824:9
pub const vst2_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60828:9
pub const vst2q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60833:9
pub const vst2q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60848:9
pub const vst2q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60863:9
pub const vst2q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60878:9
pub const vst2_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60892:9
pub const vst2_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60896:9
pub const vst2q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60901:9
pub const vst2q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60916:9
pub const vst2q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60931:9
pub const vst2q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60946:9
pub const vst2q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60961:9
pub const vst2q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60976:9
pub const vst2q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:60991:9
pub const vst2_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61005:9
pub const vst2_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61009:9
pub const vst2_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61013:9
pub const vst3_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61017:9
pub const vst3q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61022:9
pub const vst3q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61038:9
pub const vst3q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61054:9
pub const vst3q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61070:9
pub const vst3_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61085:9
pub const vst3_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61089:9
pub const vst3q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61094:9
pub const vst3q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61110:9
pub const vst3q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61126:9
pub const vst3q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61142:9
pub const vst3q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61158:9
pub const vst3q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61174:9
pub const vst3q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61190:9
pub const vst3_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61205:9
pub const vst3_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61209:9
pub const vst3_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61213:9
pub const vst4_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61217:9
pub const vst4q_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61222:9
pub const vst4q_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61239:9
pub const vst4q_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61256:9
pub const vst4q_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61273:9
pub const vst4_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61289:9
pub const vst4_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61293:9
pub const vst4q_lane_p8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61298:9
pub const vst4q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61315:9
pub const vst4q_lane_u8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61332:9
pub const vst4q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61349:9
pub const vst4q_lane_s8 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61366:9
pub const vst4q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61383:9
pub const vst4q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61400:9
pub const vst4_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61416:9
pub const vst4_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61420:9
pub const vst4_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61424:9
pub const vstrq_p128 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:61428:9
pub const vldap1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64444:9
pub const vldap1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64451:9
pub const vldap1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64469:9
pub const vldap1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64487:9
pub const vldap1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64505:9
pub const vldap1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64522:9
pub const vldap1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64528:9
pub const vldap1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64534:9
pub const vstl1_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64540:9
pub const vstl1q_lane_p64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64545:9
pub const vstl1q_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64558:9
pub const vstl1q_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64571:9
pub const vstl1q_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64584:9
pub const vstl1_lane_u64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64596:9
pub const vstl1_lane_f64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64600:9
pub const vstl1_lane_s64 = @compileError("unable to translate macro: undefined identifier `__s1`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64604:9
pub const vxarq_u64 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:64985:9
pub const vsm3tt1aq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65060:9
pub const vsm3tt1bq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65084:9
pub const vsm3tt2aq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65108:9
pub const vsm3tt2bq_u32 = @compileError("unable to translate macro: undefined identifier `__ret`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65132:9
pub const vqrdmlahs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_760`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65200:9
pub const vqrdmlahh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_762`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65221:9
pub const vqrdmlahs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_764`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65242:9
pub const vqrdmlahh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_766`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65263:9
pub const vqrdmlahq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_768`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65284:9
pub const vqrdmlahq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_770`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65308:9
pub const vqrdmlah_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_772`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65332:9
pub const vqrdmlah_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_774`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65356:9
pub const vqrdmlshs_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_776`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65390:9
pub const vqrdmlshh_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_778`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65411:9
pub const vqrdmlshs_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_780`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65432:9
pub const vqrdmlshh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_782`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65453:9
pub const vqrdmlshq_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_784`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65474:9
pub const vqrdmlshq_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_786`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65498:9
pub const vqrdmlsh_laneq_s32 = @compileError("unable to translate macro: undefined identifier `__ret_788`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65522:9
pub const vqrdmlsh_laneq_s16 = @compileError("unable to translate macro: undefined identifier `__ret_790`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65546:9
pub const vcmla_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_792`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65631:9
pub const vcmlaq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_793`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65642:9
pub const vcmla_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_795`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65669:9
pub const vcmlaq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_797`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65694:9
pub const vcmla_rot180_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_799`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65749:9
pub const vcmlaq_rot180_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_800`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65760:9
pub const vcmla_rot180_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_802`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65787:9
pub const vcmlaq_rot180_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_804`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65812:9
pub const vcmla_rot270_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_806`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65867:9
pub const vcmlaq_rot270_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_807`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65878:9
pub const vcmla_rot270_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_809`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65905:9
pub const vcmlaq_rot270_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_811`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65930:9
pub const vcmla_rot90_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_813`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65985:9
pub const vcmlaq_rot90_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_814`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:65996:9
pub const vcmla_rot90_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_816`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66023:9
pub const vcmlaq_rot90_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_818`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66048:9
pub const vbfdotq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_820`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66289:9
pub const vbfdot_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_822`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66317:9
pub const vbfdotq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_824`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66345:9
pub const vbfdot_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_826`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66373:9
pub const vbfmlalbq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_828`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66401:9
pub const vbfmlalbq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_830`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66425:9
pub const vbfmlaltq_lane_f32 = @compileError("unable to translate macro: undefined identifier `__ret_832`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66449:9
pub const vbfmlaltq_laneq_f32 = @compileError("unable to translate macro: undefined identifier `__ret_834`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66473:9
pub const vdotq_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_839`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66556:9
pub const vdotq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_841`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66584:9
pub const vdot_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_843`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66612:9
pub const vdot_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_845`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66640:9
pub const vmulq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_847`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66668:9
pub const vmul_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_849`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66689:9
pub const vsudotq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_851`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66710:9
pub const vsudot_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_853`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66736:9
pub const vusdotq_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_855`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66762:9
pub const vusdot_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_857`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:66788:9
pub const vget_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_859`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67366:9
pub const vgetq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_862`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67395:9
pub const vmlal_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_865`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67562:9
pub const vmlal_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_867`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67586:9
pub const vmlal_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_869`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67610:9
pub const vmlal_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_871`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67634:9
pub const vmlsl_lane_u32 = @compileError("unable to translate macro: undefined identifier `__ret_873`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67884:9
pub const vmlsl_lane_u16 = @compileError("unable to translate macro: undefined identifier `__ret_875`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67908:9
pub const vmlsl_lane_s32 = @compileError("unable to translate macro: undefined identifier `__ret_877`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67932:9
pub const vmlsl_lane_s16 = @compileError("unable to translate macro: undefined identifier `__ret_879`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:67956:9
pub const vset_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_881`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68068:9
pub const vsetq_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_883`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68094:9
pub const vfmlalq_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_885`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68137:9
pub const vfmlal_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_887`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68161:9
pub const vfmlalq_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_889`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68185:9
pub const vfmlal_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_891`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68209:9
pub const vfmlalq_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_893`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68233:9
pub const vfmlal_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_895`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68257:9
pub const vfmlalq_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_897`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68281:9
pub const vfmlal_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_899`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68305:9
pub const vfmlslq_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_901`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68329:9
pub const vfmlsl_lane_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_903`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68353:9
pub const vfmlslq_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_905`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68377:9
pub const vfmlsl_lane_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_907`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68401:9
pub const vfmlslq_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_909`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68425:9
pub const vfmlsl_laneq_high_f16 = @compileError("unable to translate macro: undefined identifier `__ret_911`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68449:9
pub const vfmlslq_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_913`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68473:9
pub const vfmlsl_laneq_low_f16 = @compileError("unable to translate macro: undefined identifier `__ret_915`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68497:9
pub const vmulh_lane_f16 = @compileError("unable to translate macro: undefined identifier `__ret_917`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68521:9
pub const vmulh_laneq_f16 = @compileError("unable to translate macro: undefined identifier `__ret_919`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68540:9
pub const vcopyq_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_921`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68865:9
pub const vcopyq_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_923`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68885:9
pub const vcopy_lane_p64 = @compileError("unable to translate macro: undefined identifier `__ret_925`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68904:9
pub const vcopy_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_926`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68911:9
pub const vcopyq_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_927`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68919:9
pub const vcopyq_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_929`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68940:9
pub const vcopy_laneq_p64 = @compileError("unable to translate macro: undefined identifier `__ret_931`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68961:9
pub const vcopy_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_933`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:68980:9
pub const vmulx_lane_f64 = @compileError("unable to translate macro: undefined identifier `__ret_935`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:69350:9
pub const vmulx_laneq_f64 = @compileError("unable to translate macro: undefined identifier `__ret_936`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/arm_neon.h:69361:9
pub const ZEND_ENDIAN_LOHI = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:49:10
pub const ZEND_ENDIAN_LOHI_3 = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:50:10
pub const ZEND_ENDIAN_LOHI_4 = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:51:10
pub inline fn ZEND_ENDIAN_LOHI_C(lo: anytype, hi: anytype) @TypeOf(hi) {
    _ = &lo;
    _ = &hi;
    return blk: {
        _ = &lo;
        break :blk hi;
    };
}
pub const ZEND_ENDIAN_LOHI_C_3 = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:53:10
pub inline fn ZEND_ENDIAN_LOHI_C_4(a: anytype, b: anytype, c: anytype, d: anytype) @TypeOf(d) {
    _ = &a;
    _ = &b;
    _ = &c;
    _ = &d;
    return blk: {
        _ = &a;
        _ = &b;
        _ = &c;
        break :blk d;
    };
}
pub const ZEND_SIZE_MAX = SIZE_MAX;
pub const ZEND_TLS = @compileError("unable to translate C expr: unexpected token 'static'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:84:9
pub const ZEND_EXT_TLS = "";
pub const _ZEND_TYPE_EXTRA_FLAGS_SHIFT = @as(c_int, 25);
pub const _ZEND_TYPE_MASK = (@as(c_uint, 1) << @as(c_int, 25)) - @as(c_int, 1);
pub const _ZEND_TYPE_NAME_BIT = @as(c_uint, 1) << @as(c_int, 24);
pub const _ZEND_TYPE_LITERAL_NAME_BIT = @as(c_uint, 1) << @as(c_int, 23);
pub const _ZEND_TYPE_LIST_BIT = @as(c_uint, 1) << @as(c_int, 22);
pub const _ZEND_TYPE_KIND_MASK = (_ZEND_TYPE_LIST_BIT | _ZEND_TYPE_NAME_BIT) | _ZEND_TYPE_LITERAL_NAME_BIT;
pub const _ZEND_TYPE_ITERABLE_BIT = @as(c_uint, 1) << @as(c_int, 21);
pub const _ZEND_TYPE_ARENA_BIT = @as(c_uint, 1) << @as(c_int, 20);
pub const _ZEND_TYPE_INTERSECTION_BIT = @as(c_uint, 1) << @as(c_int, 19);
pub const _ZEND_TYPE_UNION_BIT = @as(c_uint, 1) << @as(c_int, 18);
pub const _ZEND_TYPE_MAY_BE_MASK = (@as(c_uint, 1) << @as(c_int, 18)) - @as(c_int, 1);
pub const _ZEND_TYPE_NULLABLE_BIT = @as(c_uint, 0x2);
pub inline fn ZEND_TYPE_IS_SET(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_MASK) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_MASK) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_IS_COMPLEX(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_KIND_MASK) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_KIND_MASK) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_HAS_NAME(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_NAME_BIT) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_NAME_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_HAS_LITERAL_NAME(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_LITERAL_NAME_BIT) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_LITERAL_NAME_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_HAS_LIST(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_LIST_BIT) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_LIST_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_IS_ITERABLE_FALLBACK(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_ITERABLE_BIT) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_ITERABLE_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_IS_INTERSECTION(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_INTERSECTION_BIT) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_INTERSECTION_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_IS_UNION(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_UNION_BIT) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_UNION_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_USES_ARENA(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_ARENA_BIT) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_ARENA_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_IS_ONLY_MASK(t: anytype) @TypeOf((ZEND_TYPE_IS_SET(t) != 0) and (t.ptr == NULL)) {
    _ = &t;
    return (ZEND_TYPE_IS_SET(t) != 0) and (t.ptr == NULL);
}
pub inline fn ZEND_TYPE_NAME(t: anytype) [*c]zend_string {
    _ = &t;
    return @import("std").zig.c_translation.cast([*c]zend_string, t.ptr);
}
pub const ZEND_TYPE_LITERAL_NAME = @compileError("unable to translate C expr: unexpected token 'const'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:201:9
pub inline fn ZEND_TYPE_LIST(t: anytype) [*c]zend_type_list {
    _ = &t;
    return @import("std").zig.c_translation.cast([*c]zend_type_list, t.ptr);
}
pub inline fn ZEND_TYPE_LIST_SIZE(num_types: anytype) @TypeOf(@import("std").zig.c_translation.sizeof(zend_type_list) + ((num_types - @as(c_int, 1)) * @import("std").zig.c_translation.sizeof(zend_type))) {
    _ = &num_types;
    return @import("std").zig.c_translation.sizeof(zend_type_list) + ((num_types - @as(c_int, 1)) * @import("std").zig.c_translation.sizeof(zend_type));
}
pub const ZEND_TYPE_LIST_FOREACH = @compileError("unable to translate macro: undefined identifier `_list`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:211:9
pub const ZEND_TYPE_LIST_FOREACH_END = @compileError("unable to translate C expr: unexpected token '}'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:217:9
pub const ZEND_TYPE_FOREACH = @compileError("unable to translate macro: undefined identifier `_cur`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:223:9
pub const ZEND_TYPE_FOREACH_END = @compileError("unable to translate macro: undefined identifier `_cur`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:236:9
pub const ZEND_TYPE_SET_PTR = @compileError("unable to translate C expr: expected ')' instead got '='");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:240:9
pub const ZEND_TYPE_SET_PTR_AND_KIND = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:243:9
pub inline fn ZEND_TYPE_SET_LIST(t: anytype, list: anytype) @TypeOf(ZEND_TYPE_SET_PTR_AND_KIND(t, list, _ZEND_TYPE_LIST_BIT)) {
    _ = &t;
    _ = &list;
    return ZEND_TYPE_SET_PTR_AND_KIND(t, list, _ZEND_TYPE_LIST_BIT);
}
pub inline fn ZEND_TYPE_FULL_MASK(t: anytype) @TypeOf(t.type_mask) {
    _ = &t;
    return t.type_mask;
}
pub inline fn ZEND_TYPE_PURE_MASK(t: anytype) @TypeOf(t.type_mask & _ZEND_TYPE_MAY_BE_MASK) {
    _ = &t;
    return t.type_mask & _ZEND_TYPE_MAY_BE_MASK;
}
pub inline fn ZEND_TYPE_FULL_MASK_WITHOUT_NULL(t: anytype) @TypeOf(t.type_mask & ~_ZEND_TYPE_NULLABLE_BIT) {
    _ = &t;
    return t.type_mask & ~_ZEND_TYPE_NULLABLE_BIT;
}
pub inline fn ZEND_TYPE_PURE_MASK_WITHOUT_NULL(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_MAY_BE_MASK) & ~_ZEND_TYPE_NULLABLE_BIT) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_MAY_BE_MASK) & ~_ZEND_TYPE_NULLABLE_BIT;
}
pub inline fn ZEND_TYPE_CONTAINS_CODE(t: anytype, code: anytype) @TypeOf((t.type_mask & (@as(c_uint, 1) << code)) != @as(c_int, 0)) {
    _ = &t;
    _ = &code;
    return (t.type_mask & (@as(c_uint, 1) << code)) != @as(c_int, 0);
}
pub inline fn ZEND_TYPE_ALLOW_NULL(t: anytype) @TypeOf((t.type_mask & _ZEND_TYPE_NULLABLE_BIT) != @as(c_int, 0)) {
    _ = &t;
    return (t.type_mask & _ZEND_TYPE_NULLABLE_BIT) != @as(c_int, 0);
}
pub const _ZEND_TYPE_PREFIX = "";
pub const ZEND_TYPE_INIT_NONE = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:280:9
pub const ZEND_TYPE_INIT_MASK = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:283:9
pub inline fn ZEND_TYPE_INIT_CODE(code: anytype, allow_null: anytype, extra_flags: anytype) @TypeOf(ZEND_TYPE_INIT_MASK(((if (code == _IS_BOOL) MAY_BE_BOOL else if (code == IS_ITERABLE) _ZEND_TYPE_ITERABLE_BIT else if (code == IS_MIXED) MAY_BE_ANY else @as(c_int, 1) << code) | (if (allow_null) _ZEND_TYPE_NULLABLE_BIT else @as(c_int, 0))) | extra_flags)) {
    _ = &code;
    _ = &allow_null;
    _ = &extra_flags;
    return ZEND_TYPE_INIT_MASK(((if (code == _IS_BOOL) MAY_BE_BOOL else if (code == IS_ITERABLE) _ZEND_TYPE_ITERABLE_BIT else if (code == IS_MIXED) MAY_BE_ANY else @as(c_int, 1) << code) | (if (allow_null) _ZEND_TYPE_NULLABLE_BIT else @as(c_int, 0))) | extra_flags);
}
pub const ZEND_TYPE_INIT_PTR = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:290:9
pub const ZEND_TYPE_INIT_PTR_MASK = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:294:9
pub const ZEND_TYPE_INIT_UNION = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:297:9
pub const ZEND_TYPE_INIT_INTERSECTION = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:300:9
pub inline fn ZEND_TYPE_INIT_CLASS(class_name: anytype, allow_null: anytype, extra_flags: anytype) @TypeOf(ZEND_TYPE_INIT_PTR(class_name, _ZEND_TYPE_NAME_BIT, allow_null, extra_flags)) {
    _ = &class_name;
    _ = &allow_null;
    _ = &extra_flags;
    return ZEND_TYPE_INIT_PTR(class_name, _ZEND_TYPE_NAME_BIT, allow_null, extra_flags);
}
pub inline fn ZEND_TYPE_INIT_CLASS_MASK(class_name: anytype, type_mask: anytype) @TypeOf(ZEND_TYPE_INIT_PTR_MASK(class_name, _ZEND_TYPE_NAME_BIT | type_mask)) {
    _ = &class_name;
    _ = &type_mask;
    return ZEND_TYPE_INIT_PTR_MASK(class_name, _ZEND_TYPE_NAME_BIT | type_mask);
}
pub inline fn ZEND_TYPE_INIT_CLASS_CONST(class_name: anytype, allow_null: anytype, extra_flags: anytype) @TypeOf(ZEND_TYPE_INIT_PTR(class_name, _ZEND_TYPE_LITERAL_NAME_BIT, allow_null, extra_flags)) {
    _ = &class_name;
    _ = &allow_null;
    _ = &extra_flags;
    return ZEND_TYPE_INIT_PTR(class_name, _ZEND_TYPE_LITERAL_NAME_BIT, allow_null, extra_flags);
}
pub inline fn ZEND_TYPE_INIT_CLASS_CONST_MASK(class_name: anytype, type_mask: anytype) @TypeOf(ZEND_TYPE_INIT_PTR_MASK(class_name, _ZEND_TYPE_LITERAL_NAME_BIT | type_mask)) {
    _ = &class_name;
    _ = &type_mask;
    return ZEND_TYPE_INIT_PTR_MASK(class_name, _ZEND_TYPE_LITERAL_NAME_BIT | type_mask);
}
pub const HT_INVALID_IDX = @import("std").zig.c_translation.cast(u32, -@as(c_int, 1));
pub const HT_MIN_MASK = @import("std").zig.c_translation.cast(u32, -@as(c_int, 2));
pub const HT_MIN_SIZE = @as(c_int, 8);
pub const HT_MAX_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub inline fn HT_HASH_TO_BUCKET_EX(data: anytype, idx: anytype) @TypeOf(data + idx) {
    _ = &data;
    _ = &idx;
    return data + idx;
}
pub inline fn HT_IDX_TO_HASH(idx: anytype) @TypeOf(idx) {
    _ = &idx;
    return idx;
}
pub inline fn HT_HASH_TO_IDX(idx: anytype) @TypeOf(idx) {
    _ = &idx;
    return idx;
}
pub inline fn HT_HASH_EX(data: anytype, idx: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]u32, data)[@as(usize, @intCast(@import("std").zig.c_translation.cast(i32, idx)))]) {
    _ = &data;
    _ = &idx;
    return @import("std").zig.c_translation.cast([*c]u32, data)[@as(usize, @intCast(@import("std").zig.c_translation.cast(i32, idx)))];
}
pub inline fn HT_HASH(ht: anytype, idx: anytype) @TypeOf(HT_HASH_EX(ht.*.arHash, idx)) {
    _ = &ht;
    _ = &idx;
    return HT_HASH_EX(ht.*.arHash, idx);
}
pub inline fn HT_SIZE_TO_MASK(nTableSize: anytype) u32 {
    _ = &nTableSize;
    return @import("std").zig.c_translation.cast(u32, -(nTableSize + nTableSize));
}
pub inline fn HT_HASH_SIZE(nTableMask: anytype) @TypeOf(@import("std").zig.c_translation.cast(usize, -@import("std").zig.c_translation.cast(u32, nTableMask)) * @import("std").zig.c_translation.sizeof(u32)) {
    _ = &nTableMask;
    return @import("std").zig.c_translation.cast(usize, -@import("std").zig.c_translation.cast(u32, nTableMask)) * @import("std").zig.c_translation.sizeof(u32);
}
pub inline fn HT_DATA_SIZE(nTableSize: anytype) @TypeOf(@import("std").zig.c_translation.cast(usize, nTableSize) * @import("std").zig.c_translation.sizeof(Bucket)) {
    _ = &nTableSize;
    return @import("std").zig.c_translation.cast(usize, nTableSize) * @import("std").zig.c_translation.sizeof(Bucket);
}
pub inline fn HT_SIZE_EX(nTableSize: anytype, nTableMask: anytype) @TypeOf(HT_DATA_SIZE(nTableSize) + HT_HASH_SIZE(nTableMask)) {
    _ = &nTableSize;
    _ = &nTableMask;
    return HT_DATA_SIZE(nTableSize) + HT_HASH_SIZE(nTableMask);
}
pub inline fn HT_SIZE(ht: anytype) @TypeOf(HT_SIZE_EX(ht.*.nTableSize, ht.*.nTableMask)) {
    _ = &ht;
    return HT_SIZE_EX(ht.*.nTableSize, ht.*.nTableMask);
}
pub inline fn HT_USED_SIZE(ht: anytype) @TypeOf(HT_HASH_SIZE(ht.*.nTableMask) + (@import("std").zig.c_translation.cast(usize, ht.*.nNumUsed) * @import("std").zig.c_translation.sizeof(Bucket))) {
    _ = &ht;
    return HT_HASH_SIZE(ht.*.nTableMask) + (@import("std").zig.c_translation.cast(usize, ht.*.nNumUsed) * @import("std").zig.c_translation.sizeof(Bucket));
}
pub inline fn HT_PACKED_DATA_SIZE(nTableSize: anytype) @TypeOf(@import("std").zig.c_translation.cast(usize, nTableSize) * @import("std").zig.c_translation.sizeof(zval)) {
    _ = &nTableSize;
    return @import("std").zig.c_translation.cast(usize, nTableSize) * @import("std").zig.c_translation.sizeof(zval);
}
pub inline fn HT_PACKED_SIZE_EX(nTableSize: anytype, nTableMask: anytype) @TypeOf(HT_PACKED_DATA_SIZE(nTableSize) + HT_HASH_SIZE(nTableMask)) {
    _ = &nTableSize;
    _ = &nTableMask;
    return HT_PACKED_DATA_SIZE(nTableSize) + HT_HASH_SIZE(nTableMask);
}
pub inline fn HT_PACKED_SIZE(ht: anytype) @TypeOf(HT_PACKED_SIZE_EX(ht.*.nTableSize, ht.*.nTableMask)) {
    _ = &ht;
    return HT_PACKED_SIZE_EX(ht.*.nTableSize, ht.*.nTableMask);
}
pub inline fn HT_PACKED_USED_SIZE(ht: anytype) @TypeOf(HT_HASH_SIZE(ht.*.nTableMask) + (@import("std").zig.c_translation.cast(usize, ht.*.nNumUsed) * @import("std").zig.c_translation.sizeof(zval))) {
    _ = &ht;
    return HT_HASH_SIZE(ht.*.nTableMask) + (@import("std").zig.c_translation.cast(usize, ht.*.nNumUsed) * @import("std").zig.c_translation.sizeof(zval));
}
pub const HT_HASH_RESET = @compileError("unable to translate macro: undefined identifier `p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:517:10
pub const HT_HASH_RESET_PACKED = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:535:9
pub inline fn HT_HASH_TO_BUCKET(ht: anytype, idx: anytype) @TypeOf(HT_HASH_TO_BUCKET_EX(ht.*.arData, idx)) {
    _ = &ht;
    _ = &idx;
    return HT_HASH_TO_BUCKET_EX(ht.*.arData, idx);
}
pub const HT_SET_DATA_ADDR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:542:9
pub inline fn HT_GET_DATA_ADDR(ht: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]u8, ht.*.arData) - HT_HASH_SIZE(ht.*.nTableMask)) {
    _ = &ht;
    return @import("std").zig.c_translation.cast([*c]u8, ht.*.arData) - HT_HASH_SIZE(ht.*.nTableMask);
}
pub inline fn ZEND_PROPERTY_INFO_SOURCE_FROM_LIST(list: anytype) @TypeOf(@as(c_int, 0x1) | @import("std").zig.c_translation.cast(usize, list)) {
    _ = &list;
    return @as(c_int, 0x1) | @import("std").zig.c_translation.cast(usize, list);
}
pub inline fn ZEND_PROPERTY_INFO_SOURCE_TO_LIST(list: anytype) [*c]zend_property_info_list {
    _ = &list;
    return @import("std").zig.c_translation.cast([*c]zend_property_info_list, list & ~@as(c_int, 0x1));
}
pub inline fn ZEND_PROPERTY_INFO_SOURCE_IS_LIST(list: anytype) @TypeOf(list & @as(c_int, 0x1)) {
    _ = &list;
    return list & @as(c_int, 0x1);
}
pub const IS_UNDEF = @as(c_int, 0);
pub const IS_NULL = @as(c_int, 1);
pub const IS_FALSE = @as(c_int, 2);
pub const IS_TRUE = @as(c_int, 3);
pub const IS_LONG = @as(c_int, 4);
pub const IS_DOUBLE = @as(c_int, 5);
pub const IS_STRING = @as(c_int, 6);
pub const IS_ARRAY = @as(c_int, 7);
pub const IS_OBJECT = @as(c_int, 8);
pub const IS_RESOURCE = @as(c_int, 9);
pub const IS_REFERENCE = @as(c_int, 10);
pub const IS_CONSTANT_AST = @as(c_int, 11);
pub const IS_CALLABLE = @as(c_int, 12);
pub const IS_ITERABLE = @as(c_int, 13);
pub const IS_VOID = @as(c_int, 14);
pub const IS_STATIC = @as(c_int, 15);
pub const IS_MIXED = @as(c_int, 16);
pub const IS_NEVER = @as(c_int, 17);
pub const IS_INDIRECT = @as(c_int, 12);
pub const IS_PTR = @as(c_int, 13);
pub const IS_ALIAS_PTR = @as(c_int, 14);
pub const _IS_ERROR = @as(c_int, 15);
pub const _IS_BOOL = @as(c_int, 18);
pub const _IS_NUMBER = @as(c_int, 19);
pub const ZEND_GUARD_PROPERTY_GET = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_GUARD_PROPERTY_SET = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_GUARD_PROPERTY_UNSET = @as(c_int, 1) << @as(c_int, 2);
pub const ZEND_GUARD_PROPERTY_ISSET = @as(c_int, 1) << @as(c_int, 3);
pub const ZEND_GUARD_PROPERTY_HOOK = @as(c_int, 1) << @as(c_int, 4);
pub const ZEND_GUARD_PROPERTY_MASK = @as(c_int, 31);
pub const ZEND_GUARD_RECURSION_DEBUG = @as(c_int, 1) << @as(c_int, 5);
pub const ZEND_GUARD_RECURSION_EXPORT = @as(c_int, 1) << @as(c_int, 6);
pub const ZEND_GUARD_RECURSION_JSON = @as(c_int, 1) << @as(c_int, 7);
pub const ZEND_GUARD_RECURSION_TYPE = @compileError("unable to translate macro: undefined identifier `ZEND_GUARD_RECURSION_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:643:9
pub inline fn ZEND_GUARD_IS_RECURSIVE(pg: anytype, t: anytype) @TypeOf((pg.* & ZEND_GUARD_RECURSION_TYPE(t)) != @as(c_int, 0)) {
    _ = &pg;
    _ = &t;
    return (pg.* & ZEND_GUARD_RECURSION_TYPE(t)) != @as(c_int, 0);
}
pub const ZEND_GUARD_PROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token '|='");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:646:9
pub const ZEND_GUARD_UNPROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token '&='");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:647:9
pub inline fn ZEND_SAME_FAKE_TYPE(faketype: anytype, realtype: anytype) @TypeOf((faketype == realtype) or ((faketype == _IS_BOOL) and ((realtype == IS_TRUE) or (realtype == IS_FALSE)))) {
    _ = &faketype;
    _ = &realtype;
    return (faketype == realtype) or ((faketype == _IS_BOOL) and ((realtype == IS_TRUE) or (realtype == IS_FALSE)));
}
pub inline fn Z_TYPE(zval_1: anytype) @TypeOf(zval_get_type(&zval_1)) {
    _ = &zval_1;
    return zval_get_type(&zval_1);
}
pub inline fn Z_TYPE_P(zval_p: anytype) @TypeOf(Z_TYPE(zval_p.*)) {
    _ = &zval_p;
    return Z_TYPE(zval_p.*);
}
pub inline fn Z_TYPE_FLAGS(zval_1: anytype) @TypeOf(zval_1.u1.v.type_flags) {
    _ = &zval_1;
    return zval_1.u1.v.type_flags;
}
pub inline fn Z_TYPE_FLAGS_P(zval_p: anytype) @TypeOf(Z_TYPE_FLAGS(zval_p.*)) {
    _ = &zval_p;
    return Z_TYPE_FLAGS(zval_p.*);
}
pub inline fn Z_TYPE_EXTRA(zval_1: anytype) @TypeOf(zval_1.u1.v.u.extra) {
    _ = &zval_1;
    return zval_1.u1.v.u.extra;
}
pub inline fn Z_TYPE_EXTRA_P(zval_p: anytype) @TypeOf(Z_TYPE_EXTRA(zval_p.*)) {
    _ = &zval_p;
    return Z_TYPE_EXTRA(zval_p.*);
}
pub inline fn Z_TYPE_INFO(zval_1: anytype) @TypeOf(zval_1.u1.type_info) {
    _ = &zval_1;
    return zval_1.u1.type_info;
}
pub inline fn Z_TYPE_INFO_P(zval_p: anytype) @TypeOf(Z_TYPE_INFO(zval_p.*)) {
    _ = &zval_p;
    return Z_TYPE_INFO(zval_p.*);
}
pub inline fn Z_NEXT(zval_1: anytype) @TypeOf(zval_1.u2.next) {
    _ = &zval_1;
    return zval_1.u2.next;
}
pub inline fn Z_NEXT_P(zval_p: anytype) @TypeOf(Z_NEXT(zval_p.*)) {
    _ = &zval_p;
    return Z_NEXT(zval_p.*);
}
pub inline fn Z_CACHE_SLOT(zval_1: anytype) @TypeOf(zval_1.u2.cache_slot) {
    _ = &zval_1;
    return zval_1.u2.cache_slot;
}
pub inline fn Z_CACHE_SLOT_P(zval_p: anytype) @TypeOf(Z_CACHE_SLOT(zval_p.*)) {
    _ = &zval_p;
    return Z_CACHE_SLOT(zval_p.*);
}
pub inline fn Z_LINENO(zval_1: anytype) @TypeOf(zval_1.u2.lineno) {
    _ = &zval_1;
    return zval_1.u2.lineno;
}
pub inline fn Z_LINENO_P(zval_p: anytype) @TypeOf(Z_LINENO(zval_p.*)) {
    _ = &zval_p;
    return Z_LINENO(zval_p.*);
}
pub inline fn Z_OPLINE_NUM(zval_1: anytype) @TypeOf(zval_1.u2.opline_num) {
    _ = &zval_1;
    return zval_1.u2.opline_num;
}
pub inline fn Z_OPLINE_NUM_P(zval_p: anytype) @TypeOf(Z_OPLINE_NUM(zval_p.*)) {
    _ = &zval_p;
    return Z_OPLINE_NUM(zval_p.*);
}
pub inline fn Z_FE_POS(zval_1: anytype) @TypeOf(zval_1.u2.fe_pos) {
    _ = &zval_1;
    return zval_1.u2.fe_pos;
}
pub inline fn Z_FE_POS_P(zval_p: anytype) @TypeOf(Z_FE_POS(zval_p.*)) {
    _ = &zval_p;
    return Z_FE_POS(zval_p.*);
}
pub inline fn Z_FE_ITER(zval_1: anytype) @TypeOf(zval_1.u2.fe_iter_idx) {
    _ = &zval_1;
    return zval_1.u2.fe_iter_idx;
}
pub inline fn Z_FE_ITER_P(zval_p: anytype) @TypeOf(Z_FE_ITER(zval_p.*)) {
    _ = &zval_p;
    return Z_FE_ITER(zval_p.*);
}
pub inline fn Z_GUARD(zval_1: anytype) @TypeOf(zval_1.u2.guard) {
    _ = &zval_1;
    return zval_1.u2.guard;
}
pub inline fn Z_GUARD_P(zval_p: anytype) @TypeOf(Z_GUARD(zval_p.*)) {
    _ = &zval_p;
    return Z_GUARD(zval_p.*);
}
pub inline fn Z_CONSTANT_FLAGS(zval_1: anytype) @TypeOf(zval_1.u2.constant_flags) {
    _ = &zval_1;
    return zval_1.u2.constant_flags;
}
pub inline fn Z_CONSTANT_FLAGS_P(zval_p: anytype) @TypeOf(Z_CONSTANT_FLAGS(zval_p.*)) {
    _ = &zval_p;
    return Z_CONSTANT_FLAGS(zval_p.*);
}
pub inline fn Z_EXTRA(zval_1: anytype) @TypeOf(zval_1.u2.extra) {
    _ = &zval_1;
    return zval_1.u2.extra;
}
pub inline fn Z_EXTRA_P(zval_p: anytype) @TypeOf(Z_EXTRA(zval_p.*)) {
    _ = &zval_p;
    return Z_EXTRA(zval_p.*);
}
pub inline fn Z_COUNTED(zval_1: anytype) @TypeOf(zval_1.value.counted) {
    _ = &zval_1;
    return zval_1.value.counted;
}
pub inline fn Z_COUNTED_P(zval_p: anytype) @TypeOf(Z_COUNTED(zval_p.*)) {
    _ = &zval_p;
    return Z_COUNTED(zval_p.*);
}
pub const Z_TYPE_MASK = @as(c_int, 0xff);
pub const Z_TYPE_FLAGS_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xff00, .hex);
pub const Z_TYPE_FLAGS_SHIFT = @as(c_int, 8);
pub const Z_TYPE_INFO_EXTRA_SHIFT = @as(c_int, 16);
pub inline fn GC_REFCOUNT(p: anytype) @TypeOf(zend_gc_refcount(&p.*.gc)) {
    _ = &p;
    return zend_gc_refcount(&p.*.gc);
}
pub inline fn GC_SET_REFCOUNT(p: anytype, rc: anytype) @TypeOf(zend_gc_set_refcount(&p.*.gc, rc)) {
    _ = &p;
    _ = &rc;
    return zend_gc_set_refcount(&p.*.gc, rc);
}
pub inline fn GC_ADDREF(p: anytype) @TypeOf(zend_gc_addref(&p.*.gc)) {
    _ = &p;
    return zend_gc_addref(&p.*.gc);
}
pub inline fn GC_DELREF(p: anytype) @TypeOf(zend_gc_delref(&p.*.gc)) {
    _ = &p;
    return zend_gc_delref(&p.*.gc);
}
pub inline fn GC_ADDREF_EX(p: anytype, rc: anytype) @TypeOf(zend_gc_addref_ex(&p.*.gc, rc)) {
    _ = &p;
    _ = &rc;
    return zend_gc_addref_ex(&p.*.gc, rc);
}
pub inline fn GC_DELREF_EX(p: anytype, rc: anytype) @TypeOf(zend_gc_delref_ex(&p.*.gc, rc)) {
    _ = &p;
    _ = &rc;
    return zend_gc_delref_ex(&p.*.gc, rc);
}
pub inline fn GC_TRY_ADDREF(p: anytype) @TypeOf(zend_gc_try_addref(&p.*.gc)) {
    _ = &p;
    return zend_gc_try_addref(&p.*.gc);
}
pub inline fn GC_TRY_DELREF(p: anytype) @TypeOf(zend_gc_try_delref(&p.*.gc)) {
    _ = &p;
    return zend_gc_try_delref(&p.*.gc);
}
pub const GC_DTOR = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:716:9
pub const GC_DTOR_NO_REF = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:726:9
pub const GC_TYPE_MASK = @as(c_int, 0x0000000f);
pub const GC_FLAGS_MASK = @as(c_int, 0x000003f0);
pub const GC_INFO_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xfffffc00, .hex);
pub const GC_FLAGS_SHIFT = @as(c_int, 0);
pub const GC_INFO_SHIFT = @as(c_int, 10);
pub inline fn GC_TYPE_INFO(p: anytype) @TypeOf(p.*.gc.u.type_info) {
    _ = &p;
    return p.*.gc.u.type_info;
}
pub inline fn GC_TYPE(p: anytype) @TypeOf(zval_gc_type(GC_TYPE_INFO(p))) {
    _ = &p;
    return zval_gc_type(GC_TYPE_INFO(p));
}
pub inline fn GC_FLAGS(p: anytype) @TypeOf(zval_gc_flags(GC_TYPE_INFO(p))) {
    _ = &p;
    return zval_gc_flags(GC_TYPE_INFO(p));
}
pub inline fn GC_INFO(p: anytype) @TypeOf(zval_gc_info(GC_TYPE_INFO(p))) {
    _ = &p;
    return zval_gc_info(GC_TYPE_INFO(p));
}
pub const GC_ADD_FLAGS = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:759:9
pub const GC_DEL_FLAGS = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:762:9
pub inline fn Z_GC_TYPE(zval_1: anytype) @TypeOf(GC_TYPE(Z_COUNTED(zval_1))) {
    _ = &zval_1;
    return GC_TYPE(Z_COUNTED(zval_1));
}
pub inline fn Z_GC_TYPE_P(zval_p: anytype) @TypeOf(Z_GC_TYPE(zval_p.*)) {
    _ = &zval_p;
    return Z_GC_TYPE(zval_p.*);
}
pub inline fn Z_GC_FLAGS(zval_1: anytype) @TypeOf(GC_FLAGS(Z_COUNTED(zval_1))) {
    _ = &zval_1;
    return GC_FLAGS(Z_COUNTED(zval_1));
}
pub inline fn Z_GC_FLAGS_P(zval_p: anytype) @TypeOf(Z_GC_FLAGS(zval_p.*)) {
    _ = &zval_p;
    return Z_GC_FLAGS(zval_p.*);
}
pub inline fn Z_GC_INFO(zval_1: anytype) @TypeOf(GC_INFO(Z_COUNTED(zval_1))) {
    _ = &zval_1;
    return GC_INFO(Z_COUNTED(zval_1));
}
pub inline fn Z_GC_INFO_P(zval_p: anytype) @TypeOf(Z_GC_INFO(zval_p.*)) {
    _ = &zval_p;
    return Z_GC_INFO(zval_p.*);
}
pub inline fn Z_GC_TYPE_INFO(zval_1: anytype) @TypeOf(GC_TYPE_INFO(Z_COUNTED(zval_1))) {
    _ = &zval_1;
    return GC_TYPE_INFO(Z_COUNTED(zval_1));
}
pub inline fn Z_GC_TYPE_INFO_P(zval_p: anytype) @TypeOf(Z_GC_TYPE_INFO(zval_p.*)) {
    _ = &zval_p;
    return Z_GC_TYPE_INFO(zval_p.*);
}
pub const GC_NOT_COLLECTABLE = @as(c_int, 1) << @as(c_int, 4);
pub const GC_PROTECTED = @as(c_int, 1) << @as(c_int, 5);
pub const GC_IMMUTABLE = @as(c_int, 1) << @as(c_int, 6);
pub const GC_PERSISTENT = @as(c_int, 1) << @as(c_int, 7);
pub const GC_PERSISTENT_LOCAL = @as(c_int, 1) << @as(c_int, 8);
pub const GC_NULL = IS_NULL | (GC_NOT_COLLECTABLE << GC_FLAGS_SHIFT);
pub const GC_STRING = IS_STRING | (GC_NOT_COLLECTABLE << GC_FLAGS_SHIFT);
pub const GC_ARRAY = IS_ARRAY;
pub const GC_OBJECT = IS_OBJECT;
pub const GC_RESOURCE = IS_RESOURCE | (GC_NOT_COLLECTABLE << GC_FLAGS_SHIFT);
pub const GC_REFERENCE = IS_REFERENCE | (GC_NOT_COLLECTABLE << GC_FLAGS_SHIFT);
pub const GC_CONSTANT_AST = IS_CONSTANT_AST | (GC_NOT_COLLECTABLE << GC_FLAGS_SHIFT);
pub const IS_TYPE_REFCOUNTED = @as(c_int, 1) << @as(c_int, 0);
pub const IS_TYPE_COLLECTABLE = @as(c_int, 1) << @as(c_int, 1);
pub inline fn Z_TYPE_INFO_REFCOUNTED(t: anytype) @TypeOf((t & Z_TYPE_FLAGS_MASK) != @as(c_int, 0)) {
    _ = &t;
    return (t & Z_TYPE_FLAGS_MASK) != @as(c_int, 0);
}
pub const IS_INTERNED_STRING_EX = IS_STRING;
pub const IS_STRING_EX = IS_STRING | (IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT);
pub const IS_ARRAY_EX = (IS_ARRAY | (IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT)) | (IS_TYPE_COLLECTABLE << Z_TYPE_FLAGS_SHIFT);
pub const IS_OBJECT_EX = (IS_OBJECT | (IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT)) | (IS_TYPE_COLLECTABLE << Z_TYPE_FLAGS_SHIFT);
pub const IS_RESOURCE_EX = IS_RESOURCE | (IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT);
pub const IS_REFERENCE_EX = IS_REFERENCE | (IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT);
pub const IS_CONSTANT_AST_EX = IS_CONSTANT_AST | (IS_TYPE_REFCOUNTED << Z_TYPE_FLAGS_SHIFT);
pub const IS_STR_CLASS_NAME_MAP_PTR = GC_PROTECTED;
pub const IS_STR_INTERNED = GC_IMMUTABLE;
pub const IS_STR_PERSISTENT = GC_PERSISTENT;
pub const IS_STR_PERMANENT = @as(c_int, 1) << @as(c_int, 8);
pub const IS_STR_VALID_UTF8 = @as(c_int, 1) << @as(c_int, 9);
pub const IS_ARRAY_IMMUTABLE = GC_IMMUTABLE;
pub const IS_ARRAY_PERSISTENT = GC_PERSISTENT;
pub const IS_OBJ_WEAKLY_REFERENCED = GC_PERSISTENT;
pub const IS_OBJ_DESTRUCTOR_CALLED = @as(c_int, 1) << @as(c_int, 8);
pub const IS_OBJ_FREE_CALLED = @as(c_int, 1) << @as(c_int, 9);
pub inline fn OBJ_FLAGS(obj: anytype) @TypeOf(GC_FLAGS(obj)) {
    _ = &obj;
    return GC_FLAGS(obj);
}
pub const IS_OBJ_LAZY_UNINITIALIZED = @as(c_uint, 1) << @as(c_int, 31);
pub const IS_OBJ_LAZY_PROXY = @as(c_uint, 1) << @as(c_int, 30);
pub inline fn OBJ_EXTRA_FLAGS(obj: anytype) @TypeOf(obj.*.extra_flags) {
    _ = &obj;
    return obj.*.extra_flags;
}
pub inline fn ZSTR_HAS_CE_CACHE(s: anytype) @TypeOf(GC_FLAGS(s) & IS_STR_CLASS_NAME_MAP_PTR) {
    _ = &s;
    return GC_FLAGS(s) & IS_STR_CLASS_NAME_MAP_PTR;
}
pub inline fn ZSTR_GET_CE_CACHE(s: anytype) @TypeOf(ZSTR_GET_CE_CACHE_EX(s, @as(c_int, 1))) {
    _ = &s;
    return ZSTR_GET_CE_CACHE_EX(s, @as(c_int, 1));
}
pub inline fn ZSTR_SET_CE_CACHE(s: anytype, ce: anytype) @TypeOf(ZSTR_SET_CE_CACHE_EX(s, ce, @as(c_int, 1))) {
    _ = &s;
    _ = &ce;
    return ZSTR_SET_CE_CACHE_EX(s, ce, @as(c_int, 1));
}
pub const ZSTR_VALID_CE_CACHE = @compileError("unable to translate macro: undefined identifier `map_ptr_last`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:845:9
pub inline fn ZSTR_GET_CE_CACHE_EX(s: anytype, validate: anytype) @TypeOf(if (!(validate != 0) or (ZSTR_VALID_CE_CACHE(s) != 0)) GET_CE_CACHE(GC_REFCOUNT(s)) else NULL) {
    _ = &s;
    _ = &validate;
    return if (!(validate != 0) or (ZSTR_VALID_CE_CACHE(s) != 0)) GET_CE_CACHE(GC_REFCOUNT(s)) else NULL;
}
pub const ZSTR_SET_CE_CACHE_EX = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:850:9
pub const GET_CE_CACHE = @compileError("unable to translate C expr: expected ')' instead got '*'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:857:9
pub const SET_CE_CACHE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:860:9
pub inline fn GC_IS_RECURSIVE(p: anytype) @TypeOf(GC_FLAGS(p) & GC_PROTECTED) {
    _ = &p;
    return GC_FLAGS(p) & GC_PROTECTED;
}
pub const GC_PROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:868:9
pub const GC_UNPROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:872:9
pub const GC_TRY_PROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:876:9
pub const GC_TRY_UNPROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:880:9
pub inline fn Z_IS_RECURSIVE(zval_1: anytype) @TypeOf(GC_IS_RECURSIVE(Z_COUNTED(zval_1))) {
    _ = &zval_1;
    return GC_IS_RECURSIVE(Z_COUNTED(zval_1));
}
pub inline fn Z_PROTECT_RECURSION(zval_1: anytype) @TypeOf(GC_PROTECT_RECURSION(Z_COUNTED(zval_1))) {
    _ = &zval_1;
    return GC_PROTECT_RECURSION(Z_COUNTED(zval_1));
}
pub inline fn Z_UNPROTECT_RECURSION(zval_1: anytype) @TypeOf(GC_UNPROTECT_RECURSION(Z_COUNTED(zval_1))) {
    _ = &zval_1;
    return GC_UNPROTECT_RECURSION(Z_COUNTED(zval_1));
}
pub inline fn Z_IS_RECURSIVE_P(zv: anytype) @TypeOf(Z_IS_RECURSIVE(zv.*)) {
    _ = &zv;
    return Z_IS_RECURSIVE(zv.*);
}
pub inline fn Z_PROTECT_RECURSION_P(zv: anytype) @TypeOf(Z_PROTECT_RECURSION(zv.*)) {
    _ = &zv;
    return Z_PROTECT_RECURSION(zv.*);
}
pub inline fn Z_UNPROTECT_RECURSION_P(zv: anytype) @TypeOf(Z_UNPROTECT_RECURSION(zv.*)) {
    _ = &zv;
    return Z_UNPROTECT_RECURSION(zv.*);
}
pub inline fn ZEND_GUARD_OR_GC_IS_RECURSIVE(pg: anytype, t: anytype, zobj: anytype) @TypeOf(if (pg) ZEND_GUARD_IS_RECURSIVE(pg, t) else GC_IS_RECURSIVE(zobj)) {
    _ = &pg;
    _ = &t;
    _ = &zobj;
    return if (pg) ZEND_GUARD_IS_RECURSIVE(pg, t) else GC_IS_RECURSIVE(zobj);
}
pub const ZEND_GUARD_OR_GC_PROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:894:9
pub const ZEND_GUARD_OR_GC_UNPROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:902:9
pub inline fn Z_CONSTANT(zval_1: anytype) @TypeOf(Z_TYPE(zval_1) == IS_CONSTANT_AST) {
    _ = &zval_1;
    return Z_TYPE(zval_1) == IS_CONSTANT_AST;
}
pub inline fn Z_CONSTANT_P(zval_p: anytype) @TypeOf(Z_CONSTANT(zval_p.*)) {
    _ = &zval_p;
    return Z_CONSTANT(zval_p.*);
}
pub inline fn Z_REFCOUNTED(zval_1: anytype) @TypeOf(Z_TYPE_FLAGS(zval_1) != @as(c_int, 0)) {
    _ = &zval_1;
    return Z_TYPE_FLAGS(zval_1) != @as(c_int, 0);
}
pub inline fn Z_REFCOUNTED_P(zval_p: anytype) @TypeOf(Z_REFCOUNTED(zval_p.*)) {
    _ = &zval_p;
    return Z_REFCOUNTED(zval_p.*);
}
pub inline fn Z_COLLECTABLE(zval_1: anytype) @TypeOf((Z_TYPE_FLAGS(zval_1) & IS_TYPE_COLLECTABLE) != @as(c_int, 0)) {
    _ = &zval_1;
    return (Z_TYPE_FLAGS(zval_1) & IS_TYPE_COLLECTABLE) != @as(c_int, 0);
}
pub inline fn Z_COLLECTABLE_P(zval_p: anytype) @TypeOf(Z_COLLECTABLE(zval_p.*)) {
    _ = &zval_p;
    return Z_COLLECTABLE(zval_p.*);
}
pub inline fn Z_COPYABLE(zval_1: anytype) @TypeOf(Z_TYPE(zval_1) == IS_ARRAY) {
    _ = &zval_1;
    return Z_TYPE(zval_1) == IS_ARRAY;
}
pub inline fn Z_COPYABLE_P(zval_p: anytype) @TypeOf(Z_COPYABLE(zval_p.*)) {
    _ = &zval_p;
    return Z_COPYABLE(zval_p.*);
}
pub inline fn Z_IMMUTABLE(zval_1: anytype) @TypeOf(Z_TYPE_INFO(zval_1) == IS_ARRAY) {
    _ = &zval_1;
    return Z_TYPE_INFO(zval_1) == IS_ARRAY;
}
pub inline fn Z_IMMUTABLE_P(zval_p: anytype) @TypeOf(Z_IMMUTABLE(zval_p.*)) {
    _ = &zval_p;
    return Z_IMMUTABLE(zval_p.*);
}
pub const Z_OPT_IMMUTABLE = @compileError("unable to translate macro: undefined identifier `zval_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:933:9
pub inline fn Z_OPT_IMMUTABLE_P(zval_p: anytype) @TypeOf(Z_IMMUTABLE(zval_p.*)) {
    _ = &zval_p;
    return Z_IMMUTABLE(zval_p.*);
}
pub inline fn Z_OPT_TYPE(zval_1: anytype) @TypeOf(Z_TYPE_INFO(zval_1) & Z_TYPE_MASK) {
    _ = &zval_1;
    return Z_TYPE_INFO(zval_1) & Z_TYPE_MASK;
}
pub inline fn Z_OPT_TYPE_P(zval_p: anytype) @TypeOf(Z_OPT_TYPE(zval_p.*)) {
    _ = &zval_p;
    return Z_OPT_TYPE(zval_p.*);
}
pub inline fn Z_OPT_CONSTANT(zval_1: anytype) @TypeOf(Z_OPT_TYPE(zval_1) == IS_CONSTANT_AST) {
    _ = &zval_1;
    return Z_OPT_TYPE(zval_1) == IS_CONSTANT_AST;
}
pub inline fn Z_OPT_CONSTANT_P(zval_p: anytype) @TypeOf(Z_OPT_CONSTANT(zval_p.*)) {
    _ = &zval_p;
    return Z_OPT_CONSTANT(zval_p.*);
}
pub inline fn Z_OPT_REFCOUNTED(zval_1: anytype) @TypeOf(Z_TYPE_INFO_REFCOUNTED(Z_TYPE_INFO(zval_1))) {
    _ = &zval_1;
    return Z_TYPE_INFO_REFCOUNTED(Z_TYPE_INFO(zval_1));
}
pub inline fn Z_OPT_REFCOUNTED_P(zval_p: anytype) @TypeOf(Z_OPT_REFCOUNTED(zval_p.*)) {
    _ = &zval_p;
    return Z_OPT_REFCOUNTED(zval_p.*);
}
pub inline fn Z_OPT_COPYABLE(zval_1: anytype) @TypeOf(Z_OPT_TYPE(zval_1) == IS_ARRAY) {
    _ = &zval_1;
    return Z_OPT_TYPE(zval_1) == IS_ARRAY;
}
pub inline fn Z_OPT_COPYABLE_P(zval_p: anytype) @TypeOf(Z_OPT_COPYABLE(zval_p.*)) {
    _ = &zval_p;
    return Z_OPT_COPYABLE(zval_p.*);
}
pub inline fn Z_OPT_ISREF(zval_1: anytype) @TypeOf(Z_OPT_TYPE(zval_1) == IS_REFERENCE) {
    _ = &zval_1;
    return Z_OPT_TYPE(zval_1) == IS_REFERENCE;
}
pub inline fn Z_OPT_ISREF_P(zval_p: anytype) @TypeOf(Z_OPT_ISREF(zval_p.*)) {
    _ = &zval_p;
    return Z_OPT_ISREF(zval_p.*);
}
pub inline fn Z_ISREF(zval_1: anytype) @TypeOf(Z_TYPE(zval_1) == IS_REFERENCE) {
    _ = &zval_1;
    return Z_TYPE(zval_1) == IS_REFERENCE;
}
pub inline fn Z_ISREF_P(zval_p: anytype) @TypeOf(Z_ISREF(zval_p.*)) {
    _ = &zval_p;
    return Z_ISREF(zval_p.*);
}
pub inline fn Z_ISUNDEF(zval_1: anytype) @TypeOf(Z_TYPE(zval_1) == IS_UNDEF) {
    _ = &zval_1;
    return Z_TYPE(zval_1) == IS_UNDEF;
}
pub inline fn Z_ISUNDEF_P(zval_p: anytype) @TypeOf(Z_ISUNDEF(zval_p.*)) {
    _ = &zval_p;
    return Z_ISUNDEF(zval_p.*);
}
pub inline fn Z_ISNULL(zval_1: anytype) @TypeOf(Z_TYPE(zval_1) == IS_NULL) {
    _ = &zval_1;
    return Z_TYPE(zval_1) == IS_NULL;
}
pub inline fn Z_ISNULL_P(zval_p: anytype) @TypeOf(Z_ISNULL(zval_p.*)) {
    _ = &zval_p;
    return Z_ISNULL(zval_p.*);
}
pub inline fn Z_ISERROR(zval_1: anytype) @TypeOf(Z_TYPE(zval_1) == _IS_ERROR) {
    _ = &zval_1;
    return Z_TYPE(zval_1) == _IS_ERROR;
}
pub inline fn Z_ISERROR_P(zval_p: anytype) @TypeOf(Z_ISERROR(zval_p.*)) {
    _ = &zval_p;
    return Z_ISERROR(zval_p.*);
}
pub inline fn Z_LVAL(zval_1: anytype) @TypeOf(zval_1.value.lval) {
    _ = &zval_1;
    return zval_1.value.lval;
}
pub inline fn Z_LVAL_P(zval_p: anytype) @TypeOf(Z_LVAL(zval_p.*)) {
    _ = &zval_p;
    return Z_LVAL(zval_p.*);
}
pub inline fn Z_DVAL(zval_1: anytype) @TypeOf(zval_1.value.dval) {
    _ = &zval_1;
    return zval_1.value.dval;
}
pub inline fn Z_DVAL_P(zval_p: anytype) @TypeOf(Z_DVAL(zval_p.*)) {
    _ = &zval_p;
    return Z_DVAL(zval_p.*);
}
pub inline fn Z_STR(zval_1: anytype) @TypeOf(zval_1.value.str) {
    _ = &zval_1;
    return zval_1.value.str;
}
pub inline fn Z_STR_P(zval_p: anytype) @TypeOf(Z_STR(zval_p.*)) {
    _ = &zval_p;
    return Z_STR(zval_p.*);
}
pub inline fn Z_STRVAL(zval_1: anytype) @TypeOf(ZSTR_VAL(Z_STR(zval_1))) {
    _ = &zval_1;
    return ZSTR_VAL(Z_STR(zval_1));
}
pub inline fn Z_STRVAL_P(zval_p: anytype) @TypeOf(Z_STRVAL(zval_p.*)) {
    _ = &zval_p;
    return Z_STRVAL(zval_p.*);
}
pub inline fn Z_STRLEN(zval_1: anytype) @TypeOf(ZSTR_LEN(Z_STR(zval_1))) {
    _ = &zval_1;
    return ZSTR_LEN(Z_STR(zval_1));
}
pub inline fn Z_STRLEN_P(zval_p: anytype) @TypeOf(Z_STRLEN(zval_p.*)) {
    _ = &zval_p;
    return Z_STRLEN(zval_p.*);
}
pub inline fn Z_STRHASH(zval_1: anytype) @TypeOf(ZSTR_HASH(Z_STR(zval_1))) {
    _ = &zval_1;
    return ZSTR_HASH(Z_STR(zval_1));
}
pub inline fn Z_STRHASH_P(zval_p: anytype) @TypeOf(Z_STRHASH(zval_p.*)) {
    _ = &zval_p;
    return Z_STRHASH(zval_p.*);
}
pub inline fn Z_ARR(zval_1: anytype) @TypeOf(zval_1.value.arr) {
    _ = &zval_1;
    return zval_1.value.arr;
}
pub inline fn Z_ARR_P(zval_p: anytype) @TypeOf(Z_ARR(zval_p.*)) {
    _ = &zval_p;
    return Z_ARR(zval_p.*);
}
pub inline fn Z_ARRVAL(zval_1: anytype) @TypeOf(Z_ARR(zval_1)) {
    _ = &zval_1;
    return Z_ARR(zval_1);
}
pub inline fn Z_ARRVAL_P(zval_p: anytype) @TypeOf(Z_ARRVAL(zval_p.*)) {
    _ = &zval_p;
    return Z_ARRVAL(zval_p.*);
}
pub inline fn Z_OBJ(zval_1: anytype) @TypeOf(zval_1.value.obj) {
    _ = &zval_1;
    return zval_1.value.obj;
}
pub inline fn Z_OBJ_P(zval_p: anytype) @TypeOf(Z_OBJ(zval_p.*)) {
    _ = &zval_p;
    return Z_OBJ(zval_p.*);
}
pub inline fn Z_OBJ_HT(zval_1: anytype) @TypeOf(Z_OBJ(zval_1).*.handlers) {
    _ = &zval_1;
    return Z_OBJ(zval_1).*.handlers;
}
pub inline fn Z_OBJ_HT_P(zval_p: anytype) @TypeOf(Z_OBJ_HT(zval_p.*)) {
    _ = &zval_p;
    return Z_OBJ_HT(zval_p.*);
}
pub inline fn Z_OBJ_HANDLER(zval_1: anytype, hf: anytype) @TypeOf(Z_OBJ_HT(zval_1).*.hf) {
    _ = &zval_1;
    _ = &hf;
    return Z_OBJ_HT(zval_1).*.hf;
}
pub inline fn Z_OBJ_HANDLER_P(zv_p: anytype, hf: anytype) @TypeOf(Z_OBJ_HANDLER(zv_p.*, hf)) {
    _ = &zv_p;
    _ = &hf;
    return Z_OBJ_HANDLER(zv_p.*, hf);
}
pub inline fn Z_OBJ_HANDLE(zval_1: anytype) @TypeOf(Z_OBJ(zval_1).*.handle) {
    _ = &zval_1;
    return Z_OBJ(zval_1).*.handle;
}
pub inline fn Z_OBJ_HANDLE_P(zval_p: anytype) @TypeOf(Z_OBJ_HANDLE(zval_p.*)) {
    _ = &zval_p;
    return Z_OBJ_HANDLE(zval_p.*);
}
pub inline fn Z_OBJCE(zval_1: anytype) @TypeOf(Z_OBJ(zval_1).*.ce) {
    _ = &zval_1;
    return Z_OBJ(zval_1).*.ce;
}
pub inline fn Z_OBJCE_P(zval_p: anytype) @TypeOf(Z_OBJCE(zval_p.*)) {
    _ = &zval_p;
    return Z_OBJCE(zval_p.*);
}
pub inline fn Z_OBJPROP(zval_1: anytype) @TypeOf(Z_OBJ_HT(zval_1).*.get_properties(Z_OBJ(zval_1))) {
    _ = &zval_1;
    return Z_OBJ_HT(zval_1).*.get_properties(Z_OBJ(zval_1));
}
pub inline fn Z_OBJPROP_P(zval_p: anytype) @TypeOf(Z_OBJPROP(zval_p.*)) {
    _ = &zval_p;
    return Z_OBJPROP(zval_p.*);
}
pub inline fn Z_RES(zval_1: anytype) @TypeOf(zval_1.value.res) {
    _ = &zval_1;
    return zval_1.value.res;
}
pub inline fn Z_RES_P(zval_p: anytype) @TypeOf(Z_RES(zval_p.*)) {
    _ = &zval_p;
    return Z_RES(zval_p.*);
}
pub inline fn Z_RES_HANDLE(zval_1: anytype) @TypeOf(Z_RES(zval_1).*.handle) {
    _ = &zval_1;
    return Z_RES(zval_1).*.handle;
}
pub inline fn Z_RES_HANDLE_P(zval_p: anytype) @TypeOf(Z_RES_HANDLE(zval_p.*)) {
    _ = &zval_p;
    return Z_RES_HANDLE(zval_p.*);
}
pub inline fn Z_RES_TYPE(zval_1: anytype) @TypeOf(Z_RES(zval_1).*.type) {
    _ = &zval_1;
    return Z_RES(zval_1).*.type;
}
pub inline fn Z_RES_TYPE_P(zval_p: anytype) @TypeOf(Z_RES_TYPE(zval_p.*)) {
    _ = &zval_p;
    return Z_RES_TYPE(zval_p.*);
}
pub inline fn Z_RES_VAL(zval_1: anytype) @TypeOf(Z_RES(zval_1).*.ptr) {
    _ = &zval_1;
    return Z_RES(zval_1).*.ptr;
}
pub inline fn Z_RES_VAL_P(zval_p: anytype) @TypeOf(Z_RES_VAL(zval_p.*)) {
    _ = &zval_p;
    return Z_RES_VAL(zval_p.*);
}
pub inline fn Z_REF(zval_1: anytype) @TypeOf(zval_1.value.ref) {
    _ = &zval_1;
    return zval_1.value.ref;
}
pub inline fn Z_REF_P(zval_p: anytype) @TypeOf(Z_REF(zval_p.*)) {
    _ = &zval_p;
    return Z_REF(zval_p.*);
}
pub inline fn Z_REFVAL(zval_1: anytype) @TypeOf(&Z_REF(zval_1).*.val) {
    _ = &zval_1;
    return &Z_REF(zval_1).*.val;
}
pub inline fn Z_REFVAL_P(zval_p: anytype) @TypeOf(Z_REFVAL(zval_p.*)) {
    _ = &zval_p;
    return Z_REFVAL(zval_p.*);
}
pub inline fn Z_AST(zval_1: anytype) @TypeOf(zval_1.value.ast) {
    _ = &zval_1;
    return zval_1.value.ast;
}
pub inline fn Z_AST_P(zval_p: anytype) @TypeOf(Z_AST(zval_p.*)) {
    _ = &zval_p;
    return Z_AST(zval_p.*);
}
pub inline fn GC_AST(p: anytype) [*c]zend_ast {
    _ = &p;
    return @import("std").zig.c_translation.cast([*c]zend_ast, @import("std").zig.c_translation.cast([*c]u8, p) + @import("std").zig.c_translation.sizeof(zend_ast_ref));
}
pub inline fn Z_ASTVAL(zval_1: anytype) @TypeOf(GC_AST(Z_AST(zval_1))) {
    _ = &zval_1;
    return GC_AST(Z_AST(zval_1));
}
pub inline fn Z_ASTVAL_P(zval_p: anytype) @TypeOf(Z_ASTVAL(zval_p.*)) {
    _ = &zval_p;
    return Z_ASTVAL(zval_p.*);
}
pub inline fn Z_INDIRECT(zval_1: anytype) @TypeOf(zval_1.value.zv) {
    _ = &zval_1;
    return zval_1.value.zv;
}
pub inline fn Z_INDIRECT_P(zval_p: anytype) @TypeOf(Z_INDIRECT(zval_p.*)) {
    _ = &zval_p;
    return Z_INDIRECT(zval_p.*);
}
pub inline fn Z_CE(zval_1: anytype) @TypeOf(zval_1.value.ce) {
    _ = &zval_1;
    return zval_1.value.ce;
}
pub inline fn Z_CE_P(zval_p: anytype) @TypeOf(Z_CE(zval_p.*)) {
    _ = &zval_p;
    return Z_CE(zval_p.*);
}
pub inline fn Z_FUNC(zval_1: anytype) @TypeOf(zval_1.value.func) {
    _ = &zval_1;
    return zval_1.value.func;
}
pub inline fn Z_FUNC_P(zval_p: anytype) @TypeOf(Z_FUNC(zval_p.*)) {
    _ = &zval_p;
    return Z_FUNC(zval_p.*);
}
pub inline fn Z_PTR(zval_1: anytype) @TypeOf(zval_1.value.ptr) {
    _ = &zval_1;
    return zval_1.value.ptr;
}
pub inline fn Z_PTR_P(zval_p: anytype) @TypeOf(Z_PTR(zval_p.*)) {
    _ = &zval_p;
    return Z_PTR(zval_p.*);
}
pub inline fn ZVAL_UNDEF(v: *zval) void {
    v.u1.type_info = IS_UNDEF;
}
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1045:9
pub inline fn ZVAL_NULL(return_value: *zval) void {
    return_value.u1.type_info = IS_NULL;
}
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1049:9
pub const ZVAL_FALSE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1053:9
pub const ZVAL_TRUE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1057:9
pub const ZVAL_BOOL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1061:9
pub const ZVAL_LONG = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1066:9
pub const ZVAL_DOUBLE = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1072:9
pub const ZVAL_STR = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1078:9
pub const ZVAL_INTERNED_STR = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1088:9
pub const ZVAL_NEW_STR = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1095:9
pub const ZVAL_STR_COPY = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1102:9
pub inline fn ZVAL_ARR(z: [*c]zval, a: [*c]zend_array) void {
    const __arr: *zend_array = (a);
    const __z: *zval = (z);
    __z.*.value.arr = __arr;
    __z.*.u1.type_info = IS_ARRAY_EX;
}
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1115:9
pub const ZVAL_NEW_PERSISTENT_ARR = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1122:9
pub const ZVAL_OBJ = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1130:9
pub const ZVAL_OBJ_COPY = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1136:9
pub const ZVAL_RES = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1144:9
pub const ZVAL_NEW_RES = @compileError("unable to translate macro: undefined identifier `_res`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1150:9
pub const ZVAL_NEW_PERSISTENT_RES = @compileError("unable to translate macro: undefined identifier `_res`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1164:9
pub const ZVAL_REF = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1179:9
pub const ZVAL_NEW_EMPTY_REF = @compileError("unable to translate macro: undefined identifier `_ref`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1185:9
pub const ZVAL_NEW_REF = @compileError("unable to translate macro: undefined identifier `_ref`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1195:9
pub const ZVAL_MAKE_REF_EX = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1206:9
pub const ZVAL_NEW_PERSISTENT_REF = @compileError("unable to translate macro: undefined identifier `_ref`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1218:9
pub const ZVAL_AST = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1230:9
pub const ZVAL_INDIRECT = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1236:9
pub const ZVAL_PTR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1241:9
pub const ZVAL_FUNC = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1246:9
pub const ZVAL_CE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1251:9
pub const ZVAL_ALIAS_PTR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1256:9
pub const ZVAL_ERROR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1261:9
pub inline fn Z_REFCOUNT_P(pz: anytype) @TypeOf(zval_refcount_p(pz)) {
    _ = &pz;
    return zval_refcount_p(pz);
}
pub inline fn Z_SET_REFCOUNT_P(pz: anytype, rc: anytype) @TypeOf(zval_set_refcount_p(pz, rc)) {
    _ = &pz;
    _ = &rc;
    return zval_set_refcount_p(pz, rc);
}
pub inline fn Z_ADDREF_P(pz: anytype) @TypeOf(zval_addref_p(pz)) {
    _ = &pz;
    return zval_addref_p(pz);
}
pub inline fn Z_DELREF_P(pz: anytype) @TypeOf(zval_delref_p(pz)) {
    _ = &pz;
    return zval_delref_p(pz);
}
pub inline fn Z_REFCOUNT(z: anytype) @TypeOf(Z_REFCOUNT_P(&z)) {
    _ = &z;
    return Z_REFCOUNT_P(&z);
}
pub inline fn Z_SET_REFCOUNT(z: anytype, rc: anytype) @TypeOf(Z_SET_REFCOUNT_P(&z, rc)) {
    _ = &z;
    _ = &rc;
    return Z_SET_REFCOUNT_P(&z, rc);
}
pub inline fn Z_ADDREF(z: anytype) @TypeOf(Z_ADDREF_P(&z)) {
    _ = &z;
    return Z_ADDREF_P(&z);
}
pub inline fn Z_DELREF(z: anytype) @TypeOf(Z_DELREF_P(&z)) {
    _ = &z;
    return Z_DELREF_P(&z);
}
pub const Z_TRY_ADDREF_P = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1275:9
pub const Z_TRY_DELREF_P = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1281:9
pub inline fn Z_TRY_ADDREF(z: anytype) @TypeOf(Z_TRY_ADDREF_P(&z)) {
    _ = &z;
    return Z_TRY_ADDREF_P(&z);
}
pub inline fn Z_TRY_DELREF(z: anytype) @TypeOf(Z_TRY_DELREF_P(&z)) {
    _ = &z;
    return Z_TRY_DELREF_P(&z);
}
pub const ZEND_RC_DEBUG = @as(c_int, 0);
pub const ZEND_RC_MOD_CHECK = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1311:10
pub const GC_MAKE_PERSISTENT_LOCAL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1313:10
pub const ZVAL_COPY_VALUE_EX = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1394:10
pub inline fn ZVAL_COPY_VALUE(z: zval, v: [*c]zval) void {
    while (true) {
        var _z1: [*c]zval = v;
        _ = &_z1;
        var _z2: [*c]const zval = &z;
        _ = &_z2;
        var _gc: [*c]zend_refcounted = _z2.*.value.counted;
        _ = &_gc;
        var _t: u32 = _z2.*.u1.type_info;
        _ = &_t;
        while (true) {
            _z1.*.value.counted = _gc;
            _z1.*.u1.type_info = _t;
            if (!false) break;
        }
        if (!false) break;
    }
}
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1403:9
pub inline fn ZVAL_COPY(z: [*c]zval, v: [*c]zval) void {
    var _z1: [*c]zval = z;
    _ = &_z1;
    var _z2: [*c]const zval = v;
    _ = &_z2;
    var _gc: [*c]zend_refcounted = _z2.*.value.counted;
    _ = &_gc;
    var _t: u32 = _z2.*.u1.type_info;
    _ = &_t;
    _z1.*.value.counted = _gc;
    _z1.*.u1.type_info = _t;
    if ((_t & @as(u32, @bitCast(@as(c_int, 65280)))) != @as(u32, @bitCast(@as(c_int, 0)))) {
        _ = zend_gc_addref(&_gc.*.gc);
    }
}
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1412:9
pub const ZVAL_DUP = @compileError("unable to translate macro: undefined identifier `_z1`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1424:9
pub const ZVAL_COPY_OR_DUP = @compileError("unable to translate macro: undefined identifier `_z1`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1444:9
pub const ZVAL_DEREF = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1462:9
pub const ZVAL_DEINDIRECT = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1468:9
pub const ZVAL_OPT_DEREF = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1474:9
pub const ZVAL_MAKE_REF = @compileError("unable to translate macro: undefined identifier `__zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1480:9
pub const ZVAL_UNREF = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1487:9
pub const ZVAL_COPY_DEREF = @compileError("unable to translate macro: undefined identifier `_z3`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1496:9
pub const SEPARATE_STRING = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1512:9
pub const SEPARATE_ARRAY = @compileError("unable to translate macro: undefined identifier `__zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1524:9
pub const SEPARATE_ZVAL_NOREF = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1533:9
pub const SEPARATE_ZVAL = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1541:9
pub const IS_PROP_UNINIT = @as(c_int, 1) << @as(c_int, 0);
pub const IS_PROP_REINITABLE = @as(c_int, 1) << @as(c_int, 1);
pub const IS_PROP_LAZY = @as(c_int, 1) << @as(c_int, 2);
pub inline fn Z_PROP_FLAG_P(z: anytype) @TypeOf(Z_EXTRA_P(z)) {
    _ = &z;
    return Z_EXTRA_P(z);
}
pub const ZVAL_COPY_VALUE_PROP = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1569:9
pub const ZVAL_COPY_PROP = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1571:9
pub const ZVAL_COPY_OR_DUP_PROP = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_types.h:1573:9
pub const ZEND_MAP_PTR_H = "";
pub const ZEND_MAP_PTR_KIND_PTR = @as(c_int, 0);
pub const ZEND_MAP_PTR_KIND_PTR_OR_OFFSET = @as(c_int, 1);
pub const ZEND_MAP_PTR_KIND = ZEND_MAP_PTR_KIND_PTR_OR_OFFSET;
pub const ZEND_MAP_PTR = @compileError("unable to translate macro: undefined identifier `__ptr`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_map_ptr.h:31:9
pub inline fn ZEND_MAP_PTR_DEF(@"type": anytype, name: anytype) @TypeOf(@"type" ++ ZEND_MAP_PTR(name)) {
    _ = &@"type";
    _ = &name;
    return @"type" ++ ZEND_MAP_PTR(name);
}
pub const ZEND_MAP_PTR_OFFSET2PTR = @compileError("unable to translate macro: undefined identifier `map_ptr_base`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_map_ptr.h:35:9
pub const ZEND_MAP_PTR_PTR2OFFSET = @compileError("unable to translate macro: undefined identifier `map_ptr_base`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_map_ptr.h:37:9
pub const ZEND_MAP_PTR_INIT = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_map_ptr.h:39:9
pub const ZEND_MAP_PTR_NEW = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_map_ptr.h:42:9
pub const ZEND_MAP_PTR_NEW_STATIC = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_map_ptr.h:45:9
pub inline fn ZEND_MAP_PTR_NEW_OFFSET() u32 {
    return @import("std").zig.c_translation.cast(u32, @import("std").zig.c_translation.cast(usize, zend_map_ptr_new()));
}
pub inline fn ZEND_MAP_PTR_IS_OFFSET(ptr: anytype) @TypeOf(@import("std").zig.c_translation.cast(usize, ZEND_MAP_PTR(ptr)) & @as(c_long, 1)) {
    _ = &ptr;
    return @import("std").zig.c_translation.cast(usize, ZEND_MAP_PTR(ptr)) & @as(c_long, 1);
}
pub inline fn ZEND_MAP_PTR_GET(ptr: anytype) @TypeOf(if (ZEND_MAP_PTR_IS_OFFSET(ptr)) ZEND_MAP_PTR_GET_IMM(ptr) else @import("std").zig.c_translation.cast(?*anyopaque, ZEND_MAP_PTR(ptr))) {
    _ = &ptr;
    return if (ZEND_MAP_PTR_IS_OFFSET(ptr)) ZEND_MAP_PTR_GET_IMM(ptr) else @import("std").zig.c_translation.cast(?*anyopaque, ZEND_MAP_PTR(ptr));
}
pub inline fn ZEND_MAP_PTR_GET_IMM(ptr: anytype) @TypeOf(ZEND_MAP_PTR_OFFSET2PTR(@import("std").zig.c_translation.cast(isize, ZEND_MAP_PTR(ptr))).*) {
    _ = &ptr;
    return ZEND_MAP_PTR_OFFSET2PTR(@import("std").zig.c_translation.cast(isize, ZEND_MAP_PTR(ptr))).*;
}
pub const ZEND_MAP_PTR_SET = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_map_ptr.h:60:10
pub const ZEND_MAP_PTR_SET_IMM = @compileError("unable to translate macro: undefined identifier `__p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_map_ptr.h:67:10
pub inline fn ZEND_MAP_PTR_BIASED_BASE(real_base: anytype) ?*anyopaque {
    _ = &real_base;
    return @import("std").zig.c_translation.cast(?*anyopaque, (@import("std").zig.c_translation.cast(usize, real_base) + (zend_map_ptr_static_size * @import("std").zig.c_translation.sizeof(?*anyopaque))) - @as(c_int, 1));
}
pub const ZEND_MAP_PTR_STATIC_NUM_TO_PTR = @compileError("unable to translate macro: undefined identifier `map_ptr_real_base`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_map_ptr.h:74:9
pub const ZEND_ERRORS_H = "";
pub const E_ERROR = @as(c_int, 1) << @as(c_long, 0);
pub const E_WARNING = @as(c_int, 1) << @as(c_long, 1);
pub const E_PARSE = @as(c_int, 1) << @as(c_long, 2);
pub const E_NOTICE = @as(c_int, 1) << @as(c_long, 3);
pub const E_CORE_ERROR = @as(c_int, 1) << @as(c_long, 4);
pub const E_CORE_WARNING = @as(c_int, 1) << @as(c_long, 5);
pub const E_COMPILE_ERROR = @as(c_int, 1) << @as(c_long, 6);
pub const E_COMPILE_WARNING = @as(c_int, 1) << @as(c_long, 7);
pub const E_USER_ERROR = @as(c_int, 1) << @as(c_long, 8);
pub const E_USER_WARNING = @as(c_int, 1) << @as(c_long, 9);
pub const E_USER_NOTICE = @as(c_int, 1) << @as(c_long, 10);
pub const E_STRICT = @as(c_int, 1) << @as(c_long, 11);
pub const E_RECOVERABLE_ERROR = @as(c_int, 1) << @as(c_long, 12);
pub const E_DEPRECATED = @as(c_int, 1) << @as(c_long, 13);
pub const E_USER_DEPRECATED = @as(c_int, 1) << @as(c_long, 14);
pub const E_DONT_BAIL = @as(c_int, 1) << @as(c_long, 15);
pub const E_ALL = ((((((((((((E_ERROR | E_WARNING) | E_PARSE) | E_NOTICE) | E_CORE_ERROR) | E_CORE_WARNING) | E_COMPILE_ERROR) | E_COMPILE_WARNING) | E_USER_ERROR) | E_USER_WARNING) | E_USER_NOTICE) | E_RECOVERABLE_ERROR) | E_DEPRECATED) | E_USER_DEPRECATED;
pub const E_CORE = E_CORE_ERROR | E_CORE_WARNING;
pub const E_FATAL_ERRORS = ((((E_ERROR | E_CORE_ERROR) | E_COMPILE_ERROR) | E_USER_ERROR) | E_RECOVERABLE_ERROR) | E_PARSE;
pub inline fn E_HAS_ONLY_FATAL_ERRORS(mask: anytype) @TypeOf(!((mask & ~E_FATAL_ERRORS) != 0)) {
    _ = &mask;
    return !((mask & ~E_FATAL_ERRORS) != 0);
}
pub const ZEND_ALLOC_H = "";
pub const ZEND_MM_ALIGNMENT_MASK = ~(ZEND_MM_ALIGNMENT - @as(c_int, 1));
pub inline fn ZEND_MM_ALIGNED_SIZE(size: anytype) @TypeOf(((size + ZEND_MM_ALIGNMENT) - @as(c_int, 1)) & ZEND_MM_ALIGNMENT_MASK) {
    _ = &size;
    return ((size + ZEND_MM_ALIGNMENT) - @as(c_int, 1)) & ZEND_MM_ALIGNMENT_MASK;
}
pub inline fn ZEND_MM_ALIGNED_SIZE_EX(size: anytype, alignment: anytype) @TypeOf((size + (alignment - @as(c_int, 1))) & ~(alignment - @as(c_int, 1))) {
    _ = &size;
    _ = &alignment;
    return (size + (alignment - @as(c_int, 1))) & ~(alignment - @as(c_int, 1));
}
pub const ZEND_MM_OVERHEAD = @as(c_int, 0);
pub const ZEND_ALLOC_SIZES_H = "";
pub const ZEND_MM_CHUNK_SIZE = @import("std").zig.c_translation.cast(usize, (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024));
pub const ZEND_MM_PAGE_SIZE = @as(c_int, 4) * @as(c_int, 1024);
pub const ZEND_MM_PAGES = @import("std").zig.c_translation.MacroArithmetic.div(ZEND_MM_CHUNK_SIZE, ZEND_MM_PAGE_SIZE);
pub const ZEND_MM_FIRST_PAGE = @as(c_int, 1);
pub const ZEND_MM_MIN_SMALL_SIZE = @as(c_int, 8);
pub const ZEND_MM_MAX_SMALL_SIZE = @as(c_int, 3072);
pub const ZEND_MM_MAX_LARGE_SIZE = ZEND_MM_CHUNK_SIZE - (ZEND_MM_PAGE_SIZE * ZEND_MM_FIRST_PAGE);
pub inline fn ZEND_MM_BINS_INFO(@"_": anytype, x: anytype, y: anytype) @TypeOf(@"_"(@as(c_int, 0), @as(c_int, 8), @as(c_int, 512), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 1), @as(c_int, 16), @as(c_int, 256), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 2), @as(c_int, 24), @as(c_int, 170), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 3), @as(c_int, 32), @as(c_int, 128), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 4), @as(c_int, 40), @as(c_int, 102), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 5), @as(c_int, 48), @as(c_int, 85), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 6), @as(c_int, 56), @as(c_int, 73), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 7), @as(c_int, 64), @as(c_int, 64), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 8), @as(c_int, 80), @as(c_int, 51), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 9), @as(c_int, 96), @as(c_int, 42), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 10), @as(c_int, 112), @as(c_int, 36), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 11), @as(c_int, 128), @as(c_int, 32), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 12), @as(c_int, 160), @as(c_int, 25), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 13), @as(c_int, 192), @as(c_int, 21), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 14), @as(c_int, 224), @as(c_int, 18), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 15), @as(c_int, 256), @as(c_int, 16), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 16), @as(c_int, 320), @as(c_int, 64), @as(c_int, 5), x, y) ++ @"_"(@as(c_int, 17), @as(c_int, 384), @as(c_int, 32), @as(c_int, 3), x, y) ++ @"_"(@as(c_int, 18), @as(c_int, 448), @as(c_int, 9), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 19), @as(c_int, 512), @as(c_int, 8), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 20), @as(c_int, 640), @as(c_int, 32), @as(c_int, 5), x, y) ++ @"_"(@as(c_int, 21), @as(c_int, 768), @as(c_int, 16), @as(c_int, 3), x, y) ++ @"_"(@as(c_int, 22), @as(c_int, 896), @as(c_int, 9), @as(c_int, 2), x, y) ++ @"_"(@as(c_int, 23), @as(c_int, 1024), @as(c_int, 8), @as(c_int, 2), x, y) ++ @"_"(@as(c_int, 24), @as(c_int, 1280), @as(c_int, 16), @as(c_int, 5), x, y) ++ @"_"(@as(c_int, 25), @as(c_int, 1536), @as(c_int, 8), @as(c_int, 3), x, y) ++ @"_"(@as(c_int, 26), @as(c_int, 1792), @as(c_int, 16), @as(c_int, 7), x, y) ++ @"_"(@as(c_int, 27), @as(c_int, 2048), @as(c_int, 8), @as(c_int, 4), x, y) ++ @"_"(@as(c_int, 28), @as(c_int, 2560), @as(c_int, 8), @as(c_int, 5), x, y) ++ @"_"(@as(c_int, 29), @as(c_int, 3072), @as(c_int, 4), @as(c_int, 3), x, y)) {
    _ = &@"_";
    _ = &x;
    _ = &y;
    return @"_"(@as(c_int, 0), @as(c_int, 8), @as(c_int, 512), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 1), @as(c_int, 16), @as(c_int, 256), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 2), @as(c_int, 24), @as(c_int, 170), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 3), @as(c_int, 32), @as(c_int, 128), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 4), @as(c_int, 40), @as(c_int, 102), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 5), @as(c_int, 48), @as(c_int, 85), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 6), @as(c_int, 56), @as(c_int, 73), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 7), @as(c_int, 64), @as(c_int, 64), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 8), @as(c_int, 80), @as(c_int, 51), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 9), @as(c_int, 96), @as(c_int, 42), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 10), @as(c_int, 112), @as(c_int, 36), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 11), @as(c_int, 128), @as(c_int, 32), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 12), @as(c_int, 160), @as(c_int, 25), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 13), @as(c_int, 192), @as(c_int, 21), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 14), @as(c_int, 224), @as(c_int, 18), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 15), @as(c_int, 256), @as(c_int, 16), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 16), @as(c_int, 320), @as(c_int, 64), @as(c_int, 5), x, y) ++ @"_"(@as(c_int, 17), @as(c_int, 384), @as(c_int, 32), @as(c_int, 3), x, y) ++ @"_"(@as(c_int, 18), @as(c_int, 448), @as(c_int, 9), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 19), @as(c_int, 512), @as(c_int, 8), @as(c_int, 1), x, y) ++ @"_"(@as(c_int, 20), @as(c_int, 640), @as(c_int, 32), @as(c_int, 5), x, y) ++ @"_"(@as(c_int, 21), @as(c_int, 768), @as(c_int, 16), @as(c_int, 3), x, y) ++ @"_"(@as(c_int, 22), @as(c_int, 896), @as(c_int, 9), @as(c_int, 2), x, y) ++ @"_"(@as(c_int, 23), @as(c_int, 1024), @as(c_int, 8), @as(c_int, 2), x, y) ++ @"_"(@as(c_int, 24), @as(c_int, 1280), @as(c_int, 16), @as(c_int, 5), x, y) ++ @"_"(@as(c_int, 25), @as(c_int, 1536), @as(c_int, 8), @as(c_int, 3), x, y) ++ @"_"(@as(c_int, 26), @as(c_int, 1792), @as(c_int, 16), @as(c_int, 7), x, y) ++ @"_"(@as(c_int, 27), @as(c_int, 2048), @as(c_int, 8), @as(c_int, 4), x, y) ++ @"_"(@as(c_int, 28), @as(c_int, 2560), @as(c_int, 8), @as(c_int, 5), x, y) ++ @"_"(@as(c_int, 29), @as(c_int, 3072), @as(c_int, 4), @as(c_int, 3), x, y);
}
pub const _ZEND_BIN_ALLOCATOR_DEF = @compileError("unable to translate macro: undefined identifier `_emalloc_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:85:10
pub const _ZEND_BIN_ALLOCATOR_SELECTOR_START = @compileError("unable to translate macro: undefined identifier `_emalloc_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:93:10
pub const _ZEND_BIN_ALLOCATOR_SELECTOR_END = @compileError("unable to translate C expr: unexpected token ')'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:95:10
pub const ZEND_ALLOCATOR = @compileError("unable to translate macro: undefined identifier `y`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:98:10
pub const _ZEND_BIN_DEALLOCATOR_DEF = @compileError("unable to translate macro: undefined identifier `_efree_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:110:10
pub const _ZEND_BIN_DEALLOCATOR_SELECTOR_START = @compileError("unable to translate macro: undefined identifier `_efree_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:118:10
pub const ZEND_DEALLOCATOR = @compileError("unable to translate C expr: unexpected token 'if'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:121:10
pub const efree_size = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:126:10
pub inline fn efree_size_rel(ptr: anytype, size: anytype) @TypeOf(efree_size(ptr, size)) {
    _ = &ptr;
    _ = &size;
    return efree_size(ptr, size);
}
pub inline fn emalloc(size: anytype) @TypeOf(_emalloc(size)) {
    _ = &size;
    return _emalloc(size);
}
pub inline fn emalloc_large(size: anytype) @TypeOf(_emalloc_large(size)) {
    _ = &size;
    return _emalloc_large(size);
}
pub inline fn emalloc_huge(size: anytype) @TypeOf(_emalloc_huge(size)) {
    _ = &size;
    return _emalloc_huge(size);
}
pub inline fn safe_emalloc(nmemb: anytype, size: anytype, offset: anytype) @TypeOf(_safe_emalloc(nmemb, size, offset)) {
    _ = &nmemb;
    _ = &size;
    _ = &offset;
    return _safe_emalloc(nmemb, size, offset);
}
pub inline fn efree(ptr: anytype) @TypeOf(_efree(ptr)) {
    _ = &ptr;
    return _efree(ptr);
}
pub inline fn efree_large(ptr: anytype) @TypeOf(_efree_large(ptr)) {
    _ = &ptr;
    return _efree_large(ptr);
}
pub inline fn efree_huge(ptr: anytype) @TypeOf(_efree_huge(ptr)) {
    _ = &ptr;
    return _efree_huge(ptr);
}
pub inline fn ecalloc(nmemb: anytype, size: anytype) @TypeOf(_ecalloc(nmemb, size)) {
    _ = &nmemb;
    _ = &size;
    return _ecalloc(nmemb, size);
}
pub inline fn erealloc(ptr: anytype, size: anytype) @TypeOf(_erealloc(ptr, size)) {
    _ = &ptr;
    _ = &size;
    return _erealloc(ptr, size);
}
pub inline fn erealloc2(ptr: anytype, size: anytype, copy_size: anytype) @TypeOf(_erealloc2(ptr, size, copy_size)) {
    _ = &ptr;
    _ = &size;
    _ = &copy_size;
    return _erealloc2(ptr, size, copy_size);
}
pub inline fn safe_erealloc(ptr: anytype, nmemb: anytype, size: anytype, offset: anytype) @TypeOf(_safe_erealloc(ptr, nmemb, size, offset)) {
    _ = &ptr;
    _ = &nmemb;
    _ = &size;
    _ = &offset;
    return _safe_erealloc(ptr, nmemb, size, offset);
}
pub inline fn erealloc_recoverable(ptr: anytype, size: anytype) @TypeOf(_erealloc(ptr, size)) {
    _ = &ptr;
    _ = &size;
    return _erealloc(ptr, size);
}
pub inline fn erealloc2_recoverable(ptr: anytype, size: anytype, copy_size: anytype) @TypeOf(_erealloc2(ptr, size, copy_size)) {
    _ = &ptr;
    _ = &size;
    _ = &copy_size;
    return _erealloc2(ptr, size, copy_size);
}
pub inline fn estrdup(s: anytype) @TypeOf(_estrdup(s)) {
    _ = &s;
    return _estrdup(s);
}
pub inline fn estrndup(s: anytype, length: anytype) @TypeOf(_estrndup(s, length)) {
    _ = &s;
    _ = &length;
    return _estrndup(s, length);
}
pub inline fn zend_mem_block_size(ptr: anytype) @TypeOf(_zend_mem_block_size(ptr)) {
    _ = &ptr;
    return _zend_mem_block_size(ptr);
}
pub inline fn emalloc_rel(size: anytype) @TypeOf(_emalloc(size)) {
    _ = &size;
    return _emalloc(size);
}
pub inline fn safe_emalloc_rel(nmemb: anytype, size: anytype, offset: anytype) @TypeOf(_safe_emalloc(nmemb, size, offset)) {
    _ = &nmemb;
    _ = &size;
    _ = &offset;
    return _safe_emalloc(nmemb, size, offset);
}
pub inline fn efree_rel(ptr: anytype) @TypeOf(_efree(ptr)) {
    _ = &ptr;
    return _efree(ptr);
}
pub inline fn ecalloc_rel(nmemb: anytype, size: anytype) @TypeOf(_ecalloc(nmemb, size)) {
    _ = &nmemb;
    _ = &size;
    return _ecalloc(nmemb, size);
}
pub inline fn erealloc_rel(ptr: anytype, size: anytype) @TypeOf(_erealloc(ptr, size)) {
    _ = &ptr;
    _ = &size;
    return _erealloc(ptr, size);
}
pub inline fn erealloc2_rel(ptr: anytype, size: anytype, copy_size: anytype) @TypeOf(_erealloc2(ptr, size, copy_size)) {
    _ = &ptr;
    _ = &size;
    _ = &copy_size;
    return _erealloc2(ptr, size, copy_size);
}
pub inline fn erealloc_recoverable_rel(ptr: anytype, size: anytype) @TypeOf(_erealloc(ptr, size)) {
    _ = &ptr;
    _ = &size;
    return _erealloc(ptr, size);
}
pub inline fn erealloc2_recoverable_rel(ptr: anytype, size: anytype, copy_size: anytype) @TypeOf(_erealloc2(ptr, size, copy_size)) {
    _ = &ptr;
    _ = &size;
    _ = &copy_size;
    return _erealloc2(ptr, size, copy_size);
}
pub inline fn safe_erealloc_rel(ptr: anytype, nmemb: anytype, size: anytype, offset: anytype) @TypeOf(_safe_erealloc(ptr, nmemb, size, offset)) {
    _ = &ptr;
    _ = &nmemb;
    _ = &size;
    _ = &offset;
    return _safe_erealloc(ptr, nmemb, size, offset);
}
pub inline fn estrdup_rel(s: anytype) @TypeOf(_estrdup(s)) {
    _ = &s;
    return _estrdup(s);
}
pub inline fn estrndup_rel(s: anytype, length: anytype) @TypeOf(_estrndup(s, length)) {
    _ = &s;
    _ = &length;
    return _estrndup(s, length);
}
pub inline fn zend_mem_block_size_rel(ptr: anytype) @TypeOf(_zend_mem_block_size(ptr)) {
    _ = &ptr;
    return _zend_mem_block_size(ptr);
}
pub inline fn pemalloc(size: anytype, persistent: anytype) @TypeOf(if (persistent) __zend_malloc(size) else emalloc(size)) {
    _ = &size;
    _ = &persistent;
    return if (persistent) __zend_malloc(size) else emalloc(size);
}
pub inline fn safe_pemalloc(nmemb: anytype, size: anytype, offset: anytype, persistent: anytype) @TypeOf(if (persistent) _safe_malloc(nmemb, size, offset) else safe_emalloc(nmemb, size, offset)) {
    _ = &nmemb;
    _ = &size;
    _ = &offset;
    _ = &persistent;
    return if (persistent) _safe_malloc(nmemb, size, offset) else safe_emalloc(nmemb, size, offset);
}
pub inline fn pefree(ptr: anytype, persistent: anytype) @TypeOf(if (persistent) free(ptr) else efree(ptr)) {
    _ = &ptr;
    _ = &persistent;
    return if (persistent) free(ptr) else efree(ptr);
}
pub const pefree_size = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:192:9
pub inline fn pecalloc(nmemb: anytype, size: anytype, persistent: anytype) @TypeOf(if (persistent) __zend_calloc(nmemb, size) else ecalloc(nmemb, size)) {
    _ = &nmemb;
    _ = &size;
    _ = &persistent;
    return if (persistent) __zend_calloc(nmemb, size) else ecalloc(nmemb, size);
}
pub inline fn perealloc(ptr: anytype, size: anytype, persistent: anytype) @TypeOf(if (persistent) __zend_realloc(ptr, size) else erealloc(ptr, size)) {
    _ = &ptr;
    _ = &size;
    _ = &persistent;
    return if (persistent) __zend_realloc(ptr, size) else erealloc(ptr, size);
}
pub inline fn perealloc2(ptr: anytype, size: anytype, copy_size: anytype, persistent: anytype) @TypeOf(if (persistent) __zend_realloc(ptr, size) else erealloc2(ptr, size, copy_size)) {
    _ = &ptr;
    _ = &size;
    _ = &copy_size;
    _ = &persistent;
    return if (persistent) __zend_realloc(ptr, size) else erealloc2(ptr, size, copy_size);
}
pub inline fn safe_perealloc(ptr: anytype, nmemb: anytype, size: anytype, offset: anytype, persistent: anytype) @TypeOf(if (persistent) _safe_realloc(ptr, nmemb, size, offset) else safe_erealloc(ptr, nmemb, size, offset)) {
    _ = &ptr;
    _ = &nmemb;
    _ = &size;
    _ = &offset;
    _ = &persistent;
    return if (persistent) _safe_realloc(ptr, nmemb, size, offset) else safe_erealloc(ptr, nmemb, size, offset);
}
pub inline fn perealloc_recoverable(ptr: anytype, size: anytype, persistent: anytype) @TypeOf(if (persistent) realloc(ptr, size) else erealloc_recoverable(ptr, size)) {
    _ = &ptr;
    _ = &size;
    _ = &persistent;
    return if (persistent) realloc(ptr, size) else erealloc_recoverable(ptr, size);
}
pub const perealloc2_recoverable = @compileError("unable to translate macro: undefined identifier `copy_size`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:205:9
pub inline fn pestrdup(s: anytype, persistent: anytype) @TypeOf(if (persistent) __zend_strdup(s) else estrdup(s)) {
    _ = &s;
    _ = &persistent;
    return if (persistent) __zend_strdup(s) else estrdup(s);
}
pub inline fn pestrndup(s: anytype, length: anytype, persistent: anytype) @TypeOf(if (persistent) zend_strndup(s, length) else estrndup(s, length)) {
    _ = &s;
    _ = &length;
    _ = &persistent;
    return if (persistent) zend_strndup(s, length) else estrndup(s, length);
}
pub inline fn pemalloc_rel(size: anytype, persistent: anytype) @TypeOf(if (persistent) __zend_malloc(size) else emalloc_rel(size)) {
    _ = &size;
    _ = &persistent;
    return if (persistent) __zend_malloc(size) else emalloc_rel(size);
}
pub inline fn pefree_rel(ptr: anytype, persistent: anytype) @TypeOf(if (persistent) free(ptr) else efree_rel(ptr)) {
    _ = &ptr;
    _ = &persistent;
    return if (persistent) free(ptr) else efree_rel(ptr);
}
pub inline fn pecalloc_rel(nmemb: anytype, size: anytype, persistent: anytype) @TypeOf(if (persistent) __zend_calloc(nmemb, size) else ecalloc_rel(nmemb, size)) {
    _ = &nmemb;
    _ = &size;
    _ = &persistent;
    return if (persistent) __zend_calloc(nmemb, size) else ecalloc_rel(nmemb, size);
}
pub inline fn perealloc_rel(ptr: anytype, size: anytype, persistent: anytype) @TypeOf(if (persistent) __zend_realloc(ptr, size) else erealloc_rel(ptr, size)) {
    _ = &ptr;
    _ = &size;
    _ = &persistent;
    return if (persistent) __zend_realloc(ptr, size) else erealloc_rel(ptr, size);
}
pub inline fn perealloc2_rel(ptr: anytype, size: anytype, copy_size: anytype, persistent: anytype) @TypeOf(if (persistent) __zend_realloc(ptr, size) else erealloc2_rel(ptr, size, copy_size)) {
    _ = &ptr;
    _ = &size;
    _ = &copy_size;
    _ = &persistent;
    return if (persistent) __zend_realloc(ptr, size) else erealloc2_rel(ptr, size, copy_size);
}
pub inline fn perealloc_recoverable_rel(ptr: anytype, size: anytype, persistent: anytype) @TypeOf(if (persistent) realloc(ptr, size) else erealloc_recoverable_rel(ptr, size)) {
    _ = &ptr;
    _ = &size;
    _ = &persistent;
    return if (persistent) realloc(ptr, size) else erealloc_recoverable_rel(ptr, size);
}
pub inline fn perealloc2_recoverable_rel(ptr: anytype, size: anytype, copy_size: anytype, persistent: anytype) @TypeOf(if (persistent) realloc(ptr, size) else erealloc2_recoverable_rel(ptr, size, copy_size)) {
    _ = &ptr;
    _ = &size;
    _ = &copy_size;
    _ = &persistent;
    return if (persistent) realloc(ptr, size) else erealloc2_recoverable_rel(ptr, size, copy_size);
}
pub inline fn pestrdup_rel(s: anytype, persistent: anytype) @TypeOf(if (persistent) strdup(s) else estrdup_rel(s)) {
    _ = &s;
    _ = &persistent;
    return if (persistent) strdup(s) else estrdup_rel(s);
}
pub const ALLOC_HASHTABLE = @compileError("unable to translate C expr: unexpected token '='");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:231:9
pub inline fn FREE_HASHTABLE(ht: anytype) @TypeOf(efree_size(ht, @import("std").zig.c_translation.sizeof(HashTable))) {
    _ = &ht;
    return efree_size(ht, @import("std").zig.c_translation.sizeof(HashTable));
}
pub const ALLOC_HASHTABLE_REL = @compileError("unable to translate C expr: unexpected token '='");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_alloc.h:237:9
pub inline fn FREE_HASHTABLE_REL(ht: anytype) @TypeOf(efree_size_rel(ht, @import("std").zig.c_translation.sizeof(HashTable))) {
    _ = &ht;
    return efree_size_rel(ht, @import("std").zig.c_translation.sizeof(HashTable));
}
pub inline fn zend_mm_alloc(heap: anytype, size: anytype) @TypeOf(_zend_mm_alloc(heap, size)) {
    _ = &heap;
    _ = &size;
    return _zend_mm_alloc(heap, size);
}
pub inline fn zend_mm_free(heap: anytype, p: anytype) @TypeOf(_zend_mm_free(heap, p)) {
    _ = &heap;
    _ = &p;
    return _zend_mm_free(heap, p);
}
pub inline fn zend_mm_realloc(heap: anytype, p: anytype, size: anytype) @TypeOf(_zend_mm_realloc(heap, p, size)) {
    _ = &heap;
    _ = &p;
    _ = &size;
    return _zend_mm_realloc(heap, p, size);
}
pub inline fn zend_mm_realloc2(heap: anytype, p: anytype, size: anytype, copy_size: anytype) @TypeOf(_zend_mm_realloc2(heap, p, size, copy_size)) {
    _ = &heap;
    _ = &p;
    _ = &size;
    _ = &copy_size;
    return _zend_mm_realloc2(heap, p, size, copy_size);
}
pub inline fn zend_mm_block_size(heap: anytype, p: anytype) @TypeOf(_zend_mm_block_size(heap, p)) {
    _ = &heap;
    _ = &p;
    return _zend_mm_block_size(heap, p);
}
pub inline fn zend_mm_alloc_rel(heap: anytype, size: anytype) @TypeOf(_zend_mm_alloc(heap, size)) {
    _ = &heap;
    _ = &size;
    return _zend_mm_alloc(heap, size);
}
pub inline fn zend_mm_free_rel(heap: anytype, p: anytype) @TypeOf(_zend_mm_free(heap, p)) {
    _ = &heap;
    _ = &p;
    return _zend_mm_free(heap, p);
}
pub inline fn zend_mm_realloc_rel(heap: anytype, p: anytype, size: anytype) @TypeOf(_zend_mm_realloc(heap, p, size)) {
    _ = &heap;
    _ = &p;
    _ = &size;
    return _zend_mm_realloc(heap, p, size);
}
pub inline fn zend_mm_realloc2_rel(heap: anytype, p: anytype, size: anytype, copy_size: anytype) @TypeOf(_zend_mm_realloc2(heap, p, size, copy_size)) {
    _ = &heap;
    _ = &p;
    _ = &size;
    _ = &copy_size;
    return _zend_mm_realloc2(heap, p, size, copy_size);
}
pub inline fn zend_mm_block_size_rel(heap: anytype, p: anytype) @TypeOf(_zend_mm_block_size(heap, p)) {
    _ = &heap;
    _ = &p;
    return _zend_mm_block_size(heap, p);
}
pub const ZEND_MM_CUSTOM_HEAP_NONE = @as(c_int, 0);
pub const ZEND_MM_CUSTOM_HEAP_STD = @as(c_int, 1);
pub const ZEND_MM_CUSTOM_HEAP_DEBUG = @as(c_int, 2);
pub const ZEND_LLIST_H = "";
pub const ZEND_STRING_H = "";
pub const ZEND_GC_H = "";
pub const ZEND_HRTIME_H = "";
pub const _UNISTD_H_ = "";
pub const _SYS_UNISTD_H_ = "";
pub const _POSIX_VERSION = @as(c_long, 200112);
pub const _POSIX2_VERSION = @as(c_long, 200112);
pub const _POSIX_VDISABLE = @import("std").zig.c_translation.cast(u8, '\xff');
pub const F_OK = @as(c_int, 0);
pub const X_OK = @as(c_int, 1) << @as(c_int, 0);
pub const W_OK = @as(c_int, 1) << @as(c_int, 1);
pub const R_OK = @as(c_int, 1) << @as(c_int, 2);
pub const _READ_OK = @as(c_int, 1) << @as(c_int, 9);
pub const _WRITE_OK = @as(c_int, 1) << @as(c_int, 10);
pub const _EXECUTE_OK = @as(c_int, 1) << @as(c_int, 11);
pub const _DELETE_OK = @as(c_int, 1) << @as(c_int, 12);
pub const _APPEND_OK = @as(c_int, 1) << @as(c_int, 13);
pub const _RMFILE_OK = @as(c_int, 1) << @as(c_int, 14);
pub const _RATTR_OK = @as(c_int, 1) << @as(c_int, 15);
pub const _WATTR_OK = @as(c_int, 1) << @as(c_int, 16);
pub const _REXT_OK = @as(c_int, 1) << @as(c_int, 17);
pub const _WEXT_OK = @as(c_int, 1) << @as(c_int, 18);
pub const _RPERM_OK = @as(c_int, 1) << @as(c_int, 19);
pub const _WPERM_OK = @as(c_int, 1) << @as(c_int, 20);
pub const _CHOWN_OK = @as(c_int, 1) << @as(c_int, 21);
pub const _ACCESS_EXTENDED_MASK = (((((((((((_READ_OK | _WRITE_OK) | _EXECUTE_OK) | _DELETE_OK) | _APPEND_OK) | _RMFILE_OK) | _REXT_OK) | _WEXT_OK) | _RATTR_OK) | _WATTR_OK) | _RPERM_OK) | _WPERM_OK) | _CHOWN_OK;
pub const L_SET = SEEK_SET;
pub const L_INCR = SEEK_CUR;
pub const L_XTND = SEEK_END;
pub const ACCESSX_MAX_DESCRIPTORS = @as(c_int, 100);
pub const ACCESSX_MAX_TABLESIZE = @as(c_int, 16) * @as(c_int, 1024);
pub const _PC_LINK_MAX = @as(c_int, 1);
pub const _PC_MAX_CANON = @as(c_int, 2);
pub const _PC_MAX_INPUT = @as(c_int, 3);
pub const _PC_NAME_MAX = @as(c_int, 4);
pub const _PC_PATH_MAX = @as(c_int, 5);
pub const _PC_PIPE_BUF = @as(c_int, 6);
pub const _PC_CHOWN_RESTRICTED = @as(c_int, 7);
pub const _PC_NO_TRUNC = @as(c_int, 8);
pub const _PC_VDISABLE = @as(c_int, 9);
pub const _PC_NAME_CHARS_MAX = @as(c_int, 10);
pub const _PC_CASE_SENSITIVE = @as(c_int, 11);
pub const _PC_CASE_PRESERVING = @as(c_int, 12);
pub const _PC_EXTENDED_SECURITY_NP = @as(c_int, 13);
pub const _PC_AUTH_OPAQUE_NP = @as(c_int, 14);
pub const _PC_2_SYMLINKS = @as(c_int, 15);
pub const _PC_ALLOC_SIZE_MIN = @as(c_int, 16);
pub const _PC_ASYNC_IO = @as(c_int, 17);
pub const _PC_FILESIZEBITS = @as(c_int, 18);
pub const _PC_PRIO_IO = @as(c_int, 19);
pub const _PC_REC_INCR_XFER_SIZE = @as(c_int, 20);
pub const _PC_REC_MAX_XFER_SIZE = @as(c_int, 21);
pub const _PC_REC_MIN_XFER_SIZE = @as(c_int, 22);
pub const _PC_REC_XFER_ALIGN = @as(c_int, 23);
pub const _PC_SYMLINK_MAX = @as(c_int, 24);
pub const _PC_SYNC_IO = @as(c_int, 25);
pub const _PC_XATTR_SIZE_BITS = @as(c_int, 26);
pub const _PC_MIN_HOLE_SIZE = @as(c_int, 27);
pub const _CS_PATH = @as(c_int, 1);
pub const STDIN_FILENO = @as(c_int, 0);
pub const STDOUT_FILENO = @as(c_int, 1);
pub const STDERR_FILENO = @as(c_int, 2);
pub const _XOPEN_VERSION = @as(c_int, 600);
pub const _XOPEN_XCU_VERSION = @as(c_int, 4);
pub const _POSIX_ADVISORY_INFO = -@as(c_int, 1);
pub const _POSIX_ASYNCHRONOUS_IO = -@as(c_int, 1);
pub const _POSIX_BARRIERS = -@as(c_int, 1);
pub const _POSIX_CHOWN_RESTRICTED = @as(c_long, 200112);
pub const _POSIX_CLOCK_SELECTION = -@as(c_int, 1);
pub const _POSIX_CPUTIME = -@as(c_int, 1);
pub const _POSIX_FSYNC = @as(c_long, 200112);
pub const _POSIX_IPV6 = @as(c_long, 200112);
pub const _POSIX_JOB_CONTROL = @as(c_long, 200112);
pub const _POSIX_MAPPED_FILES = @as(c_long, 200112);
pub const _POSIX_MEMLOCK = -@as(c_int, 1);
pub const _POSIX_MEMLOCK_RANGE = -@as(c_int, 1);
pub const _POSIX_MEMORY_PROTECTION = @as(c_long, 200112);
pub const _POSIX_MESSAGE_PASSING = -@as(c_int, 1);
pub const _POSIX_MONOTONIC_CLOCK = -@as(c_int, 1);
pub const _POSIX_NO_TRUNC = @as(c_long, 200112);
pub const _POSIX_PRIORITIZED_IO = -@as(c_int, 1);
pub const _POSIX_PRIORITY_SCHEDULING = -@as(c_int, 1);
pub const _POSIX_RAW_SOCKETS = -@as(c_int, 1);
pub const _POSIX_READER_WRITER_LOCKS = @as(c_long, 200112);
pub const _POSIX_REALTIME_SIGNALS = -@as(c_int, 1);
pub const _POSIX_REGEXP = @as(c_long, 200112);
pub const _POSIX_SAVED_IDS = @as(c_long, 200112);
pub const _POSIX_SEMAPHORES = -@as(c_int, 1);
pub const _POSIX_SHARED_MEMORY_OBJECTS = -@as(c_int, 1);
pub const _POSIX_SHELL = @as(c_long, 200112);
pub const _POSIX_SPAWN = @as(c_long, 200112);
pub const _POSIX_SPIN_LOCKS = -@as(c_int, 1);
pub const _POSIX_SPORADIC_SERVER = -@as(c_int, 1);
pub const _POSIX_SYNCHRONIZED_IO = -@as(c_int, 1);
pub const _POSIX_THREAD_ATTR_STACKADDR = @as(c_long, 200112);
pub const _POSIX_THREAD_ATTR_STACKSIZE = @as(c_long, 200112);
pub const _POSIX_THREAD_CPUTIME = -@as(c_int, 1);
pub const _POSIX_THREAD_PRIO_INHERIT = -@as(c_int, 1);
pub const _POSIX_THREAD_PRIO_PROTECT = -@as(c_int, 1);
pub const _POSIX_THREAD_PRIORITY_SCHEDULING = -@as(c_int, 1);
pub const _POSIX_THREAD_PROCESS_SHARED = @as(c_long, 200112);
pub const _POSIX_THREAD_SAFE_FUNCTIONS = @as(c_long, 200112);
pub const _POSIX_THREAD_SPORADIC_SERVER = -@as(c_int, 1);
pub const _POSIX_THREADS = @as(c_long, 200112);
pub const _POSIX_TIMEOUTS = -@as(c_int, 1);
pub const _POSIX_TIMERS = -@as(c_int, 1);
pub const _POSIX_TRACE = -@as(c_int, 1);
pub const _POSIX_TRACE_EVENT_FILTER = -@as(c_int, 1);
pub const _POSIX_TRACE_INHERIT = -@as(c_int, 1);
pub const _POSIX_TRACE_LOG = -@as(c_int, 1);
pub const _POSIX_TYPED_MEMORY_OBJECTS = -@as(c_int, 1);
pub const _POSIX2_C_BIND = @as(c_long, 200112);
pub const _POSIX2_C_DEV = @as(c_long, 200112);
pub const _POSIX2_CHAR_TERM = @as(c_long, 200112);
pub const _POSIX2_FORT_DEV = -@as(c_int, 1);
pub const _POSIX2_FORT_RUN = @as(c_long, 200112);
pub const _POSIX2_LOCALEDEF = @as(c_long, 200112);
pub const _POSIX2_PBS = -@as(c_int, 1);
pub const _POSIX2_PBS_ACCOUNTING = -@as(c_int, 1);
pub const _POSIX2_PBS_CHECKPOINT = -@as(c_int, 1);
pub const _POSIX2_PBS_LOCATE = -@as(c_int, 1);
pub const _POSIX2_PBS_MESSAGE = -@as(c_int, 1);
pub const _POSIX2_PBS_TRACK = -@as(c_int, 1);
pub const _POSIX2_SW_DEV = @as(c_long, 200112);
pub const _POSIX2_UPE = @as(c_long, 200112);
pub const __ILP32_OFF32 = -@as(c_int, 1);
pub const __ILP32_OFFBIG = -@as(c_int, 1);
pub const __LP64_OFF64 = @as(c_int, 1);
pub const __LPBIG_OFFBIG = @as(c_int, 1);
pub const _POSIX_V6_ILP32_OFF32 = __ILP32_OFF32;
pub const _POSIX_V6_ILP32_OFFBIG = __ILP32_OFFBIG;
pub const _POSIX_V6_LP64_OFF64 = __LP64_OFF64;
pub const _POSIX_V6_LPBIG_OFFBIG = __LPBIG_OFFBIG;
pub const _POSIX_V7_ILP32_OFF32 = __ILP32_OFF32;
pub const _POSIX_V7_ILP32_OFFBIG = __ILP32_OFFBIG;
pub const _POSIX_V7_LP64_OFF64 = __LP64_OFF64;
pub const _POSIX_V7_LPBIG_OFFBIG = __LPBIG_OFFBIG;
pub const _V6_ILP32_OFF32 = __ILP32_OFF32;
pub const _V6_ILP32_OFFBIG = __ILP32_OFFBIG;
pub const _V6_LP64_OFF64 = __LP64_OFF64;
pub const _V6_LPBIG_OFFBIG = __LPBIG_OFFBIG;
pub const _XBS5_ILP32_OFF32 = __ILP32_OFF32;
pub const _XBS5_ILP32_OFFBIG = __ILP32_OFFBIG;
pub const _XBS5_LP64_OFF64 = __LP64_OFF64;
pub const _XBS5_LPBIG_OFFBIG = __LPBIG_OFFBIG;
pub const _XOPEN_CRYPT = @as(c_int, 1);
pub const _XOPEN_ENH_I18N = @as(c_int, 1);
pub const _XOPEN_LEGACY = -@as(c_int, 1);
pub const _XOPEN_REALTIME = -@as(c_int, 1);
pub const _XOPEN_REALTIME_THREADS = -@as(c_int, 1);
pub const _XOPEN_SHM = @as(c_int, 1);
pub const _XOPEN_STREAMS = -@as(c_int, 1);
pub const _XOPEN_UNIX = @as(c_int, 1);
pub const _SC_ARG_MAX = @as(c_int, 1);
pub const _SC_CHILD_MAX = @as(c_int, 2);
pub const _SC_CLK_TCK = @as(c_int, 3);
pub const _SC_NGROUPS_MAX = @as(c_int, 4);
pub const _SC_OPEN_MAX = @as(c_int, 5);
pub const _SC_JOB_CONTROL = @as(c_int, 6);
pub const _SC_SAVED_IDS = @as(c_int, 7);
pub const _SC_VERSION = @as(c_int, 8);
pub const _SC_BC_BASE_MAX = @as(c_int, 9);
pub const _SC_BC_DIM_MAX = @as(c_int, 10);
pub const _SC_BC_SCALE_MAX = @as(c_int, 11);
pub const _SC_BC_STRING_MAX = @as(c_int, 12);
pub const _SC_COLL_WEIGHTS_MAX = @as(c_int, 13);
pub const _SC_EXPR_NEST_MAX = @as(c_int, 14);
pub const _SC_LINE_MAX = @as(c_int, 15);
pub const _SC_RE_DUP_MAX = @as(c_int, 16);
pub const _SC_2_VERSION = @as(c_int, 17);
pub const _SC_2_C_BIND = @as(c_int, 18);
pub const _SC_2_C_DEV = @as(c_int, 19);
pub const _SC_2_CHAR_TERM = @as(c_int, 20);
pub const _SC_2_FORT_DEV = @as(c_int, 21);
pub const _SC_2_FORT_RUN = @as(c_int, 22);
pub const _SC_2_LOCALEDEF = @as(c_int, 23);
pub const _SC_2_SW_DEV = @as(c_int, 24);
pub const _SC_2_UPE = @as(c_int, 25);
pub const _SC_STREAM_MAX = @as(c_int, 26);
pub const _SC_TZNAME_MAX = @as(c_int, 27);
pub const _SC_ASYNCHRONOUS_IO = @as(c_int, 28);
pub const _SC_PAGESIZE = @as(c_int, 29);
pub const _SC_MEMLOCK = @as(c_int, 30);
pub const _SC_MEMLOCK_RANGE = @as(c_int, 31);
pub const _SC_MEMORY_PROTECTION = @as(c_int, 32);
pub const _SC_MESSAGE_PASSING = @as(c_int, 33);
pub const _SC_PRIORITIZED_IO = @as(c_int, 34);
pub const _SC_PRIORITY_SCHEDULING = @as(c_int, 35);
pub const _SC_REALTIME_SIGNALS = @as(c_int, 36);
pub const _SC_SEMAPHORES = @as(c_int, 37);
pub const _SC_FSYNC = @as(c_int, 38);
pub const _SC_SHARED_MEMORY_OBJECTS = @as(c_int, 39);
pub const _SC_SYNCHRONIZED_IO = @as(c_int, 40);
pub const _SC_TIMERS = @as(c_int, 41);
pub const _SC_AIO_LISTIO_MAX = @as(c_int, 42);
pub const _SC_AIO_MAX = @as(c_int, 43);
pub const _SC_AIO_PRIO_DELTA_MAX = @as(c_int, 44);
pub const _SC_DELAYTIMER_MAX = @as(c_int, 45);
pub const _SC_MQ_OPEN_MAX = @as(c_int, 46);
pub const _SC_MAPPED_FILES = @as(c_int, 47);
pub const _SC_RTSIG_MAX = @as(c_int, 48);
pub const _SC_SEM_NSEMS_MAX = @as(c_int, 49);
pub const _SC_SEM_VALUE_MAX = @as(c_int, 50);
pub const _SC_SIGQUEUE_MAX = @as(c_int, 51);
pub const _SC_TIMER_MAX = @as(c_int, 52);
pub const _SC_NPROCESSORS_CONF = @as(c_int, 57);
pub const _SC_NPROCESSORS_ONLN = @as(c_int, 58);
pub const _SC_2_PBS = @as(c_int, 59);
pub const _SC_2_PBS_ACCOUNTING = @as(c_int, 60);
pub const _SC_2_PBS_CHECKPOINT = @as(c_int, 61);
pub const _SC_2_PBS_LOCATE = @as(c_int, 62);
pub const _SC_2_PBS_MESSAGE = @as(c_int, 63);
pub const _SC_2_PBS_TRACK = @as(c_int, 64);
pub const _SC_ADVISORY_INFO = @as(c_int, 65);
pub const _SC_BARRIERS = @as(c_int, 66);
pub const _SC_CLOCK_SELECTION = @as(c_int, 67);
pub const _SC_CPUTIME = @as(c_int, 68);
pub const _SC_FILE_LOCKING = @as(c_int, 69);
pub const _SC_GETGR_R_SIZE_MAX = @as(c_int, 70);
pub const _SC_GETPW_R_SIZE_MAX = @as(c_int, 71);
pub const _SC_HOST_NAME_MAX = @as(c_int, 72);
pub const _SC_LOGIN_NAME_MAX = @as(c_int, 73);
pub const _SC_MONOTONIC_CLOCK = @as(c_int, 74);
pub const _SC_MQ_PRIO_MAX = @as(c_int, 75);
pub const _SC_READER_WRITER_LOCKS = @as(c_int, 76);
pub const _SC_REGEXP = @as(c_int, 77);
pub const _SC_SHELL = @as(c_int, 78);
pub const _SC_SPAWN = @as(c_int, 79);
pub const _SC_SPIN_LOCKS = @as(c_int, 80);
pub const _SC_SPORADIC_SERVER = @as(c_int, 81);
pub const _SC_THREAD_ATTR_STACKADDR = @as(c_int, 82);
pub const _SC_THREAD_ATTR_STACKSIZE = @as(c_int, 83);
pub const _SC_THREAD_CPUTIME = @as(c_int, 84);
pub const _SC_THREAD_DESTRUCTOR_ITERATIONS = @as(c_int, 85);
pub const _SC_THREAD_KEYS_MAX = @as(c_int, 86);
pub const _SC_THREAD_PRIO_INHERIT = @as(c_int, 87);
pub const _SC_THREAD_PRIO_PROTECT = @as(c_int, 88);
pub const _SC_THREAD_PRIORITY_SCHEDULING = @as(c_int, 89);
pub const _SC_THREAD_PROCESS_SHARED = @as(c_int, 90);
pub const _SC_THREAD_SAFE_FUNCTIONS = @as(c_int, 91);
pub const _SC_THREAD_SPORADIC_SERVER = @as(c_int, 92);
pub const _SC_THREAD_STACK_MIN = @as(c_int, 93);
pub const _SC_THREAD_THREADS_MAX = @as(c_int, 94);
pub const _SC_TIMEOUTS = @as(c_int, 95);
pub const _SC_THREADS = @as(c_int, 96);
pub const _SC_TRACE = @as(c_int, 97);
pub const _SC_TRACE_EVENT_FILTER = @as(c_int, 98);
pub const _SC_TRACE_INHERIT = @as(c_int, 99);
pub const _SC_TRACE_LOG = @as(c_int, 100);
pub const _SC_TTY_NAME_MAX = @as(c_int, 101);
pub const _SC_TYPED_MEMORY_OBJECTS = @as(c_int, 102);
pub const _SC_V6_ILP32_OFF32 = @as(c_int, 103);
pub const _SC_V6_ILP32_OFFBIG = @as(c_int, 104);
pub const _SC_V6_LP64_OFF64 = @as(c_int, 105);
pub const _SC_V6_LPBIG_OFFBIG = @as(c_int, 106);
pub const _SC_IPV6 = @as(c_int, 118);
pub const _SC_RAW_SOCKETS = @as(c_int, 119);
pub const _SC_SYMLOOP_MAX = @as(c_int, 120);
pub const _SC_ATEXIT_MAX = @as(c_int, 107);
pub const _SC_IOV_MAX = @as(c_int, 56);
pub const _SC_PAGE_SIZE = _SC_PAGESIZE;
pub const _SC_XOPEN_CRYPT = @as(c_int, 108);
pub const _SC_XOPEN_ENH_I18N = @as(c_int, 109);
pub const _SC_XOPEN_LEGACY = @as(c_int, 110);
pub const _SC_XOPEN_REALTIME = @as(c_int, 111);
pub const _SC_XOPEN_REALTIME_THREADS = @as(c_int, 112);
pub const _SC_XOPEN_SHM = @as(c_int, 113);
pub const _SC_XOPEN_STREAMS = @as(c_int, 114);
pub const _SC_XOPEN_UNIX = @as(c_int, 115);
pub const _SC_XOPEN_VERSION = @as(c_int, 116);
pub const _SC_XOPEN_XCU_VERSION = @as(c_int, 121);
pub const _SC_XBS5_ILP32_OFF32 = @as(c_int, 122);
pub const _SC_XBS5_ILP32_OFFBIG = @as(c_int, 123);
pub const _SC_XBS5_LP64_OFF64 = @as(c_int, 124);
pub const _SC_XBS5_LPBIG_OFFBIG = @as(c_int, 125);
pub const _SC_SS_REPL_MAX = @as(c_int, 126);
pub const _SC_TRACE_EVENT_NAME_MAX = @as(c_int, 127);
pub const _SC_TRACE_NAME_MAX = @as(c_int, 128);
pub const _SC_TRACE_SYS_MAX = @as(c_int, 129);
pub const _SC_TRACE_USER_EVENT_MAX = @as(c_int, 130);
pub const _SC_PASS_MAX = @as(c_int, 131);
pub const _SC_PHYS_PAGES = @as(c_int, 200);
pub const _CS_POSIX_V6_ILP32_OFF32_CFLAGS = @as(c_int, 2);
pub const _CS_POSIX_V6_ILP32_OFF32_LDFLAGS = @as(c_int, 3);
pub const _CS_POSIX_V6_ILP32_OFF32_LIBS = @as(c_int, 4);
pub const _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = @as(c_int, 5);
pub const _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = @as(c_int, 6);
pub const _CS_POSIX_V6_ILP32_OFFBIG_LIBS = @as(c_int, 7);
pub const _CS_POSIX_V6_LP64_OFF64_CFLAGS = @as(c_int, 8);
pub const _CS_POSIX_V6_LP64_OFF64_LDFLAGS = @as(c_int, 9);
pub const _CS_POSIX_V6_LP64_OFF64_LIBS = @as(c_int, 10);
pub const _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = @as(c_int, 11);
pub const _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = @as(c_int, 12);
pub const _CS_POSIX_V6_LPBIG_OFFBIG_LIBS = @as(c_int, 13);
pub const _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS = @as(c_int, 14);
pub const _CS_XBS5_ILP32_OFF32_CFLAGS = @as(c_int, 20);
pub const _CS_XBS5_ILP32_OFF32_LDFLAGS = @as(c_int, 21);
pub const _CS_XBS5_ILP32_OFF32_LIBS = @as(c_int, 22);
pub const _CS_XBS5_ILP32_OFF32_LINTFLAGS = @as(c_int, 23);
pub const _CS_XBS5_ILP32_OFFBIG_CFLAGS = @as(c_int, 24);
pub const _CS_XBS5_ILP32_OFFBIG_LDFLAGS = @as(c_int, 25);
pub const _CS_XBS5_ILP32_OFFBIG_LIBS = @as(c_int, 26);
pub const _CS_XBS5_ILP32_OFFBIG_LINTFLAGS = @as(c_int, 27);
pub const _CS_XBS5_LP64_OFF64_CFLAGS = @as(c_int, 28);
pub const _CS_XBS5_LP64_OFF64_LDFLAGS = @as(c_int, 29);
pub const _CS_XBS5_LP64_OFF64_LIBS = @as(c_int, 30);
pub const _CS_XBS5_LP64_OFF64_LINTFLAGS = @as(c_int, 31);
pub const _CS_XBS5_LPBIG_OFFBIG_CFLAGS = @as(c_int, 32);
pub const _CS_XBS5_LPBIG_OFFBIG_LDFLAGS = @as(c_int, 33);
pub const _CS_XBS5_LPBIG_OFFBIG_LIBS = @as(c_int, 34);
pub const _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = @as(c_int, 35);
pub const _CS_DARWIN_USER_DIR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65536, .decimal);
pub const _CS_DARWIN_USER_TEMP_DIR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65537, .decimal);
pub const _CS_DARWIN_USER_CACHE_DIR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65538, .decimal);
pub const F_ULOCK = @as(c_int, 0);
pub const F_LOCK = @as(c_int, 1);
pub const F_TLOCK = @as(c_int, 2);
pub const F_TEST = @as(c_int, 3);
pub const _UUID_T = "";
pub const __GETHOSTUUID_H = "";
pub const SYNC_VOLUME_FULLSYNC = @as(c_int, 0x01);
pub const SYNC_VOLUME_WAIT = @as(c_int, 0x02);
pub const _TIME_H_ = "";
pub const CLOCKS_PER_SEC = @import("std").zig.c_translation.cast(clock_t, @import("std").zig.c_translation.promoteIntLiteral(c_int, 1000000, .decimal));
pub const __CLOCK_AVAILABILITY = __OSX_AVAILABLE(@as(f64, 10.12)) ++ __IOS_AVAILABLE(@as(f64, 10.0)) ++ __TVOS_AVAILABLE(@as(f64, 10.0)) ++ __WATCHOS_AVAILABLE(@as(f64, 3.0));
pub const CLOCK_REALTIME = _CLOCK_REALTIME;
pub const CLOCK_MONOTONIC = _CLOCK_MONOTONIC;
pub const CLOCK_MONOTONIC_RAW = _CLOCK_MONOTONIC_RAW;
pub const CLOCK_MONOTONIC_RAW_APPROX = _CLOCK_MONOTONIC_RAW_APPROX;
pub const CLOCK_UPTIME_RAW = _CLOCK_UPTIME_RAW;
pub const CLOCK_UPTIME_RAW_APPROX = _CLOCK_UPTIME_RAW_APPROX;
pub const CLOCK_PROCESS_CPUTIME_ID = _CLOCK_PROCESS_CPUTIME_ID;
pub const CLOCK_THREAD_CPUTIME_ID = _CLOCK_THREAD_CPUTIME_ID;
pub const TIME_UTC = @as(c_int, 1);
pub const ZEND_HRTIME_PLATFORM_POSIX = @as(c_int, 0);
pub const ZEND_HRTIME_PLATFORM_WINDOWS = @as(c_int, 0);
pub const ZEND_HRTIME_PLATFORM_APPLE = @as(c_int, 0);
pub const ZEND_HRTIME_PLATFORM_HPUX = @as(c_int, 0);
pub const ZEND_HRTIME_PLATFORM_AIX = @as(c_int, 0);
pub const ZEND_HRTIME_AVAILABLE = ((((ZEND_HRTIME_PLATFORM_POSIX != 0) or (ZEND_HRTIME_PLATFORM_WINDOWS != 0)) or (ZEND_HRTIME_PLATFORM_APPLE != 0)) or (ZEND_HRTIME_PLATFORM_HPUX != 0)) or (ZEND_HRTIME_PLATFORM_AIX != 0);
pub const _MACH_MACH_TIME_H_ = "";
pub const _MACH_MACH_TYPES_H_ = "";
pub const _MACH_HOST_INFO_H_ = "";
pub const _MACH_MESSAGE_H_ = "";
pub const _MACH_PORT_H_ = "";
pub const _MACH_BOOLEAN_H_ = "";
pub const _MACH_MACHINE_BOOLEAN_H_ = "";
pub const _MACH_ARM_BOOLEAN_H_ = "";
pub const TRUE = @as(c_int, 1);
pub const FALSE = @as(c_int, 0);
pub const _MACH_MACHINE_VM_TYPES_H_ = "";
pub const _MACH_ARM_VM_TYPES_H_ = "";
pub const MACH_MSG_TYPE_INTEGER_T = @compileError("unable to translate macro: undefined identifier `MACH_MSG_TYPE_INTEGER_32`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/vm_types.h:158:9
pub const _MACH_PORT_T = "";
pub const MACH_PORT_NULL = @as(c_int, 0);
pub const MACH_PORT_DEAD = @import("std").zig.c_translation.cast(mach_port_name_t, ~@as(c_int, 0));
pub inline fn MACH_PORT_VALID(name: anytype) @TypeOf((name != MACH_PORT_NULL) and (name != MACH_PORT_DEAD)) {
    _ = &name;
    return (name != MACH_PORT_NULL) and (name != MACH_PORT_DEAD);
}
pub inline fn MACH_PORT_INDEX(name: anytype) @TypeOf(name >> @as(c_int, 8)) {
    _ = &name;
    return name >> @as(c_int, 8);
}
pub inline fn MACH_PORT_GEN(name: anytype) @TypeOf((name & @as(c_int, 0xff)) << @as(c_int, 24)) {
    _ = &name;
    return (name & @as(c_int, 0xff)) << @as(c_int, 24);
}
pub inline fn MACH_PORT_MAKE(index_1: anytype, gen: anytype) @TypeOf((index_1 << @as(c_int, 8)) | (gen >> @as(c_int, 24))) {
    _ = &index_1;
    _ = &gen;
    return (index_1 << @as(c_int, 8)) | (gen >> @as(c_int, 24));
}
pub const MACH_PORT_RIGHT_SEND = @import("std").zig.c_translation.cast(mach_port_right_t, @as(c_int, 0));
pub const MACH_PORT_RIGHT_RECEIVE = @import("std").zig.c_translation.cast(mach_port_right_t, @as(c_int, 1));
pub const MACH_PORT_RIGHT_SEND_ONCE = @import("std").zig.c_translation.cast(mach_port_right_t, @as(c_int, 2));
pub const MACH_PORT_RIGHT_PORT_SET = @import("std").zig.c_translation.cast(mach_port_right_t, @as(c_int, 3));
pub const MACH_PORT_RIGHT_DEAD_NAME = @import("std").zig.c_translation.cast(mach_port_right_t, @as(c_int, 4));
pub const MACH_PORT_RIGHT_LABELH = @import("std").zig.c_translation.cast(mach_port_right_t, @as(c_int, 5));
pub const MACH_PORT_RIGHT_NUMBER = @import("std").zig.c_translation.cast(mach_port_right_t, @as(c_int, 6));
pub inline fn MACH_PORT_TYPE(right: anytype) mach_port_type_t {
    _ = &right;
    return @import("std").zig.c_translation.cast(mach_port_type_t, @import("std").zig.c_translation.cast(mach_port_type_t, @as(c_int, 1)) << (right + @import("std").zig.c_translation.cast(mach_port_right_t, @as(c_int, 16))));
}
pub const MACH_PORT_TYPE_NONE = @import("std").zig.c_translation.cast(mach_port_type_t, @as(c_long, 0));
pub const MACH_PORT_TYPE_SEND = MACH_PORT_TYPE(MACH_PORT_RIGHT_SEND);
pub const MACH_PORT_TYPE_RECEIVE = MACH_PORT_TYPE(MACH_PORT_RIGHT_RECEIVE);
pub const MACH_PORT_TYPE_SEND_ONCE = MACH_PORT_TYPE(MACH_PORT_RIGHT_SEND_ONCE);
pub const MACH_PORT_TYPE_PORT_SET = MACH_PORT_TYPE(MACH_PORT_RIGHT_PORT_SET);
pub const MACH_PORT_TYPE_DEAD_NAME = MACH_PORT_TYPE(MACH_PORT_RIGHT_DEAD_NAME);
pub const MACH_PORT_TYPE_LABELH = MACH_PORT_TYPE(MACH_PORT_RIGHT_LABELH);
pub const MACH_PORT_TYPE_DNREQUEST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub const MACH_PORT_TYPE_SPREQUEST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const MACH_PORT_TYPE_SPREQUEST_DELAYED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const MACH_PORT_TYPE_SEND_RECEIVE = MACH_PORT_TYPE_SEND | MACH_PORT_TYPE_RECEIVE;
pub const MACH_PORT_TYPE_SEND_RIGHTS = MACH_PORT_TYPE_SEND | MACH_PORT_TYPE_SEND_ONCE;
pub const MACH_PORT_TYPE_PORT_RIGHTS = MACH_PORT_TYPE_SEND_RIGHTS | MACH_PORT_TYPE_RECEIVE;
pub const MACH_PORT_TYPE_PORT_OR_DEAD = MACH_PORT_TYPE_PORT_RIGHTS | MACH_PORT_TYPE_DEAD_NAME;
pub const MACH_PORT_TYPE_ALL_RIGHTS = MACH_PORT_TYPE_PORT_OR_DEAD | MACH_PORT_TYPE_PORT_SET;
pub const MACH_PORT_SRIGHTS_NONE = @as(c_int, 0);
pub const MACH_PORT_SRIGHTS_PRESENT = @as(c_int, 1);
pub const MACH_PORT_QLIMIT_ZERO = @as(c_int, 0);
pub const MACH_PORT_QLIMIT_BASIC = @as(c_int, 5);
pub const MACH_PORT_QLIMIT_SMALL = @as(c_int, 16);
pub const MACH_PORT_QLIMIT_LARGE = @as(c_int, 1024);
pub const MACH_PORT_QLIMIT_KERNEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65534, .decimal);
pub const MACH_PORT_QLIMIT_MIN = MACH_PORT_QLIMIT_ZERO;
pub const MACH_PORT_QLIMIT_DEFAULT = MACH_PORT_QLIMIT_BASIC;
pub const MACH_PORT_QLIMIT_MAX = MACH_PORT_QLIMIT_LARGE;
pub const MACH_PORT_STATUS_FLAG_TEMPOWNER = @as(c_int, 0x01);
pub const MACH_PORT_STATUS_FLAG_GUARDED = @as(c_int, 0x02);
pub const MACH_PORT_STATUS_FLAG_STRICT_GUARD = @as(c_int, 0x04);
pub const MACH_PORT_STATUS_FLAG_IMP_DONATION = @as(c_int, 0x08);
pub const MACH_PORT_STATUS_FLAG_REVIVE = @as(c_int, 0x10);
pub const MACH_PORT_STATUS_FLAG_TASKPTR = @as(c_int, 0x20);
pub const MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE = @as(c_int, 0x40);
pub const MACH_PORT_STATUS_FLAG_NO_GRANT = @as(c_int, 0x80);
pub const MACH_PORT_LIMITS_INFO = @as(c_int, 1);
pub const MACH_PORT_RECEIVE_STATUS = @as(c_int, 2);
pub const MACH_PORT_DNREQUESTS_SIZE = @as(c_int, 3);
pub const MACH_PORT_TEMPOWNER = @as(c_int, 4);
pub const MACH_PORT_IMPORTANCE_RECEIVER = @as(c_int, 5);
pub const MACH_PORT_DENAP_RECEIVER = @as(c_int, 6);
pub const MACH_PORT_INFO_EXT = @as(c_int, 7);
pub const MACH_PORT_GUARD_INFO = @as(c_int, 8);
pub const MACH_PORT_SERVICE_THROTTLED = @as(c_int, 9);
pub const MACH_PORT_LIMITS_INFO_COUNT = @import("std").zig.c_translation.cast(natural_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(mach_port_limits_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const MACH_PORT_RECEIVE_STATUS_COUNT = @import("std").zig.c_translation.cast(natural_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(mach_port_status_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const MACH_PORT_DNREQUESTS_SIZE_COUNT = @as(c_int, 1);
pub const MACH_PORT_INFO_EXT_COUNT = @import("std").zig.c_translation.cast(natural_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(mach_port_info_ext_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const MACH_PORT_GUARD_INFO_COUNT = @import("std").zig.c_translation.cast(natural_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(mach_port_guard_info_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const MACH_PORT_SERVICE_THROTTLED_COUNT = @as(c_int, 1);
pub const MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN = @as(c_int, 255);
pub const MACH_SERVICE_PORT_INFO_COUNT = @import("std").zig.c_translation.cast(u8, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(mach_service_port_info_data_t), @import("std").zig.c_translation.sizeof(u8)));
pub const MPO_CONTEXT_AS_GUARD = @as(c_int, 0x01);
pub const MPO_QLIMIT = @as(c_int, 0x02);
pub const MPO_TEMPOWNER = @as(c_int, 0x04);
pub const MPO_IMPORTANCE_RECEIVER = @as(c_int, 0x08);
pub const MPO_INSERT_SEND_RIGHT = @as(c_int, 0x10);
pub const MPO_STRICT = @as(c_int, 0x20);
pub const MPO_DENAP_RECEIVER = @as(c_int, 0x40);
pub const MPO_IMMOVABLE_RECEIVE = @as(c_int, 0x80);
pub const MPO_FILTER_MSG = @as(c_int, 0x100);
pub const MPO_TG_BLOCK_TRACKING = @as(c_int, 0x200);
pub const MPO_SERVICE_PORT = @as(c_int, 0x400);
pub const MPO_CONNECTION_PORT = @as(c_int, 0x800);
pub const MPO_REPLY_PORT = @as(c_int, 0x1000);
pub const MPO_ENFORCE_REPLY_PORT_SEMANTICS = @as(c_int, 0x2000);
pub const MPO_PROVISIONAL_REPLY_PORT = @as(c_int, 0x4000);
pub const MPO_EXCEPTION_PORT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8000, .hex);
pub const GUARD_TYPE_MACH_PORT = @as(c_int, 0x1);
pub const MAX_FATAL_kGUARD_EXC_CODE = kGUARD_EXC_MSG_FILTERED;
pub const MAX_OPTIONAL_kGUARD_EXC_CODE = kGUARD_EXC_RCV_INVALID_NAME;
pub const MPG_FLAGS_NONE = @as(c_ulonglong, 0x00);
pub const MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_DISP = @as(c_ulonglong, 0x01) << @as(c_int, 56);
pub const MPG_FLAGS_STRICT_REPLY_INVALID_REPLY_PORT = @as(c_ulonglong, 0x02) << @as(c_int, 56);
pub const MPG_FLAGS_STRICT_REPLY_INVALID_VOUCHER = @as(c_ulonglong, 0x04) << @as(c_int, 56);
pub const MPG_FLAGS_STRICT_REPLY_NO_BANK_ATTR = @as(c_ulonglong, 0x08) << @as(c_int, 56);
pub const MPG_FLAGS_STRICT_REPLY_MISMATCHED_PERSONA = @as(c_ulonglong, 0x10) << @as(c_int, 56);
pub const MPG_FLAGS_STRICT_REPLY_MASK = @as(c_ulonglong, 0xff) << @as(c_int, 56);
pub const MPG_FLAGS_MOD_REFS_PINNED_DEALLOC = @as(c_ulonglong, 0x01) << @as(c_int, 56);
pub const MPG_FLAGS_MOD_REFS_PINNED_DESTROY = @as(c_ulonglong, 0x02) << @as(c_int, 56);
pub const MPG_FLAGS_MOD_REFS_PINNED_COPYIN = @as(c_ulonglong, 0x04) << @as(c_int, 56);
pub const MPG_FLAGS_IMMOVABLE_PINNED = @as(c_ulonglong, 0x01) << @as(c_int, 56);
pub const MPG_STRICT = @as(c_int, 0x01);
pub const MPG_IMMOVABLE_RECEIVE = @as(c_int, 0x02);
pub const _MACH_KERN_RETURN_H_ = "";
pub const _MACH_MACHINE_KERN_RETURN_H_ = "";
pub const _MACH_ARM_KERN_RETURN_H_ = "";
pub const KERN_SUCCESS = @as(c_int, 0);
pub const KERN_INVALID_ADDRESS = @as(c_int, 1);
pub const KERN_PROTECTION_FAILURE = @as(c_int, 2);
pub const KERN_NO_SPACE = @as(c_int, 3);
pub const KERN_INVALID_ARGUMENT = @as(c_int, 4);
pub const KERN_FAILURE = @as(c_int, 5);
pub const KERN_RESOURCE_SHORTAGE = @as(c_int, 6);
pub const KERN_NOT_RECEIVER = @as(c_int, 7);
pub const KERN_NO_ACCESS = @as(c_int, 8);
pub const KERN_MEMORY_FAILURE = @as(c_int, 9);
pub const KERN_MEMORY_ERROR = @as(c_int, 10);
pub const KERN_ALREADY_IN_SET = @as(c_int, 11);
pub const KERN_NOT_IN_SET = @as(c_int, 12);
pub const KERN_NAME_EXISTS = @as(c_int, 13);
pub const KERN_ABORTED = @as(c_int, 14);
pub const KERN_INVALID_NAME = @as(c_int, 15);
pub const KERN_INVALID_TASK = @as(c_int, 16);
pub const KERN_INVALID_RIGHT = @as(c_int, 17);
pub const KERN_INVALID_VALUE = @as(c_int, 18);
pub const KERN_UREFS_OVERFLOW = @as(c_int, 19);
pub const KERN_INVALID_CAPABILITY = @as(c_int, 20);
pub const KERN_RIGHT_EXISTS = @as(c_int, 21);
pub const KERN_INVALID_HOST = @as(c_int, 22);
pub const KERN_MEMORY_PRESENT = @as(c_int, 23);
pub const KERN_MEMORY_DATA_MOVED = @as(c_int, 24);
pub const KERN_MEMORY_RESTART_COPY = @as(c_int, 25);
pub const KERN_INVALID_PROCESSOR_SET = @as(c_int, 26);
pub const KERN_POLICY_LIMIT = @as(c_int, 27);
pub const KERN_INVALID_POLICY = @as(c_int, 28);
pub const KERN_INVALID_OBJECT = @as(c_int, 29);
pub const KERN_ALREADY_WAITING = @as(c_int, 30);
pub const KERN_DEFAULT_SET = @as(c_int, 31);
pub const KERN_EXCEPTION_PROTECTED = @as(c_int, 32);
pub const KERN_INVALID_LEDGER = @as(c_int, 33);
pub const KERN_INVALID_MEMORY_CONTROL = @as(c_int, 34);
pub const KERN_INVALID_SECURITY = @as(c_int, 35);
pub const KERN_NOT_DEPRESSED = @as(c_int, 36);
pub const KERN_TERMINATED = @as(c_int, 37);
pub const KERN_LOCK_SET_DESTROYED = @as(c_int, 38);
pub const KERN_LOCK_UNSTABLE = @as(c_int, 39);
pub const KERN_LOCK_OWNED = @as(c_int, 40);
pub const KERN_LOCK_OWNED_SELF = @as(c_int, 41);
pub const KERN_SEMAPHORE_DESTROYED = @as(c_int, 42);
pub const KERN_RPC_SERVER_TERMINATED = @as(c_int, 43);
pub const KERN_RPC_TERMINATE_ORPHAN = @as(c_int, 44);
pub const KERN_RPC_CONTINUE_ORPHAN = @as(c_int, 45);
pub const KERN_NOT_SUPPORTED = @as(c_int, 46);
pub const KERN_NODE_DOWN = @as(c_int, 47);
pub const KERN_NOT_WAITING = @as(c_int, 48);
pub const KERN_OPERATION_TIMED_OUT = @as(c_int, 49);
pub const KERN_CODESIGN_ERROR = @as(c_int, 50);
pub const KERN_POLICY_STATIC = @as(c_int, 51);
pub const KERN_INSUFFICIENT_BUFFER_SIZE = @as(c_int, 52);
pub const KERN_DENIED = @as(c_int, 53);
pub const KERN_MISSING_KC = @as(c_int, 54);
pub const KERN_INVALID_KC = @as(c_int, 55);
pub const KERN_NOT_FOUND = @as(c_int, 56);
pub const KERN_RETURN_MAX = @as(c_int, 0x100);
pub const MACH_MSG_TIMEOUT_NONE = @import("std").zig.c_translation.cast(mach_msg_timeout_t, @as(c_int, 0));
pub const MACH_MSGH_BITS_ZERO = @as(c_int, 0x00000000);
pub const MACH_MSGH_BITS_REMOTE_MASK = @as(c_int, 0x0000001f);
pub const MACH_MSGH_BITS_LOCAL_MASK = @as(c_int, 0x00001f00);
pub const MACH_MSGH_BITS_VOUCHER_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x001f0000, .hex);
pub const MACH_MSGH_BITS_PORTS_MASK = (MACH_MSGH_BITS_REMOTE_MASK | MACH_MSGH_BITS_LOCAL_MASK) | MACH_MSGH_BITS_VOUCHER_MASK;
pub const MACH_MSGH_BITS_COMPLEX = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x80000000, .hex);
pub const MACH_MSGH_BITS_USER = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x801f1f1f, .hex);
pub const MACH_MSGH_BITS_RAISEIMP = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x20000000, .hex);
pub const MACH_MSGH_BITS_DENAP = MACH_MSGH_BITS_RAISEIMP;
pub const MACH_MSGH_BITS_IMPHOLDASRT = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x10000000, .hex);
pub const MACH_MSGH_BITS_DENAPHOLDASRT = MACH_MSGH_BITS_IMPHOLDASRT;
pub const MACH_MSGH_BITS_CIRCULAR = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0x10000000, .hex);
pub const MACH_MSGH_BITS_USED = @import("std").zig.c_translation.promoteIntLiteral(c_uint, 0xb01f1f1f, .hex);
pub inline fn MACH_MSGH_BITS(remote: anytype, local: anytype) @TypeOf(remote | (local << @as(c_int, 8))) {
    _ = &remote;
    _ = &local;
    return remote | (local << @as(c_int, 8));
}
pub inline fn MACH_MSGH_BITS_SET_PORTS(remote: anytype, local: anytype, voucher: anytype) @TypeOf(((remote & MACH_MSGH_BITS_REMOTE_MASK) | ((local << @as(c_int, 8)) & MACH_MSGH_BITS_LOCAL_MASK)) | ((voucher << @as(c_int, 16)) & MACH_MSGH_BITS_VOUCHER_MASK)) {
    _ = &remote;
    _ = &local;
    _ = &voucher;
    return ((remote & MACH_MSGH_BITS_REMOTE_MASK) | ((local << @as(c_int, 8)) & MACH_MSGH_BITS_LOCAL_MASK)) | ((voucher << @as(c_int, 16)) & MACH_MSGH_BITS_VOUCHER_MASK);
}
pub inline fn MACH_MSGH_BITS_SET(remote: anytype, local: anytype, voucher: anytype, other: anytype) @TypeOf(MACH_MSGH_BITS_SET_PORTS(remote, local, voucher) | (other & ~MACH_MSGH_BITS_PORTS_MASK)) {
    _ = &remote;
    _ = &local;
    _ = &voucher;
    _ = &other;
    return MACH_MSGH_BITS_SET_PORTS(remote, local, voucher) | (other & ~MACH_MSGH_BITS_PORTS_MASK);
}
pub inline fn MACH_MSGH_BITS_REMOTE(bits: anytype) @TypeOf(bits & MACH_MSGH_BITS_REMOTE_MASK) {
    _ = &bits;
    return bits & MACH_MSGH_BITS_REMOTE_MASK;
}
pub inline fn MACH_MSGH_BITS_LOCAL(bits: anytype) @TypeOf((bits & MACH_MSGH_BITS_LOCAL_MASK) >> @as(c_int, 8)) {
    _ = &bits;
    return (bits & MACH_MSGH_BITS_LOCAL_MASK) >> @as(c_int, 8);
}
pub inline fn MACH_MSGH_BITS_VOUCHER(bits: anytype) @TypeOf((bits & MACH_MSGH_BITS_VOUCHER_MASK) >> @as(c_int, 16)) {
    _ = &bits;
    return (bits & MACH_MSGH_BITS_VOUCHER_MASK) >> @as(c_int, 16);
}
pub inline fn MACH_MSGH_BITS_PORTS(bits: anytype) @TypeOf(bits & MACH_MSGH_BITS_PORTS_MASK) {
    _ = &bits;
    return bits & MACH_MSGH_BITS_PORTS_MASK;
}
pub inline fn MACH_MSGH_BITS_OTHER(bits: anytype) @TypeOf(bits & ~MACH_MSGH_BITS_PORTS_MASK) {
    _ = &bits;
    return bits & ~MACH_MSGH_BITS_PORTS_MASK;
}
pub inline fn MACH_MSGH_BITS_HAS_REMOTE(bits: anytype) @TypeOf(MACH_MSGH_BITS_REMOTE(bits) != MACH_MSGH_BITS_ZERO) {
    _ = &bits;
    return MACH_MSGH_BITS_REMOTE(bits) != MACH_MSGH_BITS_ZERO;
}
pub inline fn MACH_MSGH_BITS_HAS_LOCAL(bits: anytype) @TypeOf(MACH_MSGH_BITS_LOCAL(bits) != MACH_MSGH_BITS_ZERO) {
    _ = &bits;
    return MACH_MSGH_BITS_LOCAL(bits) != MACH_MSGH_BITS_ZERO;
}
pub inline fn MACH_MSGH_BITS_HAS_VOUCHER(bits: anytype) @TypeOf(MACH_MSGH_BITS_VOUCHER(bits) != MACH_MSGH_BITS_ZERO) {
    _ = &bits;
    return MACH_MSGH_BITS_VOUCHER(bits) != MACH_MSGH_BITS_ZERO;
}
pub inline fn MACH_MSGH_BITS_IS_COMPLEX(bits: anytype) @TypeOf((bits & MACH_MSGH_BITS_COMPLEX) != MACH_MSGH_BITS_ZERO) {
    _ = &bits;
    return (bits & MACH_MSGH_BITS_COMPLEX) != MACH_MSGH_BITS_ZERO;
}
pub inline fn MACH_MSGH_BITS_RAISED_IMPORTANCE(bits: anytype) @TypeOf((bits & MACH_MSGH_BITS_RAISEIMP) != MACH_MSGH_BITS_ZERO) {
    _ = &bits;
    return (bits & MACH_MSGH_BITS_RAISEIMP) != MACH_MSGH_BITS_ZERO;
}
pub inline fn MACH_MSGH_BITS_HOLDS_IMPORTANCE_ASSERTION(bits: anytype) @TypeOf((bits & MACH_MSGH_BITS_IMPHOLDASRT) != MACH_MSGH_BITS_ZERO) {
    _ = &bits;
    return (bits & MACH_MSGH_BITS_IMPHOLDASRT) != MACH_MSGH_BITS_ZERO;
}
pub const MACH_MSG_SIZE_NULL = @import("std").zig.c_translation.cast([*c]mach_msg_size_t, @as(c_int, 0));
pub const MACH_MSG_PRIORITY_UNSPECIFIED = @import("std").zig.c_translation.cast(mach_msg_priority_t, @as(c_int, 0));
pub const MACH_MSG_TYPE_MOVE_RECEIVE = @as(c_int, 16);
pub const MACH_MSG_TYPE_MOVE_SEND = @as(c_int, 17);
pub const MACH_MSG_TYPE_MOVE_SEND_ONCE = @as(c_int, 18);
pub const MACH_MSG_TYPE_COPY_SEND = @as(c_int, 19);
pub const MACH_MSG_TYPE_MAKE_SEND = @as(c_int, 20);
pub const MACH_MSG_TYPE_MAKE_SEND_ONCE = @as(c_int, 21);
pub const MACH_MSG_TYPE_COPY_RECEIVE = @as(c_int, 22);
pub const MACH_MSG_TYPE_DISPOSE_RECEIVE = @as(c_int, 24);
pub const MACH_MSG_TYPE_DISPOSE_SEND = @as(c_int, 25);
pub const MACH_MSG_TYPE_DISPOSE_SEND_ONCE = @as(c_int, 26);
pub const MACH_MSG_PHYSICAL_COPY = @as(c_int, 0);
pub const MACH_MSG_VIRTUAL_COPY = @as(c_int, 1);
pub const MACH_MSG_ALLOCATE = @as(c_int, 2);
pub const MACH_MSG_OVERWRITE = @as(c_int, 3);
pub const MACH_MSG_GUARD_FLAGS_NONE = @as(c_int, 0x0000);
pub const MACH_MSG_GUARD_FLAGS_IMMOVABLE_RECEIVE = @as(c_int, 0x0001);
pub const MACH_MSG_GUARD_FLAGS_UNGUARDED_ON_SEND = @as(c_int, 0x0002);
pub const MACH_MSG_GUARD_FLAGS_MASK = @as(c_int, 0x0003);
pub const MACH_MSG_PORT_DESCRIPTOR = @as(c_int, 0);
pub const MACH_MSG_OOL_DESCRIPTOR = @as(c_int, 1);
pub const MACH_MSG_OOL_PORTS_DESCRIPTOR = @as(c_int, 2);
pub const MACH_MSG_OOL_VOLATILE_DESCRIPTOR = @as(c_int, 3);
pub const MACH_MSG_GUARDED_PORT_DESCRIPTOR = @as(c_int, 4);
pub const MACH_MSG_DESCRIPTOR_MAX = MACH_MSG_GUARDED_PORT_DESCRIPTOR;
pub const __ipc_desc_sign = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:289:9
pub const MACH_MSG_BODY_NULL = @import("std").zig.c_translation.cast([*c]mach_msg_body_t, @as(c_int, 0));
pub const MACH_MSG_DESCRIPTOR_NULL = @import("std").zig.c_translation.cast([*c]mach_msg_descriptor_t, @as(c_int, 0));
pub const msgh_reserved = @compileError("unable to translate macro: undefined identifier `msgh_voucher_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:432:9
pub const MACH_MSG_NULL = @import("std").zig.c_translation.cast([*c]mach_msg_header_t, @as(c_int, 0));
pub const MACH_MSG_TRAILER_FORMAT_0 = @as(c_int, 0);
pub const INVALID_AUDIT_TOKEN_VALUE = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:504:9
pub const MACH_MSG_FILTER_POLICY_ALLOW = @import("std").zig.c_translation.cast(mach_msg_filter_id, @as(c_int, 0));
pub const MACH_MSG_TRAILER_MINIMUM_SIZE = @import("std").zig.c_translation.sizeof(mach_msg_trailer_t);
pub const MAX_TRAILER_SIZE = @import("std").zig.c_translation.cast(mach_msg_size_t, @import("std").zig.c_translation.sizeof(mach_msg_max_trailer_t));
pub const MACH_MSG_TRAILER_FORMAT_0_SIZE = @import("std").zig.c_translation.sizeof(mach_msg_format_0_trailer_t);
pub const KERNEL_SECURITY_TOKEN_VALUE = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:580:11
pub const KERNEL_AUDIT_TOKEN_VALUE = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:583:11
pub const MACH_MSG_HEADER_EMPTY = @compileError("unable to translate C expr: unexpected token '}'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:588:9
pub inline fn round_msg(x: anytype) @TypeOf(((@import("std").zig.c_translation.cast(mach_msg_size_t, x) + @import("std").zig.c_translation.sizeof(natural_t)) - @as(c_int, 1)) & ~(@import("std").zig.c_translation.sizeof(natural_t) - @as(c_int, 1))) {
    _ = &x;
    return ((@import("std").zig.c_translation.cast(mach_msg_size_t, x) + @import("std").zig.c_translation.sizeof(natural_t)) - @as(c_int, 1)) & ~(@import("std").zig.c_translation.sizeof(natural_t) - @as(c_int, 1));
}
pub const MACH_MSG_SIZE_MAX = @import("std").zig.c_translation.cast(mach_msg_size_t, ~@as(c_int, 0));
pub const MACH_MSG_SIZE_RELIABLE = @import("std").zig.c_translation.cast(mach_msg_size_t, @as(c_int, 256)) * @as(c_int, 1024);
pub const MACH_MSGH_KIND_NORMAL = @as(c_int, 0x00000000);
pub const MACH_MSGH_KIND_NOTIFICATION = @as(c_int, 0x00000001);
pub const msgh_kind = @compileError("unable to translate macro: undefined identifier `msgh_seqno`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/message.h:633:9
pub const mach_msg_kind_t = mach_port_seqno_t;
pub const MACH_MSG_TYPE_PORT_NONE = @as(c_int, 0);
pub const MACH_MSG_TYPE_PORT_NAME = @as(c_int, 15);
pub const MACH_MSG_TYPE_PORT_RECEIVE = MACH_MSG_TYPE_MOVE_RECEIVE;
pub const MACH_MSG_TYPE_PORT_SEND = MACH_MSG_TYPE_MOVE_SEND;
pub const MACH_MSG_TYPE_PORT_SEND_ONCE = MACH_MSG_TYPE_MOVE_SEND_ONCE;
pub const MACH_MSG_TYPE_LAST = @as(c_int, 22);
pub const MACH_MSG_TYPE_POLYMORPHIC = @import("std").zig.c_translation.cast(mach_msg_type_name_t, -@as(c_int, 1));
pub inline fn MACH_MSG_TYPE_PORT_ANY(x: anytype) @TypeOf((x >= MACH_MSG_TYPE_MOVE_RECEIVE) and (x <= MACH_MSG_TYPE_MAKE_SEND_ONCE)) {
    _ = &x;
    return (x >= MACH_MSG_TYPE_MOVE_RECEIVE) and (x <= MACH_MSG_TYPE_MAKE_SEND_ONCE);
}
pub inline fn MACH_MSG_TYPE_PORT_ANY_SEND(x: anytype) @TypeOf((x >= MACH_MSG_TYPE_MOVE_SEND) and (x <= MACH_MSG_TYPE_MAKE_SEND_ONCE)) {
    _ = &x;
    return (x >= MACH_MSG_TYPE_MOVE_SEND) and (x <= MACH_MSG_TYPE_MAKE_SEND_ONCE);
}
pub inline fn MACH_MSG_TYPE_PORT_ANY_SEND_ONCE(x: anytype) @TypeOf((x == MACH_MSG_TYPE_MOVE_SEND_ONCE) or (x == MACH_MSG_TYPE_MAKE_SEND_ONCE)) {
    _ = &x;
    return (x == MACH_MSG_TYPE_MOVE_SEND_ONCE) or (x == MACH_MSG_TYPE_MAKE_SEND_ONCE);
}
pub inline fn MACH_MSG_TYPE_PORT_ANY_RIGHT(x: anytype) @TypeOf((x >= MACH_MSG_TYPE_MOVE_RECEIVE) and (x <= MACH_MSG_TYPE_MOVE_SEND_ONCE)) {
    _ = &x;
    return (x >= MACH_MSG_TYPE_MOVE_RECEIVE) and (x <= MACH_MSG_TYPE_MOVE_SEND_ONCE);
}
pub const MACH_MSG_OPTION_NONE = @as(c_int, 0x00000000);
pub const MACH_SEND_MSG = @as(c_int, 0x00000001);
pub const MACH_RCV_MSG = @as(c_int, 0x00000002);
pub const MACH_RCV_LARGE = @as(c_int, 0x00000004);
pub const MACH_RCV_LARGE_IDENTITY = @as(c_int, 0x00000008);
pub const MACH_SEND_TIMEOUT = @as(c_int, 0x00000010);
pub const MACH_SEND_OVERRIDE = @as(c_int, 0x00000020);
pub const MACH_SEND_INTERRUPT = @as(c_int, 0x00000040);
pub const MACH_SEND_NOTIFY = @as(c_int, 0x00000080);
pub const MACH_SEND_ALWAYS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const MACH_SEND_FILTER_NONFATAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const MACH_SEND_TRAILER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020000, .hex);
pub const MACH_SEND_NOIMPORTANCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040000, .hex);
pub const MACH_SEND_NODENAP = MACH_SEND_NOIMPORTANCE;
pub const MACH_SEND_IMPORTANCE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00080000, .hex);
pub const MACH_SEND_SYNC_OVERRIDE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00100000, .hex);
pub const MACH_SEND_PROPAGATE_QOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00200000, .hex);
pub const MACH_SEND_SYNC_USE_THRPRI = MACH_SEND_PROPAGATE_QOS;
pub const MACH_SEND_KERNEL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00400000, .hex);
pub const MACH_SEND_SYNC_BOOTSTRAP_CHECKIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00800000, .hex);
pub const MACH_RCV_TIMEOUT = @as(c_int, 0x00000100);
pub const MACH_RCV_NOTIFY = @as(c_int, 0x00000000);
pub const MACH_RCV_INTERRUPT = @as(c_int, 0x00000400);
pub const MACH_RCV_VOUCHER = @as(c_int, 0x00000800);
pub const MACH_RCV_OVERWRITE = @as(c_int, 0x00000000);
pub const MACH_RCV_GUARDED_DESC = @as(c_int, 0x00001000);
pub const MACH_RCV_SYNC_WAIT = @as(c_int, 0x00004000);
pub const MACH_RCV_SYNC_PEEK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00008000, .hex);
pub const MACH_MSG_STRICT_REPLY = @as(c_int, 0x00000200);
pub const MACH_RCV_TRAILER_NULL = @as(c_int, 0);
pub const MACH_RCV_TRAILER_SEQNO = @as(c_int, 1);
pub const MACH_RCV_TRAILER_SENDER = @as(c_int, 2);
pub const MACH_RCV_TRAILER_AUDIT = @as(c_int, 3);
pub const MACH_RCV_TRAILER_CTX = @as(c_int, 4);
pub const MACH_RCV_TRAILER_AV = @as(c_int, 7);
pub const MACH_RCV_TRAILER_LABELS = @as(c_int, 8);
pub inline fn MACH_RCV_TRAILER_TYPE(x: anytype) @TypeOf((x & @as(c_int, 0xf)) << @as(c_int, 28)) {
    _ = &x;
    return (x & @as(c_int, 0xf)) << @as(c_int, 28);
}
pub inline fn MACH_RCV_TRAILER_ELEMENTS(x: anytype) @TypeOf((x & @as(c_int, 0xf)) << @as(c_int, 24)) {
    _ = &x;
    return (x & @as(c_int, 0xf)) << @as(c_int, 24);
}
pub const MACH_RCV_TRAILER_MASK = @as(c_int, 0xf) << @as(c_int, 24);
pub inline fn GET_RCV_ELEMENTS(y: anytype) @TypeOf((y >> @as(c_int, 24)) & @as(c_int, 0xf)) {
    _ = &y;
    return (y >> @as(c_int, 24)) & @as(c_int, 0xf);
}
pub inline fn REQUESTED_TRAILER_SIZE_NATIVE(y: anytype) mach_msg_trailer_size_t {
    _ = &y;
    return @import("std").zig.c_translation.cast(mach_msg_trailer_size_t, if (GET_RCV_ELEMENTS(y) == MACH_RCV_TRAILER_NULL) @import("std").zig.c_translation.sizeof(mach_msg_trailer_t) else if (GET_RCV_ELEMENTS(y) == MACH_RCV_TRAILER_SEQNO) @import("std").zig.c_translation.sizeof(mach_msg_seqno_trailer_t) else if (GET_RCV_ELEMENTS(y) == MACH_RCV_TRAILER_SENDER) @import("std").zig.c_translation.sizeof(mach_msg_security_trailer_t) else if (GET_RCV_ELEMENTS(y) == MACH_RCV_TRAILER_AUDIT) @import("std").zig.c_translation.sizeof(mach_msg_audit_trailer_t) else if (GET_RCV_ELEMENTS(y) == MACH_RCV_TRAILER_CTX) @import("std").zig.c_translation.sizeof(mach_msg_context_trailer_t) else if (GET_RCV_ELEMENTS(y) == MACH_RCV_TRAILER_AV) @import("std").zig.c_translation.sizeof(mach_msg_mac_trailer_t) else @import("std").zig.c_translation.sizeof(mach_msg_max_trailer_t));
}
pub inline fn REQUESTED_TRAILER_SIZE(y: anytype) @TypeOf(REQUESTED_TRAILER_SIZE_NATIVE(y)) {
    _ = &y;
    return REQUESTED_TRAILER_SIZE_NATIVE(y);
}
pub const MACH_MSG_SUCCESS = @as(c_int, 0x00000000);
pub const MACH_MSG_MASK = @as(c_int, 0x00003e00);
pub const MACH_MSG_IPC_SPACE = @as(c_int, 0x00002000);
pub const MACH_MSG_VM_SPACE = @as(c_int, 0x00001000);
pub const MACH_MSG_IPC_KERNEL = @as(c_int, 0x00000800);
pub const MACH_MSG_VM_KERNEL = @as(c_int, 0x00000400);
pub const MACH_SEND_IN_PROGRESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000001, .hex);
pub const MACH_SEND_INVALID_DATA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000002, .hex);
pub const MACH_SEND_INVALID_DEST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000003, .hex);
pub const MACH_SEND_TIMED_OUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000004, .hex);
pub const MACH_SEND_INVALID_VOUCHER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000005, .hex);
pub const MACH_SEND_INTERRUPTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000007, .hex);
pub const MACH_SEND_MSG_TOO_SMALL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000008, .hex);
pub const MACH_SEND_INVALID_REPLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000009, .hex);
pub const MACH_SEND_INVALID_RIGHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000000a, .hex);
pub const MACH_SEND_INVALID_NOTIFY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000000b, .hex);
pub const MACH_SEND_INVALID_MEMORY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000000c, .hex);
pub const MACH_SEND_NO_BUFFER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000000d, .hex);
pub const MACH_SEND_TOO_LARGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000000e, .hex);
pub const MACH_SEND_INVALID_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000000f, .hex);
pub const MACH_SEND_INVALID_HEADER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000010, .hex);
pub const MACH_SEND_INVALID_TRAILER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000011, .hex);
pub const MACH_SEND_INVALID_CONTEXT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000012, .hex);
pub const MACH_SEND_INVALID_OPTIONS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000013, .hex);
pub const MACH_SEND_INVALID_RT_OOL_SIZE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000015, .hex);
pub const MACH_SEND_NO_GRANT_DEST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000016, .hex);
pub const MACH_SEND_MSG_FILTERED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000017, .hex);
pub const MACH_SEND_AUX_TOO_SMALL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000018, .hex);
pub const MACH_SEND_AUX_TOO_LARGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000019, .hex);
pub const MACH_RCV_IN_PROGRESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004001, .hex);
pub const MACH_RCV_INVALID_NAME = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004002, .hex);
pub const MACH_RCV_TIMED_OUT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004003, .hex);
pub const MACH_RCV_TOO_LARGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004004, .hex);
pub const MACH_RCV_INTERRUPTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004005, .hex);
pub const MACH_RCV_PORT_CHANGED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004006, .hex);
pub const MACH_RCV_INVALID_NOTIFY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004007, .hex);
pub const MACH_RCV_INVALID_DATA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004008, .hex);
pub const MACH_RCV_PORT_DIED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004009, .hex);
pub const MACH_RCV_IN_SET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000400a, .hex);
pub const MACH_RCV_HEADER_ERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000400b, .hex);
pub const MACH_RCV_BODY_ERROR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000400c, .hex);
pub const MACH_RCV_INVALID_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000400d, .hex);
pub const MACH_RCV_SCATTER_SMALL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000400e, .hex);
pub const MACH_RCV_INVALID_TRAILER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000400f, .hex);
pub const MACH_RCV_IN_PROGRESS_TIMED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004011, .hex);
pub const MACH_RCV_INVALID_REPLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004012, .hex);
pub const MACH_RCV_INVALID_ARGUMENTS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10004013, .hex);
pub const _MACH_VM_STATISTICS_H_ = "";
pub inline fn VM_STATISTICS_TRUNCATE_TO_32_BIT(value: anytype) u32 {
    _ = &value;
    return @import("std").zig.c_translation.cast(u32, if (value > UINT32_MAX) UINT32_MAX else value);
}
pub const VM_PAGE_QUERY_PAGE_PRESENT = @as(c_int, 0x1);
pub const VM_PAGE_QUERY_PAGE_FICTITIOUS = @as(c_int, 0x2);
pub const VM_PAGE_QUERY_PAGE_REF = @as(c_int, 0x4);
pub const VM_PAGE_QUERY_PAGE_DIRTY = @as(c_int, 0x8);
pub const VM_PAGE_QUERY_PAGE_PAGED_OUT = @as(c_int, 0x10);
pub const VM_PAGE_QUERY_PAGE_COPIED = @as(c_int, 0x20);
pub const VM_PAGE_QUERY_PAGE_SPECULATIVE = @as(c_int, 0x40);
pub const VM_PAGE_QUERY_PAGE_EXTERNAL = @as(c_int, 0x80);
pub const VM_PAGE_QUERY_PAGE_CS_VALIDATED = @as(c_int, 0x100);
pub const VM_PAGE_QUERY_PAGE_CS_TAINTED = @as(c_int, 0x200);
pub const VM_PAGE_QUERY_PAGE_CS_NX = @as(c_int, 0x400);
pub const VM_PAGE_QUERY_PAGE_REUSABLE = @as(c_int, 0x800);
pub const VM_FLAGS_FIXED = @as(c_int, 0x00000000);
pub const VM_FLAGS_ANYWHERE = @as(c_int, 0x00000001);
pub const VM_FLAGS_PURGABLE = @as(c_int, 0x00000002);
pub const VM_FLAGS_4GB_CHUNK = @as(c_int, 0x00000004);
pub const VM_FLAGS_RANDOM_ADDR = @as(c_int, 0x00000008);
pub const VM_FLAGS_NO_CACHE = @as(c_int, 0x00000010);
pub const VM_FLAGS_RESILIENT_CODESIGN = @as(c_int, 0x00000020);
pub const VM_FLAGS_RESILIENT_MEDIA = @as(c_int, 0x00000040);
pub const VM_FLAGS_PERMANENT = @as(c_int, 0x00000080);
pub const VM_FLAGS_TPRO = @as(c_int, 0x00001000);
pub const VM_FLAGS_OVERWRITE = @as(c_int, 0x00004000);
pub const VM_FLAGS_SUPERPAGE_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00070000, .hex);
pub const VM_FLAGS_RETURN_DATA_ADDR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00100000, .hex);
pub const VM_FLAGS_RETURN_4K_DATA_ADDR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00800000, .hex);
pub const VM_FLAGS_ALIAS_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xFF000000, .hex);
pub const VM_GET_FLAGS_ALIAS = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/vm_statistics.h:287:9
pub const VM_SET_FLAGS_ALIAS = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/vm_statistics.h:289:9
pub const VM_FLAGS_HW = VM_FLAGS_TPRO;
pub const VM_FLAGS_USER_ALLOCATE = (((((((((VM_FLAGS_FIXED | VM_FLAGS_ANYWHERE) | VM_FLAGS_PURGABLE) | VM_FLAGS_4GB_CHUNK) | VM_FLAGS_RANDOM_ADDR) | VM_FLAGS_NO_CACHE) | VM_FLAGS_PERMANENT) | VM_FLAGS_OVERWRITE) | VM_FLAGS_SUPERPAGE_MASK) | VM_FLAGS_HW) | VM_FLAGS_ALIAS_MASK;
pub const VM_FLAGS_USER_MAP = (VM_FLAGS_USER_ALLOCATE | VM_FLAGS_RETURN_4K_DATA_ADDR) | VM_FLAGS_RETURN_DATA_ADDR;
pub const VM_FLAGS_USER_REMAP = (((((VM_FLAGS_FIXED | VM_FLAGS_ANYWHERE) | VM_FLAGS_RANDOM_ADDR) | VM_FLAGS_OVERWRITE) | VM_FLAGS_RETURN_DATA_ADDR) | VM_FLAGS_RESILIENT_CODESIGN) | VM_FLAGS_RESILIENT_MEDIA;
pub const VM_FLAGS_SUPERPAGE_SHIFT = @as(c_int, 16);
pub const SUPERPAGE_NONE = @as(c_int, 0);
pub const SUPERPAGE_SIZE_ANY = @as(c_int, 1);
pub const VM_FLAGS_SUPERPAGE_NONE = SUPERPAGE_NONE << VM_FLAGS_SUPERPAGE_SHIFT;
pub const VM_FLAGS_SUPERPAGE_SIZE_ANY = SUPERPAGE_SIZE_ANY << VM_FLAGS_SUPERPAGE_SHIFT;
pub const SUPERPAGE_SIZE_2MB = @as(c_int, 2);
pub const VM_FLAGS_SUPERPAGE_SIZE_2MB = SUPERPAGE_SIZE_2MB << VM_FLAGS_SUPERPAGE_SHIFT;
pub const GUARD_TYPE_VIRT_MEMORY = @as(c_int, 0x5);
pub const __VM_LEDGER_ACCOUNTING_POSTMARK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 2019032600, .decimal);
pub const VM_LEDGER_TAG_NONE = @as(c_int, 0x00000000);
pub const VM_LEDGER_TAG_DEFAULT = @as(c_int, 0x00000001);
pub const VM_LEDGER_TAG_NETWORK = @as(c_int, 0x00000002);
pub const VM_LEDGER_TAG_MEDIA = @as(c_int, 0x00000003);
pub const VM_LEDGER_TAG_GRAPHICS = @as(c_int, 0x00000004);
pub const VM_LEDGER_TAG_NEURAL = @as(c_int, 0x00000005);
pub const VM_LEDGER_TAG_MAX = @as(c_int, 0x00000005);
pub const VM_LEDGER_TAG_UNCHANGED = @import("std").zig.c_translation.cast(c_int, -@as(c_int, 1));
pub const VM_LEDGER_FLAG_NO_FOOTPRINT = @as(c_int, 1) << @as(c_int, 0);
pub const VM_LEDGER_FLAG_NO_FOOTPRINT_FOR_DEBUG = @as(c_int, 1) << @as(c_int, 1);
pub const VM_LEDGER_FLAG_FROM_KERNEL = @as(c_int, 1) << @as(c_int, 2);
pub const VM_LEDGER_FLAGS_USER = VM_LEDGER_FLAG_NO_FOOTPRINT | VM_LEDGER_FLAG_NO_FOOTPRINT_FOR_DEBUG;
pub const VM_LEDGER_FLAGS_ALL = VM_LEDGER_FLAGS_USER | VM_LEDGER_FLAG_FROM_KERNEL;
pub const VM_MEMORY_MALLOC = @as(c_int, 1);
pub const VM_MEMORY_MALLOC_SMALL = @as(c_int, 2);
pub const VM_MEMORY_MALLOC_LARGE = @as(c_int, 3);
pub const VM_MEMORY_MALLOC_HUGE = @as(c_int, 4);
pub const VM_MEMORY_SBRK = @as(c_int, 5);
pub const VM_MEMORY_REALLOC = @as(c_int, 6);
pub const VM_MEMORY_MALLOC_TINY = @as(c_int, 7);
pub const VM_MEMORY_MALLOC_LARGE_REUSABLE = @as(c_int, 8);
pub const VM_MEMORY_MALLOC_LARGE_REUSED = @as(c_int, 9);
pub const VM_MEMORY_ANALYSIS_TOOL = @as(c_int, 10);
pub const VM_MEMORY_MALLOC_NANO = @as(c_int, 11);
pub const VM_MEMORY_MALLOC_MEDIUM = @as(c_int, 12);
pub const VM_MEMORY_MALLOC_PROB_GUARD = @as(c_int, 13);
pub const VM_MEMORY_MACH_MSG = @as(c_int, 20);
pub const VM_MEMORY_IOKIT = @as(c_int, 21);
pub const VM_MEMORY_STACK = @as(c_int, 30);
pub const VM_MEMORY_GUARD = @as(c_int, 31);
pub const VM_MEMORY_SHARED_PMAP = @as(c_int, 32);
pub const VM_MEMORY_DYLIB = @as(c_int, 33);
pub const VM_MEMORY_OBJC_DISPATCHERS = @as(c_int, 34);
pub const VM_MEMORY_UNSHARED_PMAP = @as(c_int, 35);
pub const VM_MEMORY_APPKIT = @as(c_int, 40);
pub const VM_MEMORY_FOUNDATION = @as(c_int, 41);
pub const VM_MEMORY_COREGRAPHICS = @as(c_int, 42);
pub const VM_MEMORY_CORESERVICES = @as(c_int, 43);
pub const VM_MEMORY_CARBON = VM_MEMORY_CORESERVICES;
pub const VM_MEMORY_JAVA = @as(c_int, 44);
pub const VM_MEMORY_COREDATA = @as(c_int, 45);
pub const VM_MEMORY_COREDATA_OBJECTIDS = @as(c_int, 46);
pub const VM_MEMORY_ATS = @as(c_int, 50);
pub const VM_MEMORY_LAYERKIT = @as(c_int, 51);
pub const VM_MEMORY_CGIMAGE = @as(c_int, 52);
pub const VM_MEMORY_TCMALLOC = @as(c_int, 53);
pub const VM_MEMORY_COREGRAPHICS_DATA = @as(c_int, 54);
pub const VM_MEMORY_COREGRAPHICS_SHARED = @as(c_int, 55);
pub const VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS = @as(c_int, 56);
pub const VM_MEMORY_COREGRAPHICS_BACKINGSTORES = @as(c_int, 57);
pub const VM_MEMORY_COREGRAPHICS_XALLOC = @as(c_int, 58);
pub const VM_MEMORY_COREGRAPHICS_MISC = VM_MEMORY_COREGRAPHICS;
pub const VM_MEMORY_DYLD = @as(c_int, 60);
pub const VM_MEMORY_DYLD_MALLOC = @as(c_int, 61);
pub const VM_MEMORY_SQLITE = @as(c_int, 62);
pub const VM_MEMORY_JAVASCRIPT_CORE = @as(c_int, 63);
pub const VM_MEMORY_WEBASSEMBLY = VM_MEMORY_JAVASCRIPT_CORE;
pub const VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR = @as(c_int, 64);
pub const VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE = @as(c_int, 65);
pub const VM_MEMORY_GLSL = @as(c_int, 66);
pub const VM_MEMORY_OPENCL = @as(c_int, 67);
pub const VM_MEMORY_COREIMAGE = @as(c_int, 68);
pub const VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS = @as(c_int, 69);
pub const VM_MEMORY_IMAGEIO = @as(c_int, 70);
pub const VM_MEMORY_COREPROFILE = @as(c_int, 71);
pub const VM_MEMORY_ASSETSD = @as(c_int, 72);
pub const VM_MEMORY_OS_ALLOC_ONCE = @as(c_int, 73);
pub const VM_MEMORY_LIBDISPATCH = @as(c_int, 74);
pub const VM_MEMORY_ACCELERATE = @as(c_int, 75);
pub const VM_MEMORY_COREUI = @as(c_int, 76);
pub const VM_MEMORY_COREUIFILE = @as(c_int, 77);
pub const VM_MEMORY_GENEALOGY = @as(c_int, 78);
pub const VM_MEMORY_RAWCAMERA = @as(c_int, 79);
pub const VM_MEMORY_CORPSEINFO = @as(c_int, 80);
pub const VM_MEMORY_ASL = @as(c_int, 81);
pub const VM_MEMORY_SWIFT_RUNTIME = @as(c_int, 82);
pub const VM_MEMORY_SWIFT_METADATA = @as(c_int, 83);
pub const VM_MEMORY_DHMM = @as(c_int, 84);
pub const VM_MEMORY_SCENEKIT = @as(c_int, 86);
pub const VM_MEMORY_SKYWALK = @as(c_int, 87);
pub const VM_MEMORY_IOSURFACE = @as(c_int, 88);
pub const VM_MEMORY_LIBNETWORK = @as(c_int, 89);
pub const VM_MEMORY_AUDIO = @as(c_int, 90);
pub const VM_MEMORY_VIDEOBITSTREAM = @as(c_int, 91);
pub const VM_MEMORY_CM_XPC = @as(c_int, 92);
pub const VM_MEMORY_CM_RPC = @as(c_int, 93);
pub const VM_MEMORY_CM_MEMORYPOOL = @as(c_int, 94);
pub const VM_MEMORY_CM_READCACHE = @as(c_int, 95);
pub const VM_MEMORY_CM_CRABS = @as(c_int, 96);
pub const VM_MEMORY_QUICKLOOK_THUMBNAILS = @as(c_int, 97);
pub const VM_MEMORY_ACCOUNTS = @as(c_int, 98);
pub const VM_MEMORY_SANITIZER = @as(c_int, 99);
pub const VM_MEMORY_IOACCELERATOR = @as(c_int, 100);
pub const VM_MEMORY_CM_REGWARP = @as(c_int, 101);
pub const VM_MEMORY_EAR_DECODER = @as(c_int, 102);
pub const VM_MEMORY_COREUI_CACHED_IMAGE_DATA = @as(c_int, 103);
pub const VM_MEMORY_COLORSYNC = @as(c_int, 104);
pub const VM_MEMORY_BTINFO = @as(c_int, 105);
pub const VM_MEMORY_CM_HLS = @as(c_int, 106);
pub const VM_MEMORY_ROSETTA = @as(c_int, 230);
pub const VM_MEMORY_ROSETTA_THREAD_CONTEXT = @as(c_int, 231);
pub const VM_MEMORY_ROSETTA_INDIRECT_BRANCH_MAP = @as(c_int, 232);
pub const VM_MEMORY_ROSETTA_RETURN_STACK = @as(c_int, 233);
pub const VM_MEMORY_ROSETTA_EXECUTABLE_HEAP = @as(c_int, 234);
pub const VM_MEMORY_ROSETTA_USER_LDT = @as(c_int, 235);
pub const VM_MEMORY_ROSETTA_ARENA = @as(c_int, 236);
pub const VM_MEMORY_ROSETTA_10 = @as(c_int, 239);
pub const VM_MEMORY_APPLICATION_SPECIFIC_1 = @as(c_int, 240);
pub const VM_MEMORY_APPLICATION_SPECIFIC_16 = @as(c_int, 255);
pub const VM_MEMORY_COUNT = @as(c_int, 256);
pub inline fn VM_MAKE_TAG(tag: anytype) @TypeOf(tag << @as(c_int, 24)) {
    _ = &tag;
    return tag << @as(c_int, 24);
}
pub const _MACH_MACHINE_H_ = "";
pub const CPU_STATE_MAX = @as(c_int, 4);
pub const CPU_STATE_USER = @as(c_int, 0);
pub const CPU_STATE_SYSTEM = @as(c_int, 1);
pub const CPU_STATE_IDLE = @as(c_int, 2);
pub const CPU_STATE_NICE = @as(c_int, 3);
pub const CPU_ARCH_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xff000000, .hex);
pub const CPU_ARCH_ABI64 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01000000, .hex);
pub const CPU_ARCH_ABI64_32 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x02000000, .hex);
pub const CPU_TYPE_ANY = @import("std").zig.c_translation.cast(cpu_type_t, -@as(c_int, 1));
pub const CPU_TYPE_VAX = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 1));
pub const CPU_TYPE_MC680x0 = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 6));
pub const CPU_TYPE_X86 = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 7));
pub const CPU_TYPE_I386 = CPU_TYPE_X86;
pub const CPU_TYPE_X86_64 = CPU_TYPE_X86 | CPU_ARCH_ABI64;
pub const CPU_TYPE_MC98000 = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 10));
pub const CPU_TYPE_HPPA = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 11));
pub const CPU_TYPE_ARM = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 12));
pub const CPU_TYPE_ARM64 = CPU_TYPE_ARM | CPU_ARCH_ABI64;
pub const CPU_TYPE_ARM64_32 = CPU_TYPE_ARM | CPU_ARCH_ABI64_32;
pub const CPU_TYPE_MC88000 = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 13));
pub const CPU_TYPE_SPARC = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 14));
pub const CPU_TYPE_I860 = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 15));
pub const CPU_TYPE_POWERPC = @import("std").zig.c_translation.cast(cpu_type_t, @as(c_int, 18));
pub const CPU_TYPE_POWERPC64 = CPU_TYPE_POWERPC | CPU_ARCH_ABI64;
pub const CPU_SUBTYPE_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xff000000, .hex);
pub const CPU_SUBTYPE_LIB64 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub const CPU_SUBTYPE_PTRAUTH_ABI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub const CPU_SUBTYPE_ANY = @import("std").zig.c_translation.cast(cpu_subtype_t, -@as(c_int, 1));
pub const CPU_SUBTYPE_MULTIPLE = @import("std").zig.c_translation.cast(cpu_subtype_t, -@as(c_int, 1));
pub const CPU_SUBTYPE_LITTLE_ENDIAN = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_BIG_ENDIAN = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_THREADTYPE_NONE = @import("std").zig.c_translation.cast(cpu_threadtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_VAX_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_VAX780 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_VAX785 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 2));
pub const CPU_SUBTYPE_VAX750 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 3));
pub const CPU_SUBTYPE_VAX730 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 4));
pub const CPU_SUBTYPE_UVAXI = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 5));
pub const CPU_SUBTYPE_UVAXII = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 6));
pub const CPU_SUBTYPE_VAX8200 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 7));
pub const CPU_SUBTYPE_VAX8500 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 8));
pub const CPU_SUBTYPE_VAX8600 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 9));
pub const CPU_SUBTYPE_VAX8650 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 10));
pub const CPU_SUBTYPE_VAX8800 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 11));
pub const CPU_SUBTYPE_UVAXIII = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 12));
pub const CPU_SUBTYPE_MC680x0_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_MC68030 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_MC68040 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 2));
pub const CPU_SUBTYPE_MC68030_ONLY = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 3));
pub inline fn CPU_SUBTYPE_INTEL(f: anytype, m: anytype) @TypeOf(@import("std").zig.c_translation.cast(cpu_subtype_t, f) + (m << @as(c_int, 4))) {
    _ = &f;
    _ = &m;
    return @import("std").zig.c_translation.cast(cpu_subtype_t, f) + (m << @as(c_int, 4));
}
pub const CPU_SUBTYPE_I386_ALL = CPU_SUBTYPE_INTEL(@as(c_int, 3), @as(c_int, 0));
pub const CPU_SUBTYPE_386 = CPU_SUBTYPE_INTEL(@as(c_int, 3), @as(c_int, 0));
pub const CPU_SUBTYPE_486 = CPU_SUBTYPE_INTEL(@as(c_int, 4), @as(c_int, 0));
pub const CPU_SUBTYPE_486SX = CPU_SUBTYPE_INTEL(@as(c_int, 4), @as(c_int, 8));
pub const CPU_SUBTYPE_586 = CPU_SUBTYPE_INTEL(@as(c_int, 5), @as(c_int, 0));
pub const CPU_SUBTYPE_PENT = CPU_SUBTYPE_INTEL(@as(c_int, 5), @as(c_int, 0));
pub const CPU_SUBTYPE_PENTPRO = CPU_SUBTYPE_INTEL(@as(c_int, 6), @as(c_int, 1));
pub const CPU_SUBTYPE_PENTII_M3 = CPU_SUBTYPE_INTEL(@as(c_int, 6), @as(c_int, 3));
pub const CPU_SUBTYPE_PENTII_M5 = CPU_SUBTYPE_INTEL(@as(c_int, 6), @as(c_int, 5));
pub const CPU_SUBTYPE_CELERON = CPU_SUBTYPE_INTEL(@as(c_int, 7), @as(c_int, 6));
pub const CPU_SUBTYPE_CELERON_MOBILE = CPU_SUBTYPE_INTEL(@as(c_int, 7), @as(c_int, 7));
pub const CPU_SUBTYPE_PENTIUM_3 = CPU_SUBTYPE_INTEL(@as(c_int, 8), @as(c_int, 0));
pub const CPU_SUBTYPE_PENTIUM_3_M = CPU_SUBTYPE_INTEL(@as(c_int, 8), @as(c_int, 1));
pub const CPU_SUBTYPE_PENTIUM_3_XEON = CPU_SUBTYPE_INTEL(@as(c_int, 8), @as(c_int, 2));
pub const CPU_SUBTYPE_PENTIUM_M = CPU_SUBTYPE_INTEL(@as(c_int, 9), @as(c_int, 0));
pub const CPU_SUBTYPE_PENTIUM_4 = CPU_SUBTYPE_INTEL(@as(c_int, 10), @as(c_int, 0));
pub const CPU_SUBTYPE_PENTIUM_4_M = CPU_SUBTYPE_INTEL(@as(c_int, 10), @as(c_int, 1));
pub const CPU_SUBTYPE_ITANIUM = CPU_SUBTYPE_INTEL(@as(c_int, 11), @as(c_int, 0));
pub const CPU_SUBTYPE_ITANIUM_2 = CPU_SUBTYPE_INTEL(@as(c_int, 11), @as(c_int, 1));
pub const CPU_SUBTYPE_XEON = CPU_SUBTYPE_INTEL(@as(c_int, 12), @as(c_int, 0));
pub const CPU_SUBTYPE_XEON_MP = CPU_SUBTYPE_INTEL(@as(c_int, 12), @as(c_int, 1));
pub inline fn CPU_SUBTYPE_INTEL_FAMILY(x: anytype) @TypeOf(x & @as(c_int, 15)) {
    _ = &x;
    return x & @as(c_int, 15);
}
pub const CPU_SUBTYPE_INTEL_FAMILY_MAX = @as(c_int, 15);
pub inline fn CPU_SUBTYPE_INTEL_MODEL(x: anytype) @TypeOf(x >> @as(c_int, 4)) {
    _ = &x;
    return x >> @as(c_int, 4);
}
pub const CPU_SUBTYPE_INTEL_MODEL_ALL = @as(c_int, 0);
pub const CPU_SUBTYPE_X86_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 3));
pub const CPU_SUBTYPE_X86_64_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 3));
pub const CPU_SUBTYPE_X86_ARCH1 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 4));
pub const CPU_SUBTYPE_X86_64_H = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 8));
pub const CPU_THREADTYPE_INTEL_HTT = @import("std").zig.c_translation.cast(cpu_threadtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_MIPS_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_MIPS_R2300 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_MIPS_R2600 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 2));
pub const CPU_SUBTYPE_MIPS_R2800 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 3));
pub const CPU_SUBTYPE_MIPS_R2000a = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 4));
pub const CPU_SUBTYPE_MIPS_R2000 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 5));
pub const CPU_SUBTYPE_MIPS_R3000a = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 6));
pub const CPU_SUBTYPE_MIPS_R3000 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 7));
pub const CPU_SUBTYPE_MC98000_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_MC98601 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_HPPA_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_HPPA_7100 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_HPPA_7100LC = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_MC88000_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_MC88100 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_MC88110 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 2));
pub const CPU_SUBTYPE_SPARC_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_I860_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_I860_860 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_POWERPC_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_POWERPC_601 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_POWERPC_602 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 2));
pub const CPU_SUBTYPE_POWERPC_603 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 3));
pub const CPU_SUBTYPE_POWERPC_603e = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 4));
pub const CPU_SUBTYPE_POWERPC_603ev = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 5));
pub const CPU_SUBTYPE_POWERPC_604 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 6));
pub const CPU_SUBTYPE_POWERPC_604e = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 7));
pub const CPU_SUBTYPE_POWERPC_620 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 8));
pub const CPU_SUBTYPE_POWERPC_750 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 9));
pub const CPU_SUBTYPE_POWERPC_7400 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 10));
pub const CPU_SUBTYPE_POWERPC_7450 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 11));
pub const CPU_SUBTYPE_POWERPC_970 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 100));
pub const CPU_SUBTYPE_ARM_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_ARM_V4T = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 5));
pub const CPU_SUBTYPE_ARM_V6 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 6));
pub const CPU_SUBTYPE_ARM_V5TEJ = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 7));
pub const CPU_SUBTYPE_ARM_XSCALE = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 8));
pub const CPU_SUBTYPE_ARM_V7 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 9));
pub const CPU_SUBTYPE_ARM_V7F = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 10));
pub const CPU_SUBTYPE_ARM_V7S = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 11));
pub const CPU_SUBTYPE_ARM_V7K = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 12));
pub const CPU_SUBTYPE_ARM_V8 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 13));
pub const CPU_SUBTYPE_ARM_V6M = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 14));
pub const CPU_SUBTYPE_ARM_V7M = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 15));
pub const CPU_SUBTYPE_ARM_V7EM = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 16));
pub const CPU_SUBTYPE_ARM_V8M = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 17));
pub const CPU_SUBTYPE_ARM64_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_ARM64_V8 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPU_SUBTYPE_ARM64E = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 2));
pub const CPU_SUBTYPE_ARM64_PTR_AUTH_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0f000000, .hex);
pub inline fn CPU_SUBTYPE_ARM64_PTR_AUTH_VERSION(x: anytype) @TypeOf((x & CPU_SUBTYPE_ARM64_PTR_AUTH_MASK) >> @as(c_int, 24)) {
    _ = &x;
    return (x & CPU_SUBTYPE_ARM64_PTR_AUTH_MASK) >> @as(c_int, 24);
}
pub const CPU_SUBTYPE_ARM64_32_ALL = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 0));
pub const CPU_SUBTYPE_ARM64_32_V8 = @import("std").zig.c_translation.cast(cpu_subtype_t, @as(c_int, 1));
pub const CPUFAMILY_UNKNOWN = @as(c_int, 0);
pub const CPUFAMILY_POWERPC_G3 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xcee41549, .hex);
pub const CPUFAMILY_POWERPC_G4 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x77c184ae, .hex);
pub const CPUFAMILY_POWERPC_G5 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xed76d8aa, .hex);
pub const CPUFAMILY_INTEL_6_13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xaa33392b, .hex);
pub const CPUFAMILY_INTEL_PENRYN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x78ea4fbc, .hex);
pub const CPUFAMILY_INTEL_NEHALEM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x6b5a4cd2, .hex);
pub const CPUFAMILY_INTEL_WESTMERE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x573b5eec, .hex);
pub const CPUFAMILY_INTEL_SANDYBRIDGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x5490b78c, .hex);
pub const CPUFAMILY_INTEL_IVYBRIDGE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1f65e835, .hex);
pub const CPUFAMILY_INTEL_HASWELL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10b282dc, .hex);
pub const CPUFAMILY_INTEL_BROADWELL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x582ed09c, .hex);
pub const CPUFAMILY_INTEL_SKYLAKE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x37fc219f, .hex);
pub const CPUFAMILY_INTEL_KABYLAKE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0f817246, .hex);
pub const CPUFAMILY_INTEL_ICELAKE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x38435547, .hex);
pub const CPUFAMILY_INTEL_COMETLAKE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1cf8a03e, .hex);
pub const CPUFAMILY_ARM_9 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xe73283ae, .hex);
pub const CPUFAMILY_ARM_11 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8ff620d8, .hex);
pub const CPUFAMILY_ARM_XSCALE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x53b005f5, .hex);
pub const CPUFAMILY_ARM_12 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xbd1b0ae9, .hex);
pub const CPUFAMILY_ARM_13 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0cc90e64, .hex);
pub const CPUFAMILY_ARM_14 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x96077ef1, .hex);
pub const CPUFAMILY_ARM_15 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xa8511bca, .hex);
pub const CPUFAMILY_ARM_SWIFT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1e2d6381, .hex);
pub const CPUFAMILY_ARM_CYCLONE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x37a09642, .hex);
pub const CPUFAMILY_ARM_TYPHOON = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x2c91a47e, .hex);
pub const CPUFAMILY_ARM_TWISTER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x92fb37c8, .hex);
pub const CPUFAMILY_ARM_HURRICANE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x67ceee93, .hex);
pub const CPUFAMILY_ARM_MONSOON_MISTRAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xe81e7ef6, .hex);
pub const CPUFAMILY_ARM_VORTEX_TEMPEST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x07d34b9f, .hex);
pub const CPUFAMILY_ARM_LIGHTNING_THUNDER = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x462504d2, .hex);
pub const CPUFAMILY_ARM_FIRESTORM_ICESTORM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1b588bb3, .hex);
pub const CPUFAMILY_ARM_BLIZZARD_AVALANCHE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xda33d83d, .hex);
pub const CPUFAMILY_ARM_EVEREST_SAWTOOTH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8765edea, .hex);
pub const CPUFAMILY_ARM_IBIZA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xfa33415e, .hex);
pub const CPUFAMILY_ARM_PALMA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x72015832, .hex);
pub const CPUFAMILY_ARM_COLL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x2876f5b5, .hex);
pub const CPUFAMILY_ARM_LOBOS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x5f4dea93, .hex);
pub const CPUFAMILY_ARM_DONAN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x6f5129ac, .hex);
pub const CPUFAMILY_ARM_BRAVA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x17d5b93a, .hex);
pub const CPUFAMILY_ARM_TAHITI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x75d4acb9, .hex);
pub const CPUFAMILY_ARM_TUPAI = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x204526d0, .hex);
pub const CPUSUBFAMILY_UNKNOWN = @as(c_int, 0);
pub const CPUSUBFAMILY_ARM_HP = @as(c_int, 1);
pub const CPUSUBFAMILY_ARM_HG = @as(c_int, 2);
pub const CPUSUBFAMILY_ARM_M = @as(c_int, 3);
pub const CPUSUBFAMILY_ARM_HS = @as(c_int, 4);
pub const CPUSUBFAMILY_ARM_HC_HD = @as(c_int, 5);
pub const CPUSUBFAMILY_ARM_HA = @as(c_int, 6);
pub const CPUFAMILY_INTEL_6_23 = CPUFAMILY_INTEL_PENRYN;
pub const CPUFAMILY_INTEL_6_26 = CPUFAMILY_INTEL_NEHALEM;
pub const _MACH_TIME_VALUE_H_ = "";
pub const TIME_MICROS_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 1000000, .decimal);
pub const time_value_add_usec = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/time_value.h:79:9
pub const time_value_add = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/time_value.h:87:9
pub const HOST_INFO_MAX = @as(c_int, 1024);
pub const KERNEL_VERSION_MAX = @as(c_int, 512);
pub const KERNEL_BOOT_INFO_MAX = @as(c_int, 4096);
pub const HOST_BASIC_INFO = @as(c_int, 1);
pub const HOST_SCHED_INFO = @as(c_int, 3);
pub const HOST_RESOURCE_SIZES = @as(c_int, 4);
pub const HOST_PRIORITY_INFO = @as(c_int, 5);
pub const HOST_SEMAPHORE_TRAPS = @as(c_int, 7);
pub const HOST_MACH_MSG_TRAP = @as(c_int, 8);
pub const HOST_VM_PURGABLE = @as(c_int, 9);
pub const HOST_DEBUG_INFO_INTERNAL = @as(c_int, 10);
pub const HOST_CAN_HAS_DEBUGGER = @as(c_int, 11);
pub const HOST_PREFERRED_USER_ARCH = @as(c_int, 12);
pub const HOST_CAN_HAS_DEBUGGER_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(host_can_has_debugger_info_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_BASIC_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(host_basic_info_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_SCHED_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(host_sched_info_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_RESOURCE_SIZES_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(kernel_resource_sizes_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_PRIORITY_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(host_priority_info_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_LOAD_INFO = @as(c_int, 1);
pub const HOST_VM_INFO = @as(c_int, 2);
pub const HOST_CPU_LOAD_INFO = @as(c_int, 3);
pub const HOST_VM_INFO64 = @as(c_int, 4);
pub const HOST_EXTMOD_INFO64 = @as(c_int, 5);
pub const HOST_EXPIRED_TASK_INFO = @as(c_int, 6);
pub const HOST_LOAD_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(host_load_info_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_VM_PURGABLE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(host_purgable_info_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_VM_INFO64_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_statistics64_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_VM_INFO64_LATEST_COUNT = HOST_VM_INFO64_COUNT;
pub const HOST_VM_INFO64_REV1_COUNT = HOST_VM_INFO64_LATEST_COUNT;
pub const HOST_VM_INFO64_REV0_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, HOST_VM_INFO64_REV1_COUNT - @as(c_int, 14));
pub const HOST_EXTMOD_INFO64_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_extmod_statistics_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_EXTMOD_INFO64_LATEST_COUNT = HOST_EXTMOD_INFO64_COUNT;
pub const HOST_VM_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_statistics_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_VM_INFO_LATEST_COUNT = HOST_VM_INFO_COUNT;
pub const HOST_VM_INFO_REV2_COUNT = HOST_VM_INFO_LATEST_COUNT;
pub const HOST_VM_INFO_REV1_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, HOST_VM_INFO_REV2_COUNT - @as(c_int, 1));
pub const HOST_VM_INFO_REV0_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, HOST_VM_INFO_REV1_COUNT - @as(c_int, 2));
pub const HOST_CPU_LOAD_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(host_cpu_load_info_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const HOST_PREFERRED_USER_ARCH_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(host_preferred_user_arch_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const _MACH_HOST_NOTIFY_H_ = "";
pub const HOST_NOTIFY_CALENDAR_CHANGE = @as(c_int, 0);
pub const HOST_NOTIFY_CALENDAR_SET = @as(c_int, 1);
pub const HOST_NOTIFY_TYPE_MAX = @as(c_int, 1);
pub const HOST_CALENDAR_CHANGED_REPLYID = @as(c_int, 950);
pub const HOST_CALENDAR_SET_REPLYID = @as(c_int, 951);
pub const _MACH_HOST_SPECIAL_PORTS_H_ = "";
pub const HOST_SECURITY_PORT = @as(c_int, 0);
pub const HOST_MIN_SPECIAL_PORT = HOST_SECURITY_PORT;
pub const HOST_PORT = @as(c_int, 1);
pub const HOST_PRIV_PORT = @as(c_int, 2);
pub const HOST_IO_MAIN_PORT = @as(c_int, 3);
pub const HOST_MAX_SPECIAL_KERNEL_PORT = @as(c_int, 7);
pub const HOST_LAST_SPECIAL_KERNEL_PORT = HOST_IO_MAIN_PORT;
pub const HOST_DYNAMIC_PAGER_PORT = @as(c_int, 1) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_AUDIT_CONTROL_PORT = @as(c_int, 2) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_USER_NOTIFICATION_PORT = @as(c_int, 3) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_AUTOMOUNTD_PORT = @as(c_int, 4) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_LOCKD_PORT = @as(c_int, 5) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_KTRACE_BACKGROUND_PORT = @as(c_int, 6) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_SEATBELT_PORT = @as(c_int, 7) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_KEXTD_PORT = @as(c_int, 8) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_LAUNCHCTL_PORT = @as(c_int, 9) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_UNFREED_PORT = @as(c_int, 10) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_AMFID_PORT = @as(c_int, 11) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_GSSD_PORT = @as(c_int, 12) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_TELEMETRY_PORT = @as(c_int, 13) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_ATM_NOTIFICATION_PORT = @as(c_int, 14) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_COALITION_PORT = @as(c_int, 15) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_SYSDIAGNOSE_PORT = @as(c_int, 16) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_XPC_EXCEPTION_PORT = @as(c_int, 17) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_CONTAINERD_PORT = @as(c_int, 18) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_NODE_PORT = @as(c_int, 19) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_RESOURCE_NOTIFY_PORT = @as(c_int, 20) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_CLOSURED_PORT = @as(c_int, 21) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_SYSPOLICYD_PORT = @as(c_int, 22) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_FILECOORDINATIOND_PORT = @as(c_int, 23) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_FAIRPLAYD_PORT = @as(c_int, 24) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_IOCOMPRESSIONSTATS_PORT = @as(c_int, 25) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_MEMORY_ERROR_PORT = @as(c_int, 26) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_MANAGEDAPPDISTD_PORT = @as(c_int, 27) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_DOUBLEAGENTD_PORT = @as(c_int, 28) + HOST_MAX_SPECIAL_KERNEL_PORT;
pub const HOST_MAX_SPECIAL_PORT = HOST_DOUBLEAGENTD_PORT;
pub const HOST_CHUD_PORT = HOST_LAUNCHCTL_PORT;
pub const HOST_LOCAL_NODE = -@as(c_int, 1);
pub const host_get_host_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:134:9
pub inline fn host_set_host_port(host: anytype, port: anytype) @TypeOf(KERN_INVALID_ARGUMENT) {
    _ = &host;
    _ = &port;
    return KERN_INVALID_ARGUMENT;
}
pub const host_get_host_priv_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:139:9
pub inline fn host_set_host_priv_port(host: anytype, port: anytype) @TypeOf(KERN_INVALID_ARGUMENT) {
    _ = &host;
    _ = &port;
    return KERN_INVALID_ARGUMENT;
}
pub const host_get_io_main_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:144:9
pub inline fn host_set_io_main_port(host: anytype, port: anytype) @TypeOf(KERN_INVALID_ARGUMENT) {
    _ = &host;
    _ = &port;
    return KERN_INVALID_ARGUMENT;
}
pub const host_get_dynamic_pager_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:152:9
pub const host_set_dynamic_pager_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:155:9
pub const host_get_audit_control_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:158:9
pub const host_set_audit_control_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:161:9
pub const host_get_user_notification_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:164:9
pub const host_set_user_notification_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:167:9
pub const host_get_automountd_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:170:9
pub const host_set_automountd_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:173:9
pub const host_get_lockd_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:176:9
pub const host_set_lockd_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:179:9
pub const host_get_ktrace_background_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:182:9
pub const host_set_ktrace_background_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:185:9
pub const host_get_kextd_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:188:9
pub const host_set_kextd_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:191:9
pub const host_get_launchctl_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:194:9
pub const host_set_launchctl_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:197:9
pub inline fn host_get_chud_port(host: anytype, port: anytype) @TypeOf(host_get_launchctl_port(host, port)) {
    _ = &host;
    _ = &port;
    return host_get_launchctl_port(host, port);
}
pub inline fn host_set_chud_port(host: anytype, port: anytype) @TypeOf(host_set_launchctl_port(host, port)) {
    _ = &host;
    _ = &port;
    return host_set_launchctl_port(host, port);
}
pub const host_get_unfreed_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:203:9
pub const host_set_unfreed_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:206:9
pub const host_get_amfid_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:209:9
pub const host_set_amfid_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:212:9
pub const host_get_gssd_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:215:9
pub const host_set_gssd_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:218:9
pub const host_get_telemetry_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:221:9
pub const host_set_telemetry_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:224:9
pub const host_get_atm_notification_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:227:9
pub const host_set_atm_notification_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:230:9
pub const host_get_coalition_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:233:9
pub const host_set_coalition_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:236:9
pub const host_get_sysdiagnose_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:239:9
pub const host_set_sysdiagnose_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:242:9
pub const host_get_container_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:245:9
pub const host_set_container_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:248:9
pub const host_get_node_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:251:9
pub const host_set_node_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:254:9
pub const host_get_closured_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:257:9
pub const host_set_closured_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:260:9
pub const host_get_syspolicyd_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:263:9
pub const host_set_syspolicyd_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:266:9
pub const host_get_filecoordinationd_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:269:9
pub const host_set_filecoordinationd_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:272:9
pub const host_get_fairplayd_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:275:9
pub const host_set_fairplayd_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:278:9
pub const host_get_iocompressionstats_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:281:9
pub const host_set_iocompressionstats_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:284:9
pub const host_get_memory_error_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:287:9
pub const host_set_memory_error_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:290:9
pub const host_get_managedappdistd_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:293:9
pub const host_set_managedappdistd_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:296:9
pub const host_get_doubleagentd_port = @compileError("unable to translate macro: undefined identifier `host_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:299:9
pub const host_set_doubleagentd_port = @compileError("unable to translate macro: undefined identifier `host_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/host_special_ports.h:302:9
pub const _MACH_MEMORY_OBJECT_TYPES_H_ = "";
pub const _MACH_VM_PROT_H_ = "";
pub const VM_PROT_NONE = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x00));
pub const VM_PROT_READ = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x01));
pub const VM_PROT_WRITE = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x02));
pub const VM_PROT_EXECUTE = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x04));
pub const VM_PROT_DEFAULT = VM_PROT_READ | VM_PROT_WRITE;
pub const VM_PROT_ALL = (VM_PROT_READ | VM_PROT_WRITE) | VM_PROT_EXECUTE;
pub const VM_PROT_RORW_TP = VM_PROT_EXECUTE;
pub const VM_PROT_NO_CHANGE_LEGACY = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x08));
pub const VM_PROT_NO_CHANGE = @import("std").zig.c_translation.cast(vm_prot_t, @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01000000, .hex));
pub const VM_PROT_COPY = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x10));
pub const VM_PROT_WANTS_COPY = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x10));
pub const VM_PROT_IS_MASK = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x40));
pub const VM_PROT_STRIP_READ = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x80));
pub const VM_PROT_EXECUTE_ONLY = VM_PROT_EXECUTE | VM_PROT_STRIP_READ;
pub const VM_PROT_TPRO = @import("std").zig.c_translation.cast(vm_prot_t, @as(c_int, 0x200));
pub const VM_PROT_ALLEXEC = VM_PROT_EXECUTE;
pub const _MACH_VM_SYNC_H_ = "";
pub const VM_SYNC_ASYNCHRONOUS = @import("std").zig.c_translation.cast(vm_sync_t, @as(c_int, 0x01));
pub const VM_SYNC_SYNCHRONOUS = @import("std").zig.c_translation.cast(vm_sync_t, @as(c_int, 0x02));
pub const VM_SYNC_INVALIDATE = @import("std").zig.c_translation.cast(vm_sync_t, @as(c_int, 0x04));
pub const VM_SYNC_KILLPAGES = @import("std").zig.c_translation.cast(vm_sync_t, @as(c_int, 0x08));
pub const VM_SYNC_DEACTIVATE = @import("std").zig.c_translation.cast(vm_sync_t, @as(c_int, 0x10));
pub const VM_SYNC_CONTIGUOUS = @import("std").zig.c_translation.cast(vm_sync_t, @as(c_int, 0x20));
pub const VM_SYNC_REUSABLEPAGES = @import("std").zig.c_translation.cast(vm_sync_t, @as(c_int, 0x40));
pub const _MACH_VM_TYPES_H_ = "";
pub const PPNUM_MAX = UINT32_MAX;
pub const VM_MAP_NULL = @import("std").zig.c_translation.cast(vm_map_t, @as(c_int, 0));
pub const VM_MAP_INSPECT_NULL = @import("std").zig.c_translation.cast(vm_map_inspect_t, @as(c_int, 0));
pub const VM_MAP_READ_NULL = @import("std").zig.c_translation.cast(vm_map_read_t, @as(c_int, 0));
pub const UPL_NULL = @import("std").zig.c_translation.cast(upl_t, @as(c_int, 0));
pub const VM_NAMED_ENTRY_NULL = @import("std").zig.c_translation.cast(vm_named_entry_t, @as(c_int, 0));
pub const MACH_VM_RANGE_FLAVOR_DEFAULT = MACH_VM_RANGE_FLAVOR_V1;
pub const VM_64_BIT_DATA_OBJECTS = "";
pub const MEMORY_OBJECT_NULL = @import("std").zig.c_translation.cast(memory_object_t, @as(c_int, 0));
pub const MEMORY_OBJECT_CONTROL_NULL = @import("std").zig.c_translation.cast(memory_object_control_t, @as(c_int, 0));
pub const MEMORY_OBJECT_NAME_NULL = @import("std").zig.c_translation.cast(memory_object_name_t, @as(c_int, 0));
pub const MEMORY_OBJECT_DEFAULT_NULL = @import("std").zig.c_translation.cast(memory_object_default_t, @as(c_int, 0));
pub const MEMORY_OBJECT_COPY_NONE = @as(c_int, 0);
pub const MEMORY_OBJECT_COPY_CALL = @as(c_int, 1);
pub const MEMORY_OBJECT_COPY_DELAY = @as(c_int, 2);
pub const MEMORY_OBJECT_COPY_TEMPORARY = @as(c_int, 3);
pub const MEMORY_OBJECT_COPY_SYMMETRIC = @as(c_int, 4);
pub const MEMORY_OBJECT_COPY_INVALID = @as(c_int, 5);
pub const MEMORY_OBJECT_COPY_DELAY_FORK = @as(c_int, 6);
pub const MEMORY_OBJECT_RETURN_NONE = @as(c_int, 0);
pub const MEMORY_OBJECT_RETURN_DIRTY = @as(c_int, 1);
pub const MEMORY_OBJECT_RETURN_ALL = @as(c_int, 2);
pub const MEMORY_OBJECT_RETURN_ANYTHING = @as(c_int, 3);
pub const MEMORY_OBJECT_DATA_FLUSH = @as(c_int, 0x1);
pub const MEMORY_OBJECT_DATA_NO_CHANGE = @as(c_int, 0x2);
pub const MEMORY_OBJECT_DATA_PURGE = @as(c_int, 0x4);
pub const MEMORY_OBJECT_COPY_SYNC = @as(c_int, 0x8);
pub const MEMORY_OBJECT_DATA_SYNC = @as(c_int, 0x10);
pub const MEMORY_OBJECT_IO_SYNC = @as(c_int, 0x20);
pub const MEMORY_OBJECT_DATA_FLUSH_ALL = @as(c_int, 0x40);
pub const MEMORY_OBJECT_INFO_MAX = @as(c_int, 1024);
pub const MEMORY_OBJECT_PERFORMANCE_INFO = @as(c_int, 11);
pub const MEMORY_OBJECT_ATTRIBUTE_INFO = @as(c_int, 14);
pub const MEMORY_OBJECT_BEHAVIOR_INFO = @as(c_int, 15);
pub const MEMORY_OBJECT_BEHAVE_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(memory_object_behave_info_data_t), @import("std").zig.c_translation.sizeof(c_int)));
pub const MEMORY_OBJECT_PERF_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(memory_object_perf_info_data_t), @import("std").zig.c_translation.sizeof(c_int)));
pub const MEMORY_OBJECT_ATTR_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(memory_object_attr_info_data_t), @import("std").zig.c_translation.sizeof(c_int)));
pub const invalid_memory_object_flavor = @compileError("unable to translate macro: undefined identifier `OLD_MEMORY_OBJECT_BEHAVIOR_INFO`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/memory_object_types.h:244:9
pub const MEMORY_OBJECT_TERMINATE_IDLE = @as(c_int, 0x1);
pub const MEMORY_OBJECT_RESPECT_CACHE = @as(c_int, 0x2);
pub const MEMORY_OBJECT_RELEASE_NO_OP = @as(c_int, 0x4);
pub const MAP_MEM_NOOP = @as(c_int, 0);
pub const MAP_MEM_COPYBACK = @as(c_int, 1);
pub const MAP_MEM_IO = @as(c_int, 2);
pub const MAP_MEM_WTHRU = @as(c_int, 3);
pub const MAP_MEM_WCOMB = @as(c_int, 4);
pub const MAP_MEM_INNERWBACK = @as(c_int, 5);
pub const MAP_MEM_POSTED = @as(c_int, 6);
pub const MAP_MEM_RT = @as(c_int, 7);
pub const MAP_MEM_POSTED_REORDERED = @as(c_int, 8);
pub const MAP_MEM_POSTED_COMBINED_REORDERED = @as(c_int, 9);
pub inline fn GET_MAP_MEM(flags: anytype) @TypeOf((@import("std").zig.c_translation.cast(c_uint, flags) >> @as(c_int, 24)) & @as(c_int, 0xFF)) {
    _ = &flags;
    return (@import("std").zig.c_translation.cast(c_uint, flags) >> @as(c_int, 24)) & @as(c_int, 0xFF);
}
pub const SET_MAP_MEM = @compileError("unable to translate C expr: expected ')' instead got '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/memory_object_types.h:277:9
pub const MAP_MEM_PROT_MASK = @as(c_int, 0xFF);
pub const MAP_MEM_LEDGER_TAGGED = @as(c_int, 0x002000);
pub const MAP_MEM_PURGABLE_KERNEL_ONLY = @as(c_int, 0x004000);
pub const MAP_MEM_GRAB_SECLUDED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x008000, .hex);
pub const MAP_MEM_ONLY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x010000, .hex);
pub const MAP_MEM_NAMED_CREATE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x020000, .hex);
pub const MAP_MEM_PURGABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x040000, .hex);
pub const MAP_MEM_NAMED_REUSE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x080000, .hex);
pub const MAP_MEM_USE_DATA_ADDR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x100000, .hex);
pub const MAP_MEM_VM_COPY = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x200000, .hex);
pub const MAP_MEM_VM_SHARE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x400000, .hex);
pub const MAP_MEM_4K_DATA_ADDR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800000, .hex);
pub const MAP_MEM_FLAGS_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00FFFF00, .hex);
pub const MAP_MEM_FLAGS_USER = (((((((((MAP_MEM_PURGABLE_KERNEL_ONLY | MAP_MEM_GRAB_SECLUDED) | MAP_MEM_ONLY) | MAP_MEM_NAMED_CREATE) | MAP_MEM_PURGABLE) | MAP_MEM_NAMED_REUSE) | MAP_MEM_USE_DATA_ADDR) | MAP_MEM_VM_COPY) | MAP_MEM_VM_SHARE) | MAP_MEM_LEDGER_TAGGED) | MAP_MEM_4K_DATA_ADDR;
pub const MAP_MEM_FLAGS_ALL = MAP_MEM_FLAGS_USER;
pub const _MACH_EXCEPTION_TYPES_H_ = "";
pub const _MACH_MACHINE_EXCEPTION_H_ = "";
pub const _MACH_ARM_EXCEPTION_H_ = "";
pub const EXC_TYPES_COUNT = @as(c_int, 14);
pub const EXC_MASK_MACHINE = @as(c_int, 0);
pub const EXCEPTION_CODE_MAX = @as(c_int, 2);
pub const EXC_ARM_UNDEFINED = @as(c_int, 1);
pub const EXC_ARM_SME_DISALLOWED = @as(c_int, 2);
pub const EXC_ARM_FP_UNDEFINED = @as(c_int, 0);
pub const EXC_ARM_FP_IO = @as(c_int, 1);
pub const EXC_ARM_FP_DZ = @as(c_int, 2);
pub const EXC_ARM_FP_OF = @as(c_int, 3);
pub const EXC_ARM_FP_UF = @as(c_int, 4);
pub const EXC_ARM_FP_IX = @as(c_int, 5);
pub const EXC_ARM_FP_ID = @as(c_int, 6);
pub const EXC_ARM_DA_ALIGN = @as(c_int, 0x101);
pub const EXC_ARM_DA_DEBUG = @as(c_int, 0x102);
pub const EXC_ARM_SP_ALIGN = @as(c_int, 0x103);
pub const EXC_ARM_SWP = @as(c_int, 0x104);
pub const EXC_ARM_PAC_FAIL = @as(c_int, 0x105);
pub const EXC_ARM_BREAKPOINT = @as(c_int, 1);
pub const EXC_BAD_ACCESS = @as(c_int, 1);
pub const EXC_BAD_INSTRUCTION = @as(c_int, 2);
pub const EXC_ARITHMETIC = @as(c_int, 3);
pub const EXC_EMULATION = @as(c_int, 4);
pub const EXC_SOFTWARE = @as(c_int, 5);
pub const EXC_BREAKPOINT = @as(c_int, 6);
pub const EXC_SYSCALL = @as(c_int, 7);
pub const EXC_MACH_SYSCALL = @as(c_int, 8);
pub const EXC_RPC_ALERT = @as(c_int, 9);
pub const EXC_CRASH = @as(c_int, 10);
pub const EXC_RESOURCE = @as(c_int, 11);
pub const EXC_GUARD = @as(c_int, 12);
pub const EXC_CORPSE_NOTIFY = @as(c_int, 13);
pub const EXCEPTION_DEFAULT = @as(c_int, 1);
pub const EXCEPTION_STATE = @as(c_int, 2);
pub const EXCEPTION_STATE_IDENTITY = @as(c_int, 3);
pub const EXCEPTION_IDENTITY_PROTECTED = @as(c_int, 4);
pub const EXCEPTION_STATE_IDENTITY_PROTECTED = @as(c_int, 5);
pub const MACH_EXCEPTION_BACKTRACE_PREFERRED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const MACH_EXCEPTION_ERRORS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const MACH_EXCEPTION_CODES = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub const MACH_EXCEPTION_MASK = (MACH_EXCEPTION_CODES | MACH_EXCEPTION_ERRORS) | MACH_EXCEPTION_BACKTRACE_PREFERRED;
pub const EXC_MASK_BAD_ACCESS = @as(c_int, 1) << EXC_BAD_ACCESS;
pub const EXC_MASK_BAD_INSTRUCTION = @as(c_int, 1) << EXC_BAD_INSTRUCTION;
pub const EXC_MASK_ARITHMETIC = @as(c_int, 1) << EXC_ARITHMETIC;
pub const EXC_MASK_EMULATION = @as(c_int, 1) << EXC_EMULATION;
pub const EXC_MASK_SOFTWARE = @as(c_int, 1) << EXC_SOFTWARE;
pub const EXC_MASK_BREAKPOINT = @as(c_int, 1) << EXC_BREAKPOINT;
pub const EXC_MASK_SYSCALL = @as(c_int, 1) << EXC_SYSCALL;
pub const EXC_MASK_MACH_SYSCALL = @as(c_int, 1) << EXC_MACH_SYSCALL;
pub const EXC_MASK_RPC_ALERT = @as(c_int, 1) << EXC_RPC_ALERT;
pub const EXC_MASK_CRASH = @as(c_int, 1) << EXC_CRASH;
pub const EXC_MASK_RESOURCE = @as(c_int, 1) << EXC_RESOURCE;
pub const EXC_MASK_GUARD = @as(c_int, 1) << EXC_GUARD;
pub const EXC_MASK_CORPSE_NOTIFY = @as(c_int, 1) << EXC_CORPSE_NOTIFY;
pub const EXC_MASK_ALL = ((((((((((EXC_MASK_BAD_ACCESS | EXC_MASK_BAD_INSTRUCTION) | EXC_MASK_ARITHMETIC) | EXC_MASK_EMULATION) | EXC_MASK_SOFTWARE) | EXC_MASK_BREAKPOINT) | EXC_MASK_SYSCALL) | EXC_MASK_MACH_SYSCALL) | EXC_MASK_RPC_ALERT) | EXC_MASK_RESOURCE) | EXC_MASK_GUARD) | EXC_MASK_MACHINE;
pub const FIRST_EXCEPTION = @as(c_int, 1);
pub const EXC_SOFT_SIGNAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10003, .hex);
pub const EXC_MACF_MIN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000, .hex);
pub const EXC_MACF_MAX = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x2FFFF, .hex);
pub const _MACH_THREAD_STATUS_H_ = "";
pub const _MACH_MACHINE_THREAD_STATUS_H_ = "";
pub const _ARM_THREAD_STATUS_H_ = "";
pub const _MACH_MACHINE_THREAD_STATE_H_ = "";
pub const _MACH_ARM_THREAD_STATE_H_ = "";
pub const ARM_THREAD_STATE_MAX = @as(c_int, 1296);
pub const THREAD_STATE_MAX = @as(c_int, 1296);
pub const ARM_THREAD_STATE = @as(c_int, 1);
pub const ARM_UNIFIED_THREAD_STATE = ARM_THREAD_STATE;
pub const ARM_VFP_STATE = @as(c_int, 2);
pub const ARM_EXCEPTION_STATE = @as(c_int, 3);
pub const ARM_DEBUG_STATE = @as(c_int, 4);
pub const THREAD_STATE_NONE = @as(c_int, 5);
pub const ARM_THREAD_STATE64 = @as(c_int, 6);
pub const ARM_EXCEPTION_STATE64 = @as(c_int, 7);
pub const ARM_THREAD_STATE32 = @as(c_int, 9);
pub const ARM_EXCEPTION_STATE64_V2 = @as(c_int, 10);
pub const ARM_DEBUG_STATE32 = @as(c_int, 14);
pub const ARM_DEBUG_STATE64 = @as(c_int, 15);
pub const ARM_NEON_STATE = @as(c_int, 16);
pub const ARM_NEON_STATE64 = @as(c_int, 17);
pub const ARM_CPMU_STATE64 = @as(c_int, 18);
pub const ARM_PAGEIN_STATE = @as(c_int, 27);
pub const ARM_SME_STATE = @as(c_int, 28);
pub const ARM_SVE_Z_STATE1 = @as(c_int, 29);
pub const ARM_SVE_Z_STATE2 = @as(c_int, 30);
pub const ARM_SVE_P_STATE = @as(c_int, 31);
pub const ARM_SME_ZA_STATE1 = @as(c_int, 32);
pub const ARM_SME_ZA_STATE2 = @as(c_int, 33);
pub const ARM_SME_ZA_STATE3 = @as(c_int, 34);
pub const ARM_SME_ZA_STATE4 = @as(c_int, 35);
pub const ARM_SME_ZA_STATE5 = @as(c_int, 36);
pub const ARM_SME_ZA_STATE6 = @as(c_int, 37);
pub const ARM_SME_ZA_STATE7 = @as(c_int, 38);
pub const ARM_SME_ZA_STATE8 = @as(c_int, 39);
pub const ARM_SME_ZA_STATE9 = @as(c_int, 40);
pub const ARM_SME_ZA_STATE10 = @as(c_int, 41);
pub const ARM_SME_ZA_STATE11 = @as(c_int, 42);
pub const ARM_SME_ZA_STATE12 = @as(c_int, 42);
pub const ARM_SME_ZA_STATE13 = @as(c_int, 44);
pub const ARM_SME_ZA_STATE14 = @as(c_int, 45);
pub const ARM_SME_ZA_STATE15 = @as(c_int, 46);
pub const ARM_SME_ZA_STATE16 = @as(c_int, 47);
pub const ARM_SME2_STATE = @as(c_int, 48);
pub const THREAD_STATE_FLAVORS = @as(c_int, 50);
pub inline fn ARM_STATE_FLAVOR_IS_OTHER_VALID(_flavor_: anytype) @TypeOf(@as(c_int, 0)) {
    _ = &_flavor_;
    return @as(c_int, 0);
}
pub inline fn FLAVOR_MODIFIES_CORE_CPU_REGISTERS(x: anytype) @TypeOf(((x == ARM_THREAD_STATE) or (x == ARM_THREAD_STATE32)) or (x == ARM_THREAD_STATE64)) {
    _ = &x;
    return ((x == ARM_THREAD_STATE) or (x == ARM_THREAD_STATE32)) or (x == ARM_THREAD_STATE64);
}
pub inline fn VALID_THREAD_STATE_FLAVOR(x: anytype) @TypeOf(((((((((((((((x == ARM_THREAD_STATE) or (x == ARM_VFP_STATE)) or (x == ARM_EXCEPTION_STATE)) or (x == ARM_DEBUG_STATE)) or (x == THREAD_STATE_NONE)) or (x == ARM_THREAD_STATE32)) or (x == ARM_THREAD_STATE64)) or (x == ARM_EXCEPTION_STATE64)) or (x == ARM_EXCEPTION_STATE64_V2)) or (x == ARM_NEON_STATE)) or (x == ARM_NEON_STATE64)) or (x == ARM_DEBUG_STATE32)) or (x == ARM_DEBUG_STATE64)) or (x == ARM_PAGEIN_STATE)) or (ARM_STATE_FLAVOR_IS_OTHER_VALID(x) != 0)) {
    _ = &x;
    return ((((((((((((((x == ARM_THREAD_STATE) or (x == ARM_VFP_STATE)) or (x == ARM_EXCEPTION_STATE)) or (x == ARM_DEBUG_STATE)) or (x == THREAD_STATE_NONE)) or (x == ARM_THREAD_STATE32)) or (x == ARM_THREAD_STATE64)) or (x == ARM_EXCEPTION_STATE64)) or (x == ARM_EXCEPTION_STATE64_V2)) or (x == ARM_NEON_STATE)) or (x == ARM_NEON_STATE64)) or (x == ARM_DEBUG_STATE32)) or (x == ARM_DEBUG_STATE64)) or (x == ARM_PAGEIN_STATE)) or (ARM_STATE_FLAVOR_IS_OTHER_VALID(x) != 0);
}
pub inline fn arm_thread_state64_get_pc(ts: anytype) @TypeOf(__darwin_arm_thread_state64_get_pc(ts)) {
    _ = &ts;
    return __darwin_arm_thread_state64_get_pc(ts);
}
pub inline fn arm_thread_state64_get_pc_fptr(ts: anytype) @TypeOf(__darwin_arm_thread_state64_get_pc_fptr(ts)) {
    _ = &ts;
    return __darwin_arm_thread_state64_get_pc_fptr(ts);
}
pub inline fn arm_thread_state64_set_pc_fptr(ts: anytype, fptr: anytype) @TypeOf(__darwin_arm_thread_state64_set_pc_fptr(ts, fptr)) {
    _ = &ts;
    _ = &fptr;
    return __darwin_arm_thread_state64_set_pc_fptr(ts, fptr);
}
pub inline fn arm_thread_state64_set_pc_presigned_fptr(ts: anytype, fptr: anytype) @TypeOf(__darwin_arm_thread_state64_set_pc_presigned_fptr(ts, fptr)) {
    _ = &ts;
    _ = &fptr;
    return __darwin_arm_thread_state64_set_pc_presigned_fptr(ts, fptr);
}
pub inline fn arm_thread_state64_get_lr(ts: anytype) @TypeOf(__darwin_arm_thread_state64_get_lr(ts)) {
    _ = &ts;
    return __darwin_arm_thread_state64_get_lr(ts);
}
pub inline fn arm_thread_state64_get_lr_fptr(ts: anytype) @TypeOf(__darwin_arm_thread_state64_get_lr_fptr(ts)) {
    _ = &ts;
    return __darwin_arm_thread_state64_get_lr_fptr(ts);
}
pub inline fn arm_thread_state64_set_lr_fptr(ts: anytype, fptr: anytype) @TypeOf(__darwin_arm_thread_state64_set_lr_fptr(ts, fptr)) {
    _ = &ts;
    _ = &fptr;
    return __darwin_arm_thread_state64_set_lr_fptr(ts, fptr);
}
pub inline fn arm_thread_state64_set_lr_presigned_fptr(ts: anytype, fptr: anytype) @TypeOf(__darwin_arm_thread_state64_set_lr_presigned_fptr(ts, fptr)) {
    _ = &ts;
    _ = &fptr;
    return __darwin_arm_thread_state64_set_lr_presigned_fptr(ts, fptr);
}
pub inline fn arm_thread_state64_get_sp(ts: anytype) @TypeOf(__darwin_arm_thread_state64_get_sp(ts)) {
    _ = &ts;
    return __darwin_arm_thread_state64_get_sp(ts);
}
pub inline fn arm_thread_state64_set_sp(ts: anytype, ptr: anytype) @TypeOf(__darwin_arm_thread_state64_set_sp(ts, ptr)) {
    _ = &ts;
    _ = &ptr;
    return __darwin_arm_thread_state64_set_sp(ts, ptr);
}
pub inline fn arm_thread_state64_get_fp(ts: anytype) @TypeOf(__darwin_arm_thread_state64_get_fp(ts)) {
    _ = &ts;
    return __darwin_arm_thread_state64_get_fp(ts);
}
pub inline fn arm_thread_state64_set_fp(ts: anytype, ptr: anytype) @TypeOf(__darwin_arm_thread_state64_set_fp(ts, ptr)) {
    _ = &ts;
    _ = &ptr;
    return __darwin_arm_thread_state64_set_fp(ts, ptr);
}
pub inline fn arm_thread_state64_ptrauth_strip(ts: anytype) @TypeOf(__darwin_arm_thread_state64_ptrauth_strip(ts)) {
    _ = &ts;
    return __darwin_arm_thread_state64_ptrauth_strip(ts);
}
pub const ts_32 = @compileError("unable to translate macro: undefined identifier `uts`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/thread_status.h:199:9
pub const ts_64 = @compileError("unable to translate macro: undefined identifier `uts`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/thread_status.h:200:9
pub const ARM_THREAD_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_thread_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_THREAD_STATE32_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_thread_state32_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_THREAD_STATE64_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_thread_state64_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_UNIFIED_THREAD_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_unified_thread_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_VFP_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_vfp_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_EXCEPTION_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_exception_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_EXCEPTION_STATE64_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_exception_state64_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_EXCEPTION_STATE64_V2_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_exception_state64_v2_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_DEBUG_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_debug_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_DEBUG_STATE32_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_debug_state32_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_PAGEIN_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_pagein_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_DEBUG_STATE64_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_debug_state64_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_NEON_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_neon_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_NEON_STATE64_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_neon_state64_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_SME_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_sme_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_SVE_Z_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_sve_z_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_SVE_P_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_sve_p_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_SME_ZA_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_sme_za_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const ARM_SME2_STATE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(arm_sme2_state_t), @import("std").zig.c_translation.sizeof(u32)));
pub const MACHINE_THREAD_STATE = ARM_THREAD_STATE;
pub const MACHINE_THREAD_STATE_COUNT = ARM_UNIFIED_THREAD_STATE_COUNT;
pub const THREAD_MACHINE_STATE_MAX = THREAD_STATE_MAX;
pub const THREAD_STATE_FLAVOR_LIST = @as(c_int, 0);
pub const THREAD_STATE_FLAVOR_LIST_NEW = @as(c_int, 128);
pub const THREAD_STATE_FLAVOR_LIST_10_9 = @as(c_int, 129);
pub const THREAD_STATE_FLAVOR_LIST_10_13 = @as(c_int, 130);
pub const THREAD_STATE_FLAVOR_LIST_10_15 = @as(c_int, 131);
pub const THREAD_CONVERT_THREAD_STATE_TO_SELF = @as(c_int, 1);
pub const THREAD_CONVERT_THREAD_STATE_FROM_SELF = @as(c_int, 2);
pub const _MACH_DEBUG_IPC_INFO_H_ = "";
pub const _MACH_VOUCHER_TYPES_H_ = "";
pub const _MACH_STD_TYPES_H_ = "";
pub const MACH_VOUCHER_NULL = @import("std").zig.c_translation.cast(mach_voucher_t, @as(c_int, 0));
pub const MACH_VOUCHER_NAME_NULL = @import("std").zig.c_translation.cast(mach_voucher_name_t, @as(c_int, 0));
pub const MACH_VOUCHER_NAME_ARRAY_NULL = @import("std").zig.c_translation.cast(mach_voucher_name_array_t, @as(c_int, 0));
pub const IPC_VOUCHER_NULL = @import("std").zig.c_translation.cast(ipc_voucher_t, @as(c_int, 0));
pub const MACH_VOUCHER_SELECTOR_CURRENT = @import("std").zig.c_translation.cast(mach_voucher_selector_t, @as(c_int, 0));
pub const MACH_VOUCHER_SELECTOR_EFFECTIVE = @import("std").zig.c_translation.cast(mach_voucher_selector_t, @as(c_int, 1));
pub const MACH_VOUCHER_ATTR_KEY_ALL = @import("std").zig.c_translation.cast(mach_voucher_attr_key_t, ~@as(c_int, 0));
pub const MACH_VOUCHER_ATTR_KEY_NONE = @import("std").zig.c_translation.cast(mach_voucher_attr_key_t, @as(c_int, 0));
pub const MACH_VOUCHER_ATTR_KEY_ATM = @import("std").zig.c_translation.cast(mach_voucher_attr_key_t, @as(c_int, 1));
pub const MACH_VOUCHER_ATTR_KEY_IMPORTANCE = @import("std").zig.c_translation.cast(mach_voucher_attr_key_t, @as(c_int, 2));
pub const MACH_VOUCHER_ATTR_KEY_BANK = @import("std").zig.c_translation.cast(mach_voucher_attr_key_t, @as(c_int, 3));
pub const MACH_VOUCHER_ATTR_KEY_PTHPRIORITY = @import("std").zig.c_translation.cast(mach_voucher_attr_key_t, @as(c_int, 4));
pub const MACH_VOUCHER_ATTR_KEY_USER_DATA = @import("std").zig.c_translation.cast(mach_voucher_attr_key_t, @as(c_int, 7));
pub const MACH_VOUCHER_ATTR_KEY_BITS = MACH_VOUCHER_ATTR_KEY_USER_DATA;
pub const MACH_VOUCHER_ATTR_KEY_TEST = @import("std").zig.c_translation.cast(mach_voucher_attr_key_t, @as(c_int, 8));
pub const MACH_VOUCHER_ATTR_KEY_NUM_WELL_KNOWN = MACH_VOUCHER_ATTR_KEY_TEST;
pub const MACH_VOUCHER_ATTR_NOOP = @import("std").zig.c_translation.cast(mach_voucher_attr_recipe_command_t, @as(c_int, 0));
pub const MACH_VOUCHER_ATTR_COPY = @import("std").zig.c_translation.cast(mach_voucher_attr_recipe_command_t, @as(c_int, 1));
pub const MACH_VOUCHER_ATTR_REMOVE = @import("std").zig.c_translation.cast(mach_voucher_attr_recipe_command_t, @as(c_int, 2));
pub const MACH_VOUCHER_ATTR_SET_VALUE_HANDLE = @import("std").zig.c_translation.cast(mach_voucher_attr_recipe_command_t, @as(c_int, 3));
pub const MACH_VOUCHER_ATTR_AUTO_REDEEM = @import("std").zig.c_translation.cast(mach_voucher_attr_recipe_command_t, @as(c_int, 4));
pub const MACH_VOUCHER_ATTR_SEND_PREPROCESS = @import("std").zig.c_translation.cast(mach_voucher_attr_recipe_command_t, @as(c_int, 5));
pub const MACH_VOUCHER_ATTR_REDEEM = @import("std").zig.c_translation.cast(mach_voucher_attr_recipe_command_t, @as(c_int, 10));
pub const MACH_VOUCHER_ATTR_IMPORTANCE_SELF = @import("std").zig.c_translation.cast(mach_voucher_attr_recipe_command_t, @as(c_int, 200));
pub const MACH_VOUCHER_ATTR_USER_DATA_STORE = @import("std").zig.c_translation.cast(mach_voucher_attr_recipe_command_t, @as(c_int, 211));
pub const MACH_VOUCHER_ATTR_BITS_STORE = MACH_VOUCHER_ATTR_USER_DATA_STORE;
pub const MACH_VOUCHER_ATTR_TEST_STORE = MACH_VOUCHER_ATTR_USER_DATA_STORE;
pub const MACH_VOUCHER_ATTR_MAX_RAW_RECIPE_ARRAY_SIZE = @as(c_int, 5120);
pub const MACH_VOUCHER_TRAP_STACK_LIMIT = @as(c_int, 256);
pub const MACH_VOUCHER_ATTR_MANAGER_NULL = @import("std").zig.c_translation.cast(mach_voucher_attr_manager_t, @as(c_int, 0));
pub const MACH_VOUCHER_ATTR_CONTROL_NULL = @import("std").zig.c_translation.cast(mach_voucher_attr_control_t, @as(c_int, 0));
pub const IPC_VOUCHER_ATTR_MANAGER_NULL = @import("std").zig.c_translation.cast(ipc_voucher_attr_manager_t, @as(c_int, 0));
pub const IPC_VOUCHER_ATTR_CONTROL_NULL = @import("std").zig.c_translation.cast(ipc_voucher_attr_control_t, @as(c_int, 0));
pub const MACH_VOUCHER_ATTR_VALUE_MAX_NESTED = @import("std").zig.c_translation.cast(mach_voucher_attr_value_handle_array_size_t, @as(c_int, 4));
pub const MACH_VOUCHER_ATTR_VALUE_FLAGS_NONE = @import("std").zig.c_translation.cast(mach_voucher_attr_value_flags_t, @as(c_int, 0));
pub const MACH_VOUCHER_ATTR_VALUE_FLAGS_PERSIST = @import("std").zig.c_translation.cast(mach_voucher_attr_value_flags_t, @as(c_int, 1));
pub const MACH_VOUCHER_ATTR_CONTROL_FLAGS_NONE = @import("std").zig.c_translation.cast(mach_voucher_attr_control_flags_t, @as(c_int, 0));
pub const MACH_VOUCHER_IMPORTANCE_ATTR_ADD_EXTERNAL = @as(c_int, 1);
pub const MACH_VOUCHER_IMPORTANCE_ATTR_DROP_EXTERNAL = @as(c_int, 2);
pub const MACH_ACTIVITY_ID_COUNT_MAX = @as(c_int, 16);
pub const _MACH_PROCESSOR_INFO_H_ = "";
pub const _MACH_MACHINE_PROCESSOR_INFO_H_ = "";
pub const _MACH_ARM_PROCESSOR_INFO_H_ = "";
pub const PROCESSOR_CPU_STAT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000003, .hex);
pub const PROCESSOR_CPU_STAT64 = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000004, .hex);
pub const PROCESSOR_CPU_STAT_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(processor_cpu_stat_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const PROCESSOR_CPU_STAT64_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(processor_cpu_stat64_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const PROCESSOR_INFO_MAX = @as(c_int, 1024);
pub const PROCESSOR_SET_INFO_MAX = @as(c_int, 1024);
pub const PROCESSOR_BASIC_INFO = @as(c_int, 1);
pub const PROCESSOR_CPU_LOAD_INFO = @as(c_int, 2);
pub const PROCESSOR_PM_REGS_INFO = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000001, .hex);
pub const PROCESSOR_TEMPERATURE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000002, .hex);
pub const PROCESSOR_BASIC_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(processor_basic_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const PROCESSOR_CPU_LOAD_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(processor_cpu_load_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const LOAD_SCALE = @as(c_int, 1000);
pub const PROCESSOR_SET_BASIC_INFO = @as(c_int, 5);
pub const PROCESSOR_SET_BASIC_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(processor_set_basic_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const PROCESSOR_SET_LOAD_INFO = @as(c_int, 4);
pub const PROCESSOR_SET_LOAD_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(processor_set_load_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const _MACH_TASK_INFO_H_ = "";
pub const _MACH_POLICY_H_ = "";
pub const POLICY_NULL = @as(c_int, 0);
pub const POLICY_TIMESHARE = @as(c_int, 1);
pub const POLICY_RR = @as(c_int, 2);
pub const POLICY_FIFO = @as(c_int, 4);
pub const __NEW_SCHEDULING_FRAMEWORK__ = "";
pub const POLICYCLASS_FIXEDPRI = POLICY_RR | POLICY_FIFO;
pub inline fn invalid_policy(policy: anytype) @TypeOf(((policy != POLICY_TIMESHARE) and (policy != POLICY_RR)) and (policy != POLICY_FIFO)) {
    _ = &policy;
    return ((policy != POLICY_TIMESHARE) and (policy != POLICY_RR)) and (policy != POLICY_FIFO);
}
pub const POLICY_TIMESHARE_BASE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_policy_timeshare_base), @import("std").zig.c_translation.sizeof(integer_t)));
pub const POLICY_TIMESHARE_LIMIT_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_policy_timeshare_limit), @import("std").zig.c_translation.sizeof(integer_t)));
pub const POLICY_TIMESHARE_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_policy_timeshare_info), @import("std").zig.c_translation.sizeof(integer_t)));
pub const POLICY_RR_BASE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_policy_rr_base), @import("std").zig.c_translation.sizeof(integer_t)));
pub const POLICY_RR_LIMIT_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_policy_rr_limit), @import("std").zig.c_translation.sizeof(integer_t)));
pub const POLICY_RR_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_policy_rr_info), @import("std").zig.c_translation.sizeof(integer_t)));
pub const POLICY_FIFO_BASE_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_policy_fifo_base), @import("std").zig.c_translation.sizeof(integer_t)));
pub const POLICY_FIFO_LIMIT_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_policy_fifo_limit), @import("std").zig.c_translation.sizeof(integer_t)));
pub const POLICY_FIFO_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_policy_fifo_info), @import("std").zig.c_translation.sizeof(integer_t)));
pub const TASK_INFO_MAX = @as(c_int, 1024);
pub const TASK_BASIC_INFO_32 = @as(c_int, 4);
pub const TASK_BASIC2_INFO_32 = @as(c_int, 6);
pub const TASK_BASIC_INFO_32_COUNT = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_basic_info_32_data_t), @import("std").zig.c_translation.sizeof(natural_t));
pub const TASK_BASIC_INFO_64 = TASK_BASIC_INFO_64_2;
pub const TASK_BASIC_INFO_64_COUNT = TASK_BASIC_INFO_64_2_COUNT;
pub const TASK_BASIC_INFO_COUNT = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_basic_info_data_t), @import("std").zig.c_translation.sizeof(natural_t));
pub const TASK_BASIC_INFO = TASK_BASIC_INFO_64;
pub const TASK_EVENTS_INFO = @as(c_int, 2);
pub const TASK_EVENTS_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_events_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_THREAD_TIMES_INFO = @as(c_int, 3);
pub const TASK_THREAD_TIMES_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_thread_times_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_ABSOLUTETIME_INFO = @as(c_int, 1);
pub const TASK_ABSOLUTETIME_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_absolutetime_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_KERNELMEMORY_INFO = @as(c_int, 7);
pub const TASK_KERNELMEMORY_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_kernelmemory_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_SECURITY_TOKEN = @as(c_int, 13);
pub const TASK_SECURITY_TOKEN_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(security_token_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_AUDIT_TOKEN = @as(c_int, 15);
pub const TASK_AUDIT_TOKEN_COUNT = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(audit_token_t), @import("std").zig.c_translation.sizeof(natural_t));
pub const TASK_AFFINITY_TAG_INFO = @as(c_int, 16);
pub const TASK_AFFINITY_TAG_INFO_COUNT = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_affinity_tag_info_data_t), @import("std").zig.c_translation.sizeof(natural_t));
pub const TASK_DYLD_INFO = @as(c_int, 17);
pub const TASK_DYLD_INFO_COUNT = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_dyld_info_data_t), @import("std").zig.c_translation.sizeof(natural_t));
pub const TASK_DYLD_ALL_IMAGE_INFO_32 = @as(c_int, 0);
pub const TASK_DYLD_ALL_IMAGE_INFO_64 = @as(c_int, 1);
pub const TASK_BASIC_INFO_64_2 = @as(c_int, 18);
pub const TASK_BASIC_INFO_64_2_COUNT = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_basic_info_64_2_data_t), @import("std").zig.c_translation.sizeof(natural_t));
pub const TASK_EXTMOD_INFO = @as(c_int, 19);
pub const TASK_EXTMOD_INFO_COUNT = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_extmod_info_data_t), @import("std").zig.c_translation.sizeof(natural_t));
pub const MACH_TASK_BASIC_INFO = @as(c_int, 20);
pub const MACH_TASK_BASIC_INFO_COUNT = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(mach_task_basic_info_data_t), @import("std").zig.c_translation.sizeof(natural_t));
pub const TASK_POWER_INFO = @as(c_int, 21);
pub const TASK_POWER_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_power_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_VM_INFO = @as(c_int, 22);
pub const TASK_VM_INFO_PURGEABLE = @as(c_int, 23);
pub const TASK_VM_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_vm_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_VM_INFO_REV7_COUNT = TASK_VM_INFO_COUNT;
pub const TASK_VM_INFO_REV6_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, TASK_VM_INFO_REV7_COUNT - @as(c_int, 4));
pub const TASK_VM_INFO_REV5_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, TASK_VM_INFO_REV6_COUNT - @as(c_int, 2));
pub const TASK_VM_INFO_REV4_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, TASK_VM_INFO_REV5_COUNT - @as(c_int, 1));
pub const TASK_VM_INFO_REV3_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, TASK_VM_INFO_REV4_COUNT - @as(c_int, 2));
pub const TASK_VM_INFO_REV2_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, TASK_VM_INFO_REV3_COUNT - @as(c_int, 42));
pub const TASK_VM_INFO_REV1_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, TASK_VM_INFO_REV2_COUNT - @as(c_int, 4));
pub const TASK_VM_INFO_REV0_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, TASK_VM_INFO_REV1_COUNT - @as(c_int, 2));
pub const TASK_TRACE_MEMORY_INFO = @as(c_int, 24);
pub const TASK_TRACE_MEMORY_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_trace_memory_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_WAIT_STATE_INFO = @as(c_int, 25);
pub const TASK_WAIT_STATE_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_wait_state_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_POWER_INFO_V2 = @as(c_int, 26);
pub const TASK_POWER_INFO_V2_COUNT_OLD = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.sizeof(task_power_info_v2_data_t) - (@import("std").zig.c_translation.sizeof(u64) * @as(c_int, 2))), @import("std").zig.c_translation.sizeof(natural_t));
pub const TASK_POWER_INFO_V2_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_power_info_v2_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_VM_INFO_PURGEABLE_ACCOUNT = @as(c_int, 27);
pub const TASK_FLAGS_INFO = @as(c_int, 28);
pub const TASK_FLAGS_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_flags_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TF_LP64 = @as(c_int, 0x00000001);
pub const TF_64B_DATA = @as(c_int, 0x00000002);
pub const TASK_DEBUG_INFO_INTERNAL = @as(c_int, 29);
pub const TASK_SECURITY_CONFIG_INFO = @as(c_int, 32);
pub const TASK_SECURITY_CONFIG_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_task_security_config_info), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TASK_EXC_GUARD_NONE = @as(c_int, 0x00);
pub const TASK_EXC_GUARD_VM_DELIVER = @as(c_int, 0x01);
pub const TASK_EXC_GUARD_VM_ONCE = @as(c_int, 0x02);
pub const TASK_EXC_GUARD_VM_CORPSE = @as(c_int, 0x04);
pub const TASK_EXC_GUARD_VM_FATAL = @as(c_int, 0x08);
pub const TASK_EXC_GUARD_VM_ALL = @as(c_int, 0x0f);
pub const TASK_EXC_GUARD_MP_DELIVER = @as(c_int, 0x10);
pub const TASK_EXC_GUARD_MP_ONCE = @as(c_int, 0x20);
pub const TASK_EXC_GUARD_MP_CORPSE = @as(c_int, 0x40);
pub const TASK_EXC_GUARD_MP_FATAL = @as(c_int, 0x80);
pub const TASK_EXC_GUARD_MP_ALL = @as(c_int, 0xf0);
pub const TASK_EXC_GUARD_ALL = @as(c_int, 0xff);
pub const TASK_CORPSE_FORKING_DISABLED_MEM_DIAG = @as(c_int, 0x01);
pub const TASK_SCHED_TIMESHARE_INFO = @as(c_int, 10);
pub const TASK_SCHED_RR_INFO = @as(c_int, 11);
pub const TASK_SCHED_FIFO_INFO = @as(c_int, 12);
pub const TASK_SCHED_INFO = @as(c_int, 14);
pub const MACH_TASK_INSPECT_H = "";
pub const TASK_INSPECT_BASIC_COUNTS_COUNT = @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_task_inspect_basic_counts), @import("std").zig.c_translation.sizeof(natural_t));
pub const _MACH_TASK_POLICY_H_ = "";
pub const TASK_CATEGORY_POLICY = @as(c_int, 1);
pub const TASK_SUPPRESSION_POLICY = @as(c_int, 3);
pub const TASK_POLICY_STATE = @as(c_int, 4);
pub const TASK_BASE_QOS_POLICY = @as(c_int, 8);
pub const TASK_OVERRIDE_QOS_POLICY = @as(c_int, 9);
pub const TASK_BASE_LATENCY_QOS_POLICY = @as(c_int, 10);
pub const TASK_BASE_THROUGHPUT_QOS_POLICY = @as(c_int, 11);
pub const TASK_CATEGORY_POLICY_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(task_category_policy_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const LATENCY_QOS_LAUNCH_DEFAULT_TIER = LATENCY_QOS_TIER_3;
pub const THROUGHPUT_QOS_LAUNCH_DEFAULT_TIER = THROUGHPUT_QOS_TIER_3;
pub const TASK_QOS_POLICY_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(struct_task_qos_policy), @import("std").zig.c_translation.sizeof(integer_t)));
pub const PROC_FLAG_DARWINBG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8000, .hex);
pub const PROC_FLAG_EXT_DARWINBG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000, .hex);
pub const PROC_FLAG_IOS_APPLEDAEMON = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000, .hex);
pub const PROC_FLAG_IOS_IMPPROMOTION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000, .hex);
pub const PROC_FLAG_ADAPTIVE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x100000, .hex);
pub const PROC_FLAG_ADAPTIVE_IMPORTANT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x200000, .hex);
pub const PROC_FLAG_IMPORTANCE_DONOR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x400000, .hex);
pub const PROC_FLAG_SUPPRESSED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x800000, .hex);
pub const PROC_FLAG_APPLICATION = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x1000000, .hex);
pub const PROC_FLAG_IOS_APPLICATION = PROC_FLAG_APPLICATION;
pub const _MACH_TASK_SPECIAL_PORTS_H_ = "";
pub const TASK_KERNEL_PORT = @as(c_int, 1);
pub const TASK_HOST_PORT = @as(c_int, 2);
pub const TASK_NAME_PORT = @as(c_int, 3);
pub const TASK_BOOTSTRAP_PORT = @as(c_int, 4);
pub const TASK_INSPECT_PORT = @as(c_int, 5);
pub const TASK_READ_PORT = @as(c_int, 6);
pub const TASK_ACCESS_PORT = @as(c_int, 9);
pub const TASK_DEBUG_CONTROL_PORT = @as(c_int, 10);
pub const TASK_RESOURCE_NOTIFY_PORT = @as(c_int, 11);
pub const TASK_MAX_SPECIAL_PORT = TASK_RESOURCE_NOTIFY_PORT;
pub const task_get_kernel_port = @compileError("unable to translate macro: undefined identifier `task_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:104:9
pub const task_set_kernel_port = @compileError("unable to translate macro: undefined identifier `task_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:107:9
pub const task_get_host_port = @compileError("unable to translate macro: undefined identifier `task_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:110:9
pub const task_set_host_port = @compileError("unable to translate macro: undefined identifier `task_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:113:9
pub const task_get_bootstrap_port = @compileError("unable to translate macro: undefined identifier `task_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:116:9
pub const task_get_debug_control_port = @compileError("unable to translate macro: undefined identifier `task_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:119:9
pub const task_set_bootstrap_port = @compileError("unable to translate macro: undefined identifier `task_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:122:9
pub const task_get_task_access_port = @compileError("unable to translate macro: undefined identifier `task_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:125:9
pub const task_set_task_access_port = @compileError("unable to translate macro: undefined identifier `task_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:128:9
pub const task_set_task_debug_control_port = @compileError("unable to translate macro: undefined identifier `task_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/task_special_ports.h:131:9
pub const _MACH_THREAD_INFO_H_ = "";
pub const THREAD_INFO_MAX = @as(c_int, 32);
pub const THREAD_BASIC_INFO = @as(c_int, 3);
pub const THREAD_BASIC_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_basic_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const THREAD_IDENTIFIER_INFO = @as(c_int, 4);
pub const THREAD_IDENTIFIER_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_identifier_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const TH_USAGE_SCALE = @as(c_int, 1000);
pub const TH_STATE_RUNNING = @as(c_int, 1);
pub const TH_STATE_STOPPED = @as(c_int, 2);
pub const TH_STATE_WAITING = @as(c_int, 3);
pub const TH_STATE_UNINTERRUPTIBLE = @as(c_int, 4);
pub const TH_STATE_HALTED = @as(c_int, 5);
pub const TH_FLAGS_SWAPPED = @as(c_int, 0x1);
pub const TH_FLAGS_IDLE = @as(c_int, 0x2);
pub const TH_FLAGS_GLOBAL_FORCED_IDLE = @as(c_int, 0x4);
pub const THREAD_EXTENDED_INFO = @as(c_int, 5);
pub const MAXTHREADNAMESIZE = @as(c_int, 64);
pub const THREAD_EXTENDED_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_extended_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const THREAD_DEBUG_INFO_INTERNAL = @as(c_int, 6);
pub const IO_NUM_PRIORITIES = @as(c_int, 4);
pub const UPDATE_IO_STATS = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/thread_info.h:175:9
pub const UPDATE_IO_STATS_ATOMIC = @compileError("unable to translate macro: undefined identifier `OSIncrementAtomic64`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/thread_info.h:181:9
pub const THREAD_SCHED_TIMESHARE_INFO = @as(c_int, 10);
pub const THREAD_SCHED_RR_INFO = @as(c_int, 11);
pub const THREAD_SCHED_FIFO_INFO = @as(c_int, 12);
pub const _MACH_THREAD_POLICY_H_ = "";
pub const THREAD_STANDARD_POLICY = @as(c_int, 1);
pub const THREAD_STANDARD_POLICY_COUNT = @as(c_int, 0);
pub const THREAD_EXTENDED_POLICY = @as(c_int, 1);
pub const THREAD_EXTENDED_POLICY_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_extended_policy_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const THREAD_TIME_CONSTRAINT_POLICY = @as(c_int, 2);
pub const THREAD_TIME_CONSTRAINT_POLICY_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_time_constraint_policy_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const THREAD_PRECEDENCE_POLICY = @as(c_int, 3);
pub const THREAD_PRECEDENCE_POLICY_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_precedence_policy_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const THREAD_AFFINITY_POLICY = @as(c_int, 4);
pub const THREAD_AFFINITY_TAG_NULL = @as(c_int, 0);
pub const THREAD_AFFINITY_POLICY_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_affinity_policy_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const THREAD_BACKGROUND_POLICY = @as(c_int, 5);
pub const THREAD_BACKGROUND_POLICY_DARWIN_BG = @as(c_int, 0x1000);
pub const THREAD_BACKGROUND_POLICY_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_background_policy_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const THREAD_LATENCY_QOS_POLICY = @as(c_int, 7);
pub const THREAD_LATENCY_QOS_POLICY_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_latency_qos_policy_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const THREAD_THROUGHPUT_QOS_POLICY = @as(c_int, 8);
pub const THREAD_THROUGHPUT_QOS_POLICY_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(thread_throughput_qos_policy_data_t), @import("std").zig.c_translation.sizeof(integer_t)));
pub const _MACH_THREAD_SPECIAL_PORTS_H_ = "";
pub const THREAD_KERNEL_PORT = @as(c_int, 1);
pub const THREAD_INSPECT_PORT = @as(c_int, 2);
pub const THREAD_READ_PORT = @as(c_int, 3);
pub const THREAD_MAX_SPECIAL_PORT = THREAD_READ_PORT;
pub const thread_get_kernel_port = @compileError("unable to translate macro: undefined identifier `thread_get_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/thread_special_ports.h:81:9
pub const thread_set_kernel_port = @compileError("unable to translate macro: undefined identifier `thread_set_special_port`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/thread_special_ports.h:84:9
pub const _MACH_CLOCK_TYPES_H_ = "";
pub const SYSTEM_CLOCK = @as(c_int, 0);
pub const CALENDAR_CLOCK = @as(c_int, 1);
pub const REALTIME_CLOCK = @as(c_int, 0);
pub const CLOCK_GET_TIME_RES = @as(c_int, 1);
pub const CLOCK_ALARM_CURRES = @as(c_int, 3);
pub const CLOCK_ALARM_MINRES = @as(c_int, 4);
pub const CLOCK_ALARM_MAXRES = @as(c_int, 5);
pub const NSEC_PER_USEC = @as(c_ulonglong, 1000);
pub const USEC_PER_SEC = @as(c_ulonglong, 1000000);
pub const NSEC_PER_SEC = @as(c_ulonglong, 1000000000);
pub const NSEC_PER_MSEC = @as(c_ulonglong, 1000000);
pub inline fn BAD_MACH_TIMESPEC(t: anytype) @TypeOf((t.*.tv_nsec < @as(c_int, 0)) or (t.*.tv_nsec >= @import("std").zig.c_translation.cast(c_long, NSEC_PER_SEC))) {
    _ = &t;
    return (t.*.tv_nsec < @as(c_int, 0)) or (t.*.tv_nsec >= @import("std").zig.c_translation.cast(c_long, NSEC_PER_SEC));
}
pub inline fn CMP_MACH_TIMESPEC(t1: anytype, t2: anytype) @TypeOf(if (t1.*.tv_sec > t2.*.tv_sec) @import("std").zig.c_translation.cast(c_long, NSEC_PER_SEC) else if (t1.*.tv_sec < t2.*.tv_sec) @import("std").zig.c_translation.cast(c_long, -NSEC_PER_SEC) else t1.*.tv_nsec - t2.*.tv_nsec) {
    _ = &t1;
    _ = &t2;
    return if (t1.*.tv_sec > t2.*.tv_sec) @import("std").zig.c_translation.cast(c_long, NSEC_PER_SEC) else if (t1.*.tv_sec < t2.*.tv_sec) @import("std").zig.c_translation.cast(c_long, -NSEC_PER_SEC) else t1.*.tv_nsec - t2.*.tv_nsec;
}
pub const ADD_MACH_TIMESPEC = @compileError("unable to translate C expr: unexpected token 'do'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/clock_types.h:99:9
pub const SUB_MACH_TIMESPEC = @compileError("unable to translate C expr: unexpected token 'do'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/clock_types.h:109:9
pub const ALRMTYPE = @as(c_int, 0xff);
pub const TIME_ABSOLUTE = @as(c_int, 0x00);
pub const TIME_RELATIVE = @as(c_int, 0x01);
pub inline fn BAD_ALRMTYPE(t: anytype) @TypeOf((t & ~TIME_RELATIVE) != @as(c_int, 0)) {
    _ = &t;
    return (t & ~TIME_RELATIVE) != @as(c_int, 0);
}
pub const _MACH_VM_ATTRIBUTES_H_ = "";
pub const MATTR_CACHE = @as(c_int, 1);
pub const MATTR_MIGRATE = @as(c_int, 2);
pub const MATTR_REPLICATE = @as(c_int, 4);
pub const MATTR_VAL_OFF = @as(c_int, 0);
pub const MATTR_VAL_ON = @as(c_int, 1);
pub const MATTR_VAL_GET = @as(c_int, 2);
pub const MATTR_VAL_CACHE_FLUSH = @as(c_int, 6);
pub const MATTR_VAL_DCACHE_FLUSH = @as(c_int, 7);
pub const MATTR_VAL_ICACHE_FLUSH = @as(c_int, 8);
pub const MATTR_VAL_CACHE_SYNC = @as(c_int, 9);
pub const MATTR_VAL_GET_INFO = @as(c_int, 10);
pub const _MACH_VM_INHERIT_H_ = "";
pub const VM_INHERIT_SHARE = @import("std").zig.c_translation.cast(vm_inherit_t, @as(c_int, 0));
pub const VM_INHERIT_COPY = @import("std").zig.c_translation.cast(vm_inherit_t, @as(c_int, 1));
pub const VM_INHERIT_NONE = @import("std").zig.c_translation.cast(vm_inherit_t, @as(c_int, 2));
pub const VM_INHERIT_DONATE_COPY = @import("std").zig.c_translation.cast(vm_inherit_t, @as(c_int, 3));
pub const VM_INHERIT_DEFAULT = VM_INHERIT_COPY;
pub const VM_INHERIT_LAST_VALID = VM_INHERIT_NONE;
pub const _MACH_VM_PURGABLE_H_ = "";
pub const VM_PURGABLE_SET_STATE = @import("std").zig.c_translation.cast(vm_purgable_t, @as(c_int, 0));
pub const VM_PURGABLE_GET_STATE = @import("std").zig.c_translation.cast(vm_purgable_t, @as(c_int, 1));
pub const VM_PURGABLE_PURGE_ALL = @import("std").zig.c_translation.cast(vm_purgable_t, @as(c_int, 2));
pub const VM_PURGABLE_SET_STATE_FROM_KERNEL = @import("std").zig.c_translation.cast(vm_purgable_t, @as(c_int, 3));
pub const VM_PURGABLE_NO_AGING_SHIFT = @as(c_int, 16);
pub const VM_PURGABLE_NO_AGING_MASK = @as(c_int, 0x1) << VM_PURGABLE_NO_AGING_SHIFT;
pub const VM_PURGABLE_NO_AGING = @as(c_int, 0x1) << VM_PURGABLE_NO_AGING_SHIFT;
pub const VM_PURGABLE_DEBUG_SHIFT = @as(c_int, 12);
pub const VM_PURGABLE_DEBUG_MASK = @as(c_int, 0x3) << VM_PURGABLE_DEBUG_SHIFT;
pub const VM_PURGABLE_DEBUG_EMPTY = @as(c_int, 0x1) << VM_PURGABLE_DEBUG_SHIFT;
pub const VM_PURGABLE_DEBUG_FAULT = @as(c_int, 0x2) << VM_PURGABLE_DEBUG_SHIFT;
pub const VM_VOLATILE_GROUP_SHIFT = @as(c_int, 8);
pub const VM_VOLATILE_GROUP_MASK = @as(c_int, 7) << VM_VOLATILE_GROUP_SHIFT;
pub const VM_VOLATILE_GROUP_DEFAULT = VM_VOLATILE_GROUP_0;
pub const VM_VOLATILE_GROUP_0 = @as(c_int, 0) << VM_VOLATILE_GROUP_SHIFT;
pub const VM_VOLATILE_GROUP_1 = @as(c_int, 1) << VM_VOLATILE_GROUP_SHIFT;
pub const VM_VOLATILE_GROUP_2 = @as(c_int, 2) << VM_VOLATILE_GROUP_SHIFT;
pub const VM_VOLATILE_GROUP_3 = @as(c_int, 3) << VM_VOLATILE_GROUP_SHIFT;
pub const VM_VOLATILE_GROUP_4 = @as(c_int, 4) << VM_VOLATILE_GROUP_SHIFT;
pub const VM_VOLATILE_GROUP_5 = @as(c_int, 5) << VM_VOLATILE_GROUP_SHIFT;
pub const VM_VOLATILE_GROUP_6 = @as(c_int, 6) << VM_VOLATILE_GROUP_SHIFT;
pub const VM_VOLATILE_GROUP_7 = @as(c_int, 7) << VM_VOLATILE_GROUP_SHIFT;
pub const VM_PURGABLE_BEHAVIOR_SHIFT = @as(c_int, 6);
pub const VM_PURGABLE_BEHAVIOR_MASK = @as(c_int, 1) << VM_PURGABLE_BEHAVIOR_SHIFT;
pub const VM_PURGABLE_BEHAVIOR_FIFO = @as(c_int, 0) << VM_PURGABLE_BEHAVIOR_SHIFT;
pub const VM_PURGABLE_BEHAVIOR_LIFO = @as(c_int, 1) << VM_PURGABLE_BEHAVIOR_SHIFT;
pub const VM_PURGABLE_ORDERING_SHIFT = @as(c_int, 5);
pub const VM_PURGABLE_ORDERING_MASK = @as(c_int, 1) << VM_PURGABLE_ORDERING_SHIFT;
pub const VM_PURGABLE_ORDERING_OBSOLETE = @as(c_int, 1) << VM_PURGABLE_ORDERING_SHIFT;
pub const VM_PURGABLE_ORDERING_NORMAL = @as(c_int, 0) << VM_PURGABLE_ORDERING_SHIFT;
pub const VM_VOLATILE_ORDER_SHIFT = @as(c_int, 4);
pub const VM_VOLATILE_ORDER_MASK = @as(c_int, 1) << VM_VOLATILE_ORDER_SHIFT;
pub const VM_VOLATILE_MAKE_FIRST_IN_GROUP = @as(c_int, 1) << VM_VOLATILE_ORDER_SHIFT;
pub const VM_VOLATILE_MAKE_LAST_IN_GROUP = @as(c_int, 0) << VM_VOLATILE_ORDER_SHIFT;
pub const VM_PURGABLE_STATE_MIN = @as(c_int, 0);
pub const VM_PURGABLE_STATE_MAX = @as(c_int, 3);
pub const VM_PURGABLE_STATE_MASK = @as(c_int, 3);
pub const VM_PURGABLE_NONVOLATILE = @as(c_int, 0);
pub const VM_PURGABLE_VOLATILE = @as(c_int, 1);
pub const VM_PURGABLE_EMPTY = @as(c_int, 2);
pub const VM_PURGABLE_DENY = @as(c_int, 3);
pub const VM_PURGABLE_ALL_MASKS = (((((VM_PURGABLE_STATE_MASK | VM_VOLATILE_ORDER_MASK) | VM_PURGABLE_ORDERING_MASK) | VM_PURGABLE_BEHAVIOR_MASK) | VM_VOLATILE_GROUP_MASK) | VM_PURGABLE_DEBUG_MASK) | VM_PURGABLE_NO_AGING_MASK;
pub const _MACH_VM_BEHAVIOR_H_ = "";
pub const VM_BEHAVIOR_DEFAULT = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 0));
pub const VM_BEHAVIOR_RANDOM = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 1));
pub const VM_BEHAVIOR_SEQUENTIAL = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 2));
pub const VM_BEHAVIOR_RSEQNTL = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 3));
pub const VM_BEHAVIOR_WILLNEED = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 4));
pub const VM_BEHAVIOR_DONTNEED = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 5));
pub const VM_BEHAVIOR_FREE = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 6));
pub const VM_BEHAVIOR_ZERO_WIRED_PAGES = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 7));
pub const VM_BEHAVIOR_REUSABLE = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 8));
pub const VM_BEHAVIOR_REUSE = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 9));
pub const VM_BEHAVIOR_CAN_REUSE = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 10));
pub const VM_BEHAVIOR_PAGEOUT = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 11));
pub const VM_BEHAVIOR_ZERO = @import("std").zig.c_translation.cast(vm_behavior_t, @as(c_int, 12));
pub const VM_BEHAVIOR_LAST_VALID = VM_BEHAVIOR_ZERO;
pub const _MACH_VM_REGION_H_ = "";
pub const _MACH_MACHINE_VM_PARAM_H_ = "";
pub const _MACH_ARM_VM_PARAM_H_ = "";
pub const _VM_PAGE_SIZE_H_ = "";
pub inline fn trunc_page(x: anytype) @TypeOf(x & ~(vm_page_size - @as(c_int, 1))) {
    _ = &x;
    return x & ~(vm_page_size - @as(c_int, 1));
}
pub inline fn round_page(x: anytype) @TypeOf(trunc_page(x + (vm_page_size - @as(c_int, 1)))) {
    _ = &x;
    return trunc_page(x + (vm_page_size - @as(c_int, 1)));
}
pub inline fn mach_vm_trunc_page(x: anytype) @TypeOf(@import("std").zig.c_translation.cast(mach_vm_offset_t, x) & ~@import("std").zig.c_translation.cast(c_int, vm_page_mask)) {
    _ = &x;
    return @import("std").zig.c_translation.cast(mach_vm_offset_t, x) & ~@import("std").zig.c_translation.cast(c_int, vm_page_mask);
}
pub inline fn mach_vm_round_page(x: anytype) @TypeOf((@import("std").zig.c_translation.cast(mach_vm_offset_t, x) + vm_page_mask) & ~@import("std").zig.c_translation.cast(c_int, vm_page_mask)) {
    _ = &x;
    return (@import("std").zig.c_translation.cast(mach_vm_offset_t, x) + vm_page_mask) & ~@import("std").zig.c_translation.cast(c_int, vm_page_mask);
}
pub inline fn trunc_page_kernel(x: anytype) @TypeOf(x & ~vm_kernel_page_mask) {
    _ = &x;
    return x & ~vm_kernel_page_mask;
}
pub inline fn round_page_kernel(x: anytype) @TypeOf(trunc_page_kernel(x + vm_kernel_page_mask)) {
    _ = &x;
    return trunc_page_kernel(x + vm_kernel_page_mask);
}
pub const BYTE_SIZE = @as(c_int, 8);
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/vm_param.h:50:9: warning: macro 'PAGE_SHIFT' contains a runtime value, translated to function
pub inline fn PAGE_SHIFT() @TypeOf(vm_page_shift) {
    return vm_page_shift;
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/vm_param.h:51:9: warning: macro 'PAGE_SIZE' contains a runtime value, translated to function
pub inline fn PAGE_SIZE() @TypeOf(vm_page_size) {
    return vm_page_size;
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/vm_param.h:52:9: warning: macro 'PAGE_MASK' contains a runtime value, translated to function
pub inline fn PAGE_MASK() @TypeOf(vm_page_mask) {
    return vm_page_mask;
}
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/arm/vm_param.h:54:9: warning: macro 'VM_PAGE_SIZE' contains a runtime value, translated to function
pub inline fn VM_PAGE_SIZE() @TypeOf(vm_page_size) {
    return vm_page_size;
}
pub inline fn machine_ptob(x: anytype) @TypeOf(x << PAGE_SHIFT) {
    _ = &x;
    return x << PAGE_SHIFT;
}
pub const PAGE_MAX_SHIFT = @as(c_int, 14);
pub const PAGE_MAX_SIZE = @as(c_int, 1) << PAGE_MAX_SHIFT;
pub const PAGE_MAX_MASK = PAGE_MAX_SIZE - @as(c_int, 1);
pub const PAGE_MIN_SHIFT = @as(c_int, 12);
pub const PAGE_MIN_SIZE = @as(c_int, 1) << PAGE_MIN_SHIFT;
pub const PAGE_MIN_MASK = PAGE_MIN_SIZE - @as(c_int, 1);
pub const VM_MAX_PAGE_ADDRESS = MACH_VM_MAX_ADDRESS;
pub const VM_MIN_ADDRESS = @import("std").zig.c_translation.cast(vm_address_t, @as(c_ulonglong, 0x0000000000000000));
pub const VM_MAX_ADDRESS = @import("std").zig.c_translation.cast(vm_address_t, @as(c_ulonglong, 0x00000000F0000000));
pub const MACH_VM_MIN_ADDRESS_RAW = @as(c_ulonglong, 0x0);
pub const MACH_VM_MAX_ADDRESS_RAW = @as(c_ulonglong, 0x00007FFFFE000000);
pub const MACH_VM_MIN_ADDRESS = @import("std").zig.c_translation.cast(mach_vm_offset_t, MACH_VM_MIN_ADDRESS_RAW);
pub const MACH_VM_MAX_ADDRESS = @import("std").zig.c_translation.cast(mach_vm_offset_t, MACH_VM_MAX_ADDRESS_RAW);
pub const MACH_VM_MIN_GPU_CARVEOUT_ADDRESS_RAW = @as(c_ulonglong, 0x0000001000000000);
pub const MACH_VM_MAX_GPU_CARVEOUT_ADDRESS_RAW = @as(c_ulonglong, 0x0000007000000000);
pub const MACH_VM_MIN_GPU_CARVEOUT_ADDRESS = @import("std").zig.c_translation.cast(mach_vm_offset_t, MACH_VM_MIN_GPU_CARVEOUT_ADDRESS_RAW);
pub const MACH_VM_MAX_GPU_CARVEOUT_ADDRESS = @import("std").zig.c_translation.cast(mach_vm_offset_t, MACH_VM_MAX_GPU_CARVEOUT_ADDRESS_RAW);
pub const VM_MAP_MIN_ADDRESS = VM_MIN_ADDRESS;
pub const VM_MAP_MAX_ADDRESS = VM_MAX_ADDRESS;
pub const SWI_SYSCALL = @as(c_int, 0x80);
pub const VM_REGION_INFO_MAX = @as(c_int, 1024);
pub const VM_REGION_BASIC_INFO_64 = @as(c_int, 9);
pub const VM_REGION_BASIC_INFO_COUNT_64 = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_region_basic_info_data_64_t), @import("std").zig.c_translation.sizeof(c_int)));
pub const VM_REGION_BASIC_INFO = @as(c_int, 10);
pub const VM_REGION_BASIC_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_region_basic_info_data_t), @import("std").zig.c_translation.sizeof(c_int)));
pub const SM_COW = @as(c_int, 1);
pub const SM_PRIVATE = @as(c_int, 2);
pub const SM_EMPTY = @as(c_int, 3);
pub const SM_SHARED = @as(c_int, 4);
pub const SM_TRUESHARED = @as(c_int, 5);
pub const SM_PRIVATE_ALIASED = @as(c_int, 6);
pub const SM_SHARED_ALIASED = @as(c_int, 7);
pub const SM_LARGE_PAGE = @as(c_int, 8);
pub const VM_REGION_EXTENDED_INFO = @as(c_int, 13);
pub const VM_REGION_EXTENDED_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_region_extended_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const VM_REGION_TOP_INFO = @as(c_int, 12);
pub const VM_REGION_TOP_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_region_top_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const VM_REGION_SUBMAP_INFO_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_region_submap_info_data_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const VM_REGION_SUBMAP_INFO_V2_SIZE = @import("std").zig.c_translation.sizeof(vm_region_submap_info_data_64_t);
pub const VM_REGION_SUBMAP_INFO_V1_SIZE = VM_REGION_SUBMAP_INFO_V2_SIZE - @import("std").zig.c_translation.sizeof(vm_object_id_t);
pub const VM_REGION_SUBMAP_INFO_V0_SIZE = VM_REGION_SUBMAP_INFO_V1_SIZE - @import("std").zig.c_translation.sizeof(c_uint);
pub const VM_REGION_SUBMAP_INFO_V2_COUNT_64 = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(VM_REGION_SUBMAP_INFO_V2_SIZE, @import("std").zig.c_translation.sizeof(natural_t)));
pub const VM_REGION_SUBMAP_INFO_V1_COUNT_64 = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(VM_REGION_SUBMAP_INFO_V1_SIZE, @import("std").zig.c_translation.sizeof(natural_t)));
pub const VM_REGION_SUBMAP_INFO_V0_COUNT_64 = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(VM_REGION_SUBMAP_INFO_V0_SIZE, @import("std").zig.c_translation.sizeof(natural_t)));
pub const VM_REGION_SUBMAP_INFO_COUNT_64 = VM_REGION_SUBMAP_INFO_V2_COUNT_64;
pub const VM_REGION_SUBMAP_SHORT_INFO_COUNT_64 = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_region_submap_short_info_data_64_t), @import("std").zig.c_translation.sizeof(natural_t)));
pub const VM_MAP_ENTRY_MAX = @as(c_int, 256);
pub const VM_PAGE_INFO_MAX = "";
pub const VM_PAGE_INFO_BASIC = @as(c_int, 1);
pub const VM_PAGE_INFO_BASIC_COUNT = @import("std").zig.c_translation.cast(mach_msg_type_number_t, @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(vm_page_info_basic_data_t), @import("std").zig.c_translation.sizeof(c_int)));
pub const _MACH_KMOD_H_ = "";
pub const KMOD_MAX_NAME = @as(c_int, 64);
pub const KMOD_RETURN_SUCCESS = KERN_SUCCESS;
pub const KMOD_RETURN_FAILURE = KERN_FAILURE;
pub const KMOD_INFO_NAME = kmod_info;
pub const KMOD_INFO_VERSION = @as(c_int, 1);
pub const KMOD_DECL = @compileError("unable to translate macro: undefined identifier `_module_start`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/kmod.h:147:9
pub const KMOD_EXPLICIT_DECL = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/mach/kmod.h:155:9
pub const _MACH_DYLIB_INFO_H_ = "";
pub const _FSID_T = "";
pub const _FSOBJ_ID_T = "";
pub const TASK_NULL = @import("std").zig.c_translation.cast(task_t, @as(c_int, 0));
pub const TASK_NAME_NULL = @import("std").zig.c_translation.cast(task_name_t, @as(c_int, 0));
pub const TASK_INSPECT_NULL = @import("std").zig.c_translation.cast(task_inspect_t, @as(c_int, 0));
pub const TASK_READ_NULL = @import("std").zig.c_translation.cast(task_read_t, @as(c_int, 0));
pub const THREAD_NULL = @import("std").zig.c_translation.cast(thread_t, @as(c_int, 0));
pub const THREAD_INSPECT_NULL = @import("std").zig.c_translation.cast(thread_inspect_t, @as(c_int, 0));
pub const THREAD_READ_NULL = @import("std").zig.c_translation.cast(thread_read_t, @as(c_int, 0));
pub const TID_NULL = @import("std").zig.c_translation.cast(u64, @as(c_int, 0));
pub const THR_ACT_NULL = @import("std").zig.c_translation.cast(thread_act_t, @as(c_int, 0));
pub const IPC_SPACE_NULL = @import("std").zig.c_translation.cast(ipc_space_t, @as(c_int, 0));
pub const IPC_SPACE_READ_NULL = @import("std").zig.c_translation.cast(ipc_space_read_t, @as(c_int, 0));
pub const IPC_SPACE_INSPECT_NULL = @import("std").zig.c_translation.cast(ipc_space_inspect_t, @as(c_int, 0));
pub const COALITION_NULL = @import("std").zig.c_translation.cast(coalition_t, @as(c_int, 0));
pub const HOST_NULL = @import("std").zig.c_translation.cast(host_t, @as(c_int, 0));
pub const HOST_PRIV_NULL = @import("std").zig.c_translation.cast(host_priv_t, @as(c_int, 0));
pub const HOST_SECURITY_NULL = @import("std").zig.c_translation.cast(host_security_t, @as(c_int, 0));
pub const PROCESSOR_SET_NULL = @import("std").zig.c_translation.cast(processor_set_t, @as(c_int, 0));
pub const PROCESSOR_NULL = @import("std").zig.c_translation.cast(processor_t, @as(c_int, 0));
pub const SEMAPHORE_NULL = @import("std").zig.c_translation.cast(semaphore_t, @as(c_int, 0));
pub const LOCK_SET_NULL = @import("std").zig.c_translation.cast(lock_set_t, @as(c_int, 0));
pub const LEDGER_NULL = @import("std").zig.c_translation.cast(ledger_t, @as(c_int, 0));
pub const ALARM_NULL = @import("std").zig.c_translation.cast(alarm_t, @as(c_int, 0));
pub const CLOCK_NULL = @import("std").zig.c_translation.cast(clock_t, @as(c_int, 0));
pub const UND_SERVER_NULL = @import("std").zig.c_translation.cast(UNDServerRef, @as(c_int, 0));
pub const ARCADE_REG_NULL = @import("std").zig.c_translation.cast(arcade_register_t, @as(c_int, 0));
pub const MACH_EVENTLINK_NULL = @import("std").zig.c_translation.cast(mach_eventlink_t, @as(c_int, 0));
pub const IPC_EVENTLINK_NULL = @import("std").zig.c_translation.cast(ipc_eventlink_t, @as(c_int, 0));
pub const TASK_ID_TOKEN_NULL = @import("std").zig.c_translation.cast(task_id_token_t, @as(c_int, 0));
pub const KCDATA_OBJECT_NULL = @import("std").zig.c_translation.cast(kcdata_object_t, @as(c_int, 0));
pub const TASK_FLAVOR_CONTROL = @as(c_int, 0);
pub const TASK_FLAVOR_READ = @as(c_int, 1);
pub const TASK_FLAVOR_INSPECT = @as(c_int, 2);
pub const TASK_FLAVOR_NAME = @as(c_int, 3);
pub const TASK_FLAVOR_MAX = TASK_FLAVOR_NAME;
pub const THREAD_FLAVOR_CONTROL = @as(c_int, 0);
pub const THREAD_FLAVOR_READ = @as(c_int, 1);
pub const THREAD_FLAVOR_INSPECT = @as(c_int, 2);
pub const THREAD_FLAVOR_MAX = THREAD_FLAVOR_INSPECT;
pub const LEDGER_ITEM_INFINITY = @import("std").zig.c_translation.cast(ledger_item_t, ~@as(c_int, 0));
pub const LEDGER_LIMIT_INFINITY = @import("std").zig.c_translation.cast(ledger_amount_t, (@as(c_ulonglong, 1) << @as(c_int, 63)) - @as(c_int, 1));
pub const ZEND_NANO_IN_SEC = UINT64_C(@import("std").zig.c_translation.promoteIntLiteral(c_int, 1000000000, .decimal));
pub const GC_BENCH = @as(c_int, 0);
pub const GC_REMOVE_FROM_BUFFER = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_gc.h:77:9
pub inline fn GC_MAY_LEAK(ref: anytype) @TypeOf((GC_TYPE_INFO(ref) & (GC_INFO_MASK | (GC_NOT_COLLECTABLE << GC_FLAGS_SHIFT))) == @as(c_int, 0)) {
    _ = &ref;
    return (GC_TYPE_INFO(ref) & (GC_INFO_MASK | (GC_NOT_COLLECTABLE << GC_FLAGS_SHIFT))) == @as(c_int, 0);
}
pub inline fn ZSTR_VAL(zstr: anytype) @TypeOf(zstr.*.val) {
    _ = &zstr;
    return zstr.*.val;
}
pub inline fn ZSTR_LEN(zstr: anytype) @TypeOf(zstr.*.len) {
    _ = &zstr;
    return zstr.*.len;
}
pub inline fn ZSTR_H(zstr: anytype) @TypeOf(zstr.*.h) {
    _ = &zstr;
    return zstr.*.h;
}
pub inline fn ZSTR_HASH(zstr: anytype) @TypeOf(zend_string_hash_val(zstr)) {
    _ = &zstr;
    return zend_string_hash_val(zstr);
}
pub inline fn IS_INTERNED(s: anytype) @TypeOf(ZSTR_IS_INTERNED(s)) {
    _ = &s;
    return ZSTR_IS_INTERNED(s);
}
pub inline fn STR_EMPTY_ALLOC() @TypeOf(ZSTR_EMPTY_ALLOC()) {
    return ZSTR_EMPTY_ALLOC();
}
pub const _STR_HEADER_SIZE = _ZSTR_HEADER_SIZE;
pub inline fn STR_ALLOCA_ALLOC(str: anytype, _len: anytype, use_heap: anytype) @TypeOf(ZSTR_ALLOCA_ALLOC(str, _len, use_heap)) {
    _ = &str;
    _ = &_len;
    _ = &use_heap;
    return ZSTR_ALLOCA_ALLOC(str, _len, use_heap);
}
pub inline fn STR_ALLOCA_INIT(str: anytype, s: anytype, len: anytype, use_heap: anytype) @TypeOf(ZSTR_ALLOCA_INIT(str, s, len, use_heap)) {
    _ = &str;
    _ = &s;
    _ = &len;
    _ = &use_heap;
    return ZSTR_ALLOCA_INIT(str, s, len, use_heap);
}
pub inline fn STR_ALLOCA_FREE(str: anytype, use_heap: anytype) @TypeOf(ZSTR_ALLOCA_FREE(str, use_heap)) {
    _ = &str;
    _ = &use_heap;
    return ZSTR_ALLOCA_FREE(str, use_heap);
}
pub inline fn ZSTR_IS_INTERNED(s: anytype) @TypeOf(GC_FLAGS(s) & IS_STR_INTERNED) {
    _ = &s;
    return GC_FLAGS(s) & IS_STR_INTERNED;
}
pub inline fn ZSTR_IS_VALID_UTF8(s: anytype) @TypeOf(GC_FLAGS(s) & IS_STR_VALID_UTF8) {
    _ = &s;
    return GC_FLAGS(s) & IS_STR_VALID_UTF8;
}
pub const ZSTR_COPYABLE_CONCAT_PROPERTIES = IS_STR_VALID_UTF8;
pub inline fn ZSTR_GET_COPYABLE_CONCAT_PROPERTIES(s: anytype) @TypeOf(GC_FLAGS(s) & ZSTR_COPYABLE_CONCAT_PROPERTIES) {
    _ = &s;
    return GC_FLAGS(s) & ZSTR_COPYABLE_CONCAT_PROPERTIES;
}
pub inline fn ZSTR_GET_COPYABLE_CONCAT_PROPERTIES_BOTH(s1: anytype, s2: anytype) @TypeOf((GC_FLAGS(s1) & GC_FLAGS(s2)) & ZSTR_COPYABLE_CONCAT_PROPERTIES) {
    _ = &s1;
    _ = &s2;
    return (GC_FLAGS(s1) & GC_FLAGS(s2)) & ZSTR_COPYABLE_CONCAT_PROPERTIES;
}
pub const ZSTR_COPY_CONCAT_PROPERTIES = @compileError("unable to translate macro: undefined identifier `_out`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_string.h:96:9
pub const ZSTR_COPY_CONCAT_PROPERTIES_BOTH = @compileError("unable to translate macro: undefined identifier `_out`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_string.h:102:9
pub inline fn ZSTR_EMPTY_ALLOC() @TypeOf(zend_empty_string) {
    return zend_empty_string;
}
pub inline fn ZSTR_CHAR(c: anytype) @TypeOf(zend_one_char_string[@as(usize, @intCast(c))]) {
    _ = &c;
    return zend_one_char_string[@as(usize, @intCast(c))];
}
pub inline fn ZSTR_KNOWN(idx: anytype) @TypeOf(zend_known_strings[@as(usize, @intCast(idx))]) {
    _ = &idx;
    return zend_known_strings[@as(usize, @intCast(idx))];
}
pub const _ZSTR_HEADER_SIZE = @compileError("unable to translate macro: undefined identifier `val`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_string.h:112:9
pub inline fn _ZSTR_STRUCT_SIZE(len: anytype) @TypeOf((_ZSTR_HEADER_SIZE + len) + @as(c_int, 1)) {
    _ = &len;
    return (_ZSTR_HEADER_SIZE + len) + @as(c_int, 1);
}
pub const ZSTR_MAX_OVERHEAD = ZEND_MM_ALIGNED_SIZE(_ZSTR_HEADER_SIZE + @as(c_int, 1));
pub const ZSTR_MAX_LEN = SIZE_MAX - ZSTR_MAX_OVERHEAD;
pub const ZSTR_ALLOCA_ALLOC = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_string.h:119:9
pub const ZSTR_ALLOCA_INIT = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_string.h:127:9
pub inline fn ZSTR_ALLOCA_FREE(str: anytype, use_heap: anytype) @TypeOf(free_alloca(str, use_heap)) {
    _ = &str;
    _ = &use_heap;
    return free_alloca(str, use_heap);
}
pub inline fn ZSTR_INIT_LITERAL(s: anytype, persistent: anytype) @TypeOf(zend_string_init(s, strlen(s), persistent)) {
    _ = &s;
    _ = &persistent;
    return zend_string_init(s, strlen(s), persistent);
}
pub inline fn zend_string_equals_ci(s1: anytype, s2: anytype) @TypeOf((ZSTR_LEN(s1) == ZSTR_LEN(s2)) and !(zend_binary_strcasecmp(ZSTR_VAL(s1), ZSTR_LEN(s1), ZSTR_VAL(s2), ZSTR_LEN(s2)) != 0)) {
    _ = &s1;
    _ = &s2;
    return (ZSTR_LEN(s1) == ZSTR_LEN(s2)) and !(zend_binary_strcasecmp(ZSTR_VAL(s1), ZSTR_LEN(s1), ZSTR_VAL(s2), ZSTR_LEN(s2)) != 0);
}
pub const zend_string_equals_literal_ci = @compileError("unable to translate C expr: unexpected token 'a string literal'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_string.h:397:9
pub inline fn zend_string_equals_literal(str: anytype, literal: anytype) @TypeOf(zend_string_equals_cstr(str, "" ++ literal, @import("std").zig.c_translation.sizeof(literal) - @as(c_int, 1))) {
    _ = &str;
    _ = &literal;
    return zend_string_equals_cstr(str, "" ++ literal, @import("std").zig.c_translation.sizeof(literal) - @as(c_int, 1));
}
pub inline fn zend_string_starts_with_literal(str: anytype, prefix: anytype) @TypeOf(zend_string_starts_with_cstr(str, prefix, strlen(prefix))) {
    _ = &str;
    _ = &prefix;
    return zend_string_starts_with_cstr(str, prefix, strlen(prefix));
}
pub inline fn zend_string_starts_with_literal_ci(str: anytype, prefix: anytype) @TypeOf(zend_string_starts_with_cstr_ci(str, prefix, strlen(prefix))) {
    _ = &str;
    _ = &prefix;
    return zend_string_starts_with_cstr_ci(str, prefix, strlen(prefix));
}
pub inline fn ZEND_KNOWN_STRINGS(@"_": anytype) @TypeOf(@"_"(ZEND_STR_FILE, "file") ++ @"_"(ZEND_STR_LINE, "line") ++ @"_"(ZEND_STR_FUNCTION, "function") ++ @"_"(ZEND_STR_CLASS, "class") ++ @"_"(ZEND_STR_OBJECT, "object") ++ @"_"(ZEND_STR_TYPE, "type") ++ @"_"(ZEND_STR_OBJECT_OPERATOR, "->") ++ @"_"(ZEND_STR_PAAMAYIM_NEKUDOTAYIM, "::") ++ @"_"(ZEND_STR_ARGS, "args") ++ @"_"(ZEND_STR_UNKNOWN, "unknown") ++ @"_"(ZEND_STR_UNKNOWN_CAPITALIZED, "Unknown") ++ @"_"(ZEND_STR_EXIT, "exit") ++ @"_"(ZEND_STR_EVAL, "eval") ++ @"_"(ZEND_STR_INCLUDE, "include") ++ @"_"(ZEND_STR_REQUIRE, "require") ++ @"_"(ZEND_STR_INCLUDE_ONCE, "include_once") ++ @"_"(ZEND_STR_REQUIRE_ONCE, "require_once") ++ @"_"(ZEND_STR_SCALAR, "scalar") ++ @"_"(ZEND_STR_ERROR_REPORTING, "error_reporting") ++ @"_"(ZEND_STR_STATIC, "static") ++ @"_"(ZEND_STR_THIS, "this") ++ @"_"(ZEND_STR_VALUE, "value") ++ @"_"(ZEND_STR_KEY, "key") ++ @"_"(ZEND_STR_MAGIC_INVOKE, "__invoke") ++ @"_"(ZEND_STR_PREVIOUS, "previous") ++ @"_"(ZEND_STR_CODE, "code") ++ @"_"(ZEND_STR_MESSAGE, "message") ++ @"_"(ZEND_STR_SEVERITY, "severity") ++ @"_"(ZEND_STR_STRING, "string") ++ @"_"(ZEND_STR_TRACE, "trace") ++ @"_"(ZEND_STR_SCHEME, "scheme") ++ @"_"(ZEND_STR_HOST, "host") ++ @"_"(ZEND_STR_PORT, "port") ++ @"_"(ZEND_STR_USER, "user") ++ @"_"(ZEND_STR_PASS, "pass") ++ @"_"(ZEND_STR_PATH, "path") ++ @"_"(ZEND_STR_QUERY, "query") ++ @"_"(ZEND_STR_FRAGMENT, "fragment") ++ @"_"(ZEND_STR_NULL, "NULL") ++ @"_"(ZEND_STR_BOOLEAN, "boolean") ++ @"_"(ZEND_STR_INTEGER, "integer") ++ @"_"(ZEND_STR_DOUBLE, "double") ++ @"_"(ZEND_STR_ARRAY, "array") ++ @"_"(ZEND_STR_RESOURCE, "resource") ++ @"_"(ZEND_STR_CLOSED_RESOURCE, "resource (closed)") ++ @"_"(ZEND_STR_NAME, "name") ++ @"_"(ZEND_STR_ARGV, "argv") ++ @"_"(ZEND_STR_ARGC, "argc") ++ @"_"(ZEND_STR_ARRAY_CAPITALIZED, "Array") ++ @"_"(ZEND_STR_BOOL, "bool") ++ @"_"(ZEND_STR_INT, "int") ++ @"_"(ZEND_STR_FLOAT, "float") ++ @"_"(ZEND_STR_CALLABLE, "callable") ++ @"_"(ZEND_STR_ITERABLE, "iterable") ++ @"_"(ZEND_STR_VOID, "void") ++ @"_"(ZEND_STR_NEVER, "never") ++ @"_"(ZEND_STR_FALSE, "false") ++ @"_"(ZEND_STR_TRUE, "true") ++ @"_"(ZEND_STR_NULL_LOWERCASE, "null") ++ @"_"(ZEND_STR_MIXED, "mixed") ++ @"_"(ZEND_STR_TRAVERSABLE, "Traversable") ++ @"_"(ZEND_STR_SLEEP, "__sleep") ++ @"_"(ZEND_STR_WAKEUP, "__wakeup") ++ @"_"(ZEND_STR_CASES, "cases") ++ @"_"(ZEND_STR_FROM, "from") ++ @"_"(ZEND_STR_TRYFROM, "tryFrom") ++ @"_"(ZEND_STR_TRYFROM_LOWERCASE, "tryfrom") ++ @"_"(ZEND_STR_AUTOGLOBAL_SERVER, "_SERVER") ++ @"_"(ZEND_STR_AUTOGLOBAL_ENV, "_ENV") ++ @"_"(ZEND_STR_AUTOGLOBAL_REQUEST, "_REQUEST") ++ @"_"(ZEND_STR_COUNT, "count") ++ @"_"(ZEND_STR_SENSITIVEPARAMETER, "SensitiveParameter") ++ @"_"(ZEND_STR_CONST_EXPR_PLACEHOLDER, "[constant expression]") ++ @"_"(ZEND_STR_DEPRECATED_CAPITALIZED, "Deprecated") ++ @"_"(ZEND_STR_SINCE, "since") ++ @"_"(ZEND_STR_GET, "get") ++ @"_"(ZEND_STR_SET, "set")) {
    _ = &@"_";
    return @"_"(ZEND_STR_FILE, "file") ++ @"_"(ZEND_STR_LINE, "line") ++ @"_"(ZEND_STR_FUNCTION, "function") ++ @"_"(ZEND_STR_CLASS, "class") ++ @"_"(ZEND_STR_OBJECT, "object") ++ @"_"(ZEND_STR_TYPE, "type") ++ @"_"(ZEND_STR_OBJECT_OPERATOR, "->") ++ @"_"(ZEND_STR_PAAMAYIM_NEKUDOTAYIM, "::") ++ @"_"(ZEND_STR_ARGS, "args") ++ @"_"(ZEND_STR_UNKNOWN, "unknown") ++ @"_"(ZEND_STR_UNKNOWN_CAPITALIZED, "Unknown") ++ @"_"(ZEND_STR_EXIT, "exit") ++ @"_"(ZEND_STR_EVAL, "eval") ++ @"_"(ZEND_STR_INCLUDE, "include") ++ @"_"(ZEND_STR_REQUIRE, "require") ++ @"_"(ZEND_STR_INCLUDE_ONCE, "include_once") ++ @"_"(ZEND_STR_REQUIRE_ONCE, "require_once") ++ @"_"(ZEND_STR_SCALAR, "scalar") ++ @"_"(ZEND_STR_ERROR_REPORTING, "error_reporting") ++ @"_"(ZEND_STR_STATIC, "static") ++ @"_"(ZEND_STR_THIS, "this") ++ @"_"(ZEND_STR_VALUE, "value") ++ @"_"(ZEND_STR_KEY, "key") ++ @"_"(ZEND_STR_MAGIC_INVOKE, "__invoke") ++ @"_"(ZEND_STR_PREVIOUS, "previous") ++ @"_"(ZEND_STR_CODE, "code") ++ @"_"(ZEND_STR_MESSAGE, "message") ++ @"_"(ZEND_STR_SEVERITY, "severity") ++ @"_"(ZEND_STR_STRING, "string") ++ @"_"(ZEND_STR_TRACE, "trace") ++ @"_"(ZEND_STR_SCHEME, "scheme") ++ @"_"(ZEND_STR_HOST, "host") ++ @"_"(ZEND_STR_PORT, "port") ++ @"_"(ZEND_STR_USER, "user") ++ @"_"(ZEND_STR_PASS, "pass") ++ @"_"(ZEND_STR_PATH, "path") ++ @"_"(ZEND_STR_QUERY, "query") ++ @"_"(ZEND_STR_FRAGMENT, "fragment") ++ @"_"(ZEND_STR_NULL, "NULL") ++ @"_"(ZEND_STR_BOOLEAN, "boolean") ++ @"_"(ZEND_STR_INTEGER, "integer") ++ @"_"(ZEND_STR_DOUBLE, "double") ++ @"_"(ZEND_STR_ARRAY, "array") ++ @"_"(ZEND_STR_RESOURCE, "resource") ++ @"_"(ZEND_STR_CLOSED_RESOURCE, "resource (closed)") ++ @"_"(ZEND_STR_NAME, "name") ++ @"_"(ZEND_STR_ARGV, "argv") ++ @"_"(ZEND_STR_ARGC, "argc") ++ @"_"(ZEND_STR_ARRAY_CAPITALIZED, "Array") ++ @"_"(ZEND_STR_BOOL, "bool") ++ @"_"(ZEND_STR_INT, "int") ++ @"_"(ZEND_STR_FLOAT, "float") ++ @"_"(ZEND_STR_CALLABLE, "callable") ++ @"_"(ZEND_STR_ITERABLE, "iterable") ++ @"_"(ZEND_STR_VOID, "void") ++ @"_"(ZEND_STR_NEVER, "never") ++ @"_"(ZEND_STR_FALSE, "false") ++ @"_"(ZEND_STR_TRUE, "true") ++ @"_"(ZEND_STR_NULL_LOWERCASE, "null") ++ @"_"(ZEND_STR_MIXED, "mixed") ++ @"_"(ZEND_STR_TRAVERSABLE, "Traversable") ++ @"_"(ZEND_STR_SLEEP, "__sleep") ++ @"_"(ZEND_STR_WAKEUP, "__wakeup") ++ @"_"(ZEND_STR_CASES, "cases") ++ @"_"(ZEND_STR_FROM, "from") ++ @"_"(ZEND_STR_TRYFROM, "tryFrom") ++ @"_"(ZEND_STR_TRYFROM_LOWERCASE, "tryfrom") ++ @"_"(ZEND_STR_AUTOGLOBAL_SERVER, "_SERVER") ++ @"_"(ZEND_STR_AUTOGLOBAL_ENV, "_ENV") ++ @"_"(ZEND_STR_AUTOGLOBAL_REQUEST, "_REQUEST") ++ @"_"(ZEND_STR_COUNT, "count") ++ @"_"(ZEND_STR_SENSITIVEPARAMETER, "SensitiveParameter") ++ @"_"(ZEND_STR_CONST_EXPR_PLACEHOLDER, "[constant expression]") ++ @"_"(ZEND_STR_DEPRECATED_CAPITALIZED, "Deprecated") ++ @"_"(ZEND_STR_SINCE, "since") ++ @"_"(ZEND_STR_GET, "get") ++ @"_"(ZEND_STR_SET, "set");
}
pub const _ZEND_STR_ID = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_string.h:644:9
pub const ZEND_HASH_H = "";
pub const ZEND_SORT_H = "";
pub const HASH_KEY_IS_STRING = @as(c_int, 1);
pub const HASH_KEY_IS_LONG = @as(c_int, 2);
pub const HASH_KEY_NON_EXISTENT = @as(c_int, 3);
pub const HASH_UPDATE = @as(c_int, 1) << @as(c_int, 0);
pub const HASH_ADD = @as(c_int, 1) << @as(c_int, 1);
pub const HASH_UPDATE_INDIRECT = @as(c_int, 1) << @as(c_int, 2);
pub const HASH_ADD_NEW = @as(c_int, 1) << @as(c_int, 3);
pub const HASH_ADD_NEXT = @as(c_int, 1) << @as(c_int, 4);
pub const HASH_LOOKUP = @as(c_int, 1) << @as(c_int, 5);
pub const HASH_FLAG_CONSISTENCY = (@as(c_int, 1) << @as(c_int, 0)) | (@as(c_int, 1) << @as(c_int, 1));
pub const HASH_FLAG_PACKED = @as(c_int, 1) << @as(c_int, 2);
pub const HASH_FLAG_UNINITIALIZED = @as(c_int, 1) << @as(c_int, 3);
pub const HASH_FLAG_STATIC_KEYS = @as(c_int, 1) << @as(c_int, 4);
pub const HASH_FLAG_HAS_EMPTY_IND = @as(c_int, 1) << @as(c_int, 5);
pub const HASH_FLAG_ALLOW_COW_VIOLATION = @as(c_int, 1) << @as(c_int, 6);
pub const HASH_FLAG_MASK = @as(c_int, 0xff);
pub inline fn HT_FLAGS(ht: anytype) @TypeOf(ht.*.u.flags) {
    _ = &ht;
    return ht.*.u.flags;
}
pub const HT_INVALIDATE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:52:9
pub inline fn HT_IS_INITIALIZED(ht: anytype) @TypeOf((HT_FLAGS(ht) & HASH_FLAG_UNINITIALIZED) == @as(c_int, 0)) {
    _ = &ht;
    return (HT_FLAGS(ht) & HASH_FLAG_UNINITIALIZED) == @as(c_int, 0);
}
pub inline fn HT_IS_PACKED(ht: anytype) @TypeOf((HT_FLAGS(ht) & HASH_FLAG_PACKED) != @as(c_int, 0)) {
    _ = &ht;
    return (HT_FLAGS(ht) & HASH_FLAG_PACKED) != @as(c_int, 0);
}
pub inline fn HT_IS_WITHOUT_HOLES(ht: anytype) @TypeOf(ht.*.nNumUsed == ht.*.nNumOfElements) {
    _ = &ht;
    return ht.*.nNumUsed == ht.*.nNumOfElements;
}
pub inline fn HT_HAS_STATIC_KEYS_ONLY(ht: anytype) @TypeOf((HT_FLAGS(ht) & (HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS)) != @as(c_int, 0)) {
    _ = &ht;
    return (HT_FLAGS(ht) & (HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS)) != @as(c_int, 0);
}
pub const HT_ALLOW_COW_VIOLATION = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:71:10
pub inline fn HT_ITERATORS_COUNT(ht: anytype) @TypeOf(ht.*.u.v.nIteratorsCount) {
    _ = &ht;
    return ht.*.u.v.nIteratorsCount;
}
pub inline fn HT_ITERATORS_OVERFLOW(ht: anytype) @TypeOf(HT_ITERATORS_COUNT(ht) == @as(c_int, 0xff)) {
    _ = &ht;
    return HT_ITERATORS_COUNT(ht) == @as(c_int, 0xff);
}
pub inline fn HT_HAS_ITERATORS(ht: anytype) @TypeOf(HT_ITERATORS_COUNT(ht) != @as(c_int, 0)) {
    _ = &ht;
    return HT_ITERATORS_COUNT(ht) != @as(c_int, 0);
}
pub const HT_SET_ITERATORS_COUNT = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:78:9
pub inline fn HT_INC_ITERATORS_COUNT(ht: anytype) @TypeOf(HT_SET_ITERATORS_COUNT(ht, HT_ITERATORS_COUNT(ht) + @as(c_int, 1))) {
    _ = &ht;
    return HT_SET_ITERATORS_COUNT(ht, HT_ITERATORS_COUNT(ht) + @as(c_int, 1));
}
pub inline fn HT_DEC_ITERATORS_COUNT(ht: anytype) @TypeOf(HT_SET_ITERATORS_COUNT(ht, HT_ITERATORS_COUNT(ht) - @as(c_int, 1))) {
    _ = &ht;
    return HT_SET_ITERATORS_COUNT(ht, HT_ITERATORS_COUNT(ht) - @as(c_int, 1));
}
pub const ZVAL_EMPTY_ARRAY = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:87:9
pub inline fn zend_hash_init(ht: anytype, nSize: anytype, pHashFunction: anytype, pDestructor: anytype, persistent: anytype) @TypeOf(_zend_hash_init(ht, nSize, pDestructor, persistent)) {
    _ = &ht;
    _ = &nSize;
    _ = &pHashFunction;
    _ = &pDestructor;
    _ = &persistent;
    return _zend_hash_init(ht, nSize, pDestructor, persistent);
}
pub const ZEND_HASH_APPLY_KEEP = @as(c_int, 0);
pub const ZEND_HASH_APPLY_REMOVE = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_HASH_APPLY_STOP = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_HASH_INDEX_FIND = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:196:9
pub const ZEND_HASH_INDEX_LOOKUP = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:219:9
pub inline fn zend_new_array(size: anytype) @TypeOf(if (__builtin_constant_p(size) != 0) if (@import("std").zig.c_translation.cast(u32, size) <= HT_MIN_SIZE) _zend_new_array_0() else _zend_new_array(size) else _zend_new_array(size)) {
    _ = &size;
    return if (__builtin_constant_p(size) != 0) if (@import("std").zig.c_translation.cast(u32, size) <= HT_MIN_SIZE) _zend_new_array_0() else _zend_new_array(size) else _zend_new_array(size);
}
pub inline fn ZEND_INIT_SYMTABLE(ht: anytype) @TypeOf(ZEND_INIT_SYMTABLE_EX(ht, @as(c_int, 8), @as(c_int, 0))) {
    _ = &ht;
    return ZEND_INIT_SYMTABLE_EX(ht, @as(c_int, 8), @as(c_int, 0));
}
pub inline fn ZEND_INIT_SYMTABLE_EX(ht: anytype, n: anytype, persistent: anytype) @TypeOf(zend_hash_init(ht, n, NULL, ZVAL_PTR_DTOR, persistent)) {
    _ = &ht;
    _ = &n;
    _ = &persistent;
    return zend_hash_init(ht, n, NULL, ZVAL_PTR_DTOR, persistent);
}
pub inline fn ZEND_HANDLE_NUMERIC_STR(key: anytype, length: anytype, idx: anytype) @TypeOf(_zend_handle_numeric_str(key, length, &idx)) {
    _ = &key;
    _ = &length;
    _ = &idx;
    return _zend_handle_numeric_str(key, length, &idx);
}
pub inline fn ZEND_HANDLE_NUMERIC(key: anytype, idx: anytype) @TypeOf(ZEND_HANDLE_NUMERIC_STR(ZSTR_VAL(key), ZSTR_LEN(key), idx)) {
    _ = &key;
    _ = &idx;
    return ZEND_HANDLE_NUMERIC_STR(ZSTR_VAL(key), ZSTR_LEN(key), idx);
}
pub inline fn zend_hash_get_current_data_ptr(ht: anytype) @TypeOf(zend_hash_get_current_data_ptr_ex(ht, &ht.*.nInternalPointer)) {
    _ = &ht;
    return zend_hash_get_current_data_ptr_ex(ht, &ht.*.nInternalPointer);
}
pub inline fn ZEND_HASH_ELEMENT_SIZE(__ht: anytype) @TypeOf(@import("std").zig.c_translation.sizeof(zval) + ((~HT_FLAGS(__ht) & HASH_FLAG_PACKED) * @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(Bucket) - @import("std").zig.c_translation.sizeof(zval), HASH_FLAG_PACKED))) {
    _ = &__ht;
    return @import("std").zig.c_translation.sizeof(zval) + ((~HT_FLAGS(__ht) & HASH_FLAG_PACKED) * @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.sizeof(Bucket) - @import("std").zig.c_translation.sizeof(zval), HASH_FLAG_PACKED));
}
pub inline fn ZEND_HASH_ELEMENT_EX(__ht: anytype, _idx: anytype, _size: anytype) [*c]zval {
    _ = &__ht;
    _ = &_idx;
    _ = &_size;
    return @import("std").zig.c_translation.cast([*c]zval, @import("std").zig.c_translation.cast([*c]u8, __ht.*.arPacked) + (_idx * _size));
}
pub inline fn ZEND_HASH_ELEMENT(__ht: anytype, _idx: anytype) @TypeOf(ZEND_HASH_ELEMENT_EX(__ht, _idx, ZEND_HASH_ELEMENT_SIZE(__ht))) {
    _ = &__ht;
    _ = &_idx;
    return ZEND_HASH_ELEMENT_EX(__ht, _idx, ZEND_HASH_ELEMENT_SIZE(__ht));
}
pub inline fn ZEND_HASH_NEXT_ELEMENT(_el: anytype, _size: anytype) [*c]zval {
    _ = &_el;
    _ = &_size;
    return @import("std").zig.c_translation.cast([*c]zval, @import("std").zig.c_translation.cast([*c]u8, _el) + _size);
}
pub inline fn ZEND_HASH_PREV_ELEMENT(_el: anytype, _size: anytype) [*c]zval {
    _ = &_el;
    _ = &_size;
    return @import("std").zig.c_translation.cast([*c]zval, @import("std").zig.c_translation.cast([*c]u8, _el) - _size);
}
pub const _ZEND_HASH_FOREACH_VAL = @compileError("unable to translate macro: undefined identifier `__ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1014:9
pub const _ZEND_HASH_REVERSE_FOREACH_VAL = @compileError("unable to translate macro: undefined identifier `__ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1022:9
pub const ZEND_HASH_FOREACH_FROM = @compileError("unable to translate macro: undefined identifier `__ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1031:9
pub inline fn ZEND_HASH_FOREACH(_ht: anytype, indirect: anytype) @TypeOf(ZEND_HASH_FOREACH_FROM(_ht, indirect, @as(c_int, 0))) {
    _ = &_ht;
    _ = &indirect;
    return ZEND_HASH_FOREACH_FROM(_ht, indirect, @as(c_int, 0));
}
pub const ZEND_HASH_REVERSE_FOREACH = @compileError("unable to translate macro: undefined identifier `__ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1059:9
pub const ZEND_HASH_FOREACH_END = @compileError("unable to translate C expr: unexpected token '}'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1086:9
pub inline fn ZEND_HASH_FOREACH_END_DEL() @TypeOf(ZEND_HASH_MAP_FOREACH_END_DEL()) {
    return ZEND_HASH_MAP_FOREACH_END_DEL();
}
pub inline fn ZEND_HASH_FOREACH_BUCKET(ht: anytype, _bucket: anytype) @TypeOf(ZEND_HASH_MAP_FOREACH_BUCKET(ht, _bucket)) {
    _ = &ht;
    _ = &_bucket;
    return ZEND_HASH_MAP_FOREACH_BUCKET(ht, _bucket);
}
pub inline fn ZEND_HASH_FOREACH_BUCKET_FROM(ht: anytype, _bucket: anytype, _from: anytype) @TypeOf(ZEND_HASH_MAP_FOREACH_BUCKET_FROM(ht, _bucket, _from)) {
    _ = &ht;
    _ = &_bucket;
    _ = &_from;
    return ZEND_HASH_MAP_FOREACH_BUCKET_FROM(ht, _bucket, _from);
}
pub inline fn ZEND_HASH_REVERSE_FOREACH_BUCKET(ht: anytype, _bucket: anytype) @TypeOf(ZEND_HASH_MAP_REVERSE_FOREACH_BUCKET(ht, _bucket)) {
    _ = &ht;
    _ = &_bucket;
    return ZEND_HASH_MAP_REVERSE_FOREACH_BUCKET(ht, _bucket);
}
pub const ZEND_HASH_FOREACH_VAL = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1102:9
pub const ZEND_HASH_REVERSE_FOREACH_VAL = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1106:9
pub const ZEND_HASH_FOREACH_VAL_IND = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1110:9
pub const ZEND_HASH_REVERSE_FOREACH_VAL_IND = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1114:9
pub const ZEND_HASH_FOREACH_PTR = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1118:9
pub const ZEND_HASH_FOREACH_PTR_FROM = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1122:9
pub const ZEND_HASH_REVERSE_FOREACH_PTR = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1126:9
pub const ZEND_HASH_FOREACH_NUM_KEY = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1130:9
pub const ZEND_HASH_REVERSE_FOREACH_NUM_KEY = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1134:9
pub const ZEND_HASH_FOREACH_STR_KEY = @compileError("unable to translate macro: undefined identifier `__key`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1138:9
pub const ZEND_HASH_REVERSE_FOREACH_STR_KEY = @compileError("unable to translate macro: undefined identifier `__key`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1142:9
pub const ZEND_HASH_FOREACH_KEY = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1146:9
pub const ZEND_HASH_REVERSE_FOREACH_KEY = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1151:9
pub const ZEND_HASH_FOREACH_NUM_KEY_VAL = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1156:9
pub const ZEND_HASH_REVERSE_FOREACH_NUM_KEY_VAL = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1161:9
pub const ZEND_HASH_FOREACH_STR_KEY_VAL = @compileError("unable to translate macro: undefined identifier `__key`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1166:9
pub const ZEND_HASH_FOREACH_STR_KEY_VAL_FROM = @compileError("unable to translate macro: undefined identifier `__key`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1171:9
pub const ZEND_HASH_REVERSE_FOREACH_STR_KEY_VAL = @compileError("unable to translate macro: undefined identifier `__key`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1176:9
pub const ZEND_HASH_FOREACH_KEY_VAL = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1181:9
pub const ZEND_HASH_REVERSE_FOREACH_KEY_VAL = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1187:9
pub const ZEND_HASH_FOREACH_STR_KEY_VAL_IND = @compileError("unable to translate macro: undefined identifier `__key`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1193:9
pub const ZEND_HASH_REVERSE_FOREACH_STR_KEY_VAL_IND = @compileError("unable to translate macro: undefined identifier `__key`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1198:9
pub const ZEND_HASH_FOREACH_KEY_VAL_IND = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1203:9
pub const ZEND_HASH_REVERSE_FOREACH_KEY_VAL_IND = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1209:9
pub const ZEND_HASH_FOREACH_NUM_KEY_PTR = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1215:9
pub const ZEND_HASH_REVERSE_FOREACH_NUM_KEY_PTR = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1220:9
pub const ZEND_HASH_FOREACH_STR_KEY_PTR = @compileError("unable to translate macro: undefined identifier `__key`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1225:9
pub const ZEND_HASH_REVERSE_FOREACH_STR_KEY_PTR = @compileError("unable to translate macro: undefined identifier `__key`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1230:9
pub const ZEND_HASH_FOREACH_KEY_PTR = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1235:9
pub const ZEND_HASH_REVERSE_FOREACH_KEY_PTR = @compileError("unable to translate macro: undefined identifier `__h`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1241:9
pub const ZEND_HASH_MAP_FOREACH_FROM = @compileError("unable to translate macro: undefined identifier `__ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1248:9
pub inline fn ZEND_HASH_MAP_FOREACH(_ht: anytype, indirect: anytype) @TypeOf(ZEND_HASH_MAP_FOREACH_FROM(_ht, indirect, @as(c_int, 0))) {
    _ = &_ht;
    _ = &indirect;
    return ZEND_HASH_MAP_FOREACH_FROM(_ht, indirect, @as(c_int, 0));
}
pub const ZEND_HASH_MAP_REVERSE_FOREACH = @compileError("unable to translate macro: undefined identifier `__ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1262:9
pub const ZEND_HASH_MAP_FOREACH_END_DEL = @compileError("unable to translate macro: undefined identifier `__ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1276:9
pub const ZEND_HASH_MAP_FOREACH_BUCKET = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1298:9
pub const ZEND_HASH_MAP_FOREACH_BUCKET_FROM = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1302:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_BUCKET = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1306:9
pub const ZEND_HASH_MAP_FOREACH_VAL = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1310:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_VAL = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1314:9
pub const ZEND_HASH_MAP_FOREACH_VAL_IND = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1318:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_VAL_IND = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1322:9
pub const ZEND_HASH_MAP_FOREACH_PTR = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1326:9
pub const ZEND_HASH_MAP_FOREACH_PTR_FROM = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1330:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_PTR = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1334:9
pub const ZEND_HASH_MAP_FOREACH_NUM_KEY = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1338:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_NUM_KEY = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1342:9
pub const ZEND_HASH_MAP_FOREACH_STR_KEY = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1346:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_STR_KEY = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1350:9
pub const ZEND_HASH_MAP_FOREACH_KEY = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1354:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_KEY = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1359:9
pub const ZEND_HASH_MAP_FOREACH_NUM_KEY_VAL = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1364:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_NUM_KEY_VAL = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1369:9
pub const ZEND_HASH_MAP_FOREACH_STR_KEY_VAL = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1374:9
pub const ZEND_HASH_MAP_FOREACH_STR_KEY_VAL_FROM = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1379:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_STR_KEY_VAL = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1384:9
pub const ZEND_HASH_MAP_FOREACH_KEY_VAL = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1389:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_KEY_VAL = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1395:9
pub const ZEND_HASH_MAP_FOREACH_STR_KEY_VAL_IND = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1401:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_STR_KEY_VAL_IND = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1406:9
pub const ZEND_HASH_MAP_FOREACH_KEY_VAL_IND = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1411:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_KEY_VAL_IND = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1417:9
pub const ZEND_HASH_MAP_FOREACH_NUM_KEY_PTR = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1423:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_NUM_KEY_PTR = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1428:9
pub const ZEND_HASH_MAP_FOREACH_STR_KEY_PTR = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1433:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_STR_KEY_PTR = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1438:9
pub const ZEND_HASH_MAP_FOREACH_KEY_PTR = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1443:9
pub const ZEND_HASH_MAP_REVERSE_FOREACH_KEY_PTR = @compileError("unable to translate macro: undefined identifier `_p`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1449:9
pub const ZEND_HASH_PACKED_FOREACH_FROM = @compileError("unable to translate macro: undefined identifier `__ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1456:9
pub inline fn ZEND_HASH_PACKED_FOREACH(_ht: anytype) @TypeOf(ZEND_HASH_PACKED_FOREACH_FROM(_ht, @as(c_int, 0))) {
    _ = &_ht;
    return ZEND_HASH_PACKED_FOREACH_FROM(_ht, @as(c_int, 0));
}
pub const ZEND_HASH_PACKED_REVERSE_FOREACH = @compileError("unable to translate macro: undefined identifier `__ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1468:9
pub const ZEND_HASH_PACKED_FOREACH_VAL = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1479:9
pub const ZEND_HASH_PACKED_REVERSE_FOREACH_VAL = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1483:9
pub const ZEND_HASH_PACKED_FOREACH_PTR = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1487:9
pub const ZEND_HASH_PACKED_REVERSE_FOREACH_PTR = @compileError("unable to translate macro: undefined identifier `_z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1491:9
pub const ZEND_HASH_PACKED_FOREACH_KEY = @compileError("unable to translate macro: undefined identifier `_idx`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1495:9
pub const ZEND_HASH_PACKED_REVERSE_FOREACH_KEY = @compileError("unable to translate macro: undefined identifier `_idx`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1499:9
pub const ZEND_HASH_PACKED_FOREACH_KEY_VAL = @compileError("unable to translate macro: undefined identifier `_idx`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1503:9
pub const ZEND_HASH_PACKED_REVERSE_FOREACH_KEY_VAL = @compileError("unable to translate macro: undefined identifier `_idx`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1508:9
pub const ZEND_HASH_PACKED_FOREACH_KEY_PTR = @compileError("unable to translate macro: undefined identifier `_idx`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1513:9
pub const ZEND_HASH_PACKED_REVERSE_FOREACH_KEY_PTR = @compileError("unable to translate macro: undefined identifier `_idx`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1518:9
pub const ZEND_HASH_FILL_PACKED = @compileError("unable to translate macro: undefined identifier `__fill_ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1528:9
pub const ZEND_HASH_FILL_GROW = @compileError("unable to translate macro: undefined identifier `__fill_idx`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1534:9
pub const ZEND_HASH_FILL_SET = @compileError("unable to translate macro: undefined identifier `__fill_val`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1544:9
pub const ZEND_HASH_FILL_SET_NULL = @compileError("unable to translate macro: undefined identifier `__fill_val`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1547:9
pub const ZEND_HASH_FILL_SET_LONG = @compileError("unable to translate macro: undefined identifier `__fill_val`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1550:9
pub const ZEND_HASH_FILL_SET_DOUBLE = @compileError("unable to translate macro: undefined identifier `__fill_val`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1553:9
pub const ZEND_HASH_FILL_SET_STR = @compileError("unable to translate macro: undefined identifier `__fill_val`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1556:9
pub const ZEND_HASH_FILL_SET_STR_COPY = @compileError("unable to translate macro: undefined identifier `__fill_val`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1559:9
pub const ZEND_HASH_FILL_SET_INTERNED_STR = @compileError("unable to translate macro: undefined identifier `__fill_val`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1562:9
pub const ZEND_HASH_FILL_NEXT = @compileError("unable to translate macro: undefined identifier `__fill_val`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1565:9
pub const ZEND_HASH_FILL_ADD = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1570:9
pub const ZEND_HASH_FILL_FINISH = @compileError("unable to translate macro: undefined identifier `__fill_ht`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1575:9
pub const ZEND_HASH_FILL_END = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_hash.h:1582:9
pub const ZEND_AST_H = "";
pub const ZEND_AST_SPEC = @as(c_int, 1);
pub const ZEND_AST_SPECIAL_SHIFT = @as(c_int, 6);
pub const ZEND_AST_IS_LIST_SHIFT = @as(c_int, 7);
pub const ZEND_AST_NUM_CHILDREN_SHIFT = @as(c_int, 8);
pub const ZEND_AST_SPEC_CALL = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ast.h:234:10
pub const ZEND_AST_SPEC_CALL_ = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ast.h:236:10
pub const ZEND_AST_SPEC_CALL_EX = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ast.h:238:10
pub const ZEND_AST_SPEC_CALL_EX_ = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ast.h:240:10
pub const zend_ast_create = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ast.h:290:10
pub const zend_ast_create_ex = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ast.h:292:10
pub const zend_ast_create_list = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ast.h:294:10
pub const ZEND_VARIABLES_H = "";
pub inline fn zval_dtor(zvalue: anytype) @TypeOf(zval_ptr_dtor_nogc(zvalue)) {
    _ = &zvalue;
    return zval_ptr_dtor_nogc(zvalue);
}
pub const ZVAL_PTR_DTOR = zval_ptr_dtor;
pub const ZVAL_INTERNAL_PTR_DTOR = zval_internal_ptr_dtor;
pub const ZEND_ITERATORS_H = "";
pub const ZEND_STREAM_H = "";
pub const _SYS_STAT_H_ = "";
pub const __DARWIN_STRUCT_STAT64_TIMES = @compileError("unable to translate macro: undefined identifier `st_atimespec`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/stat.h:128:9
pub const __DARWIN_STRUCT_STAT64 = @compileError("unable to translate macro: undefined identifier `st_dev`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/stat.h:158:9
pub const st_atime = @compileError("unable to translate macro: undefined identifier `st_atimespec`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/stat.h:231:9
pub const st_mtime = @compileError("unable to translate macro: undefined identifier `st_mtimespec`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/stat.h:232:9
pub const st_ctime = @compileError("unable to translate macro: undefined identifier `st_ctimespec`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/stat.h:233:9
pub const st_birthtime = @compileError("unable to translate macro: undefined identifier `st_birthtimespec`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/stat.h:234:9
pub const S_IFMT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0o170000, .octal);
pub const S_IFIFO = @as(c_int, 0o010000);
pub const S_IFCHR = @as(c_int, 0o020000);
pub const S_IFDIR = @as(c_int, 0o040000);
pub const S_IFBLK = @as(c_int, 0o060000);
pub const S_IFREG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0o100000, .octal);
pub const S_IFLNK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0o120000, .octal);
pub const S_IFSOCK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0o140000, .octal);
pub const S_IFWHT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0o160000, .octal);
pub const S_IRWXU = @as(c_int, 0o000700);
pub const S_IRUSR = @as(c_int, 0o000400);
pub const S_IWUSR = @as(c_int, 0o000200);
pub const S_IXUSR = @as(c_int, 0o000100);
pub const S_IRWXG = @as(c_int, 0o000070);
pub const S_IRGRP = @as(c_int, 0o000040);
pub const S_IWGRP = @as(c_int, 0o000020);
pub const S_IXGRP = @as(c_int, 0o000010);
pub const S_IRWXO = @as(c_int, 0o000007);
pub const S_IROTH = @as(c_int, 0o000004);
pub const S_IWOTH = @as(c_int, 0o000002);
pub const S_IXOTH = @as(c_int, 0o000001);
pub const S_ISUID = @as(c_int, 0o004000);
pub const S_ISGID = @as(c_int, 0o002000);
pub const S_ISVTX = @as(c_int, 0o001000);
pub const S_ISTXT = S_ISVTX;
pub const S_IREAD = S_IRUSR;
pub const S_IWRITE = S_IWUSR;
pub const S_IEXEC = S_IXUSR;
pub inline fn S_ISBLK(m: anytype) @TypeOf((m & S_IFMT) == S_IFBLK) {
    _ = &m;
    return (m & S_IFMT) == S_IFBLK;
}
pub inline fn S_ISCHR(m: anytype) @TypeOf((m & S_IFMT) == S_IFCHR) {
    _ = &m;
    return (m & S_IFMT) == S_IFCHR;
}
pub inline fn S_ISDIR(m: anytype) @TypeOf((m & S_IFMT) == S_IFDIR) {
    _ = &m;
    return (m & S_IFMT) == S_IFDIR;
}
pub inline fn S_ISFIFO(m: anytype) @TypeOf((m & S_IFMT) == S_IFIFO) {
    _ = &m;
    return (m & S_IFMT) == S_IFIFO;
}
pub inline fn S_ISREG(m: anytype) @TypeOf((m & S_IFMT) == S_IFREG) {
    _ = &m;
    return (m & S_IFMT) == S_IFREG;
}
pub inline fn S_ISLNK(m: anytype) @TypeOf((m & S_IFMT) == S_IFLNK) {
    _ = &m;
    return (m & S_IFMT) == S_IFLNK;
}
pub inline fn S_ISSOCK(m: anytype) @TypeOf((m & S_IFMT) == S_IFSOCK) {
    _ = &m;
    return (m & S_IFMT) == S_IFSOCK;
}
pub inline fn S_ISWHT(m: anytype) @TypeOf((m & S_IFMT) == S_IFWHT) {
    _ = &m;
    return (m & S_IFMT) == S_IFWHT;
}
pub inline fn S_TYPEISMQ(buf: anytype) @TypeOf(@as(c_int, 0)) {
    _ = &buf;
    return @as(c_int, 0);
}
pub inline fn S_TYPEISSEM(buf: anytype) @TypeOf(@as(c_int, 0)) {
    _ = &buf;
    return @as(c_int, 0);
}
pub inline fn S_TYPEISSHM(buf: anytype) @TypeOf(@as(c_int, 0)) {
    _ = &buf;
    return @as(c_int, 0);
}
pub inline fn S_TYPEISTMO(buf: anytype) @TypeOf(@as(c_int, 0)) {
    _ = &buf;
    return @as(c_int, 0);
}
pub const ACCESSPERMS = (S_IRWXU | S_IRWXG) | S_IRWXO;
pub const ALLPERMS = ((((S_ISUID | S_ISGID) | S_ISTXT) | S_IRWXU) | S_IRWXG) | S_IRWXO;
pub const DEFFILEMODE = ((((S_IRUSR | S_IWUSR) | S_IRGRP) | S_IWGRP) | S_IROTH) | S_IWOTH;
pub const S_BLKSIZE = @as(c_int, 512);
pub const UF_SETTABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0000ffff, .hex);
pub const UF_NODUMP = @as(c_int, 0x00000001);
pub const UF_IMMUTABLE = @as(c_int, 0x00000002);
pub const UF_APPEND = @as(c_int, 0x00000004);
pub const UF_OPAQUE = @as(c_int, 0x00000008);
pub const UF_COMPRESSED = @as(c_int, 0x00000020);
pub const UF_TRACKED = @as(c_int, 0x00000040);
pub const UF_DATAVAULT = @as(c_int, 0x00000080);
pub const UF_HIDDEN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00008000, .hex);
pub const SF_SUPPORTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x009f0000, .hex);
pub const SF_SETTABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x3fff0000, .hex);
pub const SF_SYNTHETIC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xc0000000, .hex);
pub const SF_ARCHIVED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const SF_IMMUTABLE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020000, .hex);
pub const SF_APPEND = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040000, .hex);
pub const SF_RESTRICTED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00080000, .hex);
pub const SF_NOUNLINK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00100000, .hex);
pub const SF_FIRMLINK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00800000, .hex);
pub const SF_DATALESS = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const EF_MAY_SHARE_BLOCKS = @as(c_int, 0x00000001);
pub const EF_NO_XATTRS = @as(c_int, 0x00000002);
pub const EF_IS_SYNC_ROOT = @as(c_int, 0x00000004);
pub const EF_IS_PURGEABLE = @as(c_int, 0x00000008);
pub const EF_IS_SPARSE = @as(c_int, 0x00000010);
pub const EF_IS_SYNTHETIC = @as(c_int, 0x00000020);
pub const EF_SHARES_ALL_BLOCKS = @as(c_int, 0x00000040);
pub const UTIME_NOW = -@as(c_int, 1);
pub const UTIME_OMIT = -@as(c_int, 2);
pub const _FILESEC_T = "";
pub const ZEND_MMAP_AHEAD = @as(c_int, 32);
pub const zend_fseek = fseek;
pub const zend_ftell = ftell;
pub const zend_lseek = lseek;
pub const zend_fstat = fstat;
pub const zend_stat = stat;
pub const ZEND_SMART_STR_PUBLIC_H = "";
pub const PHP_SMART_STRING_PUBLIC_H = "";
pub const ZEND_SIGNAL_H = "";
pub const _USER_SIGNAL_H = "";
pub const ZEND_SIGNAL_QUEUE_SIZE = @as(c_int, 64);
pub inline fn SIGG(v: anytype) @TypeOf(zend_signal_globals.v) {
    _ = &v;
    return zend_signal_globals.v;
}
pub const ZEND_SIGNAL_BLOCK_INTERRUPTIONS = @compileError("unable to translate macro: undefined identifier `depth`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_signal.h:84:11
pub const ZEND_SIGNAL_UNBLOCK_INTERRUPTIONS = @compileError("unable to translate macro: undefined identifier `depth`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_signal.h:85:11
pub const ZEND_MAX_EXECUTION_TIMER_H = "";
pub const zend_max_execution_timer_init = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_max_execution_timer.h:31:9
pub const zend_max_execution_timer_settime = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_max_execution_timer.h:32:9
pub const zend_max_execution_timer_shutdown = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_max_execution_timer.h:33:9
pub const zend_sprintf = sprintf;
pub inline fn HANDLE_BLOCK_INTERRUPTIONS() @TypeOf(ZEND_SIGNAL_BLOCK_INTERRUPTIONS()) {
    return ZEND_SIGNAL_BLOCK_INTERRUPTIONS();
}
pub inline fn HANDLE_UNBLOCK_INTERRUPTIONS() @TypeOf(ZEND_SIGNAL_UNBLOCK_INTERRUPTIONS()) {
    return ZEND_SIGNAL_UNBLOCK_INTERRUPTIONS();
}
pub const INTERNAL_FUNCTION_PARAMETERS = @compileError("unable to translate macro: undefined identifier `execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:49:9
pub const INTERNAL_FUNCTION_PARAM_PASSTHRU = @compileError("unable to translate macro: undefined identifier `execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:50:9
pub const USED_RET = @compileError("unable to translate macro: undefined identifier `prev_execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:52:9
pub const ZEND_TSRMG = @compileError("unable to translate macro: undefined identifier `TSRMG`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:65:9
pub const ZEND_TSRMG_FAST = @compileError("unable to translate macro: undefined identifier `TSRMG_FAST`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:66:9
pub const ZEND_TSRMLS_CACHE_EXTERN = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:67:9
pub const ZEND_TSRMLS_CACHE_DEFINE = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:68:9
pub const ZEND_TSRMLS_CACHE_UPDATE = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:69:9
pub const ZEND_TSRMLS_CACHE = "";
pub const zend_bailout = @compileError("unable to translate macro: undefined identifier `__FILE__`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:268:9
pub const zend_try = @compileError("unable to translate macro: undefined identifier `__orig_bailout`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:270:9
pub const zend_catch = @compileError("unable to translate macro: undefined identifier `bailout`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:277:9
pub const zend_end_try = @compileError("unable to translate macro: undefined identifier `bailout`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:280:9
pub const zend_first_try = @compileError("unable to translate macro: undefined identifier `bailout`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:284:9
pub inline fn ZEND_WRITE(str: anytype, str_len: anytype) @TypeOf(zend_write(str, str_len)) {
    _ = &str;
    _ = &str_len;
    return zend_write(str, str_len);
}
pub const ZEND_WRITE_EX = @compileError("unable to translate macro: undefined identifier `write_func`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:334:9
pub inline fn ZEND_PUTS(str: anytype) @TypeOf(zend_write(str, strlen(str))) {
    _ = &str;
    return zend_write(str, strlen(str));
}
pub const ZEND_PUTS_EX = @compileError("unable to translate macro: undefined identifier `write_func`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:336:9
pub inline fn ZEND_PUTC(c: anytype) @TypeOf(zend_write(&c, @as(c_int, 1))) {
    _ = &c;
    return zend_write(&c, @as(c_int, 1));
}
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend.h:406:9: warning: macro 'ZEND_STANDARD_CLASS_DEF_PTR' contains a runtime value, translated to function
pub inline fn ZEND_STANDARD_CLASS_DEF_PTR() @TypeOf(zend_standard_class_def) {
    return zend_standard_class_def;
}
pub inline fn ZEND_UV(name: anytype) @TypeOf(zend_uv.name) {
    _ = &name;
    return zend_uv.name;
}
pub const ZMSG_FAILED_INCLUDE_FOPEN = @as(c_long, 1);
pub const ZMSG_FAILED_REQUIRE_FOPEN = @as(c_long, 2);
pub const ZMSG_FAILED_HIGHLIGHT_FOPEN = @as(c_long, 3);
pub const ZMSG_MEMORY_LEAK_DETECTED = @as(c_long, 4);
pub const ZMSG_MEMORY_LEAK_REPEATED = @as(c_long, 5);
pub const ZMSG_LOG_SCRIPT_NAME = @as(c_long, 6);
pub const ZMSG_MEMORY_LEAKS_GRAND_TOTAL = @as(c_long, 7);
pub const DEBUG_BACKTRACE_PROVIDE_OBJECT = @as(c_int, 1) << @as(c_int, 0);
pub const DEBUG_BACKTRACE_IGNORE_ARGS = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_OBJECT_HANDLERS_H = "";
pub const ZEND_PROPERTY_HOOKS_H = "";
pub const ZEND_LAZY_OBJECT_H = "";
pub const ZEND_LAZY_OBJECT_STRATEGY_PROXY = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_LAZY_OBJECT_STRATEGY_GHOST = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_LAZY_OBJECT_INITIALIZED = @as(c_int, 1) << @as(c_int, 2);
pub const ZEND_LAZY_OBJECT_SKIP_INITIALIZATION_ON_SERIALIZE = @as(c_int, 1) << @as(c_int, 3);
pub const ZEND_LAZY_OBJECT_SKIP_DESTRUCTOR = @as(c_int, 1) << @as(c_int, 4);
pub const ZEND_LAZY_OBJECT_USER_MASK = ZEND_LAZY_OBJECT_SKIP_INITIALIZATION_ON_SERIALIZE | ZEND_LAZY_OBJECT_SKIP_DESTRUCTOR;
pub const ZEND_LAZY_OBJECT_STRATEGY_MASK = ZEND_LAZY_OBJECT_STRATEGY_PROXY | ZEND_LAZY_OBJECT_STRATEGY_GHOST;
pub const ZEND_WRONG_PROPERTY_INFO = @import("std").zig.c_translation.cast([*c]struct__zend_property_info, @import("std").zig.c_translation.cast(isize, -@as(c_int, 1)));
pub const ZEND_DYNAMIC_PROPERTY_OFFSET = @import("std").zig.c_translation.cast(usize, @import("std").zig.c_translation.cast(isize, -@as(c_int, 1)));
pub const ZEND_FIRST_PROPERTY_OFFSET = @as(c_int, 1) << @as(c_int, 4);
pub inline fn IS_VALID_PROPERTY_OFFSET(offset: anytype) @TypeOf(@import("std").zig.c_translation.cast(isize, offset) >= ZEND_FIRST_PROPERTY_OFFSET) {
    _ = &offset;
    return @import("std").zig.c_translation.cast(isize, offset) >= ZEND_FIRST_PROPERTY_OFFSET;
}
pub inline fn IS_WRONG_PROPERTY_OFFSET(offset: anytype) @TypeOf(@import("std").zig.c_translation.cast(isize, offset) == @as(c_int, 0)) {
    _ = &offset;
    return @import("std").zig.c_translation.cast(isize, offset) == @as(c_int, 0);
}
pub inline fn IS_HOOKED_PROPERTY_OFFSET(offset: anytype) @TypeOf((@import("std").zig.c_translation.cast(isize, offset) > @as(c_int, 0)) and (@import("std").zig.c_translation.cast(isize, offset) < @as(c_int, 16))) {
    _ = &offset;
    return (@import("std").zig.c_translation.cast(isize, offset) > @as(c_int, 0)) and (@import("std").zig.c_translation.cast(isize, offset) < @as(c_int, 16));
}
pub inline fn IS_DYNAMIC_PROPERTY_OFFSET(offset: anytype) @TypeOf(@import("std").zig.c_translation.cast(isize, offset) < @as(c_int, 0)) {
    _ = &offset;
    return @import("std").zig.c_translation.cast(isize, offset) < @as(c_int, 0);
}
pub const ZEND_PROPERTY_HOOK_SIMPLE_READ_BIT = @as(c_uint, 2);
pub const ZEND_PROPERTY_HOOK_SIMPLE_WRITE_BIT = @as(c_uint, 4);
pub const ZEND_PROPERTY_HOOK_SIMPLE_GET_BIT = @as(c_uint, 8);
pub inline fn ZEND_IS_PROPERTY_HOOK_SIMPLE_READ(offset: anytype) @TypeOf((offset & ZEND_PROPERTY_HOOK_SIMPLE_READ_BIT) != @as(c_int, 0)) {
    _ = &offset;
    return (offset & ZEND_PROPERTY_HOOK_SIMPLE_READ_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_IS_PROPERTY_HOOK_SIMPLE_WRITE(offset: anytype) @TypeOf((offset & ZEND_PROPERTY_HOOK_SIMPLE_WRITE_BIT) != @as(c_int, 0)) {
    _ = &offset;
    return (offset & ZEND_PROPERTY_HOOK_SIMPLE_WRITE_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_IS_PROPERTY_HOOK_SIMPLE_GET(offset: anytype) @TypeOf((offset & ZEND_PROPERTY_HOOK_SIMPLE_GET_BIT) != @as(c_int, 0)) {
    _ = &offset;
    return (offset & ZEND_PROPERTY_HOOK_SIMPLE_GET_BIT) != @as(c_int, 0);
}
pub const ZEND_SET_PROPERTY_HOOK_SIMPLE_READ = @compileError("unable to translate macro: undefined identifier `__cache_slot`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_object_handlers.h:56:9
pub const ZEND_SET_PROPERTY_HOOK_SIMPLE_WRITE = @compileError("unable to translate macro: undefined identifier `__cache_slot`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_object_handlers.h:63:9
pub const ZEND_SET_PROPERTY_HOOK_SIMPLE_GET = @compileError("unable to translate macro: undefined identifier `__cache_slot`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_object_handlers.h:70:9
pub inline fn IS_UNKNOWN_DYNAMIC_PROPERTY_OFFSET(offset: anytype) @TypeOf(offset == ZEND_DYNAMIC_PROPERTY_OFFSET) {
    _ = &offset;
    return offset == ZEND_DYNAMIC_PROPERTY_OFFSET;
}
pub inline fn ZEND_DECODE_DYN_PROP_OFFSET(offset: anytype) usize {
    _ = &offset;
    return @import("std").zig.c_translation.cast(usize, -@import("std").zig.c_translation.cast(isize, offset) - @as(c_int, 2));
}
pub inline fn ZEND_ENCODE_DYN_PROP_OFFSET(offset: anytype) usize {
    _ = &offset;
    return @import("std").zig.c_translation.cast(usize, -(@import("std").zig.c_translation.cast(isize, offset) + @as(c_int, 2)));
}
pub inline fn zend_get_std_object_handlers() @TypeOf(&std_object_handlers) {
    return &std_object_handlers;
}
pub inline fn zend_get_function_root_class(fbc: anytype) @TypeOf(if (fbc.*.common.prototype) fbc.*.common.prototype.*.common.scope else fbc.*.common.scope) {
    _ = &fbc;
    return if (fbc.*.common.prototype) fbc.*.common.prototype.*.common.scope else fbc.*.common.scope;
}
pub const ZEND_PROPERTY_ISSET = @as(c_int, 0x0);
pub const ZEND_PROPERTY_NOT_EMPTY = ZEND_ISEMPTY;
pub const ZEND_PROPERTY_EXISTS = @as(c_int, 0x2);
pub inline fn ZEND_STD_BUILD_OBJECT_PROPERTIES_ARRAY_COMPATIBLE(object: anytype) @TypeOf((((Z_OBJ_P(object).*.properties == NULL) and (Z_OBJ_HT_P(object).*.get_properties_for == NULL)) and (Z_OBJ_HT_P(object).*.get_properties == zend_std_get_properties)) and (!(zend_object_is_lazy_proxy(Z_OBJ_P(object)) != 0) or !(zend_lazy_object_initialized(Z_OBJ_P(object)) != 0))) {
    _ = &object;
    return (((Z_OBJ_P(object).*.properties == NULL) and (Z_OBJ_HT_P(object).*.get_properties_for == NULL)) and (Z_OBJ_HT_P(object).*.get_properties == zend_std_get_properties)) and (!(zend_object_is_lazy_proxy(Z_OBJ_P(object)) != 0) or !(zend_lazy_object_initialized(Z_OBJ_P(object)) != 0));
}
pub const zend_release_properties = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_object_handlers.h:335:9
pub const zend_free_trampoline = @compileError("unable to translate macro: undefined identifier `trampoline`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_object_handlers.h:341:9
pub const ZEND_COMPARE_OBJECTS_FALLBACK = @compileError("unable to translate C expr: unexpected token 'if'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_object_handlers.h:353:9
pub const ZEND_OPERATORS_H = "";
pub const _SYS_ERRNO_H_ = "";
pub const errno = __error().*;
pub const EPERM = @as(c_int, 1);
pub const ENOENT = @as(c_int, 2);
pub const ESRCH = @as(c_int, 3);
pub const EINTR = @as(c_int, 4);
pub const EIO = @as(c_int, 5);
pub const ENXIO = @as(c_int, 6);
pub const E2BIG = @as(c_int, 7);
pub const ENOEXEC = @as(c_int, 8);
pub const EBADF = @as(c_int, 9);
pub const ECHILD = @as(c_int, 10);
pub const EDEADLK = @as(c_int, 11);
pub const ENOMEM = @as(c_int, 12);
pub const EACCES = @as(c_int, 13);
pub const EFAULT = @as(c_int, 14);
pub const ENOTBLK = @as(c_int, 15);
pub const EBUSY = @as(c_int, 16);
pub const EEXIST = @as(c_int, 17);
pub const EXDEV = @as(c_int, 18);
pub const ENODEV = @as(c_int, 19);
pub const ENOTDIR = @as(c_int, 20);
pub const EISDIR = @as(c_int, 21);
pub const EINVAL = @as(c_int, 22);
pub const ENFILE = @as(c_int, 23);
pub const EMFILE = @as(c_int, 24);
pub const ENOTTY = @as(c_int, 25);
pub const ETXTBSY = @as(c_int, 26);
pub const EFBIG = @as(c_int, 27);
pub const ENOSPC = @as(c_int, 28);
pub const ESPIPE = @as(c_int, 29);
pub const EROFS = @as(c_int, 30);
pub const EMLINK = @as(c_int, 31);
pub const EPIPE = @as(c_int, 32);
pub const EDOM = @as(c_int, 33);
pub const ERANGE = @as(c_int, 34);
pub const EAGAIN = @as(c_int, 35);
pub const EWOULDBLOCK = EAGAIN;
pub const EINPROGRESS = @as(c_int, 36);
pub const EALREADY = @as(c_int, 37);
pub const ENOTSOCK = @as(c_int, 38);
pub const EDESTADDRREQ = @as(c_int, 39);
pub const EMSGSIZE = @as(c_int, 40);
pub const EPROTOTYPE = @as(c_int, 41);
pub const ENOPROTOOPT = @as(c_int, 42);
pub const EPROTONOSUPPORT = @as(c_int, 43);
pub const ESOCKTNOSUPPORT = @as(c_int, 44);
pub const ENOTSUP = @as(c_int, 45);
pub const EPFNOSUPPORT = @as(c_int, 46);
pub const EAFNOSUPPORT = @as(c_int, 47);
pub const EADDRINUSE = @as(c_int, 48);
pub const EADDRNOTAVAIL = @as(c_int, 49);
pub const ENETDOWN = @as(c_int, 50);
pub const ENETUNREACH = @as(c_int, 51);
pub const ENETRESET = @as(c_int, 52);
pub const ECONNABORTED = @as(c_int, 53);
pub const ECONNRESET = @as(c_int, 54);
pub const ENOBUFS = @as(c_int, 55);
pub const EISCONN = @as(c_int, 56);
pub const ENOTCONN = @as(c_int, 57);
pub const ESHUTDOWN = @as(c_int, 58);
pub const ETOOMANYREFS = @as(c_int, 59);
pub const ETIMEDOUT = @as(c_int, 60);
pub const ECONNREFUSED = @as(c_int, 61);
pub const ELOOP = @as(c_int, 62);
pub const ENAMETOOLONG = @as(c_int, 63);
pub const EHOSTDOWN = @as(c_int, 64);
pub const EHOSTUNREACH = @as(c_int, 65);
pub const ENOTEMPTY = @as(c_int, 66);
pub const EPROCLIM = @as(c_int, 67);
pub const EUSERS = @as(c_int, 68);
pub const EDQUOT = @as(c_int, 69);
pub const ESTALE = @as(c_int, 70);
pub const EREMOTE = @as(c_int, 71);
pub const EBADRPC = @as(c_int, 72);
pub const ERPCMISMATCH = @as(c_int, 73);
pub const EPROGUNAVAIL = @as(c_int, 74);
pub const EPROGMISMATCH = @as(c_int, 75);
pub const EPROCUNAVAIL = @as(c_int, 76);
pub const ENOLCK = @as(c_int, 77);
pub const ENOSYS = @as(c_int, 78);
pub const EFTYPE = @as(c_int, 79);
pub const EAUTH = @as(c_int, 80);
pub const ENEEDAUTH = @as(c_int, 81);
pub const EPWROFF = @as(c_int, 82);
pub const EDEVERR = @as(c_int, 83);
pub const EOVERFLOW = @as(c_int, 84);
pub const EBADEXEC = @as(c_int, 85);
pub const EBADARCH = @as(c_int, 86);
pub const ESHLIBVERS = @as(c_int, 87);
pub const EBADMACHO = @as(c_int, 88);
pub const ECANCELED = @as(c_int, 89);
pub const EIDRM = @as(c_int, 90);
pub const ENOMSG = @as(c_int, 91);
pub const EILSEQ = @as(c_int, 92);
pub const ENOATTR = @as(c_int, 93);
pub const EBADMSG = @as(c_int, 94);
pub const EMULTIHOP = @as(c_int, 95);
pub const ENODATA = @as(c_int, 96);
pub const ENOLINK = @as(c_int, 97);
pub const ENOSR = @as(c_int, 98);
pub const ENOSTR = @as(c_int, 99);
pub const EPROTO = @as(c_int, 100);
pub const ETIME = @as(c_int, 101);
pub const EOPNOTSUPP = @as(c_int, 102);
pub const ENOPOLICY = @as(c_int, 103);
pub const ENOTRECOVERABLE = @as(c_int, 104);
pub const EOWNERDEAD = @as(c_int, 105);
pub const EQFULL = @as(c_int, 106);
pub const ELAST = @as(c_int, 106);
pub const ZEND_STRTOD_H = "";
pub const ZEND_STRTOD_K_MAX = @as(c_int, 7);
pub const __CLANG_FLOAT_H = "";
pub const _FLOAT_H_ = "";
pub const __FLOAT_H = "";
pub const FLT_EVAL_METHOD = @compileError("unable to translate macro: undefined identifier `__FLT_EVAL_METHOD__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/float.h:84:9
pub const FLT_ROUNDS = @compileError("unable to translate macro: undefined identifier `__builtin_flt_rounds`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/float.h:85:9
pub const FLT_RADIX = __FLT_RADIX__;
pub const FLT_MANT_DIG = __FLT_MANT_DIG__;
pub const DBL_MANT_DIG = __DBL_MANT_DIG__;
pub const LDBL_MANT_DIG = __LDBL_MANT_DIG__;
pub const FLT_DIG = __FLT_DIG__;
pub const DBL_DIG = __DBL_DIG__;
pub const LDBL_DIG = __LDBL_DIG__;
pub const FLT_MIN_EXP = __FLT_MIN_EXP__;
pub const DBL_MIN_EXP = __DBL_MIN_EXP__;
pub const LDBL_MIN_EXP = __LDBL_MIN_EXP__;
pub const FLT_MIN_10_EXP = __FLT_MIN_10_EXP__;
pub const DBL_MIN_10_EXP = __DBL_MIN_10_EXP__;
pub const LDBL_MIN_10_EXP = __LDBL_MIN_10_EXP__;
pub const FLT_MAX_EXP = __FLT_MAX_EXP__;
pub const DBL_MAX_EXP = __DBL_MAX_EXP__;
pub const LDBL_MAX_EXP = __LDBL_MAX_EXP__;
pub const FLT_MAX_10_EXP = __FLT_MAX_10_EXP__;
pub const DBL_MAX_10_EXP = __DBL_MAX_10_EXP__;
pub const LDBL_MAX_10_EXP = __LDBL_MAX_10_EXP__;
pub const FLT_MAX = __FLT_MAX__;
pub const DBL_MAX = __DBL_MAX__;
pub const LDBL_MAX = __LDBL_MAX__;
pub const FLT_EPSILON = __FLT_EPSILON__;
pub const DBL_EPSILON = __DBL_EPSILON__;
pub const LDBL_EPSILON = __LDBL_EPSILON__;
pub const FLT_MIN = __FLT_MIN__;
pub const DBL_MIN = __DBL_MIN__;
pub const LDBL_MIN = __LDBL_MIN__;
pub const DECIMAL_DIG = __DECIMAL_DIG__;
pub const FLT_HAS_SUBNORM = @as(c_int, 1);
pub const DBL_HAS_SUBNORM = @as(c_int, 1);
pub const LDBL_HAS_SUBNORM = @as(c_int, 1);
pub const FLT_TRUE_MIN = __FLT_DENORM_MIN__;
pub const DBL_TRUE_MIN = __DBL_DENORM_MIN__;
pub const LDBL_TRUE_MIN = __LDBL_DENORM_MIN__;
pub const FLT_DECIMAL_DIG = __FLT_DECIMAL_DIG__;
pub const DBL_DECIMAL_DIG = __DBL_DECIMAL_DIG__;
pub const LDBL_DECIMAL_DIG = __LDBL_DECIMAL_DIG__;
pub const FLT_NORM_MAX = __FLT_NORM_MAX__;
pub const DBL_NORM_MAX = __DBL_NORM_MAX__;
pub const LDBL_NORM_MAX = __LDBL_NORM_MAX__;
pub const FLT16_MANT_DIG = __FLT16_MANT_DIG__;
pub const FLT16_DECIMAL_DIG = __FLT16_DECIMAL_DIG__;
pub const FLT16_DIG = __FLT16_DIG__;
pub const FLT16_MIN_EXP = __FLT16_MIN_EXP__;
pub const FLT16_MIN_10_EXP = __FLT16_MIN_10_EXP__;
pub const FLT16_MAX_EXP = __FLT16_MAX_EXP__;
pub const FLT16_MAX_10_EXP = __FLT16_MAX_10_EXP__;
pub const FLT16_MAX = __FLT16_MAX__;
pub const FLT16_EPSILON = __FLT16_EPSILON__;
pub const FLT16_MIN = __FLT16_MIN__;
pub const FLT16_TRUE_MIN = @compileError("unable to translate macro: undefined identifier `__FLT16_TRUE_MIN__`");
// /opt/homebrew/Cellar/zig/0.14.1/lib/zig/include/float.h:192:11
pub const ZEND_DOUBLE_MAX_LENGTH = (@as(c_int, 3) + DBL_MANT_DIG) - DBL_MIN_EXP;
pub const ZEND_MULTIPLY_H = "";
pub const ZEND_SIGNED_MULTIPLY_LONG = @compileError("unable to translate macro: undefined identifier `__tmpvar`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_multiply.h:27:9
pub const LONG_SIGN_MASK = ZEND_LONG_MIN;
pub inline fn ZEND_DOUBLE_FITS_LONG(d: anytype) @TypeOf(!((d >= @import("std").zig.c_translation.cast(f64, ZEND_LONG_MAX)) or (d < @import("std").zig.c_translation.cast(f64, ZEND_LONG_MIN)))) {
    _ = &d;
    return !((d >= @import("std").zig.c_translation.cast(f64, ZEND_LONG_MAX)) or (d < @import("std").zig.c_translation.cast(f64, ZEND_LONG_MIN)));
}
pub inline fn ZEND_IS_DIGIT(c: anytype) @TypeOf((c >= '0') and (c <= '9')) {
    _ = &c;
    return (c >= '0') and (c <= '9');
}
pub inline fn ZEND_IS_XDIGIT(c: anytype) @TypeOf(((c >= 'A') and (c <= 'F')) or ((c >= 'a') and (c <= 'f'))) {
    _ = &c;
    return ((c >= 'A') and (c <= 'F')) or ((c >= 'a') and (c <= 'f'));
}
pub inline fn _zval_get_long(op: anytype) @TypeOf(zval_get_long(op)) {
    _ = &op;
    return zval_get_long(op);
}
pub inline fn _zval_get_double(op: anytype) @TypeOf(zval_get_double(op)) {
    _ = &op;
    return zval_get_double(op);
}
pub inline fn _zval_get_string(op: anytype) @TypeOf(zval_get_string(op)) {
    _ = &op;
    return zval_get_string(op);
}
pub inline fn _zval_get_long_func(op: anytype) @TypeOf(zval_get_long_func(op)) {
    _ = &op;
    return zval_get_long_func(op);
}
pub inline fn _zval_get_double_func(op: anytype) @TypeOf(zval_get_double_func(op)) {
    _ = &op;
    return zval_get_double_func(op);
}
pub inline fn _zval_get_string_func(op: anytype) @TypeOf(zval_get_string_func(op)) {
    _ = &op;
    return zval_get_string_func(op);
}
pub const convert_to_string = @compileError("unable to translate C expr: unexpected token 'if'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:385:9
pub inline fn zval_is_true(op: anytype) @TypeOf(zend_is_true(op)) {
    _ = &op;
    return zend_is_true(op);
}
pub const ZEND_UNCOMPARABLE = @as(c_int, 1);
pub inline fn zend_tolower_ascii(c: anytype) @TypeOf(zend_tolower_map[@as(usize, @intCast(@import("std").zig.c_translation.cast(u8, c)))]) {
    _ = &c;
    return zend_tolower_map[@as(usize, @intCast(@import("std").zig.c_translation.cast(u8, c)))];
}
pub inline fn zend_toupper_ascii(c: anytype) @TypeOf(zend_toupper_map[@as(usize, @intCast(@import("std").zig.c_translation.cast(u8, c)))]) {
    _ = &c;
    return zend_toupper_map[@as(usize, @intCast(@import("std").zig.c_translation.cast(u8, c)))];
}
pub inline fn convert_to_null_ex(zv: anytype) @TypeOf(convert_to_null(zv)) {
    _ = &zv;
    return convert_to_null(zv);
}
pub inline fn convert_to_boolean_ex(zv: anytype) @TypeOf(convert_to_boolean(zv)) {
    _ = &zv;
    return convert_to_boolean(zv);
}
pub inline fn convert_to_long_ex(zv: anytype) @TypeOf(convert_to_long(zv)) {
    _ = &zv;
    return convert_to_long(zv);
}
pub inline fn convert_to_double_ex(zv: anytype) @TypeOf(convert_to_double(zv)) {
    _ = &zv;
    return convert_to_double(zv);
}
pub inline fn convert_to_string_ex(zv: anytype) @TypeOf(convert_to_string(zv)) {
    _ = &zv;
    return convert_to_string(zv);
}
pub inline fn convert_to_array_ex(zv: anytype) @TypeOf(convert_to_array(zv)) {
    _ = &zv;
    return convert_to_array(zv);
}
pub inline fn convert_to_object_ex(zv: anytype) @TypeOf(convert_to_object(zv)) {
    _ = &zv;
    return convert_to_object(zv);
}
pub inline fn convert_scalar_to_number_ex(zv: anytype) @TypeOf(convert_scalar_to_number(zv)) {
    _ = &zv;
    return convert_scalar_to_number(zv);
}
pub const ZVAL_OFFSETOF_TYPE = @compileError("unable to translate macro: undefined identifier `u1`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_operators.h:520:9
pub const ZEND_USE_ASM_ARITHMETIC = @as(c_int, 1);
pub const PHP_COMPAT_H = "";
pub const lookup = @compileError("unable to translate macro: undefined identifier `php_lookup`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:98:9
pub const hashTableInit = @compileError("unable to translate macro: undefined identifier `php_hashTableInit`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:99:9
pub const hashTableDestroy = @compileError("unable to translate macro: undefined identifier `php_hashTableDestroy`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:100:9
pub const hashTableIterInit = @compileError("unable to translate macro: undefined identifier `php_hashTableIterInit`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:101:9
pub const hashTableIterNext = @compileError("unable to translate macro: undefined identifier `php_hashTableIterNext`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:102:9
pub const XML_DefaultCurrent = @compileError("unable to translate macro: undefined identifier `php_XML_DefaultCurrent`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:105:9
pub const XML_ErrorString = @compileError("unable to translate macro: undefined identifier `php_XML_ErrorString`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:106:9
pub const XML_ExpatVersion = @compileError("unable to translate macro: undefined identifier `php_XML_ExpatVersion`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:107:9
pub const XML_ExpatVersionInfo = @compileError("unable to translate macro: undefined identifier `php_XML_ExpatVersionInfo`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:108:9
pub const XML_ExternalEntityParserCreate = @compileError("unable to translate macro: undefined identifier `php_XML_ExternalEntityParserCreate`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:109:9
pub const XML_GetBase = @compileError("unable to translate macro: undefined identifier `php_XML_GetBase`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:110:9
pub const XML_GetBuffer = @compileError("unable to translate macro: undefined identifier `php_XML_GetBuffer`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:111:9
pub const XML_GetCurrentByteCount = @compileError("unable to translate macro: undefined identifier `php_XML_GetCurrentByteCount`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:112:9
pub const XML_GetCurrentByteIndex = @compileError("unable to translate macro: undefined identifier `php_XML_GetCurrentByteIndex`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:113:9
pub const XML_GetCurrentColumnNumber = @compileError("unable to translate macro: undefined identifier `php_XML_GetCurrentColumnNumber`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:114:9
pub const XML_GetCurrentLineNumber = @compileError("unable to translate macro: undefined identifier `php_XML_GetCurrentLineNumber`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:115:9
pub const XML_GetErrorCode = @compileError("unable to translate macro: undefined identifier `php_XML_GetErrorCode`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:116:9
pub const XML_GetIdAttributeIndex = @compileError("unable to translate macro: undefined identifier `php_XML_GetIdAttributeIndex`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:117:9
pub const XML_GetInputContext = @compileError("unable to translate macro: undefined identifier `php_XML_GetInputContext`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:118:9
pub const XML_GetSpecifiedAttributeCount = @compileError("unable to translate macro: undefined identifier `php_XML_GetSpecifiedAttributeCount`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:119:9
pub const XmlGetUtf16InternalEncodingNS = @compileError("unable to translate macro: undefined identifier `php_XmlGetUtf16InternalEncodingNS`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:120:9
pub const XmlGetUtf16InternalEncoding = @compileError("unable to translate macro: undefined identifier `php_XmlGetUtf16InternalEncoding`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:121:9
pub const XmlGetUtf8InternalEncodingNS = @compileError("unable to translate macro: undefined identifier `php_XmlGetUtf8InternalEncodingNS`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:122:9
pub const XmlGetUtf8InternalEncoding = @compileError("unable to translate macro: undefined identifier `php_XmlGetUtf8InternalEncoding`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:123:9
pub const XmlInitEncoding = @compileError("unable to translate macro: undefined identifier `php_XmlInitEncoding`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:124:9
pub const XmlInitEncodingNS = @compileError("unable to translate macro: undefined identifier `php_XmlInitEncodingNS`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:125:9
pub const XmlInitUnknownEncoding = @compileError("unable to translate macro: undefined identifier `php_XmlInitUnknownEncoding`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:126:9
pub const XmlInitUnknownEncodingNS = @compileError("unable to translate macro: undefined identifier `php_XmlInitUnknownEncodingNS`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:127:9
pub const XML_ParseBuffer = @compileError("unable to translate macro: undefined identifier `php_XML_ParseBuffer`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:128:9
pub const XML_Parse = @compileError("unable to translate macro: undefined identifier `php_XML_Parse`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:129:9
pub const XML_ParserCreate_MM = @compileError("unable to translate macro: undefined identifier `php_XML_ParserCreate_MM`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:130:9
pub const XML_ParserCreateNS = @compileError("unable to translate macro: undefined identifier `php_XML_ParserCreateNS`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:131:9
pub const XML_ParserCreate = @compileError("unable to translate macro: undefined identifier `php_XML_ParserCreate`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:132:9
pub const XML_ParserFree = @compileError("unable to translate macro: undefined identifier `php_XML_ParserFree`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:133:9
pub const XmlParseXmlDecl = @compileError("unable to translate macro: undefined identifier `php_XmlParseXmlDecl`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:134:9
pub const XmlParseXmlDeclNS = @compileError("unable to translate macro: undefined identifier `php_XmlParseXmlDeclNS`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:135:9
pub const XmlPrologStateInitExternalEntity = @compileError("unable to translate macro: undefined identifier `php_XmlPrologStateInitExternalEntity`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:136:9
pub const XmlPrologStateInit = @compileError("unable to translate macro: undefined identifier `php_XmlPrologStateInit`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:137:9
pub const XML_SetAttlistDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetAttlistDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:138:9
pub const XML_SetBase = @compileError("unable to translate macro: undefined identifier `php_XML_SetBase`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:139:9
pub const XML_SetCdataSectionHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetCdataSectionHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:140:9
pub const XML_SetCharacterDataHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetCharacterDataHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:141:9
pub const XML_SetCommentHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetCommentHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:142:9
pub const XML_SetDefaultHandlerExpand = @compileError("unable to translate macro: undefined identifier `php_XML_SetDefaultHandlerExpand`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:143:9
pub const XML_SetDefaultHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetDefaultHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:144:9
pub const XML_SetDoctypeDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetDoctypeDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:145:9
pub const XML_SetElementDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetElementDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:146:9
pub const XML_SetElementHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetElementHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:147:9
pub const XML_SetEncoding = @compileError("unable to translate macro: undefined identifier `php_XML_SetEncoding`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:148:9
pub const XML_SetEndCdataSectionHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetEndCdataSectionHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:149:9
pub const XML_SetEndDoctypeDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetEndDoctypeDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:150:9
pub const XML_SetEndElementHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetEndElementHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:151:9
pub const XML_SetEndNamespaceDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetEndNamespaceDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:152:9
pub const XML_SetEntityDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetEntityDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:153:9
pub const XML_SetExternalEntityRefHandlerArg = @compileError("unable to translate macro: undefined identifier `php_XML_SetExternalEntityRefHandlerArg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:154:9
pub const XML_SetExternalEntityRefHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetExternalEntityRefHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:155:9
pub const XML_SetNamespaceDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetNamespaceDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:156:9
pub const XML_SetNotationDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetNotationDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:157:9
pub const XML_SetNotStandaloneHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetNotStandaloneHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:158:9
pub const XML_SetParamEntityParsing = @compileError("unable to translate macro: undefined identifier `php_XML_SetParamEntityParsing`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:159:9
pub const XML_SetProcessingInstructionHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetProcessingInstructionHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:160:9
pub const XML_SetReturnNSTriplet = @compileError("unable to translate macro: undefined identifier `php_XML_SetReturnNSTriplet`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:161:9
pub const XML_SetStartCdataSectionHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetStartCdataSectionHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:162:9
pub const XML_SetStartDoctypeDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetStartDoctypeDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:163:9
pub const XML_SetStartElementHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetStartElementHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:164:9
pub const XML_SetStartNamespaceDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetStartNamespaceDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:165:9
pub const XML_SetUnknownEncodingHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetUnknownEncodingHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:166:9
pub const XML_SetUnparsedEntityDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetUnparsedEntityDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:167:9
pub const XML_SetUserData = @compileError("unable to translate macro: undefined identifier `php_XML_SetUserData`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:168:9
pub const XML_SetXmlDeclHandler = @compileError("unable to translate macro: undefined identifier `php_XML_SetXmlDeclHandler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:169:9
pub const XmlSizeOfUnknownEncoding = @compileError("unable to translate macro: undefined identifier `php_XmlSizeOfUnknownEncoding`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:170:9
pub const XML_UseParserAsHandlerArg = @compileError("unable to translate macro: undefined identifier `php_XML_UseParserAsHandlerArg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:171:9
pub const XmlUtf16Encode = @compileError("unable to translate macro: undefined identifier `php_XmlUtf16Encode`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:172:9
pub const XmlUtf8Encode = @compileError("unable to translate macro: undefined identifier `php_XmlUtf8Encode`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:173:9
pub const XML_FreeContentModel = @compileError("unable to translate macro: undefined identifier `php_XML_FreeContentModel`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:174:9
pub const XML_MemMalloc = @compileError("unable to translate macro: undefined identifier `php_XML_MemMalloc`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:175:9
pub const XML_MemRealloc = @compileError("unable to translate macro: undefined identifier `php_XML_MemRealloc`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:176:9
pub const XML_MemFree = @compileError("unable to translate macro: undefined identifier `php_XML_MemFree`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:177:9
pub const XML_UseForeignDTD = @compileError("unable to translate macro: undefined identifier `php_XML_UseForeignDTD`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:178:9
pub const XML_GetFeatureList = @compileError("unable to translate macro: undefined identifier `php_XML_GetFeatureList`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:179:9
pub const XML_ParserReset = @compileError("unable to translate macro: undefined identifier `php_XML_ParserReset`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_compat.h:180:9
pub const XML_CONTEXT_BYTES = @as(c_int, 1024);
pub const XML_DTD = @as(c_int, 1);
pub const XML_NS = @as(c_int, 1);
pub const ZEND_API_H = "";
pub const MODULES_H = "";
pub const ZEND_COMPILE_H = "";
pub const ZEND_FRAMELESS_FUNCTION_H = "";
pub const ZEND_FRAMELESS_FUNCTION_PARAMETERS_0 = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:31:9
pub const ZEND_FRAMELESS_FUNCTION_PARAMETERS_1 = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:32:9
pub const ZEND_FRAMELESS_FUNCTION_PARAMETERS_2 = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:33:9
pub const ZEND_FRAMELESS_FUNCTION_PARAMETERS_3 = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:34:9
pub const ZEND_FRAMELESS_FUNCTION_NAME = @compileError("unable to translate macro: undefined identifier `zflf_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:36:9
pub inline fn ZEND_OP_IS_FRAMELESS_ICALL(opcode: anytype) @TypeOf((opcode >= ZEND_FRAMELESS_ICALL_0) and (opcode <= ZEND_FRAMELESS_ICALL_3)) {
    _ = &opcode;
    return (opcode >= ZEND_FRAMELESS_ICALL_0) and (opcode <= ZEND_FRAMELESS_ICALL_3);
}
pub inline fn ZEND_FLF_NUM_ARGS(opcode: anytype) @TypeOf(opcode - ZEND_FRAMELESS_ICALL_0) {
    _ = &opcode;
    return opcode - ZEND_FRAMELESS_ICALL_0;
}
pub inline fn ZEND_FLF_FUNC(opline: anytype) @TypeOf(zend_flf_functions[@as(usize, @intCast(opline.*.extended_value))]) {
    _ = &opline;
    return zend_flf_functions[@as(usize, @intCast(opline.*.extended_value))];
}
pub inline fn ZEND_FLF_HANDLER(opline: anytype) @TypeOf(zend_flf_handlers[@as(usize, @intCast(opline.*.extended_value))]) {
    _ = &opline;
    return zend_flf_handlers[@as(usize, @intCast(opline.*.extended_value))];
}
pub const ZEND_FRAMELESS_FUNCTION = @compileError("unable to translate macro: undefined identifier `ZEND_FRAMELESS_FUNCTION_PARAMETERS_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:42:9
pub const Z_FLF_PARAM_ZVAL = @compileError("unable to translate macro: undefined identifier `arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:45:9
pub const Z_FLF_PARAM_ARRAY = @compileError("unable to translate macro: undefined identifier `arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:47:9
pub const Z_FLF_PARAM_ARRAY_OR_NULL = @compileError("unable to translate macro: undefined identifier `arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:52:9
pub const Z_FLF_PARAM_ARRAY_HT_OR_STR = @compileError("unable to translate macro: undefined identifier `arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:57:9
pub const Z_FLF_PARAM_BOOL = @compileError("unable to translate macro: undefined identifier `arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:73:9
pub const Z_FLF_PARAM_LONG = @compileError("unable to translate macro: undefined identifier `arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:78:9
pub const Z_FLF_PARAM_LONG_OR_NULL = @compileError("unable to translate macro: undefined identifier `arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:83:9
pub const Z_FLF_PARAM_STR = @compileError("unable to translate macro: undefined identifier `arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:88:9
pub const Z_FLF_PARAM_FREE_STR = @compileError("unable to translate macro: undefined identifier `arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_frameless_function.h:99:9
pub const SET_UNUSED = @compileError("unable to translate macro: undefined identifier `_type`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:35:9
pub const MAKE_NOP = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:40:9
pub const RESET_DOC_COMMENT = @compileError("unable to translate macro: undefined identifier `doc_comment`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:47:9
pub const ZEND_USE_ABS_JMP_ADDR = @as(c_int, 0);
pub const ZEND_USE_ABS_CONST_ADDR = @as(c_int, 0);
pub const ZEND_LIVE_TMPVAR = @as(c_int, 0);
pub const ZEND_LIVE_LOOP = @as(c_int, 1);
pub const ZEND_LIVE_SILENCE = @as(c_int, 2);
pub const ZEND_LIVE_ROPE = @as(c_int, 3);
pub const ZEND_LIVE_NEW = @as(c_int, 4);
pub const ZEND_LIVE_MASK = @as(c_int, 7);
pub const ZEND_ACC_PUBLIC = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_ACC_PROTECTED = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_ACC_PRIVATE = @as(c_int, 1) << @as(c_int, 2);
pub const ZEND_ACC_CHANGED = @as(c_int, 1) << @as(c_int, 3);
pub const ZEND_ACC_STATIC = @as(c_int, 1) << @as(c_int, 4);
pub const ZEND_ACC_FINAL = @as(c_int, 1) << @as(c_int, 5);
pub const ZEND_ACC_ABSTRACT = @as(c_int, 1) << @as(c_int, 6);
pub const ZEND_ACC_EXPLICIT_ABSTRACT_CLASS = @as(c_int, 1) << @as(c_int, 6);
pub const ZEND_ACC_READONLY = @as(c_int, 1) << @as(c_int, 7);
pub const ZEND_ACC_IMMUTABLE = @as(c_int, 1) << @as(c_int, 7);
pub const ZEND_ACC_HAS_TYPE_HINTS = @as(c_int, 1) << @as(c_int, 8);
pub const ZEND_ACC_TOP_LEVEL = @as(c_int, 1) << @as(c_int, 9);
pub const ZEND_ACC_PRELOADED = @as(c_int, 1) << @as(c_int, 10);
pub const ZEND_CLASS_CONST_IS_CASE = @as(c_int, 1) << @as(c_int, 6);
pub const ZEND_ACC_PROMOTED = @as(c_int, 1) << @as(c_int, 8);
pub const ZEND_ACC_VIRTUAL = @as(c_int, 1) << @as(c_int, 9);
pub const ZEND_ACC_PUBLIC_SET = @as(c_int, 1) << @as(c_int, 10);
pub const ZEND_ACC_PROTECTED_SET = @as(c_int, 1) << @as(c_int, 11);
pub const ZEND_ACC_PRIVATE_SET = @as(c_int, 1) << @as(c_int, 12);
pub const ZEND_ACC_INTERFACE = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_ACC_TRAIT = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_ACC_ANON_CLASS = @as(c_int, 1) << @as(c_int, 2);
pub const ZEND_ACC_ENUM = @as(c_int, 1) << @as(c_int, 28);
pub const ZEND_ACC_LINKED = @as(c_int, 1) << @as(c_int, 3);
pub const ZEND_ACC_IMPLICIT_ABSTRACT_CLASS = @as(c_int, 1) << @as(c_int, 4);
pub const ZEND_ACC_USE_GUARDS = @as(c_int, 1) << @as(c_int, 11);
pub const ZEND_ACC_CONSTANTS_UPDATED = @as(c_int, 1) << @as(c_int, 12);
pub const ZEND_ACC_NO_DYNAMIC_PROPERTIES = @as(c_int, 1) << @as(c_int, 13);
pub const ZEND_HAS_STATIC_IN_METHODS = @as(c_int, 1) << @as(c_int, 14);
pub const ZEND_ACC_ALLOW_DYNAMIC_PROPERTIES = @as(c_int, 1) << @as(c_int, 15);
pub const ZEND_ACC_READONLY_CLASS = @as(c_int, 1) << @as(c_int, 16);
pub const ZEND_ACC_RESOLVED_PARENT = @as(c_int, 1) << @as(c_int, 17);
pub const ZEND_ACC_RESOLVED_INTERFACES = @as(c_int, 1) << @as(c_int, 18);
pub const ZEND_ACC_UNRESOLVED_VARIANCE = @as(c_int, 1) << @as(c_int, 19);
pub const ZEND_ACC_NEARLY_LINKED = @as(c_int, 1) << @as(c_int, 20);
pub const ZEND_ACC_HAS_READONLY_PROPS = @as(c_int, 1) << @as(c_int, 21);
pub const ZEND_ACC_CACHED = @as(c_int, 1) << @as(c_int, 22);
pub const ZEND_ACC_CACHEABLE = @as(c_int, 1) << @as(c_int, 23);
pub const ZEND_ACC_HAS_AST_CONSTANTS = @as(c_int, 1) << @as(c_int, 24);
pub const ZEND_ACC_HAS_AST_PROPERTIES = @as(c_int, 1) << @as(c_int, 25);
pub const ZEND_ACC_HAS_AST_STATICS = @as(c_int, 1) << @as(c_int, 26);
pub const ZEND_ACC_FILE_CACHED = @as(c_int, 1) << @as(c_int, 27);
pub const ZEND_ACC_NOT_SERIALIZABLE = @as(c_int, 1) << @as(c_int, 29);
pub const ZEND_ACC_DEPRECATED = @as(c_int, 1) << @as(c_int, 11);
pub const ZEND_ACC_RETURN_REFERENCE = @as(c_int, 1) << @as(c_int, 12);
pub const ZEND_ACC_HAS_RETURN_TYPE = @as(c_int, 1) << @as(c_int, 13);
pub const ZEND_ACC_VARIADIC = @as(c_int, 1) << @as(c_int, 14);
pub const ZEND_ACC_HAS_FINALLY_BLOCK = @as(c_int, 1) << @as(c_int, 15);
pub const ZEND_ACC_EARLY_BINDING = @as(c_int, 1) << @as(c_int, 16);
pub const ZEND_ACC_USES_THIS = @as(c_int, 1) << @as(c_int, 17);
pub const ZEND_ACC_CALL_VIA_TRAMPOLINE = @as(c_int, 1) << @as(c_int, 18);
pub const ZEND_ACC_NEVER_CACHE = @as(c_int, 1) << @as(c_int, 19);
pub const ZEND_ACC_TRAIT_CLONE = @as(c_int, 1) << @as(c_int, 20);
pub const ZEND_ACC_CTOR = @as(c_int, 1) << @as(c_int, 21);
pub const ZEND_ACC_CLOSURE = @as(c_int, 1) << @as(c_int, 22);
pub const ZEND_ACC_FAKE_CLOSURE = @as(c_int, 1) << @as(c_int, 23);
pub const ZEND_ACC_GENERATOR = @as(c_int, 1) << @as(c_int, 24);
pub const ZEND_ACC_DONE_PASS_TWO = @as(c_int, 1) << @as(c_int, 25);
pub const ZEND_ACC_ARENA_ALLOCATED = @as(c_int, 1) << @as(c_int, 25);
pub const ZEND_ACC_HEAP_RT_CACHE = @as(c_int, 1) << @as(c_int, 26);
pub const ZEND_ACC_USER_ARG_INFO = @as(c_int, 1) << @as(c_int, 26);
pub const ZEND_ACC_COMPILE_TIME_EVAL = @as(c_int, 1) << @as(c_int, 27);
pub const ZEND_ACC_OVERRIDE = @as(c_int, 1) << @as(c_int, 28);
pub const ZEND_ACC_STRICT_TYPES = @as(c_uint, 1) << @as(c_int, 31);
pub const ZEND_ACC_PPP_MASK = (ZEND_ACC_PUBLIC | ZEND_ACC_PROTECTED) | ZEND_ACC_PRIVATE;
pub const ZEND_ACC_PPP_SET_MASK = (ZEND_ACC_PUBLIC_SET | ZEND_ACC_PROTECTED_SET) | ZEND_ACC_PRIVATE_SET;
pub const ZEND_ACC_CALL_VIA_HANDLER = ZEND_ACC_CALL_VIA_TRAMPOLINE;
pub const ZEND_ACC_UNINSTANTIABLE = (((ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT) | ZEND_ACC_IMPLICIT_ABSTRACT_CLASS) | ZEND_ACC_EXPLICIT_ABSTRACT_CLASS) | ZEND_ACC_ENUM;
pub const ZEND_SHORT_CIRCUITING_CHAIN_MASK = @as(c_int, 0x3);
pub const ZEND_SHORT_CIRCUITING_CHAIN_EXPR = @as(c_int, 0);
pub const ZEND_SHORT_CIRCUITING_CHAIN_ISSET = @as(c_int, 1);
pub const ZEND_SHORT_CIRCUITING_CHAIN_EMPTY = @as(c_int, 2);
pub const ZEND_JMP_NULL_BP_VAR_IS = @as(c_int, 4);
pub const ZEND_PROPERTY_HOOK_COUNT = @as(c_int, 2);
pub const ZEND_PROPERTY_HOOK_STRUCT_SIZE = @import("std").zig.c_translation.sizeof([*c]zend_function) * ZEND_PROPERTY_HOOK_COUNT;
pub const ZEND_VIRTUAL_PROPERTY_OFFSET = @import("std").zig.c_translation.cast(u32, -@as(c_int, 1));
pub inline fn OBJ_PROP(obj: anytype, offset: anytype) [*c]zval {
    _ = &obj;
    _ = &offset;
    return @import("std").zig.c_translation.cast([*c]zval, @import("std").zig.c_translation.cast([*c]u8, obj) + offset);
}
pub inline fn OBJ_PROP_NUM(obj: anytype, num: anytype) @TypeOf(&obj.*.properties_table[@as(usize, @intCast(num))]) {
    _ = &obj;
    _ = &num;
    return &obj.*.properties_table[@as(usize, @intCast(num))];
}
pub const OBJ_PROP_TO_OFFSET = @compileError("unable to translate macro: undefined identifier `properties_table`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:463:9
pub inline fn OBJ_PROP_TO_NUM(offset: anytype) @TypeOf(@import("std").zig.c_translation.MacroArithmetic.div(offset - OBJ_PROP_TO_OFFSET(@as(c_int, 0)), @import("std").zig.c_translation.sizeof(zval))) {
    _ = &offset;
    return @import("std").zig.c_translation.MacroArithmetic.div(offset - OBJ_PROP_TO_OFFSET(@as(c_int, 0)), @import("std").zig.c_translation.sizeof(zval));
}
pub inline fn OBJ_PROP_SLOT_TO_OFFSET(obj: anytype, slot: anytype) @TypeOf(@import("std").zig.c_translation.cast(usize, slot) - @import("std").zig.c_translation.cast(usize, obj)) {
    _ = &obj;
    _ = &slot;
    return @import("std").zig.c_translation.cast(usize, slot) - @import("std").zig.c_translation.cast(usize, obj);
}
pub inline fn ZEND_CLASS_CONST_FLAGS(c: anytype) @TypeOf(Z_CONSTANT_FLAGS(c.*.value)) {
    _ = &c;
    return Z_CONSTANT_FLAGS(c.*.value);
}
pub const ZEND_RETURN_VALUE = @as(c_int, 0);
pub const ZEND_RETURN_REFERENCE = @as(c_int, 1);
pub inline fn ZEND_FN_SCOPE_NAME(function: anytype) @TypeOf(if ((function != 0) and (function.*.common.scope != 0)) ZSTR_VAL(function.*.common.scope.*.name) else "") {
    _ = &function;
    return if ((function != 0) and (function.*.common.scope != 0)) ZSTR_VAL(function.*.common.scope.*.name) else "";
}
pub const ZEND_CALL_HAS_THIS = IS_OBJECT_EX;
pub const ZEND_CALL_FUNCTION = @as(c_int, 0) << @as(c_int, 16);
pub const ZEND_CALL_CODE = @as(c_int, 1) << @as(c_int, 16);
pub const ZEND_CALL_NESTED = @as(c_int, 0) << @as(c_int, 17);
pub const ZEND_CALL_TOP = @as(c_int, 1) << @as(c_int, 17);
pub const ZEND_CALL_ALLOCATED = @as(c_int, 1) << @as(c_int, 18);
pub const ZEND_CALL_FREE_EXTRA_ARGS = @as(c_int, 1) << @as(c_int, 19);
pub const ZEND_CALL_HAS_SYMBOL_TABLE = @as(c_int, 1) << @as(c_int, 20);
pub const ZEND_CALL_RELEASE_THIS = @as(c_int, 1) << @as(c_int, 21);
pub const ZEND_CALL_CLOSURE = @as(c_int, 1) << @as(c_int, 22);
pub const ZEND_CALL_FAKE_CLOSURE = @as(c_int, 1) << @as(c_int, 23);
pub const ZEND_CALL_GENERATOR = @as(c_int, 1) << @as(c_int, 24);
pub const ZEND_CALL_DYNAMIC = @as(c_int, 1) << @as(c_int, 25);
pub const ZEND_CALL_MAY_HAVE_UNDEF = @as(c_int, 1) << @as(c_int, 26);
pub const ZEND_CALL_HAS_EXTRA_NAMED_PARAMS = @as(c_int, 1) << @as(c_int, 27);
pub const ZEND_CALL_OBSERVED = @as(c_int, 1) << @as(c_int, 28);
pub const ZEND_CALL_JIT_RESERVED = @as(c_int, 1) << @as(c_int, 29);
pub const ZEND_CALL_NEEDS_REATTACH = @as(c_int, 1) << @as(c_int, 30);
pub const ZEND_CALL_SEND_ARG_BY_REF = @as(c_uint, 1) << @as(c_int, 31);
pub const ZEND_CALL_NESTED_FUNCTION = ZEND_CALL_FUNCTION | ZEND_CALL_NESTED;
pub const ZEND_CALL_NESTED_CODE = ZEND_CALL_CODE | ZEND_CALL_NESTED;
pub const ZEND_CALL_TOP_FUNCTION = ZEND_CALL_TOP | ZEND_CALL_FUNCTION;
pub const ZEND_CALL_TOP_CODE = ZEND_CALL_CODE | ZEND_CALL_TOP;
pub inline fn ZEND_CALL_INFO(call: anytype) @TypeOf(Z_TYPE_INFO(call.*.This)) {
    _ = &call;
    return Z_TYPE_INFO(call.*.This);
}
pub inline fn ZEND_CALL_KIND_EX(call_info: anytype) @TypeOf(call_info & (ZEND_CALL_CODE | ZEND_CALL_TOP)) {
    _ = &call_info;
    return call_info & (ZEND_CALL_CODE | ZEND_CALL_TOP);
}
pub inline fn ZEND_CALL_KIND(call: anytype) @TypeOf(ZEND_CALL_KIND_EX(ZEND_CALL_INFO(call))) {
    _ = &call;
    return ZEND_CALL_KIND_EX(ZEND_CALL_INFO(call));
}
pub const ZEND_ADD_CALL_FLAG_EX = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:665:9
pub const ZEND_DEL_CALL_FLAG_EX = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:669:9
pub const ZEND_ADD_CALL_FLAG = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:673:9
pub const ZEND_DEL_CALL_FLAG = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:677:9
pub inline fn ZEND_CALL_NUM_ARGS(call: anytype) @TypeOf(call.*.This.u2.num_args) {
    _ = &call;
    return call.*.This.u2.num_args;
}
pub const ZEND_CALL_FRAME_SLOT = @import("std").zig.c_translation.cast(c_int, @import("std").zig.c_translation.MacroArithmetic.div((@import("std").zig.c_translation.sizeof(zend_execute_data) + @import("std").zig.c_translation.sizeof(zval)) - @as(c_int, 1), @import("std").zig.c_translation.sizeof(zval)));
pub inline fn ZEND_CALL_VAR(call: anytype, n: anytype) [*c]zval {
    _ = &call;
    _ = &n;
    return @import("std").zig.c_translation.cast([*c]zval, @import("std").zig.c_translation.cast([*c]u8, call) + @import("std").zig.c_translation.cast(c_int, n));
}
pub inline fn ZEND_CALL_VAR_NUM(call: anytype, n: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]zval, call) + (ZEND_CALL_FRAME_SLOT + @import("std").zig.c_translation.cast(usize, n))) {
    _ = &call;
    _ = &n;
    return @import("std").zig.c_translation.cast([*c]zval, call) + (ZEND_CALL_FRAME_SLOT +% @import("std").zig.c_translation.cast(usize, n));
}
pub inline fn ZEND_CALL_ARG(call: anytype, n: anytype) @TypeOf(ZEND_CALL_VAR_NUM(call, @import("std").zig.c_translation.cast(c_int, n) - @as(c_int, 1))) {
    _ = &call;
    _ = &n;
    return ZEND_CALL_VAR_NUM(call, @import("std").zig.c_translation.cast(c_int, n) - @as(c_int, 1));
}
pub const EX = @compileError("unable to translate macro: undefined identifier `execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:700:9
pub const EX_CALL_INFO = @compileError("unable to translate macro: undefined identifier `execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:702:9
pub const EX_CALL_KIND = @compileError("unable to translate macro: undefined identifier `execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:703:9
pub const EX_NUM_ARGS = @compileError("unable to translate macro: undefined identifier `execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:704:9
pub inline fn ZEND_CALL_USES_STRICT_TYPES(call: anytype) @TypeOf((call.*.func.*.common.fn_flags & ZEND_ACC_STRICT_TYPES) != @as(c_int, 0)) {
    _ = &call;
    return (call.*.func.*.common.fn_flags & ZEND_ACC_STRICT_TYPES) != @as(c_int, 0);
}
pub const EX_USES_STRICT_TYPES = @compileError("unable to translate macro: undefined identifier `execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:709:9
pub const ZEND_ARG_USES_STRICT_TYPES = @compileError("unable to translate macro: undefined identifier `current_execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:712:9
pub const ZEND_FLF_ARG_USES_STRICT_TYPES = @compileError("unable to translate macro: undefined identifier `current_execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:717:9
pub const ZEND_RET_USES_STRICT_TYPES = @compileError("unable to translate macro: undefined identifier `current_execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:722:9
pub const EX_VAR = @compileError("unable to translate macro: undefined identifier `execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:725:9
pub const EX_VAR_NUM = @compileError("unable to translate macro: undefined identifier `execute_data`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:726:9
pub inline fn EX_VAR_TO_NUM(n: anytype) u32 {
    _ = &n;
    return @import("std").zig.c_translation.cast(u32, @import("std").zig.c_translation.MacroArithmetic.div(n, @import("std").zig.c_translation.sizeof(zval)) - ZEND_CALL_FRAME_SLOT);
}
pub inline fn EX_NUM_TO_VAR(n: anytype) u32 {
    _ = &n;
    return @import("std").zig.c_translation.cast(u32, (n + ZEND_CALL_FRAME_SLOT) * @import("std").zig.c_translation.sizeof(zval));
}
pub inline fn ZEND_OPLINE_TO_OFFSET(opline: anytype, target: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]u8, target) - @import("std").zig.c_translation.cast([*c]u8, opline)) {
    _ = &opline;
    _ = &target;
    return @import("std").zig.c_translation.cast([*c]u8, target) - @import("std").zig.c_translation.cast([*c]u8, opline);
}
pub inline fn ZEND_OPLINE_NUM_TO_OFFSET(op_array: anytype, opline: anytype, opline_num: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]u8, &op_array.*.opcodes[@as(usize, @intCast(opline_num))]) - @import("std").zig.c_translation.cast([*c]u8, opline)) {
    _ = &op_array;
    _ = &opline;
    _ = &opline_num;
    return @import("std").zig.c_translation.cast([*c]u8, &op_array.*.opcodes[@as(usize, @intCast(opline_num))]) - @import("std").zig.c_translation.cast([*c]u8, opline);
}
pub inline fn ZEND_OFFSET_TO_OPLINE(base: anytype, offset: anytype) [*c]zend_op {
    _ = &base;
    _ = &offset;
    return @import("std").zig.c_translation.cast([*c]zend_op, @import("std").zig.c_translation.cast([*c]u8, base) + @import("std").zig.c_translation.cast(c_int, offset));
}
pub inline fn ZEND_OFFSET_TO_OPLINE_NUM(op_array: anytype, base: anytype, offset: anytype) @TypeOf(ZEND_OFFSET_TO_OPLINE(base, offset) - op_array.*.opcodes) {
    _ = &op_array;
    _ = &base;
    _ = &offset;
    return ZEND_OFFSET_TO_OPLINE(base, offset) - op_array.*.opcodes;
}
pub inline fn OP_JMP_ADDR(opline: anytype, node: anytype) @TypeOf(ZEND_OFFSET_TO_OPLINE(opline, node.jmp_offset)) {
    _ = &opline;
    _ = &node;
    return ZEND_OFFSET_TO_OPLINE(opline, node.jmp_offset);
}
pub const ZEND_SET_OP_JMP_ADDR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:769:10
pub const ZEND_PASS_TWO_UPDATE_JMP_TARGET = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:774:10
pub const ZEND_PASS_TWO_UNDO_JMP_TARGET = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:779:10
pub inline fn CT_CONSTANT_EX(op_array: anytype, num: anytype) @TypeOf(op_array.*.literals + num) {
    _ = &op_array;
    _ = &num;
    return op_array.*.literals + num;
}
pub const CT_CONSTANT = @compileError("unable to translate macro: undefined identifier `active_op_array`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:789:10
pub inline fn RT_CONSTANT(opline: anytype, node: anytype) [*c]zval {
    _ = &opline;
    _ = &node;
    return @import("std").zig.c_translation.cast([*c]zval, @import("std").zig.c_translation.cast([*c]u8, opline) + @import("std").zig.c_translation.cast(i32, node.constant));
}
pub const ZEND_PASS_TWO_UPDATE_CONSTANT = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:814:10
pub const ZEND_PASS_TWO_UNDO_CONSTANT = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:823:9
pub inline fn RUN_TIME_CACHE(op_array: anytype) @TypeOf(ZEND_MAP_PTR_GET(op_array.*.run_time_cache)) {
    _ = &op_array;
    return ZEND_MAP_PTR_GET(op_array.*.run_time_cache);
}
pub const ZEND_OP_ARRAY_EXTENSION = @compileError("unable to translate C expr: expected ')' instead got '*'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:830:9
pub const IS_UNUSED = @as(c_int, 0);
pub const IS_CONST = @as(c_int, 1) << @as(c_int, 0);
pub const IS_TMP_VAR = @as(c_int, 1) << @as(c_int, 1);
pub const IS_VAR = @as(c_int, 1) << @as(c_int, 2);
pub const IS_CV = @as(c_int, 1) << @as(c_int, 3);
pub const IS_SMART_BRANCH_JMPZ = @as(c_int, 1) << @as(c_int, 4);
pub const IS_SMART_BRANCH_JMPNZ = @as(c_int, 1) << @as(c_int, 5);
pub const ZEND_EXTRA_VALUE = @as(c_int, 1);
pub const ZEND_GLOBALS_H = "";
pub const _BSD_SETJMP_H = "";
pub const _JBLEN = ((@as(c_int, 14) + @as(c_int, 8)) + @as(c_int, 2)) * @as(c_int, 2);
pub const ZEND_GLOBALS_MACROS_H = "";
pub inline fn CG(v: anytype) @TypeOf(compiler_globals.v) {
    _ = &v;
    return compiler_globals.v;
}
pub inline fn EG(v: anytype) @TypeOf(executor_globals.v) {
    _ = &v;
    return executor_globals.v;
}
pub inline fn LANG_SCNG(v: anytype) @TypeOf(language_scanner_globals.v) {
    _ = &v;
    return language_scanner_globals.v;
}
pub inline fn INI_SCNG(v: anytype) @TypeOf(ini_scanner_globals.v) {
    _ = &v;
    return ini_scanner_globals.v;
}
pub const ZEND_ATOMIC_H = "";
pub inline fn ZEND_GCC_PREREQ(x: anytype, y: anytype) @TypeOf(((__GNUC__ == x) and (__GNUC_MINOR__ >= y)) or (__GNUC__ > x)) {
    _ = &x;
    _ = &y;
    return ((__GNUC__ == x) and (__GNUC_MINOR__ >= y)) or (__GNUC__ > x);
}
pub const HAVE_C11_ATOMICS = @as(c_int, 1);
pub const ZEND_ATOMIC_BOOL_INIT = @compileError("unable to translate macro: undefined identifier `__c11_atomic_init`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:147:9
pub const ZEND_ATOMIC_INT_INIT = @compileError("unable to translate macro: undefined identifier `__c11_atomic_init`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:148:9
pub const ZEND_ATOMIC_BOOL_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:150:9
pub const ZEND_ATOMIC_INT_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_atomic.h:151:9
pub const ZEND_STACK_H = "";
pub const STACK_BLOCK_SIZE = @as(c_int, 16);
pub const ZEND_PTR_STACK_H = "";
pub const PTR_STACK_BLOCK_SIZE = @as(c_int, 64);
pub const ZEND_PTR_STACK_RESIZE_IF_NEEDED = @compileError("unable to translate C expr: unexpected token 'if'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ptr_stack.h:47:9
pub const ZEND_PTR_STACK_NUM_ARGS = @as(c_int, 3);
pub const ZEND_OBJECTS_H = "";
pub const ZEND_OBJECTS_API_H = "";
pub const OBJ_BUCKET_INVALID = @as(c_int, 1) << @as(c_int, 0);
pub inline fn IS_OBJ_VALID(o: anytype) @TypeOf(!((@import("std").zig.c_translation.cast(usize, o) & OBJ_BUCKET_INVALID) != 0)) {
    _ = &o;
    return !((@import("std").zig.c_translation.cast(usize, o) & OBJ_BUCKET_INVALID) != 0);
}
pub inline fn SET_OBJ_INVALID(o: anytype) [*c]zend_object {
    _ = &o;
    return @import("std").zig.c_translation.cast([*c]zend_object, @import("std").zig.c_translation.cast(usize, o) | OBJ_BUCKET_INVALID);
}
pub inline fn GET_OBJ_BUCKET_NUMBER(o: anytype) @TypeOf(@import("std").zig.c_translation.cast(isize, o) >> @as(c_int, 1)) {
    _ = &o;
    return @import("std").zig.c_translation.cast(isize, o) >> @as(c_int, 1);
}
pub const SET_OBJ_BUCKET_NUMBER = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_objects_API.h:36:9
pub const ZEND_OBJECTS_STORE_ADD_TO_FREE_LIST = @compileError("unable to translate macro: undefined identifier `objects_store`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_objects_API.h:40:9
pub inline fn OBJ_RELEASE(obj: anytype) @TypeOf(zend_object_release(obj)) {
    _ = &obj;
    return zend_object_release(obj);
}
pub const ZEND_FLOAT_H = "";
pub const XPFPA_DECLARE = "";
pub const XPFPA_HAVE_CW = @as(c_int, 0);
pub const XPFPA_CW_DATATYPE = c_uint;
pub const XPFPA_STORE_CW = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_float.h:405:10
pub const XPFPA_RESTORE_CW = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_float.h:406:10
pub const XPFPA_SWITCH_DOUBLE = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_float.h:407:10
pub const XPFPA_SWITCH_SINGLE = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_float.h:408:10
pub const XPFPA_SWITCH_DOUBLE_EXTENDED = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_float.h:409:10
pub const XPFPA_RESTORE = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_float.h:410:10
pub const XPFPA_RETURN_DOUBLE = @compileError("unable to translate C expr: unexpected token 'return'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_float.h:411:10
pub const XPFPA_RETURN_SINGLE = @compileError("unable to translate C expr: unexpected token 'return'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_float.h:412:10
pub const XPFPA_RETURN_DOUBLE_EXTENDED = @compileError("unable to translate C expr: unexpected token 'return'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_float.h:413:10
pub const ZEND_MULTIBYTE_H = "";
pub const _ZEND_ARENA_H_ = "";
pub const ZEND_CALL_STACK_H = "";
pub const _PTHREAD_H = "";
pub const _SCHED_H_ = "";
pub const _PTHREAD_IMPL_H_ = "";
pub const _PTHREAD_MUTEX_SIG_init = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x32AAABA7, .hex);
pub const _PTHREAD_ERRORCHECK_MUTEX_SIG_init = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x32AAABA1, .hex);
pub const _PTHREAD_RECURSIVE_MUTEX_SIG_init = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x32AAABA2, .hex);
pub const _PTHREAD_FIRSTFIT_MUTEX_SIG_init = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x32AAABA3, .hex);
pub const _PTHREAD_COND_SIG_init = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x3CB0B1BB, .hex);
pub const _PTHREAD_ONCE_SIG_init = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x30B1BCBA, .hex);
pub const _PTHREAD_RWLOCK_SIG_init = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x2DA8B3B4, .hex);
pub const SCHED_OTHER = @as(c_int, 1);
pub const SCHED_FIFO = @as(c_int, 4);
pub const SCHED_RR = @as(c_int, 2);
pub const __SCHED_PARAM_SIZE__ = @as(c_int, 4);
pub const _PTHREAD_QOS_H = "";
pub const _SYS_QOS_H = "";
pub const __QOS_ENUM = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/qos.h:114:9
pub const __QOS_CLASS_AVAILABLE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/qos.h:115:9
pub const QOS_MIN_RELATIVE_PRIORITY = -@as(c_int, 15);
pub const pthread_cleanup_push = @compileError("unable to translate macro: undefined identifier `__handler`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:116:9
pub const pthread_cleanup_pop = @compileError("unable to translate macro: undefined identifier `__self`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:125:9
pub const PTHREAD_CREATE_JOINABLE = @as(c_int, 1);
pub const PTHREAD_CREATE_DETACHED = @as(c_int, 2);
pub const PTHREAD_INHERIT_SCHED = @as(c_int, 1);
pub const PTHREAD_EXPLICIT_SCHED = @as(c_int, 2);
pub const PTHREAD_CANCEL_ENABLE = @as(c_int, 0x01);
pub const PTHREAD_CANCEL_DISABLE = @as(c_int, 0x00);
pub const PTHREAD_CANCEL_DEFERRED = @as(c_int, 0x02);
pub const PTHREAD_CANCEL_ASYNCHRONOUS = @as(c_int, 0x00);
pub const PTHREAD_CANCELED = @import("std").zig.c_translation.cast(?*anyopaque, @as(c_int, 1));
pub const PTHREAD_SCOPE_SYSTEM = @as(c_int, 1);
pub const PTHREAD_SCOPE_PROCESS = @as(c_int, 2);
pub const PTHREAD_PROCESS_SHARED = @as(c_int, 1);
pub const PTHREAD_PROCESS_PRIVATE = @as(c_int, 2);
pub const PTHREAD_PRIO_NONE = @as(c_int, 0);
pub const PTHREAD_PRIO_INHERIT = @as(c_int, 1);
pub const PTHREAD_PRIO_PROTECT = @as(c_int, 2);
pub const PTHREAD_MUTEX_NORMAL = @as(c_int, 0);
pub const PTHREAD_MUTEX_ERRORCHECK = @as(c_int, 1);
pub const PTHREAD_MUTEX_RECURSIVE = @as(c_int, 2);
pub const PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL;
pub const PTHREAD_MUTEX_POLICY_FAIRSHARE_NP = @as(c_int, 1);
pub const PTHREAD_MUTEX_POLICY_FIRSTFIT_NP = @as(c_int, 3);
pub const PTHREAD_RWLOCK_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:180:9
pub const PTHREAD_MUTEX_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:185:9
pub const PTHREAD_ERRORCHECK_MUTEX_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:190:11
pub const PTHREAD_RECURSIVE_MUTEX_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:191:11
pub const _PTHREAD_SWIFT_IMPORTER_NULLABILITY_COMPAT = @compileError("unable to translate macro: undefined identifier `SWIFT_CLASS_EXTRA`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:196:9
pub const __PTHREAD_SWIFT_UNAVAILABLE_FROM_ASYNC = @compileError("unable to translate macro: undefined identifier `__swift_attr__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:200:9
pub const PTHREAD_COND_INITIALIZER = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:214:9
pub const PTHREAD_ONCE_INIT = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:220:9
pub const PTHREAD_JIT_WRITE_ALLOW_CALLBACKS_NP = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/pthread.h:621:9
pub const SYMTABLE_CACHE_SIZE = @as(c_int, 32);
pub const ZEND_MAX_ALLOWED_STACK_SIZE_UNCHECKED = -@as(c_int, 1);
pub const ZEND_MAX_ALLOWED_STACK_SIZE_DETECT = @as(c_int, 0);
pub const EG_FLAGS_INITIAL = @as(c_int, 0);
pub const EG_FLAGS_IN_SHUTDOWN = @as(c_int, 1) << @as(c_int, 0);
pub const EG_FLAGS_OBJECT_STORE_NO_REUSE = @as(c_int, 1) << @as(c_int, 1);
pub const EG_FLAGS_IN_RESOURCE_SHUTDOWN = @as(c_int, 1) << @as(c_int, 2);
pub const INITIAL_OP_ARRAY_SIZE = @as(c_int, 64);
pub const zend_try_exception_handler = @compileError("unable to translate macro: undefined identifier `user_exception_handler`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:949:9
pub inline fn zend_unmangle_property_name(mangled_property: anytype, class_name: anytype, prop_name: anytype) @TypeOf(zend_unmangle_property_name_ex(mangled_property, class_name, prop_name, NULL)) {
    _ = &mangled_property;
    _ = &class_name;
    _ = &prop_name;
    return zend_unmangle_property_name_ex(mangled_property, class_name, prop_name, NULL);
}
pub const ZEND_FUNCTION_DTOR = zend_function_dtor;
pub const ZEND_CLASS_DTOR = destroy_zend_class;
pub const ZEND_VM_OPCODES_H = "";
pub const ZEND_VM_SPEC = @as(c_int, 1);
pub const ZEND_VM_LINES = @as(c_int, 0);
pub const ZEND_VM_KIND_CALL = @as(c_int, 1);
pub const ZEND_VM_KIND_SWITCH = @as(c_int, 2);
pub const ZEND_VM_KIND_GOTO = @as(c_int, 3);
pub const ZEND_VM_KIND_HYBRID = @as(c_int, 4);
pub const ZEND_VM_KIND = ZEND_VM_KIND_CALL;
pub const ZEND_VM_OP_SPEC = @as(c_int, 0x00000001);
pub const ZEND_VM_OP_CONST = @as(c_int, 0x00000002);
pub const ZEND_VM_OP_TMPVAR = @as(c_int, 0x00000004);
pub const ZEND_VM_OP_TMPVARCV = @as(c_int, 0x00000008);
pub const ZEND_VM_OP_MASK = @as(c_int, 0x000000f0);
pub const ZEND_VM_OP_NUM = @as(c_int, 0x00000010);
pub const ZEND_VM_OP_JMP_ADDR = @as(c_int, 0x00000020);
pub const ZEND_VM_OP_TRY_CATCH = @as(c_int, 0x00000030);
pub const ZEND_VM_OP_THIS = @as(c_int, 0x00000050);
pub const ZEND_VM_OP_NEXT = @as(c_int, 0x00000060);
pub const ZEND_VM_OP_CLASS_FETCH = @as(c_int, 0x00000070);
pub const ZEND_VM_OP_CONSTRUCTOR = @as(c_int, 0x00000080);
pub const ZEND_VM_OP_CONST_FETCH = @as(c_int, 0x00000090);
pub const ZEND_VM_OP_CACHE_SLOT = @as(c_int, 0x000000a0);
pub const ZEND_VM_EXT_VAR_FETCH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub const ZEND_VM_EXT_ISSET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00020000, .hex);
pub const ZEND_VM_EXT_CACHE_SLOT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00040000, .hex);
pub const ZEND_VM_EXT_ARRAY_INIT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00080000, .hex);
pub const ZEND_VM_EXT_REF = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00100000, .hex);
pub const ZEND_VM_EXT_FETCH_REF = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00200000, .hex);
pub const ZEND_VM_EXT_DIM_WRITE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00400000, .hex);
pub const ZEND_VM_EXT_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0f000000, .hex);
pub const ZEND_VM_EXT_NUM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x01000000, .hex);
pub const ZEND_VM_EXT_LAST_CATCH = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x02000000, .hex);
pub const ZEND_VM_EXT_JMP_ADDR = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x03000000, .hex);
pub const ZEND_VM_EXT_OP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x04000000, .hex);
pub const ZEND_VM_EXT_TYPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x07000000, .hex);
pub const ZEND_VM_EXT_EVAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x08000000, .hex);
pub const ZEND_VM_EXT_TYPE_MASK = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x09000000, .hex);
pub const ZEND_VM_EXT_SRC = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x0b000000, .hex);
pub const ZEND_VM_NO_CONST_CONST = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const ZEND_VM_COMMUTATIVE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub inline fn ZEND_VM_OP1_FLAGS(flags: anytype) @TypeOf(flags & @as(c_int, 0xff)) {
    _ = &flags;
    return flags & @as(c_int, 0xff);
}
pub inline fn ZEND_VM_OP2_FLAGS(flags: anytype) @TypeOf((flags >> @as(c_int, 8)) & @as(c_int, 0xff)) {
    _ = &flags;
    return (flags >> @as(c_int, 8)) & @as(c_int, 0xff);
}
pub const ZEND_NOP = @as(c_int, 0);
pub const ZEND_ADD = @as(c_int, 1);
pub const ZEND_SUB = @as(c_int, 2);
pub const ZEND_MUL = @as(c_int, 3);
pub const ZEND_DIV = @as(c_int, 4);
pub const ZEND_MOD = @as(c_int, 5);
pub const ZEND_SL = @as(c_int, 6);
pub const ZEND_SR = @as(c_int, 7);
pub const ZEND_CONCAT = @as(c_int, 8);
pub const ZEND_BW_OR = @as(c_int, 9);
pub const ZEND_BW_AND = @as(c_int, 10);
pub const ZEND_BW_XOR = @as(c_int, 11);
pub const ZEND_POW = @as(c_int, 12);
pub const ZEND_BW_NOT = @as(c_int, 13);
pub const ZEND_BOOL_NOT = @as(c_int, 14);
pub const ZEND_BOOL_XOR = @as(c_int, 15);
pub const ZEND_IS_IDENTICAL = @as(c_int, 16);
pub const ZEND_IS_NOT_IDENTICAL = @as(c_int, 17);
pub const ZEND_IS_EQUAL = @as(c_int, 18);
pub const ZEND_IS_NOT_EQUAL = @as(c_int, 19);
pub const ZEND_IS_SMALLER = @as(c_int, 20);
pub const ZEND_IS_SMALLER_OR_EQUAL = @as(c_int, 21);
pub const ZEND_ASSIGN = @as(c_int, 22);
pub const ZEND_ASSIGN_DIM = @as(c_int, 23);
pub const ZEND_ASSIGN_OBJ = @as(c_int, 24);
pub const ZEND_ASSIGN_STATIC_PROP = @as(c_int, 25);
pub const ZEND_ASSIGN_OP = @as(c_int, 26);
pub const ZEND_ASSIGN_DIM_OP = @as(c_int, 27);
pub const ZEND_ASSIGN_OBJ_OP = @as(c_int, 28);
pub const ZEND_ASSIGN_STATIC_PROP_OP = @as(c_int, 29);
pub const ZEND_ASSIGN_REF = @as(c_int, 30);
pub const ZEND_QM_ASSIGN = @as(c_int, 31);
pub const ZEND_ASSIGN_OBJ_REF = @as(c_int, 32);
pub const ZEND_ASSIGN_STATIC_PROP_REF = @as(c_int, 33);
pub const ZEND_PRE_INC = @as(c_int, 34);
pub const ZEND_PRE_DEC = @as(c_int, 35);
pub const ZEND_POST_INC = @as(c_int, 36);
pub const ZEND_POST_DEC = @as(c_int, 37);
pub const ZEND_PRE_INC_STATIC_PROP = @as(c_int, 38);
pub const ZEND_PRE_DEC_STATIC_PROP = @as(c_int, 39);
pub const ZEND_POST_INC_STATIC_PROP = @as(c_int, 40);
pub const ZEND_POST_DEC_STATIC_PROP = @as(c_int, 41);
pub const ZEND_JMP = @as(c_int, 42);
pub const ZEND_JMPZ = @as(c_int, 43);
pub const ZEND_JMPNZ = @as(c_int, 44);
pub const ZEND_JMPZ_EX = @as(c_int, 46);
pub const ZEND_JMPNZ_EX = @as(c_int, 47);
pub const ZEND_CASE = @as(c_int, 48);
pub const ZEND_CHECK_VAR = @as(c_int, 49);
pub const ZEND_SEND_VAR_NO_REF_EX = @as(c_int, 50);
pub const ZEND_CAST = @as(c_int, 51);
pub const ZEND_BOOL = @as(c_int, 52);
pub const ZEND_FAST_CONCAT = @as(c_int, 53);
pub const ZEND_ROPE_INIT = @as(c_int, 54);
pub const ZEND_ROPE_ADD = @as(c_int, 55);
pub const ZEND_ROPE_END = @as(c_int, 56);
pub const ZEND_BEGIN_SILENCE = @as(c_int, 57);
pub const ZEND_END_SILENCE = @as(c_int, 58);
pub const ZEND_INIT_FCALL_BY_NAME = @as(c_int, 59);
pub const ZEND_DO_FCALL = @as(c_int, 60);
pub const ZEND_INIT_FCALL = @as(c_int, 61);
pub const ZEND_RETURN = @as(c_int, 62);
pub const ZEND_RECV = @as(c_int, 63);
pub const ZEND_RECV_INIT = @as(c_int, 64);
pub const ZEND_SEND_VAL = @as(c_int, 65);
pub const ZEND_SEND_VAR_EX = @as(c_int, 66);
pub const ZEND_SEND_REF = @as(c_int, 67);
pub const ZEND_NEW = @as(c_int, 68);
pub const ZEND_INIT_NS_FCALL_BY_NAME = @as(c_int, 69);
pub const ZEND_FREE = @as(c_int, 70);
pub const ZEND_INIT_ARRAY = @as(c_int, 71);
pub const ZEND_ADD_ARRAY_ELEMENT = @as(c_int, 72);
pub const ZEND_INCLUDE_OR_EVAL = @as(c_int, 73);
pub const ZEND_UNSET_VAR = @as(c_int, 74);
pub const ZEND_UNSET_DIM = @as(c_int, 75);
pub const ZEND_UNSET_OBJ = @as(c_int, 76);
pub const ZEND_FE_RESET_R = @as(c_int, 77);
pub const ZEND_FE_FETCH_R = @as(c_int, 78);
pub const ZEND_FETCH_R = @as(c_int, 80);
pub const ZEND_FETCH_DIM_R = @as(c_int, 81);
pub const ZEND_FETCH_OBJ_R = @as(c_int, 82);
pub const ZEND_FETCH_W = @as(c_int, 83);
pub const ZEND_FETCH_DIM_W = @as(c_int, 84);
pub const ZEND_FETCH_OBJ_W = @as(c_int, 85);
pub const ZEND_FETCH_RW = @as(c_int, 86);
pub const ZEND_FETCH_DIM_RW = @as(c_int, 87);
pub const ZEND_FETCH_OBJ_RW = @as(c_int, 88);
pub const ZEND_FETCH_IS = @as(c_int, 89);
pub const ZEND_FETCH_DIM_IS = @as(c_int, 90);
pub const ZEND_FETCH_OBJ_IS = @as(c_int, 91);
pub const ZEND_FETCH_FUNC_ARG = @as(c_int, 92);
pub const ZEND_FETCH_DIM_FUNC_ARG = @as(c_int, 93);
pub const ZEND_FETCH_OBJ_FUNC_ARG = @as(c_int, 94);
pub const ZEND_FETCH_UNSET = @as(c_int, 95);
pub const ZEND_FETCH_DIM_UNSET = @as(c_int, 96);
pub const ZEND_FETCH_OBJ_UNSET = @as(c_int, 97);
pub const ZEND_FETCH_LIST_R = @as(c_int, 98);
pub const ZEND_FETCH_CONSTANT = @as(c_int, 99);
pub const ZEND_CHECK_FUNC_ARG = @as(c_int, 100);
pub const ZEND_EXT_STMT = @as(c_int, 101);
pub const ZEND_EXT_FCALL_BEGIN = @as(c_int, 102);
pub const ZEND_EXT_FCALL_END = @as(c_int, 103);
pub const ZEND_EXT_NOP = @as(c_int, 104);
pub const ZEND_TICKS = @as(c_int, 105);
pub const ZEND_SEND_VAR_NO_REF = @as(c_int, 106);
pub const ZEND_CATCH = @as(c_int, 107);
pub const ZEND_THROW = @as(c_int, 108);
pub const ZEND_FETCH_CLASS = @as(c_int, 109);
pub const ZEND_CLONE = @as(c_int, 110);
pub const ZEND_RETURN_BY_REF = @as(c_int, 111);
pub const ZEND_INIT_METHOD_CALL = @as(c_int, 112);
pub const ZEND_INIT_STATIC_METHOD_CALL = @as(c_int, 113);
pub const ZEND_ISSET_ISEMPTY_VAR = @as(c_int, 114);
pub const ZEND_ISSET_ISEMPTY_DIM_OBJ = @as(c_int, 115);
pub const ZEND_SEND_VAL_EX = @as(c_int, 116);
pub const ZEND_SEND_VAR = @as(c_int, 117);
pub const ZEND_INIT_USER_CALL = @as(c_int, 118);
pub const ZEND_SEND_ARRAY = @as(c_int, 119);
pub const ZEND_SEND_USER = @as(c_int, 120);
pub const ZEND_STRLEN = @as(c_int, 121);
pub const ZEND_DEFINED = @as(c_int, 122);
pub const ZEND_TYPE_CHECK = @as(c_int, 123);
pub const ZEND_VERIFY_RETURN_TYPE = @as(c_int, 124);
pub const ZEND_FE_RESET_RW = @as(c_int, 125);
pub const ZEND_FE_FETCH_RW = @as(c_int, 126);
pub const ZEND_FE_FREE = @as(c_int, 127);
pub const ZEND_INIT_DYNAMIC_CALL = @as(c_int, 128);
pub const ZEND_DO_ICALL = @as(c_int, 129);
pub const ZEND_DO_UCALL = @as(c_int, 130);
pub const ZEND_DO_FCALL_BY_NAME = @as(c_int, 131);
pub const ZEND_PRE_INC_OBJ = @as(c_int, 132);
pub const ZEND_PRE_DEC_OBJ = @as(c_int, 133);
pub const ZEND_POST_INC_OBJ = @as(c_int, 134);
pub const ZEND_POST_DEC_OBJ = @as(c_int, 135);
pub const ZEND_ECHO = @as(c_int, 136);
pub const ZEND_OP_DATA = @as(c_int, 137);
pub const ZEND_INSTANCEOF = @as(c_int, 138);
pub const ZEND_GENERATOR_CREATE = @as(c_int, 139);
pub const ZEND_MAKE_REF = @as(c_int, 140);
pub const ZEND_DECLARE_FUNCTION = @as(c_int, 141);
pub const ZEND_DECLARE_LAMBDA_FUNCTION = @as(c_int, 142);
pub const ZEND_DECLARE_CONST = @as(c_int, 143);
pub const ZEND_DECLARE_CLASS = @as(c_int, 144);
pub const ZEND_DECLARE_CLASS_DELAYED = @as(c_int, 145);
pub const ZEND_DECLARE_ANON_CLASS = @as(c_int, 146);
pub const ZEND_ADD_ARRAY_UNPACK = @as(c_int, 147);
pub const ZEND_ISSET_ISEMPTY_PROP_OBJ = @as(c_int, 148);
pub const ZEND_HANDLE_EXCEPTION = @as(c_int, 149);
pub const ZEND_USER_OPCODE = @as(c_int, 150);
pub const ZEND_ASSERT_CHECK = @as(c_int, 151);
pub const ZEND_JMP_SET = @as(c_int, 152);
pub const ZEND_UNSET_CV = @as(c_int, 153);
pub const ZEND_ISSET_ISEMPTY_CV = @as(c_int, 154);
pub const ZEND_FETCH_LIST_W = @as(c_int, 155);
pub const ZEND_SEPARATE = @as(c_int, 156);
pub const ZEND_FETCH_CLASS_NAME = @as(c_int, 157);
pub const ZEND_CALL_TRAMPOLINE = @as(c_int, 158);
pub const ZEND_DISCARD_EXCEPTION = @as(c_int, 159);
pub const ZEND_YIELD = @as(c_int, 160);
pub const ZEND_GENERATOR_RETURN = @as(c_int, 161);
pub const ZEND_FAST_CALL = @as(c_int, 162);
pub const ZEND_FAST_RET = @as(c_int, 163);
pub const ZEND_RECV_VARIADIC = @as(c_int, 164);
pub const ZEND_SEND_UNPACK = @as(c_int, 165);
pub const ZEND_YIELD_FROM = @as(c_int, 166);
pub const ZEND_COPY_TMP = @as(c_int, 167);
pub const ZEND_BIND_GLOBAL = @as(c_int, 168);
pub const ZEND_COALESCE = @as(c_int, 169);
pub const ZEND_SPACESHIP = @as(c_int, 170);
pub const ZEND_FUNC_NUM_ARGS = @as(c_int, 171);
pub const ZEND_FUNC_GET_ARGS = @as(c_int, 172);
pub const ZEND_FETCH_STATIC_PROP_R = @as(c_int, 173);
pub const ZEND_FETCH_STATIC_PROP_W = @as(c_int, 174);
pub const ZEND_FETCH_STATIC_PROP_RW = @as(c_int, 175);
pub const ZEND_FETCH_STATIC_PROP_IS = @as(c_int, 176);
pub const ZEND_FETCH_STATIC_PROP_FUNC_ARG = @as(c_int, 177);
pub const ZEND_FETCH_STATIC_PROP_UNSET = @as(c_int, 178);
pub const ZEND_UNSET_STATIC_PROP = @as(c_int, 179);
pub const ZEND_ISSET_ISEMPTY_STATIC_PROP = @as(c_int, 180);
pub const ZEND_FETCH_CLASS_CONSTANT = @as(c_int, 181);
pub const ZEND_BIND_LEXICAL = @as(c_int, 182);
pub const ZEND_BIND_STATIC = @as(c_int, 183);
pub const ZEND_FETCH_THIS = @as(c_int, 184);
pub const ZEND_SEND_FUNC_ARG = @as(c_int, 185);
pub const ZEND_ISSET_ISEMPTY_THIS = @as(c_int, 186);
pub const ZEND_SWITCH_LONG = @as(c_int, 187);
pub const ZEND_SWITCH_STRING = @as(c_int, 188);
pub const ZEND_IN_ARRAY = @as(c_int, 189);
pub const ZEND_COUNT = @as(c_int, 190);
pub const ZEND_GET_CLASS = @as(c_int, 191);
pub const ZEND_GET_CALLED_CLASS = @as(c_int, 192);
pub const ZEND_GET_TYPE = @as(c_int, 193);
pub const ZEND_ARRAY_KEY_EXISTS = @as(c_int, 194);
pub const ZEND_MATCH = @as(c_int, 195);
pub const ZEND_CASE_STRICT = @as(c_int, 196);
pub const ZEND_MATCH_ERROR = @as(c_int, 197);
pub const ZEND_JMP_NULL = @as(c_int, 198);
pub const ZEND_CHECK_UNDEF_ARGS = @as(c_int, 199);
pub const ZEND_FETCH_GLOBALS = @as(c_int, 200);
pub const ZEND_VERIFY_NEVER_TYPE = @as(c_int, 201);
pub const ZEND_CALLABLE_CONVERT = @as(c_int, 202);
pub const ZEND_BIND_INIT_STATIC_OR_JMP = @as(c_int, 203);
pub const ZEND_FRAMELESS_ICALL_0 = @as(c_int, 204);
pub const ZEND_FRAMELESS_ICALL_1 = @as(c_int, 205);
pub const ZEND_FRAMELESS_ICALL_2 = @as(c_int, 206);
pub const ZEND_FRAMELESS_ICALL_3 = @as(c_int, 207);
pub const ZEND_JMP_FRAMELESS = @as(c_int, 208);
pub const ZEND_INIT_PARENT_PROPERTY_HOOK_CALL = @as(c_int, 209);
pub const ZEND_VM_LAST_OPCODE = @as(c_int, 209);
pub const ZEND_FETCH_CLASS_DEFAULT = @as(c_int, 0);
pub const ZEND_FETCH_CLASS_SELF = @as(c_int, 1);
pub const ZEND_FETCH_CLASS_PARENT = @as(c_int, 2);
pub const ZEND_FETCH_CLASS_STATIC = @as(c_int, 3);
pub const ZEND_FETCH_CLASS_AUTO = @as(c_int, 4);
pub const ZEND_FETCH_CLASS_INTERFACE = @as(c_int, 5);
pub const ZEND_FETCH_CLASS_TRAIT = @as(c_int, 6);
pub const ZEND_FETCH_CLASS_MASK = @as(c_int, 0x0f);
pub const ZEND_FETCH_CLASS_NO_AUTOLOAD = @as(c_int, 0x80);
pub const ZEND_FETCH_CLASS_SILENT = @as(c_int, 0x0100);
pub const ZEND_FETCH_CLASS_EXCEPTION = @as(c_int, 0x0200);
pub const ZEND_FETCH_CLASS_ALLOW_UNLINKED = @as(c_int, 0x0400);
pub const ZEND_FETCH_CLASS_ALLOW_NEARLY_LINKED = @as(c_int, 0x0800);
pub const ZEND_PARAM_REF = @as(c_int, 1) << @as(c_int, 3);
pub const ZEND_PARAM_VARIADIC = @as(c_int, 1) << @as(c_int, 4);
pub const ZEND_NAME_FQ = @as(c_int, 0);
pub const ZEND_NAME_NOT_FQ = @as(c_int, 1);
pub const ZEND_NAME_RELATIVE = @as(c_int, 2);
pub const ZEND_CONST_EXPR_NEW_FETCH_TYPE_SHIFT = @as(c_int, 2);
pub const ZEND_TYPE_NULLABLE = @as(c_int, 1) << @as(c_int, 8);
pub const ZEND_ARRAY_SYNTAX_LIST = @as(c_int, 1);
pub const ZEND_ARRAY_SYNTAX_LONG = @as(c_int, 2);
pub const ZEND_ARRAY_SYNTAX_SHORT = @as(c_int, 3);
pub const BP_VAR_R = @as(c_int, 0);
pub const BP_VAR_W = @as(c_int, 1);
pub const BP_VAR_RW = @as(c_int, 2);
pub const BP_VAR_IS = @as(c_int, 3);
pub const BP_VAR_FUNC_ARG = @as(c_int, 4);
pub const BP_VAR_UNSET = @as(c_int, 5);
pub const ZEND_INTERNAL_FUNCTION = @as(c_int, 1);
pub const ZEND_USER_FUNCTION = @as(c_int, 2);
pub const ZEND_EVAL_CODE = @as(c_int, 4);
pub inline fn ZEND_USER_CODE(@"type": anytype) @TypeOf(@"type" != ZEND_INTERNAL_FUNCTION) {
    _ = &@"type";
    return @"type" != ZEND_INTERNAL_FUNCTION;
}
pub const ZEND_INTERNAL_CLASS = @as(c_int, 1);
pub const ZEND_USER_CLASS = @as(c_int, 2);
pub const ZEND_EVAL = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_INCLUDE = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_INCLUDE_ONCE = @as(c_int, 1) << @as(c_int, 2);
pub const ZEND_REQUIRE = @as(c_int, 1) << @as(c_int, 3);
pub const ZEND_REQUIRE_ONCE = @as(c_int, 1) << @as(c_int, 4);
pub const ZEND_FETCH_GLOBAL = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_FETCH_LOCAL = @as(c_int, 1) << @as(c_int, 2);
pub const ZEND_FETCH_GLOBAL_LOCK = @as(c_int, 1) << @as(c_int, 3);
pub const ZEND_FETCH_TYPE_MASK = @as(c_int, 0xe);
pub const ZEND_FETCH_REF = @as(c_int, 1);
pub const ZEND_FETCH_DIM_WRITE = @as(c_int, 2);
pub const ZEND_FETCH_OBJ_FLAGS = @as(c_int, 3);
pub const ZEND_FETCH_DIM_REF = @as(c_int, 1);
pub const ZEND_FETCH_DIM_DIM = @as(c_int, 2);
pub const ZEND_FETCH_DIM_OBJ = @as(c_int, 3);
pub const ZEND_FETCH_DIM_INCDEC = @as(c_int, 4);
pub const ZEND_ISEMPTY = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_LAST_CATCH = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_FREE_ON_RETURN = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_FREE_SWITCH = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_SEND_BY_VAL = @as(c_uint, 0);
pub const ZEND_SEND_BY_REF = @as(c_uint, 1);
pub const ZEND_SEND_PREFER_REF = @as(c_uint, 2);
pub const ZEND_THROW_IS_EXPR = @as(c_uint, 1);
pub const ZEND_FCALL_MAY_HAVE_EXTRA_NAMED_PARAMS = @as(c_int, 1);
pub const _ZEND_SEND_MODE_SHIFT = _ZEND_TYPE_EXTRA_FLAGS_SHIFT;
pub const _ZEND_IS_VARIADIC_BIT = @as(c_int, 1) << (_ZEND_TYPE_EXTRA_FLAGS_SHIFT + @as(c_int, 2));
pub const _ZEND_IS_PROMOTED_BIT = @as(c_int, 1) << (_ZEND_TYPE_EXTRA_FLAGS_SHIFT + @as(c_int, 3));
pub const _ZEND_IS_TENTATIVE_BIT = @as(c_int, 1) << (_ZEND_TYPE_EXTRA_FLAGS_SHIFT + @as(c_int, 4));
pub inline fn ZEND_ARG_SEND_MODE(arg_info: anytype) @TypeOf((ZEND_TYPE_FULL_MASK(arg_info.*.type) >> _ZEND_SEND_MODE_SHIFT) & @as(c_int, 3)) {
    _ = &arg_info;
    return (ZEND_TYPE_FULL_MASK(arg_info.*.type) >> _ZEND_SEND_MODE_SHIFT) & @as(c_int, 3);
}
pub inline fn ZEND_ARG_IS_VARIADIC(arg_info: anytype) @TypeOf((ZEND_TYPE_FULL_MASK(arg_info.*.type) & _ZEND_IS_VARIADIC_BIT) != @as(c_int, 0)) {
    _ = &arg_info;
    return (ZEND_TYPE_FULL_MASK(arg_info.*.type) & _ZEND_IS_VARIADIC_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_ARG_IS_PROMOTED(arg_info: anytype) @TypeOf((ZEND_TYPE_FULL_MASK(arg_info.*.type) & _ZEND_IS_PROMOTED_BIT) != @as(c_int, 0)) {
    _ = &arg_info;
    return (ZEND_TYPE_FULL_MASK(arg_info.*.type) & _ZEND_IS_PROMOTED_BIT) != @as(c_int, 0);
}
pub inline fn ZEND_ARG_TYPE_IS_TENTATIVE(arg_info: anytype) @TypeOf((ZEND_TYPE_FULL_MASK(arg_info.*.type) & _ZEND_IS_TENTATIVE_BIT) != @as(c_int, 0)) {
    _ = &arg_info;
    return (ZEND_TYPE_FULL_MASK(arg_info.*.type) & _ZEND_IS_TENTATIVE_BIT) != @as(c_int, 0);
}
pub const ZEND_DIM_IS = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_ENCAPS_VAR_DOLLAR_CURLY = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_ENCAPS_VAR_DOLLAR_CURLY_VAR_VAR = @as(c_int, 1) << @as(c_int, 1);
pub const IS_CONSTANT_CLASS = @as(c_int, 0x400);
pub const IS_CONSTANT_UNQUALIFIED_IN_NAMESPACE = @as(c_int, 0x800);
pub inline fn ARG_MUST_BE_SENT_BY_REF(zf: anytype, arg_num: anytype) @TypeOf(zend_check_arg_send_type(zf, arg_num, ZEND_SEND_BY_REF)) {
    _ = &zf;
    _ = &arg_num;
    return zend_check_arg_send_type(zf, arg_num, ZEND_SEND_BY_REF);
}
pub inline fn ARG_SHOULD_BE_SENT_BY_REF(zf: anytype, arg_num: anytype) @TypeOf(zend_check_arg_send_type(zf, arg_num, ZEND_SEND_BY_REF | ZEND_SEND_PREFER_REF)) {
    _ = &zf;
    _ = &arg_num;
    return zend_check_arg_send_type(zf, arg_num, ZEND_SEND_BY_REF | ZEND_SEND_PREFER_REF);
}
pub inline fn ARG_MAY_BE_SENT_BY_REF(zf: anytype, arg_num: anytype) @TypeOf(zend_check_arg_send_type(zf, arg_num, ZEND_SEND_PREFER_REF)) {
    _ = &zf;
    _ = &arg_num;
    return zend_check_arg_send_type(zf, arg_num, ZEND_SEND_PREFER_REF);
}
pub const MAX_ARG_FLAG_NUM = @as(c_int, 12);
pub const ZEND_SET_ARG_FLAG = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_compile.h:1163:10
pub inline fn ZEND_CHECK_ARG_FLAG(zf: anytype, arg_num: anytype, mask: anytype) @TypeOf((zf.*.quick_arg_flags >> ((arg_num + @as(c_int, 3)) * @as(c_int, 2))) & mask) {
    _ = &zf;
    _ = &arg_num;
    _ = &mask;
    return (zf.*.quick_arg_flags >> ((arg_num + @as(c_int, 3)) * @as(c_int, 2))) & mask;
}
pub inline fn QUICK_ARG_MUST_BE_SENT_BY_REF(zf: anytype, arg_num: anytype) @TypeOf(ZEND_CHECK_ARG_FLAG(zf, arg_num, ZEND_SEND_BY_REF)) {
    _ = &zf;
    _ = &arg_num;
    return ZEND_CHECK_ARG_FLAG(zf, arg_num, ZEND_SEND_BY_REF);
}
pub inline fn QUICK_ARG_SHOULD_BE_SENT_BY_REF(zf: anytype, arg_num: anytype) @TypeOf(ZEND_CHECK_ARG_FLAG(zf, arg_num, ZEND_SEND_BY_REF | ZEND_SEND_PREFER_REF)) {
    _ = &zf;
    _ = &arg_num;
    return ZEND_CHECK_ARG_FLAG(zf, arg_num, ZEND_SEND_BY_REF | ZEND_SEND_PREFER_REF);
}
pub inline fn QUICK_ARG_MAY_BE_SENT_BY_REF(zf: anytype, arg_num: anytype) @TypeOf(ZEND_CHECK_ARG_FLAG(zf, arg_num, ZEND_SEND_PREFER_REF)) {
    _ = &zf;
    _ = &arg_num;
    return ZEND_CHECK_ARG_FLAG(zf, arg_num, ZEND_SEND_PREFER_REF);
}
pub const ZEND_RETURN_VAL = @as(c_int, 0);
pub const ZEND_RETURN_REF = @as(c_int, 1);
pub const ZEND_BIND_VAL = @as(c_int, 0);
pub const ZEND_BIND_REF = @as(c_int, 1);
pub const ZEND_BIND_IMPLICIT = @as(c_int, 2);
pub const ZEND_BIND_EXPLICIT = @as(c_int, 4);
pub const ZEND_RETURNS_FUNCTION = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_RETURNS_VALUE = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_ARRAY_ELEMENT_REF = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_ARRAY_NOT_PACKED = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_ARRAY_SIZE_SHIFT = @as(c_int, 2);
pub const ZEND_PARENTHESIZED_CONDITIONAL = @as(c_int, 1);
pub const ZEND_PARENTHESIZED_STATIC_PROP = @as(c_int, 1);
pub const ZEND_SYMBOL_CLASS = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_SYMBOL_FUNCTION = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_SYMBOL_CONST = @as(c_int, 1) << @as(c_int, 2);
pub inline fn ZEND_IS_INCREMENT(opcode: anytype) @TypeOf((opcode & @as(c_int, 1)) == @as(c_int, 0)) {
    _ = &opcode;
    return (opcode & @as(c_int, 1)) == @as(c_int, 0);
}
pub inline fn ZEND_IS_BINARY_ASSIGN_OP_OPCODE(opcode: anytype) @TypeOf((opcode >= ZEND_ADD) and (opcode <= ZEND_POW)) {
    _ = &opcode;
    return (opcode >= ZEND_ADD) and (opcode <= ZEND_POW);
}
pub const ZEND_GOTO = @as(c_int, 253);
pub const ZEND_BRK = @as(c_int, 254);
pub const ZEND_CONT = @as(c_int, 255);
pub const ZEND_CLONE_FUNC_NAME = "__clone";
pub const ZEND_CONSTRUCTOR_FUNC_NAME = "__construct";
pub const ZEND_DESTRUCTOR_FUNC_NAME = "__destruct";
pub const ZEND_GET_FUNC_NAME = "__get";
pub const ZEND_SET_FUNC_NAME = "__set";
pub const ZEND_UNSET_FUNC_NAME = "__unset";
pub const ZEND_ISSET_FUNC_NAME = "__isset";
pub const ZEND_CALL_FUNC_NAME = "__call";
pub const ZEND_CALLSTATIC_FUNC_NAME = "__callstatic";
pub const ZEND_TOSTRING_FUNC_NAME = "__tostring";
pub const ZEND_INVOKE_FUNC_NAME = "__invoke";
pub const ZEND_DEBUGINFO_FUNC_NAME = "__debuginfo";
pub const ZEND_COMPILE_EXTENDED_STMT = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_COMPILE_EXTENDED_FCALL = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_COMPILE_EXTENDED_INFO = ZEND_COMPILE_EXTENDED_STMT | ZEND_COMPILE_EXTENDED_FCALL;
pub const ZEND_COMPILE_HANDLE_OP_ARRAY = @as(c_int, 1) << @as(c_int, 2);
pub const ZEND_COMPILE_IGNORE_INTERNAL_FUNCTIONS = @as(c_int, 1) << @as(c_int, 3);
pub const ZEND_COMPILE_IGNORE_INTERNAL_CLASSES = @as(c_int, 1) << @as(c_int, 4);
pub const ZEND_COMPILE_DELAYED_BINDING = @as(c_int, 1) << @as(c_int, 5);
pub const ZEND_COMPILE_NO_CONSTANT_SUBSTITUTION = @as(c_int, 1) << @as(c_int, 6);
pub const ZEND_COMPILE_NO_PERSISTENT_CONSTANT_SUBSTITUTION = @as(c_int, 1) << @as(c_int, 8);
pub const ZEND_COMPILE_IGNORE_USER_FUNCTIONS = @as(c_int, 1) << @as(c_int, 9);
pub const ZEND_COMPILE_GUARDS = @as(c_int, 1) << @as(c_int, 10);
pub const ZEND_COMPILE_NO_BUILTINS = @as(c_int, 1) << @as(c_int, 11);
pub const ZEND_COMPILE_WITH_FILE_CACHE = @as(c_int, 1) << @as(c_int, 12);
pub const ZEND_COMPILE_IGNORE_OTHER_FILES = @as(c_int, 1) << @as(c_int, 13);
pub const ZEND_COMPILE_WITHOUT_EXECUTION = @as(c_int, 1) << @as(c_int, 14);
pub const ZEND_COMPILE_PRELOAD = @as(c_int, 1) << @as(c_int, 15);
pub const ZEND_COMPILE_NO_JUMPTABLES = @as(c_int, 1) << @as(c_int, 16);
pub const ZEND_COMPILE_PRELOAD_IN_CHILD = @as(c_int, 1) << @as(c_int, 17);
pub const ZEND_COMPILE_IGNORE_OBSERVER = @as(c_int, 1) << @as(c_int, 18);
pub const ZEND_COMPILE_DEFAULT = ZEND_COMPILE_HANDLE_OP_ARRAY;
pub const ZEND_COMPILE_DEFAULT_FOR_EVAL = @as(c_int, 0);
pub const ZEND_BUILD_H = "";
pub const ZEND_TOSTR_ = @compileError("unable to translate C expr: unexpected token '#'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_build.h:22:9
pub inline fn ZEND_TOSTR(x: anytype) @TypeOf(ZEND_TOSTR_(x)) {
    _ = &x;
    return ZEND_TOSTR_(x);
}
pub const ZEND_BUILD_TS = ",NTS";
pub const ZEND_BUILD_DEBUG = "";
pub const ZEND_BUILD_SYSTEM = "";
pub const ZEND_BUILD_EXTRA = "";
pub const INIT_FUNC_ARGS = @compileError("unable to translate macro: undefined identifier `type`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:27:9
pub const INIT_FUNC_ARGS_PASSTHRU = @compileError("unable to translate macro: undefined identifier `type`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:28:9
pub const SHUTDOWN_FUNC_ARGS = @compileError("unable to translate macro: undefined identifier `type`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:29:9
pub const SHUTDOWN_FUNC_ARGS_PASSTHRU = @compileError("unable to translate macro: undefined identifier `type`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:30:9
pub const ZEND_MODULE_INFO_FUNC_ARGS = @compileError("unable to translate macro: undefined identifier `zend_module`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:31:9
pub const ZEND_MODULE_INFO_FUNC_ARGS_PASSTHRU = @compileError("unable to translate macro: undefined identifier `zend_module`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:32:9
pub const ZEND_MODULE_API_NO = @import("std").zig.c_translation.promoteIntLiteral(c_int, 20240924, .decimal);
pub const USING_ZTS = @as(c_int, 0);
pub const STANDARD_MODULE_HEADER_EX = blk: {
    _ = @import("std").zig.c_translation.sizeof(zend_module_entry);
    _ = &ZEND_MODULE_API_NO;
    _ = &ZEND_DEBUG;
    break :blk USING_ZTS;
};
pub const STANDARD_MODULE_HEADER = blk: {
    _ = &STANDARD_MODULE_HEADER_EX;
    _ = &NULL;
    break :blk NULL;
};
pub const ZE2_STANDARD_MODULE_HEADER = @compileError("unable to translate macro: undefined identifier `ini_entries`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:44:9
pub const ZEND_MODULE_BUILD_ID = "API" ++ ZEND_TOSTR(ZEND_MODULE_API_NO) ++ ZEND_BUILD_TS;
pub const STANDARD_MODULE_PROPERTIES_EX = blk: {
    _ = @as(c_int, 0);
    _ = @as(c_int, 0);
    _ = &NULL;
    _ = @as(c_int, 0);
    break :blk ZEND_MODULE_BUILD_ID;
};
pub const NO_MODULE_GLOBALS = blk: {
    _ = @as(c_int, 0);
    _ = &NULL;
    _ = &NULL;
    break :blk NULL;
};
pub const ZEND_MODULE_GLOBALS = @compileError("unable to translate macro: undefined identifier `zend_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:56:10
pub const STANDARD_MODULE_PROPERTIES = blk: {
    _ = &NO_MODULE_GLOBALS;
    _ = &NULL;
    break :blk STANDARD_MODULE_PROPERTIES_EX;
};
pub const NO_VERSION_YET = NULL;
pub const MODULE_PERSISTENT = @as(c_int, 1);
pub const MODULE_TEMPORARY = @as(c_int, 2);
pub const MODULE_DEP_REQUIRED = @as(c_int, 1);
pub const MODULE_DEP_CONFLICTS = @as(c_int, 2);
pub const MODULE_DEP_OPTIONAL = @as(c_int, 3);
pub const ZEND_MOD_REQUIRED_EX = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:106:9
pub const ZEND_MOD_CONFLICTS_EX = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:107:9
pub const ZEND_MOD_OPTIONAL_EX = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:108:9
pub inline fn ZEND_MOD_REQUIRED(name: anytype) @TypeOf(ZEND_MOD_REQUIRED_EX(name, NULL, NULL)) {
    _ = &name;
    return ZEND_MOD_REQUIRED_EX(name, NULL, NULL);
}
pub inline fn ZEND_MOD_CONFLICTS(name: anytype) @TypeOf(ZEND_MOD_CONFLICTS_EX(name, NULL, NULL)) {
    _ = &name;
    return ZEND_MOD_CONFLICTS_EX(name, NULL, NULL);
}
pub inline fn ZEND_MOD_OPTIONAL(name: anytype) @TypeOf(ZEND_MOD_OPTIONAL_EX(name, NULL, NULL)) {
    _ = &name;
    return ZEND_MOD_OPTIONAL_EX(name, NULL, NULL);
}
pub const ZEND_MOD_END = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_modules.h:114:9
pub const ZEND_LIST_H = "";
pub const ZEND_RSRC_DTOR_FUNC = @compileError("unable to translate macro: undefined identifier `res`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_list.h:29:9
pub const ZEND_EXECUTE_H = "";
pub inline fn ZEND_REF_TYPE_SOURCES(ref: anytype) @TypeOf(ref.*.sources) {
    _ = &ref;
    return ref.*.sources;
}
pub inline fn ZEND_REF_HAS_TYPE_SOURCES(ref: anytype) @TypeOf(ZEND_REF_TYPE_SOURCES(ref).ptr != NULL) {
    _ = &ref;
    return ZEND_REF_TYPE_SOURCES(ref).ptr != NULL;
}
pub inline fn ZEND_REF_FIRST_SOURCE(ref: anytype) @TypeOf(if (ZEND_PROPERTY_INFO_SOURCE_IS_LIST(ref.*.sources.list)) ZEND_PROPERTY_INFO_SOURCE_TO_LIST(ref.*.sources.list).*.ptr[@as(usize, @intCast(@as(c_int, 0)))] else ref.*.sources.ptr) {
    _ = &ref;
    return if (ZEND_PROPERTY_INFO_SOURCE_IS_LIST(ref.*.sources.list)) ZEND_PROPERTY_INFO_SOURCE_TO_LIST(ref.*.sources.list).*.ptr[@as(usize, @intCast(@as(c_int, 0)))] else ref.*.sources.ptr;
}
pub const ZEND_VM_STACK_HEADER_SLOTS = @import("std").zig.c_translation.MacroArithmetic.div((@import("std").zig.c_translation.sizeof(struct__zend_vm_stack) + @import("std").zig.c_translation.sizeof(zval)) - @as(c_int, 1), @import("std").zig.c_translation.sizeof(zval));
pub inline fn ZEND_VM_STACK_ELEMENTS(stack: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]zval, stack) + ZEND_VM_STACK_HEADER_SLOTS) {
    _ = &stack;
    return @import("std").zig.c_translation.cast([*c]zval, stack) + ZEND_VM_STACK_HEADER_SLOTS;
}
pub const ZEND_ASSERT_VM_STACK = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:242:10
pub const ZEND_ASSERT_VM_STACK_GLOBAL = "";
pub const ZEND_USER_OPCODE_CONTINUE = @as(c_int, 0);
pub const ZEND_USER_OPCODE_RETURN = @as(c_int, 1);
pub const ZEND_USER_OPCODE_DISPATCH = @as(c_int, 2);
pub const ZEND_USER_OPCODE_ENTER = @as(c_int, 3);
pub const ZEND_USER_OPCODE_LEAVE = @as(c_int, 4);
pub const ZEND_USER_OPCODE_DISPATCH_TO = @as(c_int, 0x100);
pub const CACHE_ADDR = @compileError("unable to translate macro: undefined identifier `run_time_cache`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:446:9
pub const CACHED_PTR = @compileError("unable to translate macro: undefined identifier `run_time_cache`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:449:9
pub const CACHE_PTR = @compileError("unable to translate macro: undefined identifier `run_time_cache`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:452:9
pub const CACHED_POLYMORPHIC_PTR = @compileError("unable to translate macro: undefined identifier `run_time_cache`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:456:9
pub const CACHE_POLYMORPHIC_PTR = @compileError("unable to translate macro: undefined identifier `slot`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:461:9
pub inline fn CACHED_PTR_EX(slot: anytype) @TypeOf(slot[@as(usize, @intCast(@as(c_int, 0)))]) {
    _ = &slot;
    return slot[@as(usize, @intCast(@as(c_int, 0)))];
}
pub const CACHE_PTR_EX = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:470:9
pub inline fn CACHED_POLYMORPHIC_PTR_EX(slot: anytype, ce: anytype) @TypeOf(if (EXPECTED(slot[@as(usize, @intCast(@as(c_int, 0)))] == ce)) slot[@as(usize, @intCast(@as(c_int, 1)))] else NULL) {
    _ = &slot;
    _ = &ce;
    return if (EXPECTED(slot[@as(usize, @intCast(@as(c_int, 0)))] == ce)) slot[@as(usize, @intCast(@as(c_int, 1)))] else NULL;
}
pub const CACHE_POLYMORPHIC_PTR_EX = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:477:9
pub const CACHE_SPECIAL = @as(c_int, 1) << @as(c_int, 0);
pub inline fn IS_SPECIAL_CACHE_VAL(ptr: anytype) @TypeOf(@import("std").zig.c_translation.cast(usize, ptr) & CACHE_SPECIAL) {
    _ = &ptr;
    return @import("std").zig.c_translation.cast(usize, ptr) & CACHE_SPECIAL;
}
pub inline fn ENCODE_SPECIAL_CACHE_NUM(num: anytype) ?*anyopaque {
    _ = &num;
    return @import("std").zig.c_translation.cast(?*anyopaque, (@import("std").zig.c_translation.cast(usize, num) << @as(c_int, 1)) | CACHE_SPECIAL);
}
pub inline fn DECODE_SPECIAL_CACHE_NUM(ptr: anytype) @TypeOf(@import("std").zig.c_translation.cast(usize, ptr) >> @as(c_int, 1)) {
    _ = &ptr;
    return @import("std").zig.c_translation.cast(usize, ptr) >> @as(c_int, 1);
}
pub inline fn ENCODE_SPECIAL_CACHE_PTR(ptr: anytype) ?*anyopaque {
    _ = &ptr;
    return @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast(usize, ptr) | CACHE_SPECIAL);
}
pub inline fn DECODE_SPECIAL_CACHE_PTR(ptr: anytype) ?*anyopaque {
    _ = &ptr;
    return @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast(usize, ptr) & ~CACHE_SPECIAL);
}
pub const SKIP_EXT_OPLINE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:499:9
pub inline fn ZEND_CLASS_HAS_TYPE_HINTS(ce: anytype) @TypeOf((ce.*.ce_flags & ZEND_ACC_HAS_TYPE_HINTS) == ZEND_ACC_HAS_TYPE_HINTS) {
    _ = &ce;
    return (ce.*.ce_flags & ZEND_ACC_HAS_TYPE_HINTS) == ZEND_ACC_HAS_TYPE_HINTS;
}
pub inline fn ZEND_CLASS_HAS_READONLY_PROPS(ce: anytype) @TypeOf((ce.*.ce_flags & ZEND_ACC_HAS_READONLY_PROPS) == ZEND_ACC_HAS_READONLY_PROPS) {
    _ = &ce;
    return (ce.*.ce_flags & ZEND_ACC_HAS_READONLY_PROPS) == ZEND_ACC_HAS_READONLY_PROPS;
}
pub inline fn ZEND_REF_ADD_TYPE_SOURCE(ref: anytype, source: anytype) @TypeOf(zend_ref_add_type_source(&ZEND_REF_TYPE_SOURCES(ref), source)) {
    _ = &ref;
    _ = &source;
    return zend_ref_add_type_source(&ZEND_REF_TYPE_SOURCES(ref), source);
}
pub inline fn ZEND_REF_DEL_TYPE_SOURCE(ref: anytype, source: anytype) @TypeOf(zend_ref_del_type_source(&ZEND_REF_TYPE_SOURCES(ref), source)) {
    _ = &ref;
    _ = &source;
    return zend_ref_del_type_source(&ZEND_REF_TYPE_SOURCES(ref), source);
}
pub const ZEND_REF_FOREACH_TYPE_SOURCES = @compileError("unable to translate macro: undefined identifier `_source_list`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:523:9
pub const ZEND_REF_FOREACH_TYPE_SOURCES_END = @compileError("unable to translate C expr: unexpected token '}'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_execute.h:539:9
pub const ZEND_TYPE_INFO_H = "";
pub const MAY_BE_UNDEF = @as(c_int, 1) << IS_UNDEF;
pub const MAY_BE_NULL = @as(c_int, 1) << IS_NULL;
pub const MAY_BE_FALSE = @as(c_int, 1) << IS_FALSE;
pub const MAY_BE_TRUE = @as(c_int, 1) << IS_TRUE;
pub const MAY_BE_BOOL = MAY_BE_FALSE | MAY_BE_TRUE;
pub const MAY_BE_LONG = @as(c_int, 1) << IS_LONG;
pub const MAY_BE_DOUBLE = @as(c_int, 1) << IS_DOUBLE;
pub const MAY_BE_STRING = @as(c_int, 1) << IS_STRING;
pub const MAY_BE_ARRAY = @as(c_int, 1) << IS_ARRAY;
pub const MAY_BE_OBJECT = @as(c_int, 1) << IS_OBJECT;
pub const MAY_BE_RESOURCE = @as(c_int, 1) << IS_RESOURCE;
pub const MAY_BE_ANY = (((((((MAY_BE_NULL | MAY_BE_FALSE) | MAY_BE_TRUE) | MAY_BE_LONG) | MAY_BE_DOUBLE) | MAY_BE_STRING) | MAY_BE_ARRAY) | MAY_BE_OBJECT) | MAY_BE_RESOURCE;
pub const MAY_BE_REF = @as(c_int, 1) << IS_REFERENCE;
pub const MAY_BE_CALLABLE = @as(c_int, 1) << IS_CALLABLE;
pub const MAY_BE_VOID = @as(c_int, 1) << IS_VOID;
pub const MAY_BE_NEVER = @as(c_int, 1) << IS_NEVER;
pub const MAY_BE_STATIC = @as(c_int, 1) << IS_STATIC;
pub const MAY_BE_ARRAY_SHIFT = IS_REFERENCE;
pub const MAY_BE_ARRAY_OF_NULL = MAY_BE_NULL << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_FALSE = MAY_BE_FALSE << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_TRUE = MAY_BE_TRUE << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_LONG = MAY_BE_LONG << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_DOUBLE = MAY_BE_DOUBLE << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_STRING = MAY_BE_STRING << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_ARRAY = MAY_BE_ARRAY << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_OBJECT = MAY_BE_OBJECT << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_RESOURCE = MAY_BE_RESOURCE << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_ANY = MAY_BE_ANY << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_OF_REF = MAY_BE_REF << MAY_BE_ARRAY_SHIFT;
pub const MAY_BE_ARRAY_PACKED = @as(c_int, 1) << @as(c_int, 21);
pub const MAY_BE_ARRAY_NUMERIC_HASH = @as(c_int, 1) << @as(c_int, 22);
pub const MAY_BE_ARRAY_STRING_HASH = @as(c_int, 1) << @as(c_int, 23);
pub const MAY_BE_ARRAY_EMPTY = @as(c_int, 1) << @as(c_int, 29);
pub const MAY_BE_ARRAY_KEY_LONG = MAY_BE_ARRAY_PACKED | MAY_BE_ARRAY_NUMERIC_HASH;
pub const MAY_BE_ARRAY_KEY_STRING = MAY_BE_ARRAY_STRING_HASH;
pub const MAY_BE_ARRAY_KEY_ANY = (MAY_BE_ARRAY_KEY_LONG | MAY_BE_ARRAY_KEY_STRING) | MAY_BE_ARRAY_EMPTY;
pub inline fn MAY_BE_PACKED(t: anytype) @TypeOf(t & MAY_BE_ARRAY_PACKED) {
    _ = &t;
    return t & MAY_BE_ARRAY_PACKED;
}
pub inline fn MAY_BE_HASH(t: anytype) @TypeOf(t & (MAY_BE_ARRAY_NUMERIC_HASH | MAY_BE_ARRAY_KEY_STRING)) {
    _ = &t;
    return t & (MAY_BE_ARRAY_NUMERIC_HASH | MAY_BE_ARRAY_KEY_STRING);
}
pub inline fn MAY_BE_PACKED_ONLY(t: anytype) @TypeOf((t & MAY_BE_ARRAY_KEY_ANY) == MAY_BE_ARRAY_PACKED) {
    _ = &t;
    return (t & MAY_BE_ARRAY_KEY_ANY) == MAY_BE_ARRAY_PACKED;
}
pub inline fn MAY_BE_HASH_ONLY(t: anytype) @TypeOf((MAY_BE_HASH(t) != 0) and !((t & (MAY_BE_ARRAY_PACKED | MAY_BE_ARRAY_EMPTY)) != 0)) {
    _ = &t;
    return (MAY_BE_HASH(t) != 0) and !((t & (MAY_BE_ARRAY_PACKED | MAY_BE_ARRAY_EMPTY)) != 0);
}
pub inline fn MAY_BE_EMPTY_ONLY(t: anytype) @TypeOf((t & MAY_BE_ARRAY_KEY_ANY) == MAY_BE_ARRAY_EMPTY) {
    _ = &t;
    return (t & MAY_BE_ARRAY_KEY_ANY) == MAY_BE_ARRAY_EMPTY;
}
pub const MAY_BE_CLASS = @as(c_int, 1) << @as(c_int, 24);
pub const MAY_BE_INDIRECT = @as(c_int, 1) << @as(c_int, 25);
pub const MAY_BE_RC1 = @as(c_int, 1) << @as(c_int, 30);
pub const MAY_BE_RCN = @as(c_uint, 1) << @as(c_int, 31);
pub const MAY_BE_ANY_ARRAY = ((MAY_BE_ARRAY | MAY_BE_ARRAY_KEY_ANY) | MAY_BE_ARRAY_OF_ANY) | MAY_BE_ARRAY_OF_REF;
pub inline fn ZEND_NS_NAME(ns: anytype, name: anytype) @TypeOf(ns ++ "\\" ++ name) {
    _ = &ns;
    _ = &name;
    return ns ++ "\\" ++ name;
}
pub const ZEND_FN = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:71:9
pub const ZEND_MN = @compileError("unable to translate macro: undefined identifier `zim_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:72:9
pub inline fn ZEND_NAMED_FUNCTION(name: anytype) @TypeOf(anyopaque ++ name(INTERNAL_FUNCTION_PARAMETERS)) {
    _ = &name;
    return anyopaque ++ name(INTERNAL_FUNCTION_PARAMETERS);
}
pub const ZEND_FUNCTION = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:75:9
pub const ZEND_METHOD = @compileError("unable to translate macro: undefined identifier `zim_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:76:9
pub const ZEND_FENTRY = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:78:9
pub const ZEND_RAW_FENTRY = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:80:9
pub const ZEND_RAW_NAMED_FE = @compileError("unable to translate C expr: unexpected token '#'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:83:9
pub const ZEND_NAMED_FE = @compileError("unable to translate C expr: unexpected token '#'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:85:9
pub const ZEND_FE = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:86:9
pub const ZEND_DEP_FE = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:87:9
pub const ZEND_FALIAS = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:88:9
pub const ZEND_DEP_FALIAS = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:89:9
pub inline fn ZEND_NAMED_ME(zend_name: anytype, name: anytype, arg_info: anytype, flags: anytype) @TypeOf(ZEND_FENTRY(zend_name, name, arg_info, flags)) {
    _ = &zend_name;
    _ = &name;
    _ = &arg_info;
    _ = &flags;
    return ZEND_FENTRY(zend_name, name, arg_info, flags);
}
pub const ZEND_ME = @compileError("unable to translate macro: undefined identifier `zim_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:91:9
pub const ZEND_DEP_ME = @compileError("unable to translate macro: undefined identifier `zim_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:92:9
pub const ZEND_ABSTRACT_ME = @compileError("unable to translate C expr: unexpected token '#'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:93:9
pub const ZEND_ABSTRACT_ME_WITH_FLAGS = @compileError("unable to translate C expr: unexpected token '#'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:94:9
pub const ZEND_MALIAS = @compileError("unable to translate macro: undefined identifier `zim_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:95:9
pub const ZEND_ME_MAPPING = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:96:9
pub const ZEND_FRAMELESS_FE = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:97:9
pub const ZEND_NS_FENTRY = @compileError("unable to translate C expr: unexpected token '#'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:100:9
pub inline fn ZEND_NS_RAW_FENTRY(ns: anytype, zend_name: anytype, name: anytype, arg_info: anytype, flags: anytype) @TypeOf(ZEND_RAW_FENTRY(ZEND_NS_NAME(ns, zend_name), name, arg_info, flags, NULL, NULL)) {
    _ = &ns;
    _ = &zend_name;
    _ = &name;
    _ = &arg_info;
    _ = &flags;
    return ZEND_RAW_FENTRY(ZEND_NS_NAME(ns, zend_name), name, arg_info, flags, NULL, NULL);
}
pub const ZEND_SUPPORTS_COMPILE_TIME_EVAL_FE = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:113:9
pub const ZEND_NS_RAW_NAMED_FE = @compileError("unable to translate C expr: unexpected token '#'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:116:9
pub const ZEND_NS_NAMED_FE = @compileError("unable to translate C expr: unexpected token '#'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:118:9
pub const ZEND_NS_FE = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:119:9
pub const ZEND_NS_DEP_FE = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:120:9
pub const ZEND_NS_FALIAS = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:121:9
pub const ZEND_NS_DEP_FALIAS = @compileError("unable to translate macro: undefined identifier `zif_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:122:9
pub const ZEND_FE_END = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:124:9
pub inline fn _ZEND_ARG_INFO_FLAGS(pass_by_ref: anytype, is_variadic: anytype, is_tentative: anytype) @TypeOf(((pass_by_ref << _ZEND_SEND_MODE_SHIFT) | (if (is_variadic) _ZEND_IS_VARIADIC_BIT else @as(c_int, 0))) | (if (is_tentative) _ZEND_IS_TENTATIVE_BIT else @as(c_int, 0))) {
    _ = &pass_by_ref;
    _ = &is_variadic;
    _ = &is_tentative;
    return ((pass_by_ref << _ZEND_SEND_MODE_SHIFT) | (if (is_variadic) _ZEND_IS_VARIADIC_BIT else @as(c_int, 0))) | (if (is_tentative) _ZEND_IS_TENTATIVE_BIT else @as(c_int, 0));
}
pub const ZEND_ARG_INFO = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:130:9
pub const ZEND_ARG_INFO_WITH_DEFAULT_VALUE = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:132:9
pub const ZEND_ARG_VARIADIC_INFO = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:134:9
pub const ZEND_ARG_TYPE_INFO = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:138:9
pub const ZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:140:9
pub const ZEND_ARG_VARIADIC_TYPE_INFO = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:142:9
pub const ZEND_ARG_TYPE_MASK = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:146:9
pub const ZEND_ARG_OBJ_TYPE_MASK = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:148:9
pub const ZEND_ARG_VARIADIC_OBJ_TYPE_MASK = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:150:9
pub const ZEND_ARG_OBJ_INFO = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:154:9
pub const ZEND_ARG_OBJ_INFO_WITH_DEFAULT_VALUE = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:156:9
pub const ZEND_ARG_VARIADIC_OBJ_INFO = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:158:9
pub const ZEND_ARG_ARRAY_INFO = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:162:9
pub const ZEND_ARG_CALLABLE_INFO = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:164:9
pub const ZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX2 = @compileError("unable to translate C expr: unexpected token 'static'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:167:9
pub inline fn ZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX(name: anytype, return_reference: anytype, required_num_args: anytype, class_name: anytype, allow_null: anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX2(name, return_reference, required_num_args, class_name, allow_null, @as(c_int, 0))) {
    _ = &name;
    _ = &return_reference;
    _ = &required_num_args;
    _ = &class_name;
    _ = &allow_null;
    return ZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX2(name, return_reference, required_num_args, class_name, allow_null, @as(c_int, 0));
}
pub inline fn ZEND_BEGIN_ARG_WITH_TENTATIVE_RETURN_OBJ_INFO_EX(name: anytype, return_reference: anytype, required_num_args: anytype, class_name: anytype, allow_null: anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX2(name, return_reference, required_num_args, class_name, allow_null, @as(c_int, 1))) {
    _ = &name;
    _ = &return_reference;
    _ = &required_num_args;
    _ = &class_name;
    _ = &allow_null;
    return ZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX2(name, return_reference, required_num_args, class_name, allow_null, @as(c_int, 1));
}
pub inline fn ZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO(name: anytype, class_name: anytype, allow_null: anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX2(name, @as(c_int, 0), -@as(c_int, 1), class_name, allow_null, @as(c_int, 0))) {
    _ = &name;
    _ = &class_name;
    _ = &allow_null;
    return ZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX2(name, @as(c_int, 0), -@as(c_int, 1), class_name, allow_null, @as(c_int, 0));
}
pub const ZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX2 = @compileError("unable to translate C expr: unexpected token 'static'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:181:9
pub inline fn ZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(name: anytype, return_reference: anytype, required_num_args: anytype, @"type": anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX2(name, return_reference, required_num_args, @"type", @as(c_int, 0))) {
    _ = &name;
    _ = &return_reference;
    _ = &required_num_args;
    _ = &@"type";
    return ZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX2(name, return_reference, required_num_args, @"type", @as(c_int, 0));
}
pub inline fn ZEND_BEGIN_ARG_WITH_TENTATIVE_RETURN_TYPE_MASK_EX(name: anytype, return_reference: anytype, required_num_args: anytype, @"type": anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX2(name, return_reference, required_num_args, @"type", @as(c_int, 1))) {
    _ = &name;
    _ = &return_reference;
    _ = &required_num_args;
    _ = &@"type";
    return ZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX2(name, return_reference, required_num_args, @"type", @as(c_int, 1));
}
pub const ZEND_BEGIN_ARG_WITH_RETURN_OBJ_TYPE_MASK_EX2 = @compileError("unable to translate C expr: unexpected token 'static'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:191:9
pub inline fn ZEND_BEGIN_ARG_WITH_RETURN_OBJ_TYPE_MASK_EX(name: anytype, return_reference: anytype, required_num_args: anytype, class_name: anytype, @"type": anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_OBJ_TYPE_MASK_EX2(name, return_reference, required_num_args, class_name, @"type", @as(c_int, 0))) {
    _ = &name;
    _ = &return_reference;
    _ = &required_num_args;
    _ = &class_name;
    _ = &@"type";
    return ZEND_BEGIN_ARG_WITH_RETURN_OBJ_TYPE_MASK_EX2(name, return_reference, required_num_args, class_name, @"type", @as(c_int, 0));
}
pub inline fn ZEND_BEGIN_ARG_WITH_TENTATIVE_RETURN_OBJ_TYPE_MASK_EX(name: anytype, return_reference: anytype, required_num_args: anytype, class_name: anytype, @"type": anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_OBJ_TYPE_MASK_EX2(name, return_reference, required_num_args, class_name, @"type", @as(c_int, 1))) {
    _ = &name;
    _ = &return_reference;
    _ = &required_num_args;
    _ = &class_name;
    _ = &@"type";
    return ZEND_BEGIN_ARG_WITH_RETURN_OBJ_TYPE_MASK_EX2(name, return_reference, required_num_args, class_name, @"type", @as(c_int, 1));
}
pub const ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX2 = @compileError("unable to translate C expr: unexpected token 'static'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:201:9
pub inline fn ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(name: anytype, return_reference: anytype, required_num_args: anytype, @"type": anytype, allow_null: anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX2(name, return_reference, required_num_args, @"type", allow_null, @as(c_int, 0))) {
    _ = &name;
    _ = &return_reference;
    _ = &required_num_args;
    _ = &@"type";
    _ = &allow_null;
    return ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX2(name, return_reference, required_num_args, @"type", allow_null, @as(c_int, 0));
}
pub inline fn ZEND_BEGIN_ARG_WITH_TENTATIVE_RETURN_TYPE_INFO_EX(name: anytype, return_reference: anytype, required_num_args: anytype, @"type": anytype, allow_null: anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX2(name, return_reference, required_num_args, @"type", allow_null, @as(c_int, 1))) {
    _ = &name;
    _ = &return_reference;
    _ = &required_num_args;
    _ = &@"type";
    _ = &allow_null;
    return ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX2(name, return_reference, required_num_args, @"type", allow_null, @as(c_int, 1));
}
pub inline fn ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO(name: anytype, @"type": anytype, allow_null: anytype) @TypeOf(ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX2(name, @as(c_int, 0), -@as(c_int, 1), @"type", allow_null, @as(c_int, 0))) {
    _ = &name;
    _ = &@"type";
    _ = &allow_null;
    return ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX2(name, @as(c_int, 0), -@as(c_int, 1), @"type", allow_null, @as(c_int, 0));
}
pub const ZEND_BEGIN_ARG_INFO_EX = @compileError("unable to translate C expr: unexpected token 'static'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:214:9
pub const ZEND_BEGIN_ARG_INFO = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:217:9
pub const ZEND_END_ARG_INFO = @compileError("unable to translate C expr: unexpected token '}'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:219:9
pub const ZEND_MODULE_STARTUP_N = @compileError("unable to translate macro: undefined identifier `zm_startup_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:222:9
pub const ZEND_MODULE_SHUTDOWN_N = @compileError("unable to translate macro: undefined identifier `zm_shutdown_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:223:9
pub const ZEND_MODULE_ACTIVATE_N = @compileError("unable to translate macro: undefined identifier `zm_activate_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:224:9
pub const ZEND_MODULE_DEACTIVATE_N = @compileError("unable to translate macro: undefined identifier `zm_deactivate_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:225:9
pub const ZEND_MODULE_POST_ZEND_DEACTIVATE_N = @compileError("unable to translate macro: undefined identifier `zm_post_zend_deactivate_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:226:9
pub const ZEND_MODULE_INFO_N = @compileError("unable to translate macro: undefined identifier `zm_info_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:227:9
pub const ZEND_MODULE_GLOBALS_CTOR_N = @compileError("unable to translate macro: undefined identifier `zm_globals_ctor_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:228:9
pub const ZEND_MODULE_GLOBALS_DTOR_N = @compileError("unable to translate macro: undefined identifier `zm_globals_dtor_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:229:9
pub inline fn ZEND_MODULE_STARTUP_D(module: anytype) @TypeOf(zend_result ++ ZEND_MODULE_STARTUP_N(module)(INIT_FUNC_ARGS)) {
    _ = &module;
    return zend_result ++ ZEND_MODULE_STARTUP_N(module)(INIT_FUNC_ARGS);
}
pub inline fn ZEND_MODULE_SHUTDOWN_D(module: anytype) @TypeOf(zend_result ++ ZEND_MODULE_SHUTDOWN_N(module)(SHUTDOWN_FUNC_ARGS)) {
    _ = &module;
    return zend_result ++ ZEND_MODULE_SHUTDOWN_N(module)(SHUTDOWN_FUNC_ARGS);
}
pub inline fn ZEND_MODULE_ACTIVATE_D(module: anytype) @TypeOf(zend_result ++ ZEND_MODULE_ACTIVATE_N(module)(INIT_FUNC_ARGS)) {
    _ = &module;
    return zend_result ++ ZEND_MODULE_ACTIVATE_N(module)(INIT_FUNC_ARGS);
}
pub inline fn ZEND_MODULE_DEACTIVATE_D(module: anytype) @TypeOf(zend_result ++ ZEND_MODULE_DEACTIVATE_N(module)(SHUTDOWN_FUNC_ARGS)) {
    _ = &module;
    return zend_result ++ ZEND_MODULE_DEACTIVATE_N(module)(SHUTDOWN_FUNC_ARGS);
}
pub inline fn ZEND_MODULE_POST_ZEND_DEACTIVATE_D(module: anytype) @TypeOf(zend_result ++ ZEND_MODULE_POST_ZEND_DEACTIVATE_N(module)(anyopaque)) {
    _ = &module;
    return zend_result ++ ZEND_MODULE_POST_ZEND_DEACTIVATE_N(module)(anyopaque);
}
pub inline fn ZEND_MODULE_INFO_D(module: anytype) @TypeOf(anyopaque ++ ZEND_MODULE_INFO_N(module)(ZEND_MODULE_INFO_FUNC_ARGS)) {
    _ = &module;
    return anyopaque ++ ZEND_MODULE_INFO_N(module)(ZEND_MODULE_INFO_FUNC_ARGS);
}
pub const ZEND_MODULE_GLOBALS_CTOR_D = @compileError("unable to translate macro: undefined identifier `zend_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:238:9
pub const ZEND_MODULE_GLOBALS_DTOR_D = @compileError("unable to translate macro: undefined identifier `zend_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:239:9
pub const ZEND_GET_MODULE = @compileError("unable to translate macro: undefined identifier `get_module`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:241:9
pub const ZEND_BEGIN_MODULE_GLOBALS = @compileError("unable to translate macro: undefined identifier `_zend_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:246:9
pub const ZEND_END_MODULE_GLOBALS = @compileError("unable to translate macro: undefined identifier `zend_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:248:9
pub const ZEND_DECLARE_MODULE_GLOBALS = @compileError("unable to translate macro: undefined identifier `zend_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:268:9
pub const ZEND_EXTERN_MODULE_GLOBALS = @compileError("unable to translate macro: undefined identifier `zend_`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:270:9
pub const ZEND_INIT_MODULE_GLOBALS = @compileError("unable to translate macro: undefined identifier `_globals`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:272:9
pub const ZEND_MODULE_GLOBALS_ACCESSOR = @compileError("unable to translate macro: undefined identifier `_globals`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:274:9
pub const ZEND_MODULE_GLOBALS_BULK = @compileError("unable to translate macro: undefined identifier `_globals`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:275:9
pub inline fn INIT_CLASS_ENTRY(class_container: anytype, class_name: anytype, functions: anytype) @TypeOf(INIT_CLASS_ENTRY_EX(class_container, class_name, strlen(class_name), functions)) {
    _ = &class_container;
    _ = &class_name;
    _ = &functions;
    return INIT_CLASS_ENTRY_EX(class_container, class_name, strlen(class_name), functions);
}
pub const INIT_CLASS_ENTRY_EX = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:282:9
pub const INIT_CLASS_ENTRY_INIT_METHODS = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:290:9
pub inline fn INIT_NS_CLASS_ENTRY(class_container: anytype, ns: anytype, class_name: anytype, functions: anytype) @TypeOf(INIT_CLASS_ENTRY(class_container, ZEND_NS_NAME(ns, class_name), functions)) {
    _ = &class_container;
    _ = &ns;
    _ = &class_name;
    _ = &functions;
    return INIT_CLASS_ENTRY(class_container, ZEND_NS_NAME(ns, class_name), functions);
}
pub inline fn CE_STATIC_MEMBERS(ce: anytype) [*c]zval {
    _ = &ce;
    return @import("std").zig.c_translation.cast([*c]zval, ZEND_MAP_PTR_GET(ce.*.static_members_table));
}
pub inline fn CE_CONSTANTS_TABLE(ce: anytype) @TypeOf(zend_class_constants_table(ce)) {
    _ = &ce;
    return zend_class_constants_table(ce);
}
pub inline fn CE_DEFAULT_PROPERTIES_TABLE(ce: anytype) @TypeOf(zend_class_default_properties_table(ce)) {
    _ = &ce;
    return zend_class_default_properties_table(ce);
}
pub inline fn CE_BACKED_ENUM_TABLE(ce: anytype) @TypeOf(zend_class_backed_enum_table(ce)) {
    _ = &ce;
    return zend_class_backed_enum_table(ce);
}
pub inline fn ZEND_FCI_INITIALIZED(fci: zend_fcall_info) bool {
    return fci.size != @as(c_int, 0);
}
pub inline fn ZEND_FCC_INITIALIZED(fcc: anytype) @TypeOf(fcc.function_handler != NULL) {
    _ = &fcc;
    return fcc.function_handler != NULL;
}
pub inline fn zend_get_parameters_array(ht: anytype, param_count: anytype, argument_array: anytype) @TypeOf(zend_get_parameters_array_ex(param_count, argument_array)) {
    _ = &ht;
    _ = &param_count;
    _ = &argument_array;
    return zend_get_parameters_array_ex(param_count, argument_array);
}
pub inline fn zend_parse_parameters_none() @TypeOf(if (EXPECTED(ZEND_NUM_ARGS() == @as(c_int, 0))) SUCCESS else blk_2: {
    _ = zend_wrong_parameters_none_error();
    break :blk_2 FAILURE;
}) {
    return if (EXPECTED(ZEND_NUM_ARGS() == @as(c_int, 0))) SUCCESS else blk_2: {
        _ = zend_wrong_parameters_none_error();
        break :blk_2 FAILURE;
    };
}
pub inline fn zend_parse_parameters_none_throw() @TypeOf(zend_parse_parameters_none()) {
    return zend_parse_parameters_none();
}
pub const ZEND_PARSE_PARAMS_THROW = @as(c_int, 0);
pub const ZEND_PARSE_PARAMS_QUIET = @as(c_int, 1) << @as(c_int, 1);
pub const zend_parse_parameters_throw = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:365:9
pub const zend_register_ns_class_alias = @compileError("unable to translate C expr: expected ')' instead got '('");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:402:9
pub const IS_CALLABLE_CHECK_SYNTAX_ONLY = @as(c_int, 1) << @as(c_int, 0);
pub const IS_CALLABLE_SUPPRESS_DEPRECATIONS = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_THIS = @compileError("unable to translate macro: undefined identifier `This`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:523:9
pub inline fn hasThis() @TypeOf(Z_TYPE_P(ZEND_THIS) == IS_OBJECT) {
    return Z_TYPE_P(ZEND_THIS) == IS_OBJECT;
}
pub inline fn getThis() @TypeOf(if (hasThis()) ZEND_THIS else NULL) {
    return if (hasThis()) ZEND_THIS else NULL;
}
pub const ZEND_IS_METHOD_CALL = @compileError("unable to translate macro: undefined identifier `func`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:527:9
pub const WRONG_PARAM_COUNT = ZEND_WRONG_PARAM_COUNT();
pub inline fn ZEND_NUM_ARGS() @TypeOf(EX_NUM_ARGS()) {
    return EX_NUM_ARGS();
}
pub const ZEND_WRONG_PARAM_COUNT = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:531:9
pub const DLEXPORT = "";
pub inline fn array_init(arg: anytype) @TypeOf(ZVAL_ARR(arg, zend_new_array(@as(c_int, 0)))) {
    _ = &arg;
    return ZVAL_ARR(arg, zend_new_array(@as(c_int, 0)));
}
pub inline fn array_init_size(arg: anytype, size: anytype) @TypeOf(ZVAL_ARR(arg, zend_new_array(size))) {
    _ = &arg;
    _ = &size;
    return ZVAL_ARR(arg, zend_new_array(size));
}
pub inline fn call_user_function(function_table: anytype, object: anytype, function_name: anytype, retval_ptr: anytype, param_count: anytype, params: anytype) @TypeOf(_call_user_function_impl(object, function_name, retval_ptr, param_count, params, NULL)) {
    _ = &function_table;
    _ = &object;
    _ = &function_name;
    _ = &retval_ptr;
    _ = &param_count;
    _ = &params;
    return _call_user_function_impl(object, function_name, retval_ptr, param_count, params, NULL);
}
pub inline fn call_user_function_named(function_table: anytype, object: anytype, function_name: anytype, retval_ptr: anytype, param_count: anytype, params: anytype, named_params: anytype) @TypeOf(_call_user_function_impl(object, function_name, retval_ptr, param_count, params, named_params)) {
    _ = &function_table;
    _ = &object;
    _ = &function_name;
    _ = &retval_ptr;
    _ = &param_count;
    _ = &params;
    _ = &named_params;
    return _call_user_function_impl(object, function_name, retval_ptr, param_count, params, named_params);
}
pub const CHECK_ZVAL_STRING = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:936:9
pub inline fn CHECK_ZVAL_NULL_PATH(p: anytype) @TypeOf(zend_str_has_nul_byte(Z_STR_P(p))) {
    _ = &p;
    return zend_str_has_nul_byte(Z_STR_P(p));
}
pub inline fn CHECK_NULL_PATH(p: anytype, l: anytype) @TypeOf(zend_char_has_nul_byte(p, l)) {
    _ = &p;
    _ = &l;
    return zend_char_has_nul_byte(p, l);
}
pub const ZVAL_STRINGL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:952:9
pub const ZVAL_STRING = @compileError("unable to translate macro: undefined identifier `_s`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:956:9
pub const ZVAL_EMPTY_STRING = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:961:9
pub const ZVAL_PSTRINGL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:965:9
pub const ZVAL_PSTRING = @compileError("unable to translate macro: undefined identifier `_s`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:969:9
pub const ZVAL_EMPTY_PSTRING = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:974:9
pub const ZVAL_CHAR = @compileError("unable to translate macro: undefined identifier `_c`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:978:9
pub const ZVAL_STRINGL_FAST = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:983:9
pub const ZVAL_STRING_FAST = @compileError("unable to translate macro: undefined identifier `_s`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:987:9
pub const ZVAL_ZVAL = @compileError("unable to translate macro: undefined identifier `__z`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:992:9
pub const RETVAL_BOOL = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1009:9
pub const RETVAL_NULL = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1010:9
pub const RETVAL_LONG = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1011:9
pub const RETVAL_DOUBLE = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1012:9
pub const RETVAL_STR = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1013:9
pub const RETVAL_INTERNED_STR = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1014:9
pub const RETVAL_NEW_STR = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1015:9
pub const RETVAL_STR_COPY = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1016:9
pub const RETVAL_STRING = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1017:9
pub const RETVAL_STRINGL = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1018:9
pub const RETVAL_STRING_FAST = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1019:9
pub const RETVAL_STRINGL_FAST = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1020:9
pub const RETVAL_EMPTY_STRING = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1021:9
pub const RETVAL_CHAR = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1022:9
pub const RETVAL_RES = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1023:9
pub const RETVAL_ARR = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1024:9
pub const RETVAL_EMPTY_ARRAY = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1025:9
pub const RETVAL_OBJ = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1026:9
pub const RETVAL_OBJ_COPY = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1027:9
pub const RETVAL_COPY = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1028:9
pub const RETVAL_COPY_VALUE = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1029:9
pub const RETVAL_COPY_DEREF = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1030:9
pub const RETVAL_ZVAL = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1031:9
pub const RETVAL_FALSE = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1032:9
pub const RETVAL_TRUE = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1033:9
pub const RETURN_BOOL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1035:9
pub inline fn RETURN_NULL(return_value: *zval) void {
    ZVAL_NULL(return_value);
}
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1036:9
pub const RETURN_LONG = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1037:9
pub const RETURN_DOUBLE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1038:9
pub const RETURN_STR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1039:9
pub const RETURN_INTERNED_STR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1040:9
pub const RETURN_NEW_STR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1041:9
pub const RETURN_STR_COPY = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1042:9
pub const RETURN_STRING = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1043:9
pub const RETURN_STRINGL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1044:9
pub const RETURN_STRING_FAST = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1045:9
pub const RETURN_STRINGL_FAST = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1046:9
pub const RETURN_EMPTY_STRING = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1047:9
pub const RETURN_CHAR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1048:9
pub const RETURN_RES = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1049:9
pub const RETURN_ARR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1050:9
pub const RETURN_EMPTY_ARRAY = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1051:9
pub const RETURN_OBJ = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1052:9
pub const RETURN_OBJ_COPY = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1053:9
pub const RETURN_COPY = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1054:9
pub const RETURN_COPY_VALUE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1055:9
pub const RETURN_COPY_DEREF = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1056:9
pub const RETURN_ZVAL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1057:9
pub const RETURN_FALSE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1058:9
pub const RETURN_TRUE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1059:9
pub const RETURN_THROWS = @compileError("unable to translate macro: undefined identifier `return_value`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1060:9
pub inline fn HASH_OF(p: anytype) @TypeOf(if (Z_TYPE_P(p) == IS_ARRAY) Z_ARRVAL_P(p) else if (Z_TYPE_P(p) == IS_OBJECT) Z_OBJ_HT_P(p).*.get_properties(Z_OBJ_P(p)) else NULL) {
    _ = &p;
    return if (Z_TYPE_P(p) == IS_ARRAY) Z_ARRVAL_P(p) else if (Z_TYPE_P(p) == IS_OBJECT) Z_OBJ_HT_P(p).*.get_properties(Z_OBJ_P(p)) else NULL;
}
pub inline fn ZVAL_IS_NULL(z: anytype) @TypeOf(Z_TYPE_P(z) == IS_NULL) {
    _ = &z;
    return Z_TYPE_P(z) == IS_NULL;
}
pub const ZEND_MINIT = ZEND_MODULE_STARTUP_N;
pub const ZEND_MSHUTDOWN = ZEND_MODULE_SHUTDOWN_N;
pub const ZEND_RINIT = ZEND_MODULE_ACTIVATE_N;
pub const ZEND_RSHUTDOWN = ZEND_MODULE_DEACTIVATE_N;
pub const ZEND_MINFO = ZEND_MODULE_INFO_N;
pub const ZEND_GINIT = @compileError("unable to translate C expr: expected ')' instead got '('");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1071:9
pub const ZEND_GSHUTDOWN = @compileError("unable to translate C expr: expected ')' instead got '('");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1072:9
pub const ZEND_MINIT_FUNCTION = ZEND_MODULE_STARTUP_D;
pub const ZEND_MSHUTDOWN_FUNCTION = ZEND_MODULE_SHUTDOWN_D;
pub const ZEND_RINIT_FUNCTION = ZEND_MODULE_ACTIVATE_D;
pub const ZEND_RSHUTDOWN_FUNCTION = ZEND_MODULE_DEACTIVATE_D;
pub const ZEND_MINFO_FUNCTION = ZEND_MODULE_INFO_D;
pub const ZEND_GINIT_FUNCTION = ZEND_MODULE_GLOBALS_CTOR_D;
pub const ZEND_GSHUTDOWN_FUNCTION = ZEND_MODULE_GLOBALS_DTOR_D;
pub const _ZEND_TRY_ASSIGN_NULL = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1100:9
pub inline fn ZEND_TRY_ASSIGN_NULL(zv: anytype) @TypeOf(_ZEND_TRY_ASSIGN_NULL(zv, @as(c_int, 0))) {
    _ = &zv;
    return _ZEND_TRY_ASSIGN_NULL(zv, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_NULL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1117:9
pub const _ZEND_TRY_ASSIGN_FALSE = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1122:9
pub inline fn ZEND_TRY_ASSIGN_FALSE(zv: anytype) @TypeOf(_ZEND_TRY_ASSIGN_FALSE(zv, @as(c_int, 0))) {
    _ = &zv;
    return _ZEND_TRY_ASSIGN_FALSE(zv, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_FALSE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1139:9
pub const _ZEND_TRY_ASSIGN_TRUE = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1144:9
pub inline fn ZEND_TRY_ASSIGN_TRUE(zv: anytype) @TypeOf(_ZEND_TRY_ASSIGN_TRUE(zv, @as(c_int, 0))) {
    _ = &zv;
    return _ZEND_TRY_ASSIGN_TRUE(zv, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_TRUE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1161:9
pub const _ZEND_TRY_ASSIGN_BOOL = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1166:9
pub inline fn ZEND_TRY_ASSIGN_BOOL(zv: anytype, bval: anytype) @TypeOf(_ZEND_TRY_ASSIGN_BOOL(zv, bval, @as(c_int, 0))) {
    _ = &zv;
    _ = &bval;
    return _ZEND_TRY_ASSIGN_BOOL(zv, bval, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_BOOL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1183:9
pub const _ZEND_TRY_ASSIGN_LONG = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1188:9
pub inline fn ZEND_TRY_ASSIGN_LONG(zv: anytype, lval: anytype) @TypeOf(_ZEND_TRY_ASSIGN_LONG(zv, lval, @as(c_int, 0))) {
    _ = &zv;
    _ = &lval;
    return _ZEND_TRY_ASSIGN_LONG(zv, lval, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_LONG = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1205:9
pub const _ZEND_TRY_ASSIGN_DOUBLE = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1210:9
pub inline fn ZEND_TRY_ASSIGN_DOUBLE(zv: anytype, dval: anytype) @TypeOf(_ZEND_TRY_ASSIGN_DOUBLE(zv, dval, @as(c_int, 0))) {
    _ = &zv;
    _ = &dval;
    return _ZEND_TRY_ASSIGN_DOUBLE(zv, dval, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_DOUBLE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1227:9
pub const _ZEND_TRY_ASSIGN_EMPTY_STRING = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1232:9
pub inline fn ZEND_TRY_ASSIGN_EMPTY_STRING(zv: anytype) @TypeOf(_ZEND_TRY_ASSIGN_EMPTY_STRING(zv, @as(c_int, 0))) {
    _ = &zv;
    return _ZEND_TRY_ASSIGN_EMPTY_STRING(zv, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_EMPTY_STRING = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1249:9
pub const _ZEND_TRY_ASSIGN_STR = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1254:9
pub inline fn ZEND_TRY_ASSIGN_STR(zv: anytype, str: anytype) @TypeOf(_ZEND_TRY_ASSIGN_STR(zv, str, @as(c_int, 0))) {
    _ = &zv;
    _ = &str;
    return _ZEND_TRY_ASSIGN_STR(zv, str, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_STR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1271:9
pub const _ZEND_TRY_ASSIGN_NEW_STR = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1276:9
pub inline fn ZEND_TRY_ASSIGN_NEW_STR(zv: anytype, str: anytype) @TypeOf(_ZEND_TRY_ASSIGN_NEW_STR(zv, str, @as(c_int, 0))) {
    _ = &zv;
    _ = &str;
    return _ZEND_TRY_ASSIGN_NEW_STR(zv, str, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_NEW_STR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1293:9
pub const _ZEND_TRY_ASSIGN_STRING = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1298:9
pub inline fn ZEND_TRY_ASSIGN_STRING(zv: anytype, string: anytype) @TypeOf(_ZEND_TRY_ASSIGN_STRING(zv, string, @as(c_int, 0))) {
    _ = &zv;
    _ = &string;
    return _ZEND_TRY_ASSIGN_STRING(zv, string, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_STRING = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1315:9
pub const _ZEND_TRY_ASSIGN_STRINGL = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1320:9
pub inline fn ZEND_TRY_ASSIGN_STRINGL(zv: anytype, string: anytype, len: anytype) @TypeOf(_ZEND_TRY_ASSIGN_STRINGL(zv, string, len, @as(c_int, 0))) {
    _ = &zv;
    _ = &string;
    _ = &len;
    return _ZEND_TRY_ASSIGN_STRINGL(zv, string, len, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_STRINGL = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1337:9
pub const _ZEND_TRY_ASSIGN_ARR = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1342:9
pub inline fn ZEND_TRY_ASSIGN_ARR(zv: anytype, arr: anytype) @TypeOf(_ZEND_TRY_ASSIGN_ARR(zv, arr, @as(c_int, 0))) {
    _ = &zv;
    _ = &arr;
    return _ZEND_TRY_ASSIGN_ARR(zv, arr, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_ARR = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1359:9
pub const _ZEND_TRY_ASSIGN_RES = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1364:9
pub inline fn ZEND_TRY_ASSIGN_RES(zv: anytype, res: anytype) @TypeOf(_ZEND_TRY_ASSIGN_RES(zv, res, @as(c_int, 0))) {
    _ = &zv;
    _ = &res;
    return _ZEND_TRY_ASSIGN_RES(zv, res, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_RES = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1381:9
pub const _ZEND_TRY_ASSIGN_TMP = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1386:9
pub inline fn ZEND_TRY_ASSIGN_TMP(zv: anytype, other_zv: anytype) @TypeOf(_ZEND_TRY_ASSIGN_TMP(zv, other_zv, @as(c_int, 0))) {
    _ = &zv;
    _ = &other_zv;
    return _ZEND_TRY_ASSIGN_TMP(zv, other_zv, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_TMP = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1403:9
pub const _ZEND_TRY_ASSIGN_VALUE = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1408:9
pub inline fn ZEND_TRY_ASSIGN_VALUE(zv: anytype, other_zv: anytype) @TypeOf(_ZEND_TRY_ASSIGN_VALUE(zv, other_zv, @as(c_int, 0))) {
    _ = &zv;
    _ = &other_zv;
    return _ZEND_TRY_ASSIGN_VALUE(zv, other_zv, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_VALUE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1425:9
pub const ZEND_TRY_ASSIGN_COPY = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1430:9
pub const ZEND_TRY_ASSIGN_REF_COPY = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1435:9
pub const _ZEND_TRY_ASSIGN_VALUE_EX = @compileError("unable to translate macro: undefined identifier `_zv`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1440:9
pub inline fn ZEND_TRY_ASSIGN_VALUE_EX(zv: anytype, other_zv: anytype, strict: anytype) @TypeOf(_ZEND_TRY_ASSIGN_VALUE_EX(zv, other_zv, strict, @as(c_int, 0))) {
    _ = &zv;
    _ = &other_zv;
    _ = &strict;
    return _ZEND_TRY_ASSIGN_VALUE_EX(zv, other_zv, strict, @as(c_int, 0));
}
pub const ZEND_TRY_ASSIGN_REF_VALUE_EX = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1457:9
pub const ZEND_TRY_ASSIGN_COPY_EX = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1462:9
pub const ZEND_TRY_ASSIGN_REF_COPY_EX = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1467:9
pub const FAST_ZPP = @as(c_int, 1);
pub inline fn Z_EXPECTED_TYPES(@"_": anytype) @TypeOf(@"_"(Z_EXPECTED_LONG, "of type int") ++ @"_"(Z_EXPECTED_LONG_OR_NULL, "of type ?int") ++ @"_"(Z_EXPECTED_BOOL, "of type bool") ++ @"_"(Z_EXPECTED_BOOL_OR_NULL, "of type ?bool") ++ @"_"(Z_EXPECTED_STRING, "of type string") ++ @"_"(Z_EXPECTED_STRING_OR_NULL, "of type ?string") ++ @"_"(Z_EXPECTED_ARRAY, "of type array") ++ @"_"(Z_EXPECTED_ARRAY_OR_NULL, "of type ?array") ++ @"_"(Z_EXPECTED_ARRAY_OR_LONG, "of type array|int") ++ @"_"(Z_EXPECTED_ARRAY_OR_LONG_OR_NULL, "of type array|int|null") ++ @"_"(Z_EXPECTED_ITERABLE, "of type Traversable|array") ++ @"_"(Z_EXPECTED_ITERABLE_OR_NULL, "of type Traversable|array|null") ++ @"_"(Z_EXPECTED_FUNC, "a valid callback") ++ @"_"(Z_EXPECTED_FUNC_OR_NULL, "a valid callback or null") ++ @"_"(Z_EXPECTED_RESOURCE, "of type resource") ++ @"_"(Z_EXPECTED_RESOURCE_OR_NULL, "of type resource or null") ++ @"_"(Z_EXPECTED_PATH, "of type string") ++ @"_"(Z_EXPECTED_PATH_OR_NULL, "of type ?string") ++ @"_"(Z_EXPECTED_OBJECT, "of type object") ++ @"_"(Z_EXPECTED_OBJECT_OR_NULL, "of type ?object") ++ @"_"(Z_EXPECTED_DOUBLE, "of type float") ++ @"_"(Z_EXPECTED_DOUBLE_OR_NULL, "of type ?float") ++ @"_"(Z_EXPECTED_NUMBER, "of type int|float") ++ @"_"(Z_EXPECTED_NUMBER_OR_NULL, "of type int|float|null") ++ @"_"(Z_EXPECTED_NUMBER_OR_STRING, "of type string|int|float") ++ @"_"(Z_EXPECTED_NUMBER_OR_STRING_OR_NULL, "of type string|int|float|null") ++ @"_"(Z_EXPECTED_ARRAY_OR_STRING, "of type array|string") ++ @"_"(Z_EXPECTED_ARRAY_OR_STRING_OR_NULL, "of type array|string|null") ++ @"_"(Z_EXPECTED_STRING_OR_LONG, "of type string|int") ++ @"_"(Z_EXPECTED_STRING_OR_LONG_OR_NULL, "of type string|int|null") ++ @"_"(Z_EXPECTED_OBJECT_OR_CLASS_NAME, "an object or a valid class name") ++ @"_"(Z_EXPECTED_OBJECT_OR_CLASS_NAME_OR_NULL, "an object, a valid class name, or null") ++ @"_"(Z_EXPECTED_OBJECT_OR_STRING, "of type object|string") ++ @"_"(Z_EXPECTED_OBJECT_OR_STRING_OR_NULL, "of type object|string|null")) {
    _ = &@"_";
    return @"_"(Z_EXPECTED_LONG, "of type int") ++ @"_"(Z_EXPECTED_LONG_OR_NULL, "of type ?int") ++ @"_"(Z_EXPECTED_BOOL, "of type bool") ++ @"_"(Z_EXPECTED_BOOL_OR_NULL, "of type ?bool") ++ @"_"(Z_EXPECTED_STRING, "of type string") ++ @"_"(Z_EXPECTED_STRING_OR_NULL, "of type ?string") ++ @"_"(Z_EXPECTED_ARRAY, "of type array") ++ @"_"(Z_EXPECTED_ARRAY_OR_NULL, "of type ?array") ++ @"_"(Z_EXPECTED_ARRAY_OR_LONG, "of type array|int") ++ @"_"(Z_EXPECTED_ARRAY_OR_LONG_OR_NULL, "of type array|int|null") ++ @"_"(Z_EXPECTED_ITERABLE, "of type Traversable|array") ++ @"_"(Z_EXPECTED_ITERABLE_OR_NULL, "of type Traversable|array|null") ++ @"_"(Z_EXPECTED_FUNC, "a valid callback") ++ @"_"(Z_EXPECTED_FUNC_OR_NULL, "a valid callback or null") ++ @"_"(Z_EXPECTED_RESOURCE, "of type resource") ++ @"_"(Z_EXPECTED_RESOURCE_OR_NULL, "of type resource or null") ++ @"_"(Z_EXPECTED_PATH, "of type string") ++ @"_"(Z_EXPECTED_PATH_OR_NULL, "of type ?string") ++ @"_"(Z_EXPECTED_OBJECT, "of type object") ++ @"_"(Z_EXPECTED_OBJECT_OR_NULL, "of type ?object") ++ @"_"(Z_EXPECTED_DOUBLE, "of type float") ++ @"_"(Z_EXPECTED_DOUBLE_OR_NULL, "of type ?float") ++ @"_"(Z_EXPECTED_NUMBER, "of type int|float") ++ @"_"(Z_EXPECTED_NUMBER_OR_NULL, "of type int|float|null") ++ @"_"(Z_EXPECTED_NUMBER_OR_STRING, "of type string|int|float") ++ @"_"(Z_EXPECTED_NUMBER_OR_STRING_OR_NULL, "of type string|int|float|null") ++ @"_"(Z_EXPECTED_ARRAY_OR_STRING, "of type array|string") ++ @"_"(Z_EXPECTED_ARRAY_OR_STRING_OR_NULL, "of type array|string|null") ++ @"_"(Z_EXPECTED_STRING_OR_LONG, "of type string|int") ++ @"_"(Z_EXPECTED_STRING_OR_LONG_OR_NULL, "of type string|int|null") ++ @"_"(Z_EXPECTED_OBJECT_OR_CLASS_NAME, "an object or a valid class name") ++ @"_"(Z_EXPECTED_OBJECT_OR_CLASS_NAME_OR_NULL, "an object, a valid class name, or null") ++ @"_"(Z_EXPECTED_OBJECT_OR_STRING, "of type object|string") ++ @"_"(Z_EXPECTED_OBJECT_OR_STRING_OR_NULL, "of type object|string|null");
}
pub const Z_EXPECTED_TYPE = "";
pub const Z_EXPECTED_TYPE_ENUM = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1546:9
pub const Z_EXPECTED_TYPE_STR = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1547:9
pub const ZPP_ERROR_OK = @as(c_int, 0);
pub const ZPP_ERROR_FAILURE = @as(c_int, 1);
pub const ZPP_ERROR_WRONG_CALLBACK = @as(c_int, 2);
pub const ZPP_ERROR_WRONG_CLASS = @as(c_int, 3);
pub const ZPP_ERROR_WRONG_CLASS_OR_NULL = @as(c_int, 4);
pub const ZPP_ERROR_WRONG_CLASS_OR_STRING = @as(c_int, 5);
pub const ZPP_ERROR_WRONG_CLASS_OR_STRING_OR_NULL = @as(c_int, 6);
pub const ZPP_ERROR_WRONG_CLASS_OR_LONG = @as(c_int, 7);
pub const ZPP_ERROR_WRONG_CLASS_OR_LONG_OR_NULL = @as(c_int, 8);
pub const ZPP_ERROR_WRONG_ARG = @as(c_int, 9);
pub const ZPP_ERROR_WRONG_COUNT = @as(c_int, 10);
pub const ZPP_ERROR_UNEXPECTED_EXTRA_NAMED = @as(c_int, 11);
pub const ZPP_ERROR_WRONG_CALLBACK_OR_NULL = @as(c_int, 12);
pub const ZEND_PARSE_PARAMETERS_START_EX = @compileError("unable to translate macro: undefined identifier `_flags`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1589:9
pub inline fn ZEND_PARSE_PARAMETERS_START(min_num_args: anytype, max_num_args: anytype) @TypeOf(ZEND_PARSE_PARAMETERS_START_EX(@as(c_int, 0), min_num_args, max_num_args)) {
    _ = &min_num_args;
    _ = &max_num_args;
    return ZEND_PARSE_PARAMETERS_START_EX(@as(c_int, 0), min_num_args, max_num_args);
}
pub const ZEND_PARSE_PARAMETERS_NONE = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1623:9
pub const ZEND_PARSE_PARAMETERS_END_EX = @compileError("unable to translate macro: undefined identifier `_i`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1630:9
pub const ZEND_PARSE_PARAMETERS_END = @compileError("unable to translate C expr: unexpected token 'return'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1641:9
pub const Z_PARAM_PROLOGUE = @compileError("unable to translate macro: undefined identifier `_i`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1644:9
pub const Z_PARAM_GET_PREV_ZVAL = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1663:9
pub const Z_PARAM_OPTIONAL = @compileError("unable to translate macro: undefined identifier `_optional`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1667:9
pub const Z_PARAM_ARRAY_EX2 = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1671:9
pub inline fn Z_PARAM_ARRAY_EX(dest: anytype, check_null: anytype, separate: anytype) @TypeOf(Z_PARAM_ARRAY_EX2(dest, check_null, separate, separate)) {
    _ = &dest;
    _ = &check_null;
    _ = &separate;
    return Z_PARAM_ARRAY_EX2(dest, check_null, separate, separate);
}
pub inline fn Z_PARAM_ARRAY(dest: anytype) @TypeOf(Z_PARAM_ARRAY_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_ARRAY_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_ARRAY_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_ARRAY_EX(dest, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_ARRAY_EX(dest, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_ARRAY_OR_OBJECT_EX2 = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1689:9
pub inline fn Z_PARAM_ARRAY_OR_OBJECT_EX(dest: anytype, check_null: anytype, separate: anytype) @TypeOf(Z_PARAM_ARRAY_OR_OBJECT_EX2(dest, check_null, separate, separate)) {
    _ = &dest;
    _ = &check_null;
    _ = &separate;
    return Z_PARAM_ARRAY_OR_OBJECT_EX2(dest, check_null, separate, separate);
}
pub inline fn Z_PARAM_ARRAY_OR_OBJECT(dest: anytype) @TypeOf(Z_PARAM_ARRAY_OR_OBJECT_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_ARRAY_OR_OBJECT_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub const Z_PARAM_ITERABLE_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1703:9
pub inline fn Z_PARAM_ITERABLE(dest: anytype) @TypeOf(Z_PARAM_ITERABLE_EX(dest, @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_ITERABLE_EX(dest, @as(c_int, 0));
}
pub inline fn Z_PARAM_ITERABLE_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_ITERABLE_EX(dest, @as(c_int, 1))) {
    _ = &dest;
    return Z_PARAM_ITERABLE_EX(dest, @as(c_int, 1));
}
pub const Z_PARAM_BOOL_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1718:9
pub const Z_PARAM_BOOL = @compileError("unable to translate macro: undefined identifier `_dummy`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1726:9
pub inline fn Z_PARAM_BOOL_OR_NULL(dest: anytype, is_null: anytype) @TypeOf(Z_PARAM_BOOL_EX(dest, is_null, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    _ = &is_null;
    return Z_PARAM_BOOL_EX(dest, is_null, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_CLASS_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1733:9
pub inline fn Z_PARAM_CLASS(dest: anytype) @TypeOf(Z_PARAM_CLASS_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_CLASS_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_CLASS_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_CLASS_EX(dest, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_CLASS_EX(dest, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_OBJ_OR_CLASS_NAME_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1746:9
pub const Z_PARAM_OBJ_OR_CLASS_NAME = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1754:9
pub const Z_PARAM_OBJ_OR_CLASS_NAME_OR_NULL = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1757:9
pub const Z_PARAM_OBJ_OR_STR_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1760:9
pub const Z_PARAM_OBJ_OR_STR = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1768:9
pub const Z_PARAM_OBJ_OR_STR_OR_NULL = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1771:9
pub const Z_PARAM_OBJ_OF_CLASS_OR_STR_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1774:9
pub const Z_PARAM_OBJ_OF_CLASS_OR_STR = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1788:9
pub const Z_PARAM_OBJ_OF_CLASS_OR_STR_OR_NULL = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1791:9
pub const Z_PARAM_DOUBLE_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1795:9
pub const Z_PARAM_DOUBLE = @compileError("unable to translate macro: undefined identifier `_dummy`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1803:9
pub inline fn Z_PARAM_DOUBLE_OR_NULL(dest: anytype, is_null: anytype) @TypeOf(Z_PARAM_DOUBLE_EX(dest, is_null, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    _ = &is_null;
    return Z_PARAM_DOUBLE_EX(dest, is_null, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_FUNC_EX2 = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1810:9
pub inline fn Z_PARAM_FUNC_EX(dest_fci: anytype, dest_fcc: anytype, check_null: anytype, deref: anytype) @TypeOf(Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, check_null, deref, @"true")) {
    _ = &dest_fci;
    _ = &dest_fcc;
    _ = &check_null;
    _ = &deref;
    return Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, check_null, deref, @"true");
}
pub inline fn Z_PARAM_FUNC(dest_fci: anytype, dest_fcc: anytype) @TypeOf(Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 0), @as(c_int, 0), @"true")) {
    _ = &dest_fci;
    _ = &dest_fcc;
    return Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 0), @as(c_int, 0), @"true");
}
pub inline fn Z_PARAM_FUNC_NO_TRAMPOLINE_FREE(dest_fci: anytype, dest_fcc: anytype) @TypeOf(Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 0), @as(c_int, 0), @"false")) {
    _ = &dest_fci;
    _ = &dest_fcc;
    return Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 0), @as(c_int, 0), @"false");
}
pub inline fn Z_PARAM_FUNC_OR_NULL(dest_fci: anytype, dest_fcc: anytype) @TypeOf(Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 1), @as(c_int, 0), @"true")) {
    _ = &dest_fci;
    _ = &dest_fcc;
    return Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 1), @as(c_int, 0), @"true");
}
pub inline fn Z_PARAM_FUNC_NO_TRAMPOLINE_FREE_OR_NULL(dest_fci: anytype, dest_fcc: anytype) @TypeOf(Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 1), @as(c_int, 0), @"false")) {
    _ = &dest_fci;
    _ = &dest_fcc;
    return Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 1), @as(c_int, 0), @"false");
}
pub inline fn Z_PARAM_FUNC_OR_NULL_WITH_ZVAL(dest_fci: anytype, dest_fcc: anytype, dest_zp: anytype) @TypeOf(Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 1), @as(c_int, 0), @"true") ++ Z_PARAM_GET_PREV_ZVAL(dest_zp)) {
    _ = &dest_fci;
    _ = &dest_fcc;
    _ = &dest_zp;
    return Z_PARAM_FUNC_EX2(dest_fci, dest_fcc, @as(c_int, 1), @as(c_int, 0), @"true") ++ Z_PARAM_GET_PREV_ZVAL(dest_zp);
}
pub const Z_PARAM_ARRAY_HT_EX2 = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1841:9
pub inline fn Z_PARAM_ARRAY_HT_EX(dest: anytype, check_null: anytype, separate: anytype) @TypeOf(Z_PARAM_ARRAY_HT_EX2(dest, check_null, separate, separate)) {
    _ = &dest;
    _ = &check_null;
    _ = &separate;
    return Z_PARAM_ARRAY_HT_EX2(dest, check_null, separate, separate);
}
pub inline fn Z_PARAM_ARRAY_HT(dest: anytype) @TypeOf(Z_PARAM_ARRAY_HT_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_ARRAY_HT_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_ARRAY_HT_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_ARRAY_HT_EX(dest, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_ARRAY_HT_EX(dest, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_ARRAY_HT_OR_LONG_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1858:9
pub const Z_PARAM_ARRAY_HT_OR_LONG = @compileError("unable to translate macro: undefined identifier `_dummy`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1866:9
pub inline fn Z_PARAM_ARRAY_HT_OR_LONG_OR_NULL(dest_ht: anytype, dest_long: anytype, is_null: anytype) @TypeOf(Z_PARAM_ARRAY_HT_OR_LONG_EX(dest_ht, dest_long, is_null, @as(c_int, 1))) {
    _ = &dest_ht;
    _ = &dest_long;
    _ = &is_null;
    return Z_PARAM_ARRAY_HT_OR_LONG_EX(dest_ht, dest_long, is_null, @as(c_int, 1));
}
pub const Z_PARAM_ARRAY_OR_OBJECT_HT_EX2 = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1873:9
pub inline fn Z_PARAM_ARRAY_OR_OBJECT_HT_EX(dest: anytype, check_null: anytype, separate: anytype) @TypeOf(Z_PARAM_ARRAY_OR_OBJECT_HT_EX2(dest, check_null, separate, separate)) {
    _ = &dest;
    _ = &check_null;
    _ = &separate;
    return Z_PARAM_ARRAY_OR_OBJECT_HT_EX2(dest, check_null, separate, separate);
}
pub inline fn Z_PARAM_ARRAY_OR_OBJECT_HT(dest: anytype) @TypeOf(Z_PARAM_ARRAY_OR_OBJECT_HT_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_ARRAY_OR_OBJECT_HT_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub const Z_PARAM_LONG_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1888:9
pub const Z_PARAM_LONG = @compileError("unable to translate macro: undefined identifier `_dummy`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1896:9
pub inline fn Z_PARAM_LONG_OR_NULL(dest: anytype, is_null: anytype) @TypeOf(Z_PARAM_LONG_EX(dest, is_null, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    _ = &is_null;
    return Z_PARAM_LONG_EX(dest, is_null, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_NUMBER_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1903:9
pub inline fn Z_PARAM_NUMBER_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_NUMBER_EX(dest, @as(c_int, 1))) {
    _ = &dest;
    return Z_PARAM_NUMBER_EX(dest, @as(c_int, 1));
}
pub inline fn Z_PARAM_NUMBER(dest: anytype) @TypeOf(Z_PARAM_NUMBER_EX(dest, @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_NUMBER_EX(dest, @as(c_int, 0));
}
pub const Z_PARAM_NUMBER_OR_STR_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1917:9
pub inline fn Z_PARAM_NUMBER_OR_STR(dest: anytype) @TypeOf(Z_PARAM_NUMBER_OR_STR_EX(dest, @"false")) {
    _ = &dest;
    return Z_PARAM_NUMBER_OR_STR_EX(dest, @"false");
}
pub inline fn Z_PARAM_NUMBER_OR_STR_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_NUMBER_OR_STR_EX(dest, @"true")) {
    _ = &dest;
    return Z_PARAM_NUMBER_OR_STR_EX(dest, @"true");
}
pub const Z_PARAM_OBJECT_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1932:9
pub inline fn Z_PARAM_OBJECT(dest: anytype) @TypeOf(Z_PARAM_OBJECT_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_OBJECT_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_OBJECT_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_OBJECT_EX(dest, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_OBJECT_EX(dest, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_OBJ_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1947:9
pub inline fn Z_PARAM_OBJ(dest: anytype) @TypeOf(Z_PARAM_OBJ_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_OBJ_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_OBJ_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_OBJ_EX(dest, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_OBJ_EX(dest, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_OBJECT_OF_CLASS_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1962:9
pub inline fn Z_PARAM_OBJECT_OF_CLASS(dest: anytype, _ce: anytype) @TypeOf(Z_PARAM_OBJECT_OF_CLASS_EX(dest, _ce, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    _ = &_ce;
    return Z_PARAM_OBJECT_OF_CLASS_EX(dest, _ce, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_OBJECT_OF_CLASS_OR_NULL(dest: anytype, _ce: anytype) @TypeOf(Z_PARAM_OBJECT_OF_CLASS_EX(dest, _ce, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    _ = &_ce;
    return Z_PARAM_OBJECT_OF_CLASS_EX(dest, _ce, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_OBJ_OF_CLASS_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:1983:9
pub inline fn Z_PARAM_OBJ_OF_CLASS(dest: anytype, _ce: anytype) @TypeOf(Z_PARAM_OBJ_OF_CLASS_EX(dest, _ce, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    _ = &_ce;
    return Z_PARAM_OBJ_OF_CLASS_EX(dest, _ce, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_OBJ_OF_CLASS_OR_NULL(dest: anytype, _ce: anytype) @TypeOf(Z_PARAM_OBJ_OF_CLASS_EX(dest, _ce, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    _ = &_ce;
    return Z_PARAM_OBJ_OF_CLASS_EX(dest, _ce, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_OBJ_OF_CLASS_OR_LONG_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2003:9
pub const Z_PARAM_OBJ_OF_CLASS_OR_LONG = @compileError("unable to translate macro: undefined identifier `_dummy`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2011:9
pub inline fn Z_PARAM_OBJ_OF_CLASS_OR_LONG_OR_NULL(dest_obj: anytype, _ce: anytype, dest_long: anytype, is_null: anytype) @TypeOf(Z_PARAM_OBJ_OF_CLASS_OR_LONG_EX(dest_obj, _ce, dest_long, is_null, @as(c_int, 1))) {
    _ = &dest_obj;
    _ = &_ce;
    _ = &dest_long;
    _ = &is_null;
    return Z_PARAM_OBJ_OF_CLASS_OR_LONG_EX(dest_obj, _ce, dest_long, is_null, @as(c_int, 1));
}
pub const Z_PARAM_PATH_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2018:9
pub inline fn Z_PARAM_PATH(dest: anytype, dest_len: anytype) @TypeOf(Z_PARAM_PATH_EX(dest, dest_len, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    _ = &dest_len;
    return Z_PARAM_PATH_EX(dest, dest_len, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_PATH_OR_NULL(dest: anytype, dest_len: anytype) @TypeOf(Z_PARAM_PATH_EX(dest, dest_len, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    _ = &dest_len;
    return Z_PARAM_PATH_EX(dest, dest_len, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_PATH_STR_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2033:9
pub inline fn Z_PARAM_PATH_STR(dest: anytype) @TypeOf(Z_PARAM_PATH_STR_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_PATH_STR_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_PATH_STR_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_PATH_STR_EX(dest, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_PATH_STR_EX(dest, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_RESOURCE_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2048:9
pub inline fn Z_PARAM_RESOURCE(dest: anytype) @TypeOf(Z_PARAM_RESOURCE_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_RESOURCE_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_RESOURCE_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_RESOURCE_EX(dest, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_RESOURCE_EX(dest, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_STRING_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2063:9
pub inline fn Z_PARAM_STRING(dest: anytype, dest_len: anytype) @TypeOf(Z_PARAM_STRING_EX(dest, dest_len, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    _ = &dest_len;
    return Z_PARAM_STRING_EX(dest, dest_len, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_STRING_OR_NULL(dest: anytype, dest_len: anytype) @TypeOf(Z_PARAM_STRING_EX(dest, dest_len, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    _ = &dest_len;
    return Z_PARAM_STRING_EX(dest, dest_len, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_STR_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2078:9
pub inline fn Z_PARAM_STR(dest: anytype) @TypeOf(Z_PARAM_STR_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_STR_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_STR_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_STR_EX(dest, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_STR_EX(dest, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_ZVAL_EX2 = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2093:9
pub inline fn Z_PARAM_ZVAL_EX(dest: anytype, check_null: anytype, separate: anytype) @TypeOf(Z_PARAM_ZVAL_EX2(dest, check_null, separate, separate)) {
    _ = &dest;
    _ = &check_null;
    _ = &separate;
    return Z_PARAM_ZVAL_EX2(dest, check_null, separate, separate);
}
pub inline fn Z_PARAM_ZVAL(dest: anytype) @TypeOf(Z_PARAM_ZVAL_EX(dest, @as(c_int, 0), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_ZVAL_EX(dest, @as(c_int, 0), @as(c_int, 0));
}
pub inline fn Z_PARAM_ZVAL_OR_NULL(dest: anytype) @TypeOf(Z_PARAM_ZVAL_EX(dest, @as(c_int, 1), @as(c_int, 0))) {
    _ = &dest;
    return Z_PARAM_ZVAL_EX(dest, @as(c_int, 1), @as(c_int, 0));
}
pub const Z_PARAM_VARIADIC_EX = @compileError("unable to translate macro: undefined identifier `_num_varargs`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2107:9
pub inline fn Z_PARAM_VARIADIC(spec: anytype, dest: anytype, dest_num: anytype) @TypeOf(Z_PARAM_VARIADIC_EX(spec, dest, dest_num, @as(c_int, 0))) {
    _ = &spec;
    _ = &dest;
    _ = &dest_num;
    return Z_PARAM_VARIADIC_EX(spec, dest, dest_num, @as(c_int, 0));
}
pub const Z_PARAM_VARIADIC_WITH_NAMED = @compileError("unable to translate macro: undefined identifier `_num_varargs`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2127:9
pub const Z_PARAM_ARRAY_HT_OR_STR_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2143:9
pub const Z_PARAM_ARRAY_HT_OR_STR = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2151:9
pub const Z_PARAM_ARRAY_HT_OR_STR_OR_NULL = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2154:9
pub const Z_PARAM_STR_OR_LONG_EX = @compileError("unable to translate macro: undefined identifier `_arg`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2157:9
pub const Z_PARAM_STR_OR_LONG = @compileError("unable to translate macro: undefined identifier `_dummy`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2165:9
pub const Z_PARAM_STR_OR_LONG_OR_NULL = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_API.h:2168:9
pub const php_sprintf = sprintf;
pub const PHP_OS_FAMILY = "Darwin";
pub const PHP_DEBUG = ZEND_DEBUG;
pub const PHPAPI = @compileError("unable to translate macro: undefined identifier `visibility`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php.h:69:11
pub const PHP_DIR_SEPARATOR = '/';
pub const PHP_EOL = "\n";
pub const NDEBUG = "";
pub const CONFIGURE_COMMAND = " './configure'  '--prefix=/opt/homebrew/Cellar/php/8.4.10' '--localstatedir=/opt/homebrew/var' '--sysconfdir=/opt/homebrew/etc/php/8.4' '--with-config-file-path=/opt/homebrew/etc/php/8.4' '--with-config-file-scan-dir=/opt/homebrew/etc/php/8.4/conf.d' '--with-pear=/opt/homebrew/Cellar/php/8.4.10/share/php/pear' '--enable-bcmath' '--enable-calendar' '--enable-dba' '--enable-exif' '--enable-ftp' '--enable-fpm' '--enable-gd' '--enable-intl' '--enable-mbregex' '--enable-mbstring' '--enable-mysqlnd' '--enable-pcntl' '--enable-phpdbg' '--enable-phpdbg-readline' '--enable-shmop' '--enable-soap' '--enable-sockets' '--enable-sysvmsg' '--enable-sysvsem' '--enable-sysvshm' '--with-apxs2=/opt/homebrew/opt/httpd/bin/apxs' '--with-bz2=/Library/Developer/CommandLineTools/SDKs/MacOSX15.sdk/usr' '--with-curl' '--with-external-gd' '--with-external-pcre' '--with-ffi' '--with-fpm-user=_www' '--with-fpm-group=_www' '--with-gettext=/opt/homebrew/opt/gettext' '--with-gmp=/opt/homebrew/opt/gmp' '--with-iconv=/Library/Developer/CommandLineTools/SDKs/MacOSX15.sdk/usr' '--with-layout=GNU' '--with-ldap=/opt/homebrew/opt/openldap' '--with-libxml' '--with-libedit' '--with-mhash=/Library/Developer/CommandLineTools/SDKs/MacOSX15.sdk/usr' '--with-mysql-sock=/tmp/mysql.sock' '--with-mysqli=mysqlnd' '--with-ndbm=/Library/Developer/CommandLineTools/SDKs/MacOSX15.sdk/usr' '--with-openssl' '--with-password-argon2=/opt/homebrew/opt/argon2' '--with-pdo-dblib=/opt/homebrew/opt/freetds' '--with-pdo-mysql=mysqlnd' '--with-pdo-odbc=unixODBC,/opt/homebrew/opt/unixodbc' '--with-pdo-pgsql=/opt/homebrew/opt/libpq' '--with-pdo-sqlite' '--with-pgsql=/opt/homebrew/opt/libpq' '--with-pic' '--with-snmp=/opt/homebrew/opt/net-snmp' '--with-sodium' '--with-sqlite3' '--with-tidy=/opt/homebrew/opt/tidy-html5' '--with-unixODBC' '--with-xsl' '--with-zip' '--with-zlib' '--enable-dtrace' '--with-ldap-sasl' '--with-os-sdkpath=/Library/Developer/CommandLineTools/SDKs/MacOSX15.sdk' 'PKG_CONFIG_PATH=/opt/homebrew/opt/pkgconf/lib/pkgconfig:/opt/homebrew/opt/apr/lib/pkgconfig:/opt/homebrew/opt/openssl@3/lib/pkgconfig:/opt/homebrew/opt/apr-util/lib/pkgconfig:/opt/homebrew/opt/argon2/lib/pkgconfig:/opt/homebrew/opt/brotli/lib/pkgconfig:/opt/homebrew/opt/libnghttp2/lib/pkgconfig:/opt/homebrew/opt/libssh2/lib/pkgconfig:/opt/homebrew/opt/rtmpdump/lib/pkgconfig:/opt/homebrew/opt/lz4/lib/pkgconfig:/opt/homebrew/opt/xz/lib/pkgconfig:/opt/homebrew/opt/zstd/lib/pkgconfig:/opt/homebrew/opt/curl/lib/pkgconfig:/opt/homebrew/opt/unixodbc/lib/pkgconfig:/opt/homebrew/opt/libpng/lib/pkgconfig:/opt/homebrew/opt/freetype/lib/pkgconfig:/opt/homebrew/opt/fontconfig/lib/pkgconfig:/opt/homebrew/opt/jpeg-turbo/lib/pkgconfig:/opt/homebrew/opt/highway/lib/pkgconfig:/opt/homebrew/opt/imath/lib/pkgconfig:/opt/homebrew/opt/libtiff/lib/pkgconfig:/opt/homebrew/opt/little-cms2/lib/pkgconfig:/opt/homebrew/opt/libdeflate/lib/pkgconfig:/opt/homebrew/opt/openexr/lib/pkgconfig:/opt/homebrew/opt/webp/lib/pkgconfig:/opt/homebrew/opt/jpeg-xl/lib/pkgconfig:/opt/homebrew/opt/libvmaf/lib/pkgconfig:/opt/homebrew/opt/aom/lib/pkgconfig:/opt/homebrew/opt/libavif/lib/pkgconfig:/opt/homebrew/opt/gd/lib/pkgconfig:/opt/homebrew/opt/gmp/lib/pkgconfig:/opt/homebrew/opt/icu4c@77/lib/pkgconfig:/opt/homebrew/opt/krb5/lib/pkgconfig:/opt/homebrew/opt/libpq/lib/pkgconfig:/opt/homebrew/opt/libsodium/lib/pkgconfig:/opt/homebrew/opt/libzip/lib/pkgconfig:/opt/homebrew/opt/net-snmp/lib/pkgconfig:/opt/homebrew/opt/oniguruma/lib/pkgconfig:/opt/homebrew/opt/openldap/lib/pkgconfig:/opt/homebrew/opt/pcre2/lib/pkgconfig:/opt/homebrew/opt/readline/lib/pkgconfig:/opt/homebrew/opt/sqlite/lib/pkgconfig:/opt/homebrew/opt/tidy-html5/lib/pkgconfig' 'PKG_CONFIG_LIBDIR=/usr/lib/pkgconfig:/opt/homebrew/Library/Homebrew/os/mac/pkgconfig/15' 'SASL_CFLAGS=-I/Library/Developer/CommandLineTools/SDKs/MacOSX15.sdk/usr/include/sasl' 'SASL_LIBS=-lsasl2' 'PHP_BUILD_PROVIDER=Homebrew'";
pub const PHP_ODBC_CFLAGS = "-I/opt/homebrew/Cellar/unixodbc/2.3.12/include";
pub const PHP_ODBC_LFLAGS = "";
pub const PHP_ODBC_LIBS = "-L/opt/homebrew/Cellar/unixodbc/2.3.12/lib -lodbc";
pub const PHP_ODBC_TYPE = "unixODBC";
pub const PHP_PROG_SENDMAIL = "/usr/sbin/sendmail";
pub const PEAR_INSTALLDIR = "/opt/homebrew/Cellar/php/8.4.10/share/php/pear";
pub const PHP_INCLUDE_PATH = ".:/opt/homebrew/Cellar/php/8.4.10/share/php/pear";
pub const PHP_EXTENSION_DIR = "/opt/homebrew/Cellar/php/8.4.10/lib/php/20240924";
pub const PHP_PREFIX = "/opt/homebrew/Cellar/php/8.4.10";
pub const PHP_BINDIR = "/opt/homebrew/Cellar/php/8.4.10/bin";
pub const PHP_SBINDIR = "/opt/homebrew/Cellar/php/8.4.10/sbin";
pub const PHP_MANDIR = "/opt/homebrew/Cellar/php/8.4.10/share/man";
pub const PHP_LIBDIR = "/opt/homebrew/Cellar/php/8.4.10/lib/php";
pub const PHP_DATADIR = "/opt/homebrew/Cellar/php/8.4.10/share/php";
pub const PHP_SYSCONFDIR = "/opt/homebrew/etc/php/8.4";
pub const PHP_LOCALSTATEDIR = "/opt/homebrew/var";
pub const PHP_CONFIG_FILE_PATH = "/opt/homebrew/etc/php/8.4";
pub const PHP_CONFIG_FILE_SCAN_DIR = "/opt/homebrew/etc/php/8.4/conf.d";
pub const PHP_SHLIB_SUFFIX = "so";
pub const PHP_SHLIB_EXT_PREFIX = "";
pub const PHP_STRLCPY = @compileError("unable to translate macro: undefined identifier `php_str_len`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php.h:142:9
pub const explicit_bzero = php_explicit_bzero;
pub const CREATE_MUTEX = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php.h:200:9
pub const SET_MUTEX = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php.h:201:9
pub const FREE_MUTEX = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php.h:202:9
pub const _CTYPE_H_ = "";
pub const __CTYPE_H_ = "";
pub const _RUNETYPE_H_ = "";
pub const _WINT_T = "";
pub const _CACHED_RUNES = @as(c_int, 1) << @as(c_int, 8);
pub const _CRMASK = ~(_CACHED_RUNES - @as(c_int, 1));
pub const _RUNE_MAGIC_A = "RuneMagA";
pub const _CTYPE_A = @as(c_long, 0x00000100);
pub const _CTYPE_C = @as(c_long, 0x00000200);
pub const _CTYPE_D = @as(c_long, 0x00000400);
pub const _CTYPE_G = @as(c_long, 0x00000800);
pub const _CTYPE_L = @as(c_long, 0x00001000);
pub const _CTYPE_P = @as(c_long, 0x00002000);
pub const _CTYPE_S = @as(c_long, 0x00004000);
pub const _CTYPE_U = @as(c_long, 0x00008000);
pub const _CTYPE_X = @as(c_long, 0x00010000);
pub const _CTYPE_B = @as(c_long, 0x00020000);
pub const _CTYPE_R = @as(c_long, 0x00040000);
pub const _CTYPE_I = @as(c_long, 0x00080000);
pub const _CTYPE_T = @as(c_long, 0x00100000);
pub const _CTYPE_Q = @as(c_long, 0x00200000);
pub const _CTYPE_SW0 = @as(c_long, 0x20000000);
pub const _CTYPE_SW1 = @as(c_long, 0x40000000);
pub const _CTYPE_SW2 = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0x80000000, .hex);
pub const _CTYPE_SW3 = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0xc0000000, .hex);
pub const _CTYPE_SWM = @import("std").zig.c_translation.promoteIntLiteral(c_long, 0xe0000000, .hex);
pub const _CTYPE_SWS = @as(c_int, 30);
pub const __DARWIN_CTYPE_inline = __header_inline;
pub const __DARWIN_CTYPE_TOP_inline = __header_inline;
pub inline fn _tolower(c: anytype) @TypeOf(__tolower(c)) {
    _ = &c;
    return __tolower(c);
}
pub inline fn _toupper(c: anytype) @TypeOf(__toupper(c)) {
    _ = &c;
    return __toupper(c);
}
pub const _PWD_H_ = "";
pub const _PATH_PWD = "/etc";
pub const _PATH_PASSWD = "/etc/passwd";
pub const _PASSWD = "passwd";
pub const _PATH_MASTERPASSWD = "/etc/master.passwd";
pub const _PATH_MASTERPASSWD_LOCK = "/etc/ptmp";
pub const _MASTERPASSWD = "master.passwd";
pub const _PATH_MP_DB = "/etc/pwd.db";
pub const _MP_DB = "pwd.db";
pub const _PATH_SMP_DB = "/etc/spwd.db";
pub const _SMP_DB = "spwd.db";
pub const _PATH_PWD_MKDB = "/usr/sbin/pwd_mkdb";
pub const _PW_KEYBYNAME = '1';
pub const _PW_KEYBYNUM = '2';
pub const _PW_KEYBYUID = '3';
pub const _PASSWORD_EFMT1 = '_';
pub const _PASSWORD_LEN = @as(c_int, 128);
pub const _PASSWORD_NOUID = @as(c_int, 0x01);
pub const _PASSWORD_NOGID = @as(c_int, 0x02);
pub const _PASSWORD_NOCHG = @as(c_int, 0x04);
pub const _PASSWORD_NOEXP = @as(c_int, 0x08);
pub const _PASSWORD_WARNDAYS = @as(c_int, 14);
pub const _PASSWORD_CHGNOW = -@as(c_int, 1);
pub const _UUID_UUID_H = "";
pub const _UUID_STRING_T = "";
pub const UUID_DEFINE = @compileError("unable to translate macro: undefined identifier `unused`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/uuid/uuid.h:46:9
pub const _SYS_PARAM_H_ = "";
pub const BSD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 199506, .decimal);
pub const BSD4_3 = @as(c_int, 1);
pub const BSD4_4 = @as(c_int, 1);
pub const NeXTBSD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 1995064, .decimal);
pub const NeXTBSD4_0 = @as(c_int, 0);
pub const MAXCOMLEN = @as(c_int, 16);
pub const MAXINTERP = @as(c_int, 64);
pub const MAXLOGNAME = @as(c_int, 255);
pub const MAXUPRC = CHILD_MAX;
pub const NCARGS = ARG_MAX;
pub const NGROUPS = NGROUPS_MAX;
pub const NOFILE = @as(c_int, 256);
pub const NOGROUP = @import("std").zig.c_translation.promoteIntLiteral(c_int, 65535, .decimal);
pub const MAXHOSTNAMELEN = @as(c_int, 256);
pub const MAXDOMNAMELEN = @as(c_int, 256);
pub const _BSD_MACHINE_PARAM_H_ = "";
pub const _ARM_PARAM_H_ = "";
pub const _ARM__PARAM_H_ = "";
pub const __DARWIN_ALIGNBYTES = @import("std").zig.c_translation.sizeof(__darwin_size_t) - @as(c_int, 1);
pub inline fn __DARWIN_ALIGN(p: anytype) @TypeOf(@import("std").zig.c_translation.cast(__darwin_size_t, @import("std").zig.c_translation.cast(__darwin_size_t, p) + __DARWIN_ALIGNBYTES) & ~__DARWIN_ALIGNBYTES) {
    _ = &p;
    return @import("std").zig.c_translation.cast(__darwin_size_t, @import("std").zig.c_translation.cast(__darwin_size_t, p) + __DARWIN_ALIGNBYTES) & ~__DARWIN_ALIGNBYTES;
}
pub const __DARWIN_ALIGNBYTES32 = @import("std").zig.c_translation.sizeof(__uint32_t) - @as(c_int, 1);
pub inline fn __DARWIN_ALIGN32(p: anytype) @TypeOf(@import("std").zig.c_translation.cast(__darwin_size_t, @import("std").zig.c_translation.cast(__darwin_size_t, p) + __DARWIN_ALIGNBYTES32) & ~__DARWIN_ALIGNBYTES32) {
    _ = &p;
    return @import("std").zig.c_translation.cast(__darwin_size_t, @import("std").zig.c_translation.cast(__darwin_size_t, p) + __DARWIN_ALIGNBYTES32) & ~__DARWIN_ALIGNBYTES32;
}
pub const ALIGNBYTES = __DARWIN_ALIGNBYTES;
pub inline fn ALIGN(p: anytype) @TypeOf(__DARWIN_ALIGN(p)) {
    _ = &p;
    return __DARWIN_ALIGN(p);
}
pub const NBPG = @as(c_int, 4096);
pub const PGOFSET = NBPG - @as(c_int, 1);
pub const PGSHIFT = @as(c_int, 12);
pub const DEV_BSIZE = @as(c_int, 512);
pub const DEV_BSHIFT = @as(c_int, 9);
pub const BLKDEV_IOSIZE = @as(c_int, 2048);
pub const MAXPHYS = @as(c_int, 64) * @as(c_int, 1024);
pub const CLSIZE = @as(c_int, 1);
pub const CLSIZELOG2 = @as(c_int, 0);
pub const MSIZESHIFT = @as(c_int, 8);
pub const MSIZE = @as(c_int, 1) << MSIZESHIFT;
pub const MCLSHIFT = @as(c_int, 11);
pub const MCLBYTES = @as(c_int, 1) << MCLSHIFT;
pub const MBIGCLSHIFT = @as(c_int, 12);
pub const MBIGCLBYTES = @as(c_int, 1) << MBIGCLSHIFT;
pub const M16KCLSHIFT = @as(c_int, 14);
pub const M16KCLBYTES = @as(c_int, 1) << M16KCLSHIFT;
pub const MCLOFSET = MCLBYTES - @as(c_int, 1);
pub const NMBCLUSTERS = @compileError("unable to translate macro: undefined identifier `CONFIG_NMBCLUSTERS`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/arm/param.h:93:9
pub inline fn ctos(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn stoc(x: anytype) @TypeOf(x) {
    _ = &x;
    return x;
}
pub inline fn ctod(x: anytype) @TypeOf(x << (PGSHIFT - DEV_BSHIFT)) {
    _ = &x;
    return x << (PGSHIFT - DEV_BSHIFT);
}
pub inline fn dtoc(x: anytype) @TypeOf(x >> (PGSHIFT - DEV_BSHIFT)) {
    _ = &x;
    return x >> (PGSHIFT - DEV_BSHIFT);
}
pub inline fn dtob(x: anytype) @TypeOf(x << DEV_BSHIFT) {
    _ = &x;
    return x << DEV_BSHIFT;
}
pub inline fn ctob(x: anytype) @TypeOf(x << PGSHIFT) {
    _ = &x;
    return x << PGSHIFT;
}
pub inline fn btoc(x: anytype) @TypeOf((@import("std").zig.c_translation.cast(c_uint, x) + (NBPG - @as(c_int, 1))) >> PGSHIFT) {
    _ = &x;
    return (@import("std").zig.c_translation.cast(c_uint, x) + (NBPG - @as(c_int, 1))) >> PGSHIFT;
}
pub inline fn btodb(bytes: anytype, devBlockSize: anytype) @TypeOf(@import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.cast(c_uint, bytes), devBlockSize)) {
    _ = &bytes;
    _ = &devBlockSize;
    return @import("std").zig.c_translation.MacroArithmetic.div(@import("std").zig.c_translation.cast(c_uint, bytes), devBlockSize);
}
pub inline fn dbtob(db: anytype, devBlockSize: anytype) @TypeOf(@import("std").zig.c_translation.cast(c_uint, db) * devBlockSize) {
    _ = &db;
    _ = &devBlockSize;
    return @import("std").zig.c_translation.cast(c_uint, db) * devBlockSize;
}
pub inline fn bdbtofsb(bn: anytype) @TypeOf(@import("std").zig.c_translation.MacroArithmetic.div(bn, @import("std").zig.c_translation.MacroArithmetic.div(BLKDEV_IOSIZE, DEV_BSIZE))) {
    _ = &bn;
    return @import("std").zig.c_translation.MacroArithmetic.div(bn, @import("std").zig.c_translation.MacroArithmetic.div(BLKDEV_IOSIZE, DEV_BSIZE));
}
pub inline fn STATUS_WORD(rpl: anytype, ipl: anytype) @TypeOf((ipl << @as(c_int, 8)) | rpl) {
    _ = &rpl;
    _ = &ipl;
    return (ipl << @as(c_int, 8)) | rpl;
}
pub inline fn USERMODE(x: anytype) @TypeOf((x & @as(c_int, 3)) == @as(c_int, 3)) {
    _ = &x;
    return (x & @as(c_int, 3)) == @as(c_int, 3);
}
pub inline fn BASEPRI(x: anytype) @TypeOf((x & (@as(c_int, 255) << @as(c_int, 8))) == @as(c_int, 0)) {
    _ = &x;
    return (x & (@as(c_int, 255) << @as(c_int, 8))) == @as(c_int, 0);
}
pub const DELAY = @compileError("unable to translate macro: undefined identifier `N`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/arm/param.h:146:9
pub const PSWP = @as(c_int, 0);
pub const PVM = @as(c_int, 4);
pub const PINOD = @as(c_int, 8);
pub const PRIBIO = @as(c_int, 16);
pub const PVFS = @as(c_int, 20);
pub const PZERO = @as(c_int, 22);
pub const PSOCK = @as(c_int, 24);
pub const PWAIT = @as(c_int, 32);
pub const PLOCK = @as(c_int, 36);
pub const PPAUSE = @as(c_int, 40);
pub const PUSER = @as(c_int, 50);
pub const MAXPRI = @as(c_int, 127);
pub const PRIMASK = @as(c_int, 0x0ff);
pub const PCATCH = @as(c_int, 0x100);
pub const PTTYBLOCK = @as(c_int, 0x200);
pub const PDROP = @as(c_int, 0x400);
pub const PSPIN = @as(c_int, 0x800);
pub const NBPW = @import("std").zig.c_translation.sizeof(c_int);
pub const CMASK = @as(c_int, 0o22);
pub const NODEV = @import("std").zig.c_translation.cast(dev_t, -@as(c_int, 1));
pub const CLBYTES = CLSIZE * NBPG;
pub const CLOFSET = (CLSIZE * NBPG) - @as(c_int, 1);
pub inline fn claligned(x: anytype) @TypeOf((@import("std").zig.c_translation.cast(c_int, x) & CLOFSET) == @as(c_int, 0)) {
    _ = &x;
    return (@import("std").zig.c_translation.cast(c_int, x) & CLOFSET) == @as(c_int, 0);
}
pub const CLOFF = CLOFSET;
pub const CLSHIFT = PGSHIFT + CLSIZELOG2;
pub inline fn clbase(i: anytype) @TypeOf(i) {
    _ = &i;
    return i;
}
pub inline fn clrnd(i: anytype) @TypeOf(i) {
    _ = &i;
    return i;
}
pub const CBLOCK = @as(c_int, 64);
pub const CBQSIZE = @import("std").zig.c_translation.MacroArithmetic.div(CBLOCK, NBBY);
pub const CBSIZE = @compileError("unable to translate macro: undefined identifier `cblock`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/param.h:167:9
pub const CROUND = CBLOCK - @as(c_int, 1);
pub const MAXBSIZE = @as(c_int, 256) * @as(c_int, 4096);
pub const MAXPHYSIO = MAXPHYS;
pub const MAXFRAG = @as(c_int, 8);
pub const MAXPHYSIO_WIRED = (@as(c_int, 16) * @as(c_int, 1024)) * @as(c_int, 1024);
pub const MAXPATHLEN = PATH_MAX;
pub const MAXSYMLINKS = @as(c_int, 32);
pub const setbit = @compileError("unable to translate C expr: expected ')' instead got '|='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/param.h:200:9
pub const clrbit = @compileError("unable to translate C expr: expected ')' instead got '&='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/param.h:201:9
pub inline fn isset(a: anytype, i: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]u8, a)[@as(usize, @intCast(@import("std").zig.c_translation.MacroArithmetic.div(i, NBBY)))] & (@as(c_uint, 1) << @import("std").zig.c_translation.MacroArithmetic.rem(i, NBBY))) {
    _ = &a;
    _ = &i;
    return @import("std").zig.c_translation.cast([*c]u8, a)[@as(usize, @intCast(@import("std").zig.c_translation.MacroArithmetic.div(i, NBBY)))] & (@as(c_uint, 1) << @import("std").zig.c_translation.MacroArithmetic.rem(i, NBBY));
}
pub inline fn isclr(a: anytype, i: anytype) @TypeOf((@import("std").zig.c_translation.cast([*c]u8, a)[@as(usize, @intCast(@import("std").zig.c_translation.MacroArithmetic.div(i, NBBY)))] & (@as(c_uint, 1) << @import("std").zig.c_translation.MacroArithmetic.rem(i, NBBY))) == @as(c_int, 0)) {
    _ = &a;
    _ = &i;
    return (@import("std").zig.c_translation.cast([*c]u8, a)[@as(usize, @intCast(@import("std").zig.c_translation.MacroArithmetic.div(i, NBBY)))] & (@as(c_uint, 1) << @import("std").zig.c_translation.MacroArithmetic.rem(i, NBBY))) == @as(c_int, 0);
}
pub inline fn roundup(x: anytype, y: anytype) @TypeOf(if (@import("std").zig.c_translation.MacroArithmetic.rem(x, y) == @as(c_int, 0)) x else x + (y - @import("std").zig.c_translation.MacroArithmetic.rem(x, y))) {
    _ = &x;
    _ = &y;
    return if (@import("std").zig.c_translation.MacroArithmetic.rem(x, y) == @as(c_int, 0)) x else x + (y - @import("std").zig.c_translation.MacroArithmetic.rem(x, y));
}
pub inline fn powerof2(x: anytype) @TypeOf(((x - @as(c_int, 1)) & x) == @as(c_int, 0)) {
    _ = &x;
    return ((x - @as(c_int, 1)) & x) == @as(c_int, 0);
}
pub const FSHIFT = @as(c_int, 11);
pub const FSCALE = @as(c_int, 1) << FSHIFT;
pub const PHP_DOUBLE_MAX_LENGTH = ZEND_DOUBLE_MAX_LENGTH;
pub const PHP_GCC_VERSION = ZEND_GCC_VERSION;
pub const PHP_ATTRIBUTE_MALLOC = ZEND_ATTRIBUTE_MALLOC;
pub const PHP_ATTRIBUTE_FORMAT = ZEND_ATTRIBUTE_FORMAT;
pub const SNPRINTF_H = "";
pub const php_gcvt = zend_gcvt;
pub const slprintf = ap_php_slprintf;
pub const vslprintf = ap_php_vslprintf;
pub const SPPRINTF_H = "";
pub const spprintf = zend_spprintf;
pub const strpprintf = zend_strpprintf;
pub const vspprintf = zend_vspprintf;
pub const vstrpprintf = zend_vstrpprintf;
pub const EXEC_INPUT_BUF = @as(c_int, 4096);
pub const PHP_MIME_TYPE = "application/x-httpd-php";
pub inline fn STR_PRINT(str: anytype) @TypeOf(if (str) str else "") {
    _ = &str;
    return if (str) str else "";
}
pub inline fn php_ignore_value(x: anytype) @TypeOf(ZEND_IGNORE_VALUE(x)) {
    _ = &x;
    return ZEND_IGNORE_VALUE(x);
}
pub const php_sleep = sleep;
pub const PHP_SYSLOG_H = "";
pub const _SYS_SYSLOG_H_ = "";
pub const _PATH_LOG = "/var/run/syslog";
pub const LOG_EMERG = @as(c_int, 0);
pub const LOG_ALERT = @as(c_int, 1);
pub const LOG_CRIT = @as(c_int, 2);
pub const LOG_ERR = @as(c_int, 3);
pub const LOG_WARNING = @as(c_int, 4);
pub const LOG_NOTICE = @as(c_int, 5);
pub const LOG_INFO = @as(c_int, 6);
pub const LOG_DEBUG = @as(c_int, 7);
pub const LOG_PRIMASK = @as(c_int, 0x07);
pub inline fn LOG_PRI(p: anytype) @TypeOf(p & LOG_PRIMASK) {
    _ = &p;
    return p & LOG_PRIMASK;
}
pub inline fn LOG_MAKEPRI(fac: anytype, pri: anytype) @TypeOf(fac | pri) {
    _ = &fac;
    _ = &pri;
    return fac | pri;
}
pub const LOG_KERN = @as(c_int, 0) << @as(c_int, 3);
pub const LOG_USER = @as(c_int, 1) << @as(c_int, 3);
pub const LOG_MAIL = @as(c_int, 2) << @as(c_int, 3);
pub const LOG_DAEMON = @as(c_int, 3) << @as(c_int, 3);
pub const LOG_AUTH = @as(c_int, 4) << @as(c_int, 3);
pub const LOG_SYSLOG = @as(c_int, 5) << @as(c_int, 3);
pub const LOG_LPR = @as(c_int, 6) << @as(c_int, 3);
pub const LOG_NEWS = @as(c_int, 7) << @as(c_int, 3);
pub const LOG_UUCP = @as(c_int, 8) << @as(c_int, 3);
pub const LOG_CRON = @as(c_int, 9) << @as(c_int, 3);
pub const LOG_AUTHPRIV = @as(c_int, 10) << @as(c_int, 3);
pub const LOG_FTP = @as(c_int, 11) << @as(c_int, 3);
pub const LOG_NETINFO = @as(c_int, 12) << @as(c_int, 3);
pub const LOG_REMOTEAUTH = @as(c_int, 13) << @as(c_int, 3);
pub const LOG_INSTALL = @as(c_int, 14) << @as(c_int, 3);
pub const LOG_RAS = @as(c_int, 15) << @as(c_int, 3);
pub const LOG_LOCAL0 = @as(c_int, 16) << @as(c_int, 3);
pub const LOG_LOCAL1 = @as(c_int, 17) << @as(c_int, 3);
pub const LOG_LOCAL2 = @as(c_int, 18) << @as(c_int, 3);
pub const LOG_LOCAL3 = @as(c_int, 19) << @as(c_int, 3);
pub const LOG_LOCAL4 = @as(c_int, 20) << @as(c_int, 3);
pub const LOG_LOCAL5 = @as(c_int, 21) << @as(c_int, 3);
pub const LOG_LOCAL6 = @as(c_int, 22) << @as(c_int, 3);
pub const LOG_LOCAL7 = @as(c_int, 23) << @as(c_int, 3);
pub const LOG_LAUNCHD = @as(c_int, 24) << @as(c_int, 3);
pub const LOG_NFACILITIES = @as(c_int, 25);
pub const LOG_FACMASK = @as(c_int, 0x03f8);
pub inline fn LOG_FAC(p: anytype) @TypeOf((p & LOG_FACMASK) >> @as(c_int, 3)) {
    _ = &p;
    return (p & LOG_FACMASK) >> @as(c_int, 3);
}
pub inline fn LOG_MASK(pri: anytype) @TypeOf(@as(c_int, 1) << pri) {
    _ = &pri;
    return @as(c_int, 1) << pri;
}
pub inline fn LOG_UPTO(pri: anytype) @TypeOf((@as(c_int, 1) << (pri + @as(c_int, 1))) - @as(c_int, 1)) {
    _ = &pri;
    return (@as(c_int, 1) << (pri + @as(c_int, 1))) - @as(c_int, 1);
}
pub const LOG_PID = @as(c_int, 0x01);
pub const LOG_CONS = @as(c_int, 0x02);
pub const LOG_ODELAY = @as(c_int, 0x04);
pub const LOG_NDELAY = @as(c_int, 0x08);
pub const LOG_NOWAIT = @as(c_int, 0x10);
pub const LOG_PERROR = @as(c_int, 0x20);
pub const PHP_SYSLOG_FILTER_ALL = @as(c_int, 0);
pub const PHP_SYSLOG_FILTER_NO_CTRL = @as(c_int, 1);
pub const PHP_SYSLOG_FILTER_ASCII = @as(c_int, 2);
pub const PHP_SYSLOG_FILTER_RAW = @as(c_int, 3);
pub inline fn php_log_err(msg: anytype) @TypeOf(php_log_err_with_severity(msg, LOG_NOTICE)) {
    _ = &msg;
    return php_log_err_with_severity(msg, LOG_NOTICE);
}
pub const php_error = zend_error;
pub const error_handling_t = zend_error_handling_t;
pub const phpparse = zendparse;
pub const phprestart = @compileError("unable to translate macro: undefined identifier `zendrestart`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php.h:340:9
pub const phpin = @compileError("unable to translate macro: undefined identifier `zendin`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php.h:341:9
pub const php_memnstr = zend_memnstr;
pub const php_memnistr = zend_memnistr;
pub const PHP_FN = ZEND_FN;
pub const PHP_MN = ZEND_MN;
pub const PHP_NAMED_FUNCTION = ZEND_NAMED_FUNCTION;
pub const PHP_FUNCTION = ZEND_FUNCTION;
pub const PHP_METHOD = ZEND_METHOD;
pub const PHP_RAW_NAMED_FE = ZEND_RAW_NAMED_FE;
pub const PHP_NAMED_FE = ZEND_NAMED_FE;
pub const PHP_FE = ZEND_FE;
pub const PHP_DEP_FE = ZEND_DEP_FE;
pub const PHP_FALIAS = ZEND_FALIAS;
pub const PHP_DEP_FALIAS = ZEND_DEP_FALIAS;
pub const PHP_ME = ZEND_ME;
pub const PHP_MALIAS = ZEND_MALIAS;
pub const PHP_ABSTRACT_ME = ZEND_ABSTRACT_ME;
pub const PHP_ME_MAPPING = ZEND_ME_MAPPING;
pub const PHP_FE_END = ZEND_FE_END;
pub const PHP_MODULE_STARTUP_N = ZEND_MODULE_STARTUP_N;
pub const PHP_MODULE_SHUTDOWN_N = ZEND_MODULE_SHUTDOWN_N;
pub const PHP_MODULE_ACTIVATE_N = ZEND_MODULE_ACTIVATE_N;
pub const PHP_MODULE_DEACTIVATE_N = ZEND_MODULE_DEACTIVATE_N;
pub const PHP_MODULE_INFO_N = ZEND_MODULE_INFO_N;
pub const PHP_MODULE_STARTUP_D = ZEND_MODULE_STARTUP_D;
pub const PHP_MODULE_SHUTDOWN_D = ZEND_MODULE_SHUTDOWN_D;
pub const PHP_MODULE_ACTIVATE_D = ZEND_MODULE_ACTIVATE_D;
pub const PHP_MODULE_DEACTIVATE_D = ZEND_MODULE_DEACTIVATE_D;
pub const PHP_MODULE_INFO_D = ZEND_MODULE_INFO_D;
pub const PHP_MINIT = ZEND_MODULE_STARTUP_N;
pub const PHP_MSHUTDOWN = ZEND_MODULE_SHUTDOWN_N;
pub const PHP_RINIT = ZEND_MODULE_ACTIVATE_N;
pub const PHP_RSHUTDOWN = ZEND_MODULE_DEACTIVATE_N;
pub const PHP_MINFO = ZEND_MODULE_INFO_N;
pub const PHP_GINIT = ZEND_GINIT;
pub const PHP_GSHUTDOWN = ZEND_GSHUTDOWN;
pub const PHP_MINIT_FUNCTION = ZEND_MODULE_STARTUP_D;
pub const PHP_MSHUTDOWN_FUNCTION = ZEND_MODULE_SHUTDOWN_D;
pub const PHP_RINIT_FUNCTION = ZEND_MODULE_ACTIVATE_D;
pub const PHP_RSHUTDOWN_FUNCTION = ZEND_MODULE_DEACTIVATE_D;
pub const PHP_MINFO_FUNCTION = ZEND_MODULE_INFO_D;
pub const PHP_GINIT_FUNCTION = ZEND_GINIT_FUNCTION;
pub const PHP_GSHUTDOWN_FUNCTION = ZEND_GSHUTDOWN_FUNCTION;
pub const PHP_MODULE_GLOBALS = ZEND_MODULE_GLOBALS;
pub const PHP_OUTPUT_H = "";
pub const PHP_OUTPUT_NEWAPI = @as(c_int, 1);
pub const PHP_OUTPUT_HANDLER_WRITE = @as(c_int, 0x00);
pub const PHP_OUTPUT_HANDLER_START = @as(c_int, 0x01);
pub const PHP_OUTPUT_HANDLER_CLEAN = @as(c_int, 0x02);
pub const PHP_OUTPUT_HANDLER_FLUSH = @as(c_int, 0x04);
pub const PHP_OUTPUT_HANDLER_FINAL = @as(c_int, 0x08);
pub const PHP_OUTPUT_HANDLER_CONT = PHP_OUTPUT_HANDLER_WRITE;
pub const PHP_OUTPUT_HANDLER_END = PHP_OUTPUT_HANDLER_FINAL;
pub const PHP_OUTPUT_HANDLER_INTERNAL = @as(c_int, 0x0000);
pub const PHP_OUTPUT_HANDLER_USER = @as(c_int, 0x0001);
pub const PHP_OUTPUT_HANDLER_CLEANABLE = @as(c_int, 0x0010);
pub const PHP_OUTPUT_HANDLER_FLUSHABLE = @as(c_int, 0x0020);
pub const PHP_OUTPUT_HANDLER_REMOVABLE = @as(c_int, 0x0040);
pub const PHP_OUTPUT_HANDLER_STDFLAGS = @as(c_int, 0x0070);
pub const PHP_OUTPUT_HANDLER_STARTED = @as(c_int, 0x1000);
pub const PHP_OUTPUT_HANDLER_DISABLED = @as(c_int, 0x2000);
pub const PHP_OUTPUT_HANDLER_PROCESSED = @as(c_int, 0x4000);
pub inline fn PHP_OUTPUT_HANDLER_ABILITY_FLAGS(bitmask: anytype) @TypeOf(bitmask & ~@import("std").zig.c_translation.promoteIntLiteral(c_int, 0xf00f, .hex)) {
    _ = &bitmask;
    return bitmask & ~@import("std").zig.c_translation.promoteIntLiteral(c_int, 0xf00f, .hex);
}
pub const PHP_OUTPUT_POP_TRY = @as(c_int, 0x000);
pub const PHP_OUTPUT_POP_FORCE = @as(c_int, 0x001);
pub const PHP_OUTPUT_POP_DISCARD = @as(c_int, 0x010);
pub const PHP_OUTPUT_POP_SILENT = @as(c_int, 0x100);
pub const PHP_OUTPUT_IMPLICITFLUSH = @as(c_int, 0x01);
pub const PHP_OUTPUT_DISABLED = @as(c_int, 0x02);
pub const PHP_OUTPUT_WRITTEN = @as(c_int, 0x04);
pub const PHP_OUTPUT_SENT = @as(c_int, 0x08);
pub const PHP_OUTPUT_ACTIVE = @as(c_int, 0x10);
pub const PHP_OUTPUT_LOCKED = @as(c_int, 0x20);
pub const PHP_OUTPUT_ACTIVATED = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x100000, .hex);
pub inline fn PHP_OUTPUT_HANDLER_INITBUF_SIZE(s: anytype) @TypeOf(if (s > @as(c_int, 1)) (s + PHP_OUTPUT_HANDLER_ALIGNTO_SIZE) - @import("std").zig.c_translation.MacroArithmetic.rem(s, PHP_OUTPUT_HANDLER_ALIGNTO_SIZE) else PHP_OUTPUT_HANDLER_DEFAULT_SIZE) {
    _ = &s;
    return if (s > @as(c_int, 1)) (s + PHP_OUTPUT_HANDLER_ALIGNTO_SIZE) - @import("std").zig.c_translation.MacroArithmetic.rem(s, PHP_OUTPUT_HANDLER_ALIGNTO_SIZE) else PHP_OUTPUT_HANDLER_DEFAULT_SIZE;
}
pub const PHP_OUTPUT_HANDLER_ALIGNTO_SIZE = @as(c_int, 0x1000);
pub const PHP_OUTPUT_HANDLER_DEFAULT_SIZE = @as(c_int, 0x4000);
pub inline fn OG(v: anytype) @TypeOf(output_globals.v) {
    _ = &v;
    return output_globals.v;
}
pub inline fn PHPWRITE(str: anytype, str_len: anytype) @TypeOf(php_output_write(str, str_len)) {
    _ = &str;
    _ = &str_len;
    return php_output_write(str, str_len);
}
pub inline fn PHPWRITE_H(str: anytype, str_len: anytype) @TypeOf(php_output_write_unbuffered(str, str_len)) {
    _ = &str;
    _ = &str_len;
    return php_output_write_unbuffered(str, str_len);
}
pub const PUTC = @compileError("unable to translate C expr: unexpected token 'const'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_output.h:160:9
pub const PUTC_H = @compileError("unable to translate C expr: unexpected token 'const'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_output.h:161:9
pub const PUTS = @compileError("unable to translate macro: undefined identifier `__str`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_output.h:163:9
pub const PUTS_H = @compileError("unable to translate macro: undefined identifier `__str`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_output.h:167:9
pub const php_output_tearup = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_output.h:178:9
pub const php_output_teardown = @compileError("unable to translate C expr: unexpected token ';'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_output.h:181:9
pub const PHP_STREAMS_H = "";
pub const _SYS_TIME_H_ = "";
pub const _STRUCT_TIMEVAL64 = "";
pub const ITIMER_REAL = @as(c_int, 0);
pub const ITIMER_VIRTUAL = @as(c_int, 1);
pub const ITIMER_PROF = @as(c_int, 2);
pub const TIMEVAL_TO_TIMESPEC = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/time.h:121:9
pub const TIMESPEC_TO_TIMEVAL = @compileError("unable to translate C expr: unexpected token '{'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/time.h:125:9
pub const DST_NONE = @as(c_int, 0);
pub const DST_USA = @as(c_int, 1);
pub const DST_AUST = @as(c_int, 2);
pub const DST_WET = @as(c_int, 3);
pub const DST_MET = @as(c_int, 4);
pub const DST_EET = @as(c_int, 5);
pub const DST_CAN = @as(c_int, 6);
pub const timerclear = @compileError("unable to translate C expr: unexpected token '='");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/time.h:143:9
pub inline fn timerisset(tvp: anytype) @TypeOf((tvp.*.tv_sec != 0) or (tvp.*.tv_usec != 0)) {
    _ = &tvp;
    return (tvp.*.tv_sec != 0) or (tvp.*.tv_usec != 0);
}
pub inline fn timercmp(tvp: anytype, uvp: anytype, cmp: anytype) @TypeOf(if (tvp.*.tv_sec == uvp.*.tv_sec) tvp.*.tv_usec ++ cmp(uvp).*.tv_usec else tvp.*.tv_sec ++ cmp(uvp).*.tv_sec) {
    _ = &tvp;
    _ = &uvp;
    _ = &cmp;
    return if (tvp.*.tv_sec == uvp.*.tv_sec) tvp.*.tv_usec ++ cmp(uvp).*.tv_usec else tvp.*.tv_sec ++ cmp(uvp).*.tv_sec;
}
pub const timeradd = @compileError("unable to translate C expr: unexpected token 'do'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/time.h:149:9
pub const timersub = @compileError("unable to translate C expr: unexpected token 'do'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/time.h:158:9
pub inline fn timevalcmp(l: anytype, r: anytype, cmp: anytype) @TypeOf(timercmp(l, r, cmp)) {
    _ = &l;
    _ = &r;
    _ = &cmp;
    return timercmp(l, r, cmp);
}
pub const STREAMS_D = "";
pub const STREAMS_C = "";
pub const STREAMS_REL_C = "";
pub const STREAMS_DC = "";
pub const STREAMS_CC = "";
pub const STREAMS_REL_CC = "";
pub inline fn php_stream_alloc_rel(ops: anytype, thisptr: anytype, persistent: anytype, mode: anytype) @TypeOf(_php_stream_alloc(ops, thisptr, persistent, mode)) {
    _ = &ops;
    _ = &thisptr;
    _ = &persistent;
    _ = &mode;
    return _php_stream_alloc(ops, thisptr, persistent, mode);
}
pub const php_stream_copy_to_mem_rel = @compileError("unable to translate macro: undefined identifier `buf`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_streams.h:62:9
pub inline fn php_stream_fopen_rel(filename: anytype, mode: anytype, opened: anytype, options: anytype) @TypeOf(_php_stream_fopen(filename, mode, opened, options)) {
    _ = &filename;
    _ = &mode;
    _ = &opened;
    _ = &options;
    return _php_stream_fopen(filename, mode, opened, options);
}
pub inline fn php_stream_fopen_with_path_rel(filename: anytype, mode: anytype, path: anytype, opened: anytype, options: anytype) @TypeOf(_php_stream_fopen_with_path(filename, mode, path, opened, options)) {
    _ = &filename;
    _ = &mode;
    _ = &path;
    _ = &opened;
    _ = &options;
    return _php_stream_fopen_with_path(filename, mode, path, opened, options);
}
pub inline fn php_stream_fopen_from_fd_rel(fd: anytype, mode: anytype, persistent_id: anytype, zero_position: anytype) @TypeOf(_php_stream_fopen_from_fd(fd, mode, persistent_id, zero_position)) {
    _ = &fd;
    _ = &mode;
    _ = &persistent_id;
    _ = &zero_position;
    return _php_stream_fopen_from_fd(fd, mode, persistent_id, zero_position);
}
pub inline fn php_stream_fopen_from_file_rel(file: anytype, mode: anytype) @TypeOf(_php_stream_fopen_from_file(file, mode)) {
    _ = &file;
    _ = &mode;
    return _php_stream_fopen_from_file(file, mode);
}
pub inline fn php_stream_fopen_from_pipe_rel(file: anytype, mode: anytype) @TypeOf(_php_stream_fopen_from_pipe(file, mode)) {
    _ = &file;
    _ = &mode;
    return _php_stream_fopen_from_pipe(file, mode);
}
pub inline fn php_stream_fopen_tmpfile_rel() @TypeOf(_php_stream_fopen_tmpfile(@as(c_int, 0))) {
    return _php_stream_fopen_tmpfile(@as(c_int, 0));
}
pub inline fn php_stream_fopen_temporary_file_rel(dir: anytype, pfx: anytype, opened_path: anytype) @TypeOf(_php_stream_fopen_temporary_file(dir, pfx, opened_path)) {
    _ = &dir;
    _ = &pfx;
    _ = &opened_path;
    return _php_stream_fopen_temporary_file(dir, pfx, opened_path);
}
pub inline fn php_stream_open_wrapper_rel(path: anytype, mode: anytype, options: anytype, opened: anytype) @TypeOf(_php_stream_open_wrapper_ex(path, mode, options, opened, NULL)) {
    _ = &path;
    _ = &mode;
    _ = &options;
    _ = &opened;
    return _php_stream_open_wrapper_ex(path, mode, options, opened, NULL);
}
pub inline fn php_stream_open_wrapper_ex_rel(path: anytype, mode: anytype, options: anytype, opened: anytype, context: anytype) @TypeOf(_php_stream_open_wrapper_ex(path, mode, options, opened, context)) {
    _ = &path;
    _ = &mode;
    _ = &options;
    _ = &opened;
    _ = &context;
    return _php_stream_open_wrapper_ex(path, mode, options, opened, context);
}
pub inline fn php_stream_make_seekable_rel(origstream: anytype, newstream: anytype, flags: anytype) @TypeOf(_php_stream_make_seekable(origstream, newstream, flags)) {
    _ = &origstream;
    _ = &newstream;
    _ = &flags;
    return _php_stream_make_seekable(origstream, newstream, flags);
}
pub const PHP_STREAM_NOTIFIER_PROGRESS = @as(c_int, 1);
pub const php_stream_context_from_zval = @compileError("unable to translate macro: undefined identifier `php_le_stream_context`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_context.h:31:9
pub const php_stream_context_to_zval = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_context.h:37:9
pub const PHP_STREAM_NOTIFY_RESOLVE = @as(c_int, 1);
pub const PHP_STREAM_NOTIFY_CONNECT = @as(c_int, 2);
pub const PHP_STREAM_NOTIFY_AUTH_REQUIRED = @as(c_int, 3);
pub const PHP_STREAM_NOTIFY_MIME_TYPE_IS = @as(c_int, 4);
pub const PHP_STREAM_NOTIFY_FILE_SIZE_IS = @as(c_int, 5);
pub const PHP_STREAM_NOTIFY_REDIRECTED = @as(c_int, 6);
pub const PHP_STREAM_NOTIFY_PROGRESS = @as(c_int, 7);
pub const PHP_STREAM_NOTIFY_COMPLETED = @as(c_int, 8);
pub const PHP_STREAM_NOTIFY_FAILURE = @as(c_int, 9);
pub const PHP_STREAM_NOTIFY_AUTH_RESULT = @as(c_int, 10);
pub const PHP_STREAM_NOTIFY_SEVERITY_INFO = @as(c_int, 0);
pub const PHP_STREAM_NOTIFY_SEVERITY_WARN = @as(c_int, 1);
pub const PHP_STREAM_NOTIFY_SEVERITY_ERR = @as(c_int, 2);
pub const php_stream_notify_info = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_context.h:90:9
pub const php_stream_notify_progress = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_context.h:94:9
pub const php_stream_notify_completed = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_context.h:98:9
pub const php_stream_notify_progress_init = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_context.h:102:9
pub const php_stream_notify_progress_increment = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_context.h:108:9
pub const php_stream_notify_file_size = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_context.h:113:9
pub const php_stream_notify_error = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_context.h:117:9
pub const PHP_STREAM_FILTER_READ = @as(c_int, 0x0001);
pub const PHP_STREAM_FILTER_WRITE = @as(c_int, 0x0002);
pub const PHP_STREAM_FILTER_ALL = PHP_STREAM_FILTER_READ | PHP_STREAM_FILTER_WRITE;
pub const php_stream_bucket_addref = @compileError("TODO postfix inc/dec expr");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/streams/php_stream_filter_api.h:69:9
pub const PSFS_FLAG_NORMAL = @as(c_int, 0);
pub const PSFS_FLAG_FLUSH_INC = @as(c_int, 1);
pub const PSFS_FLAG_FLUSH_CLOSE = @as(c_int, 2);
pub inline fn php_stream_filter_alloc(fops: anytype, thisptr: anytype, persistent: anytype) @TypeOf(_php_stream_filter_alloc(fops, thisptr, persistent)) {
    _ = &fops;
    _ = &thisptr;
    _ = &persistent;
    return _php_stream_filter_alloc(fops, thisptr, persistent);
}
pub inline fn php_stream_filter_alloc_rel(fops: anytype, thisptr: anytype, persistent: anytype) @TypeOf(_php_stream_filter_alloc(fops, thisptr, persistent)) {
    _ = &fops;
    _ = &thisptr;
    _ = &persistent;
    return _php_stream_filter_alloc(fops, thisptr, persistent);
}
pub inline fn php_stream_filter_prepend(chain: anytype, filter: anytype) @TypeOf(_php_stream_filter_prepend(chain, filter)) {
    _ = &chain;
    _ = &filter;
    return _php_stream_filter_prepend(chain, filter);
}
pub inline fn php_stream_filter_append(chain: anytype, filter: anytype) @TypeOf(_php_stream_filter_append(chain, filter)) {
    _ = &chain;
    _ = &filter;
    return _php_stream_filter_append(chain, filter);
}
pub inline fn php_stream_filter_flush(filter: anytype, finish: anytype) @TypeOf(_php_stream_filter_flush(filter, finish)) {
    _ = &filter;
    _ = &finish;
    return _php_stream_filter_flush(filter, finish);
}
pub inline fn php_stream_is_filtered(stream: anytype) @TypeOf((stream.*.readfilters.head != 0) or (stream.*.writefilters.head != 0)) {
    _ = &stream;
    return (stream.*.readfilters.head != 0) or (stream.*.writefilters.head != 0);
}
pub const PHP_STREAM_FLAG_NO_SEEK = @as(c_int, 0x1);
pub const PHP_STREAM_FLAG_NO_BUFFER = @as(c_int, 0x2);
pub const PHP_STREAM_FLAG_EOL_UNIX = @as(c_int, 0x0);
pub const PHP_STREAM_FLAG_DETECT_EOL = @as(c_int, 0x4);
pub const PHP_STREAM_FLAG_EOL_MAC = @as(c_int, 0x8);
pub const PHP_STREAM_FLAG_AVOID_BLOCKING = @as(c_int, 0x10);
pub const PHP_STREAM_FLAG_NO_CLOSE = @as(c_int, 0x20);
pub const PHP_STREAM_FLAG_IS_DIR = @as(c_int, 0x40);
pub const PHP_STREAM_FLAG_NO_FCLOSE = @as(c_int, 0x80);
pub const PHP_STREAM_FLAG_SUPPRESS_ERRORS = @as(c_int, 0x100);
pub const PHP_STREAM_FLAG_NO_RSCR_DTOR_CLOSE = @as(c_int, 0x200);
pub const PHP_STREAM_FLAG_NO_IO = @as(c_int, 0x400);
pub const PHP_STREAM_FLAG_WAS_WRITTEN = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub inline fn PHP_STREAM_CONTEXT(stream: anytype) [*c]php_stream_context {
    _ = &stream;
    return @import("std").zig.c_translation.cast([*c]php_stream_context, if (stream.*.ctx) stream.*.ctx.*.ptr else NULL);
}
pub const PHP_STREAM_FCLOSE_NONE = @as(c_int, 0);
pub const PHP_STREAM_FCLOSE_FDOPEN = @as(c_int, 1);
pub const PHP_STREAM_FCLOSE_FOPENCOOKIE = @as(c_int, 2);
pub inline fn php_stream_alloc(ops: anytype, thisptr: anytype, persistent_id: anytype, mode: anytype) @TypeOf(_php_stream_alloc(ops, thisptr, persistent_id, mode)) {
    _ = &ops;
    _ = &thisptr;
    _ = &persistent_id;
    _ = &mode;
    return _php_stream_alloc(ops, thisptr, persistent_id, mode);
}
pub inline fn php_stream_get_resource_id(stream: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]php_stream, stream).*.res.*.handle) {
    _ = &stream;
    return @import("std").zig.c_translation.cast([*c]php_stream, stream).*.res.*.handle;
}
pub const php_stream_auto_cleanup = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_streams.h:267:9
pub const php_stream_to_zval = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_streams.h:271:9
pub const php_stream_from_zval = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_streams.h:273:9
pub const php_stream_from_res = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_streams.h:279:9
pub const php_stream_from_res_no_verify = @compileError("unable to translate macro: undefined identifier `res`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_streams.h:285:9
pub const php_stream_from_zval_no_verify = @compileError("unable to translate C expr: unexpected token '='");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_streams.h:286:9
pub inline fn php_stream_free_enclosed(stream_enclosed: anytype, close_options: anytype) @TypeOf(_php_stream_free_enclosed(stream_enclosed, close_options)) {
    _ = &stream_enclosed;
    _ = &close_options;
    return _php_stream_free_enclosed(stream_enclosed, close_options);
}
pub const PHP_STREAM_PERSISTENT_SUCCESS = @as(c_int, 0);
pub const PHP_STREAM_PERSISTENT_FAILURE = @as(c_int, 1);
pub const PHP_STREAM_PERSISTENT_NOT_EXIST = @as(c_int, 2);
pub const PHP_STREAM_FREE_CALL_DTOR = @as(c_int, 1);
pub const PHP_STREAM_FREE_RELEASE_STREAM = @as(c_int, 2);
pub const PHP_STREAM_FREE_PRESERVE_HANDLE = @as(c_int, 4);
pub const PHP_STREAM_FREE_RSRC_DTOR = @as(c_int, 8);
pub const PHP_STREAM_FREE_PERSISTENT = @as(c_int, 16);
pub const PHP_STREAM_FREE_IGNORE_ENCLOSING = @as(c_int, 32);
pub const PHP_STREAM_FREE_KEEP_RSRC = @as(c_int, 64);
pub const PHP_STREAM_FREE_CLOSE = PHP_STREAM_FREE_CALL_DTOR | PHP_STREAM_FREE_RELEASE_STREAM;
pub const PHP_STREAM_FREE_CLOSE_CASTED = PHP_STREAM_FREE_CLOSE | PHP_STREAM_FREE_PRESERVE_HANDLE;
pub const PHP_STREAM_FREE_CLOSE_PERSISTENT = PHP_STREAM_FREE_CLOSE | PHP_STREAM_FREE_PERSISTENT;
pub inline fn php_stream_free(stream: anytype, close_options: anytype) @TypeOf(_php_stream_free(stream, close_options)) {
    _ = &stream;
    _ = &close_options;
    return _php_stream_free(stream, close_options);
}
pub inline fn php_stream_close(stream: anytype) @TypeOf(_php_stream_free(stream, PHP_STREAM_FREE_CLOSE)) {
    _ = &stream;
    return _php_stream_free(stream, PHP_STREAM_FREE_CLOSE);
}
pub inline fn php_stream_pclose(stream: anytype) @TypeOf(_php_stream_free(stream, PHP_STREAM_FREE_CLOSE_PERSISTENT)) {
    _ = &stream;
    return _php_stream_free(stream, PHP_STREAM_FREE_CLOSE_PERSISTENT);
}
pub inline fn php_stream_rewind(stream: anytype) @TypeOf(_php_stream_seek(stream, @as(c_long, 0), SEEK_SET)) {
    _ = &stream;
    return _php_stream_seek(stream, @as(c_long, 0), SEEK_SET);
}
pub inline fn php_stream_seek(stream: anytype, offset: anytype, whence: anytype) @TypeOf(_php_stream_seek(stream, offset, whence)) {
    _ = &stream;
    _ = &offset;
    _ = &whence;
    return _php_stream_seek(stream, offset, whence);
}
pub inline fn php_stream_tell(stream: anytype) @TypeOf(_php_stream_tell(stream)) {
    _ = &stream;
    return _php_stream_tell(stream);
}
pub inline fn php_stream_read(stream: anytype, buf: anytype, count: anytype) @TypeOf(_php_stream_read(stream, buf, count)) {
    _ = &stream;
    _ = &buf;
    _ = &count;
    return _php_stream_read(stream, buf, count);
}
pub inline fn php_stream_write_string(stream: anytype, str: anytype) @TypeOf(_php_stream_write(stream, str, strlen(str))) {
    _ = &stream;
    _ = &str;
    return _php_stream_write(stream, str, strlen(str));
}
pub inline fn php_stream_write(stream: anytype, buf: anytype, count: anytype) @TypeOf(_php_stream_write(stream, buf, count)) {
    _ = &stream;
    _ = &buf;
    _ = &count;
    return _php_stream_write(stream, buf, count);
}
pub inline fn php_stream_fill_read_buffer(stream: anytype, size: anytype) @TypeOf(_php_stream_fill_read_buffer(stream, size)) {
    _ = &stream;
    _ = &size;
    return _php_stream_fill_read_buffer(stream, size);
}
pub const php_stream_printf = _php_stream_printf;
pub inline fn php_stream_eof(stream: anytype) @TypeOf(_php_stream_eof(stream)) {
    _ = &stream;
    return _php_stream_eof(stream);
}
pub inline fn php_stream_getc(stream: anytype) @TypeOf(_php_stream_getc(stream)) {
    _ = &stream;
    return _php_stream_getc(stream);
}
pub inline fn php_stream_putc(stream: anytype, c: anytype) @TypeOf(_php_stream_putc(stream, c)) {
    _ = &stream;
    _ = &c;
    return _php_stream_putc(stream, c);
}
pub inline fn php_stream_flush(stream: anytype) @TypeOf(_php_stream_flush(stream, @as(c_int, 0))) {
    _ = &stream;
    return _php_stream_flush(stream, @as(c_int, 0));
}
pub inline fn php_stream_sync(stream: anytype, d: anytype) @TypeOf(_php_stream_sync(stream, d)) {
    _ = &stream;
    _ = &d;
    return _php_stream_sync(stream, d);
}
pub inline fn php_stream_gets(stream: anytype, buf: anytype, maxlen: anytype) @TypeOf(_php_stream_get_line(stream, buf, maxlen, NULL)) {
    _ = &stream;
    _ = &buf;
    _ = &maxlen;
    return _php_stream_get_line(stream, buf, maxlen, NULL);
}
pub inline fn php_stream_get_line(stream: anytype, buf: anytype, maxlen: anytype, retlen: anytype) @TypeOf(_php_stream_get_line(stream, buf, maxlen, retlen)) {
    _ = &stream;
    _ = &buf;
    _ = &maxlen;
    _ = &retlen;
    return _php_stream_get_line(stream, buf, maxlen, retlen);
}
pub inline fn php_stream_puts(stream: anytype, buf: anytype) @TypeOf(_php_stream_puts(stream, buf)) {
    _ = &stream;
    _ = &buf;
    return _php_stream_puts(stream, buf);
}
pub inline fn php_stream_stat(stream: anytype, ssb: anytype) @TypeOf(_php_stream_stat(stream, ssb)) {
    _ = &stream;
    _ = &ssb;
    return _php_stream_stat(stream, ssb);
}
pub inline fn php_stream_stat_path(path: anytype, ssb: anytype) @TypeOf(_php_stream_stat_path(path, @as(c_int, 0), ssb, NULL)) {
    _ = &path;
    _ = &ssb;
    return _php_stream_stat_path(path, @as(c_int, 0), ssb, NULL);
}
pub inline fn php_stream_stat_path_ex(path: anytype, flags: anytype, ssb: anytype, context: anytype) @TypeOf(_php_stream_stat_path(path, flags, ssb, context)) {
    _ = &path;
    _ = &flags;
    _ = &ssb;
    _ = &context;
    return _php_stream_stat_path(path, flags, ssb, context);
}
pub inline fn php_stream_mkdir(path: anytype, mode: anytype, options: anytype, context: anytype) @TypeOf(_php_stream_mkdir(path, mode, options, context)) {
    _ = &path;
    _ = &mode;
    _ = &options;
    _ = &context;
    return _php_stream_mkdir(path, mode, options, context);
}
pub inline fn php_stream_rmdir(path: anytype, options: anytype, context: anytype) @TypeOf(_php_stream_rmdir(path, options, context)) {
    _ = &path;
    _ = &options;
    _ = &context;
    return _php_stream_rmdir(path, options, context);
}
pub inline fn php_stream_opendir(path: anytype, options: anytype, context: anytype) @TypeOf(_php_stream_opendir(path, options, context)) {
    _ = &path;
    _ = &options;
    _ = &context;
    return _php_stream_opendir(path, options, context);
}
pub inline fn php_stream_readdir(dirstream: anytype, dirent_1: anytype) @TypeOf(_php_stream_readdir(dirstream, dirent_1)) {
    _ = &dirstream;
    _ = &dirent_1;
    return _php_stream_readdir(dirstream, dirent_1);
}
pub inline fn php_stream_closedir(dirstream: anytype) @TypeOf(php_stream_close(dirstream)) {
    _ = &dirstream;
    return php_stream_close(dirstream);
}
pub inline fn php_stream_rewinddir(dirstream: anytype) @TypeOf(php_stream_rewind(dirstream)) {
    _ = &dirstream;
    return php_stream_rewind(dirstream);
}
pub inline fn php_stream_scandir(dirname: anytype, namelist: anytype, context: anytype, compare: anytype) @TypeOf(_php_stream_scandir(dirname, namelist, @as(c_int, 0), context, compare)) {
    _ = &dirname;
    _ = &namelist;
    _ = &context;
    _ = &compare;
    return _php_stream_scandir(dirname, namelist, @as(c_int, 0), context, compare);
}
pub inline fn php_stream_set_option(stream: anytype, option: anytype, value: anytype, ptrvalue: anytype) @TypeOf(_php_stream_set_option(stream, option, value, ptrvalue)) {
    _ = &stream;
    _ = &option;
    _ = &value;
    _ = &ptrvalue;
    return _php_stream_set_option(stream, option, value, ptrvalue);
}
pub inline fn php_stream_set_chunk_size(stream: anytype, size: anytype) @TypeOf(_php_stream_set_option(stream, PHP_STREAM_OPTION_SET_CHUNK_SIZE, size, NULL)) {
    _ = &stream;
    _ = &size;
    return _php_stream_set_option(stream, PHP_STREAM_OPTION_SET_CHUNK_SIZE, size, NULL);
}
pub const PHP_STREAM_MKDIR_RECURSIVE = @as(c_int, 1);
pub const PHP_STREAM_URL_STAT_LINK = @as(c_int, 1);
pub const PHP_STREAM_URL_STAT_QUIET = @as(c_int, 2);
pub const PHP_STREAM_URL_STAT_IGNORE_OPEN_BASEDIR = @as(c_int, 4);
pub const PHP_STREAM_OPTION_BLOCKING = @as(c_int, 1);
pub const PHP_STREAM_OPTION_READ_BUFFER = @as(c_int, 2);
pub const PHP_STREAM_OPTION_WRITE_BUFFER = @as(c_int, 3);
pub const PHP_STREAM_BUFFER_NONE = @as(c_int, 0);
pub const PHP_STREAM_BUFFER_LINE = @as(c_int, 1);
pub const PHP_STREAM_BUFFER_FULL = @as(c_int, 2);
pub const PHP_STREAM_OPTION_READ_TIMEOUT = @as(c_int, 4);
pub const PHP_STREAM_OPTION_SET_CHUNK_SIZE = @as(c_int, 5);
pub const PHP_STREAM_OPTION_LOCKING = @as(c_int, 6);
pub const PHP_STREAM_LOCK_SUPPORTED = @as(c_int, 1);
pub inline fn php_stream_supports_lock(stream: anytype) @TypeOf(if (_php_stream_set_option(stream, PHP_STREAM_OPTION_LOCKING, @as(c_int, 0), @import("std").zig.c_translation.cast(?*anyopaque, PHP_STREAM_LOCK_SUPPORTED)) == @as(c_int, 0)) @as(c_int, 1) else @as(c_int, 0)) {
    _ = &stream;
    return if (_php_stream_set_option(stream, PHP_STREAM_OPTION_LOCKING, @as(c_int, 0), @import("std").zig.c_translation.cast(?*anyopaque, PHP_STREAM_LOCK_SUPPORTED)) == @as(c_int, 0)) @as(c_int, 1) else @as(c_int, 0);
}
pub inline fn php_stream_lock(stream: anytype, mode: anytype) @TypeOf(_php_stream_set_option(stream, PHP_STREAM_OPTION_LOCKING, mode, @import("std").zig.c_translation.cast(?*anyopaque, NULL))) {
    _ = &stream;
    _ = &mode;
    return _php_stream_set_option(stream, PHP_STREAM_OPTION_LOCKING, mode, @import("std").zig.c_translation.cast(?*anyopaque, NULL));
}
pub const PHP_STREAM_OPTION_XPORT_API = @as(c_int, 7);
pub const PHP_STREAM_OPTION_CRYPTO_API = @as(c_int, 8);
pub const PHP_STREAM_OPTION_MMAP_API = @as(c_int, 9);
pub const PHP_STREAM_OPTION_TRUNCATE_API = @as(c_int, 10);
pub const PHP_STREAM_TRUNCATE_SUPPORTED = @as(c_int, 0);
pub const PHP_STREAM_TRUNCATE_SET_SIZE = @as(c_int, 1);
pub inline fn php_stream_truncate_supported(stream: anytype) @TypeOf(if (_php_stream_set_option(stream, PHP_STREAM_OPTION_TRUNCATE_API, PHP_STREAM_TRUNCATE_SUPPORTED, NULL) == PHP_STREAM_OPTION_RETURN_OK) @as(c_int, 1) else @as(c_int, 0)) {
    _ = &stream;
    return if (_php_stream_set_option(stream, PHP_STREAM_OPTION_TRUNCATE_API, PHP_STREAM_TRUNCATE_SUPPORTED, NULL) == PHP_STREAM_OPTION_RETURN_OK) @as(c_int, 1) else @as(c_int, 0);
}
pub inline fn php_stream_truncate_set_size(stream: anytype, size: anytype) @TypeOf(_php_stream_truncate_set_size(stream, size)) {
    _ = &stream;
    _ = &size;
    return _php_stream_truncate_set_size(stream, size);
}
pub const PHP_STREAM_OPTION_META_DATA_API = @as(c_int, 11);
pub inline fn php_stream_populate_meta_data(stream: anytype, zv: anytype) @TypeOf(if (_php_stream_set_option(stream, PHP_STREAM_OPTION_META_DATA_API, @as(c_int, 0), zv) == PHP_STREAM_OPTION_RETURN_OK) @as(c_int, 1) else @as(c_int, 0)) {
    _ = &stream;
    _ = &zv;
    return if (_php_stream_set_option(stream, PHP_STREAM_OPTION_META_DATA_API, @as(c_int, 0), zv) == PHP_STREAM_OPTION_RETURN_OK) @as(c_int, 1) else @as(c_int, 0);
}
pub const PHP_STREAM_OPTION_CHECK_LIVENESS = @as(c_int, 12);
pub const PHP_STREAM_OPTION_PIPE_BLOCKING = @as(c_int, 13);
pub const PHP_STREAM_OPTION_SYNC_API = @as(c_int, 14);
pub const PHP_STREAM_SYNC_SUPPORTED = @as(c_int, 0);
pub const PHP_STREAM_SYNC_FSYNC = @as(c_int, 1);
pub const PHP_STREAM_SYNC_FDSYNC = @as(c_int, 2);
pub inline fn php_stream_sync_supported(stream: anytype) @TypeOf(if (_php_stream_set_option(stream, PHP_STREAM_OPTION_SYNC_API, PHP_STREAM_SYNC_SUPPORTED, NULL) == PHP_STREAM_OPTION_RETURN_OK) @as(c_int, 1) else @as(c_int, 0)) {
    _ = &stream;
    return if (_php_stream_set_option(stream, PHP_STREAM_OPTION_SYNC_API, PHP_STREAM_SYNC_SUPPORTED, NULL) == PHP_STREAM_OPTION_RETURN_OK) @as(c_int, 1) else @as(c_int, 0);
}
pub const PHP_STREAM_OPTION_RETURN_OK = @as(c_int, 0);
pub const PHP_STREAM_OPTION_RETURN_ERR = -@as(c_int, 1);
pub const PHP_STREAM_OPTION_RETURN_NOTIMPL = -@as(c_int, 2);
pub const PHP_STREAM_COPY_ALL = @import("std").zig.c_translation.cast(usize, -@as(c_int, 1));
pub inline fn php_stream_copy_to_stream(src: anytype, dest: anytype, maxlen: anytype) @TypeOf(_php_stream_copy_to_stream(src, dest, maxlen)) {
    _ = &src;
    _ = &dest;
    _ = &maxlen;
    return _php_stream_copy_to_stream(src, dest, maxlen);
}
pub inline fn php_stream_copy_to_stream_ex(src: anytype, dest: anytype, maxlen: anytype, len: anytype) @TypeOf(_php_stream_copy_to_stream_ex(src, dest, maxlen, len)) {
    _ = &src;
    _ = &dest;
    _ = &maxlen;
    _ = &len;
    return _php_stream_copy_to_stream_ex(src, dest, maxlen, len);
}
pub inline fn php_stream_copy_to_mem(src: anytype, maxlen: anytype, persistent: anytype) @TypeOf(_php_stream_copy_to_mem(src, maxlen, persistent)) {
    _ = &src;
    _ = &maxlen;
    _ = &persistent;
    return _php_stream_copy_to_mem(src, maxlen, persistent);
}
pub inline fn php_stream_passthru(stream: anytype) @TypeOf(_php_stream_passthru(stream)) {
    _ = &stream;
    return _php_stream_passthru(stream);
}
pub const _SYS_SOCKET_H_ = "";
pub const __CONSTRAINED_CTYPES__ = "";
pub const __CCT_DECLARE_CONSTRAINED_PTR_TYPE = @compileError("unable to translate C expr: expected ')' instead got '...'");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/constrained_ctypes.h:596:9
pub const __CCT_DECLARE_CONSTRAINED_PTR_TYPES = @compileError("unable to translate C expr: unexpected token ''");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/constrained_ctypes.h:616:9
pub const _BSD_MACHINE__PARAM_H_ = "";
pub const _NET_NETKEV_H_ = "";
pub const KEV_INET_SUBCLASS = @as(c_int, 1);
pub const KEV_INET_NEW_ADDR = @as(c_int, 1);
pub const KEV_INET_CHANGED_ADDR = @as(c_int, 2);
pub const KEV_INET_ADDR_DELETED = @as(c_int, 3);
pub const KEV_INET_SIFDSTADDR = @as(c_int, 4);
pub const KEV_INET_SIFBRDADDR = @as(c_int, 5);
pub const KEV_INET_SIFNETMASK = @as(c_int, 6);
pub const KEV_INET_ARPCOLLISION = @as(c_int, 7);
pub const KEV_INET_PORTINUSE = @as(c_int, 8);
pub const KEV_INET_ARPRTRFAILURE = @as(c_int, 9);
pub const KEV_INET_ARPRTRALIVE = @as(c_int, 10);
pub const KEV_DL_SUBCLASS = @as(c_int, 2);
pub const KEV_DL_SIFFLAGS = @as(c_int, 1);
pub const KEV_DL_SIFMETRICS = @as(c_int, 2);
pub const KEV_DL_SIFMTU = @as(c_int, 3);
pub const KEV_DL_SIFPHYS = @as(c_int, 4);
pub const KEV_DL_SIFMEDIA = @as(c_int, 5);
pub const KEV_DL_SIFGENERIC = @as(c_int, 6);
pub const KEV_DL_ADDMULTI = @as(c_int, 7);
pub const KEV_DL_DELMULTI = @as(c_int, 8);
pub const KEV_DL_IF_ATTACHED = @as(c_int, 9);
pub const KEV_DL_IF_DETACHING = @as(c_int, 10);
pub const KEV_DL_IF_DETACHED = @as(c_int, 11);
pub const KEV_DL_LINK_OFF = @as(c_int, 12);
pub const KEV_DL_LINK_ON = @as(c_int, 13);
pub const KEV_DL_PROTO_ATTACHED = @as(c_int, 14);
pub const KEV_DL_PROTO_DETACHED = @as(c_int, 15);
pub const KEV_DL_LINK_ADDRESS_CHANGED = @as(c_int, 16);
pub const KEV_DL_WAKEFLAGS_CHANGED = @as(c_int, 17);
pub const KEV_DL_IF_IDLE_ROUTE_REFCNT = @as(c_int, 18);
pub const KEV_DL_IFCAP_CHANGED = @as(c_int, 19);
pub const KEV_DL_LINK_QUALITY_METRIC_CHANGED = @as(c_int, 20);
pub const KEV_DL_NODE_PRESENCE = @as(c_int, 21);
pub const KEV_DL_NODE_ABSENCE = @as(c_int, 22);
pub const KEV_DL_PRIMARY_ELECTED = @as(c_int, 23);
pub const KEV_DL_ISSUES = @as(c_int, 24);
pub const KEV_DL_IFDELEGATE_CHANGED = @as(c_int, 25);
pub const KEV_DL_AWDL_RESTRICTED = @as(c_int, 26);
pub const KEV_DL_AWDL_UNRESTRICTED = @as(c_int, 27);
pub const KEV_DL_RRC_STATE_CHANGED = @as(c_int, 28);
pub const KEV_DL_QOS_MODE_CHANGED = @as(c_int, 29);
pub const KEV_DL_LOW_POWER_MODE_CHANGED = @as(c_int, 30);
pub const KEV_DL_MASTER_ELECTED = @compileError("unable to translate macro: undefined identifier `_Pragma`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/net/net_kev.h:86:9
pub const KEV_INET6_SUBCLASS = @as(c_int, 6);
pub const KEV_INET6_NEW_USER_ADDR = @as(c_int, 1);
pub const KEV_INET6_CHANGED_ADDR = @as(c_int, 2);
pub const KEV_INET6_ADDR_DELETED = @as(c_int, 3);
pub const KEV_INET6_NEW_LL_ADDR = @as(c_int, 4);
pub const KEV_INET6_NEW_RTADV_ADDR = @as(c_int, 5);
pub const KEV_INET6_DEFROUTER = @as(c_int, 6);
pub const KEV_INET6_REQUEST_NAT64_PREFIX = @as(c_int, 7);
pub const _SA_FAMILY_T = "";
pub const _SOCKLEN_T = "";
pub const _STRUCT_IOVEC = "";
pub const SOCK_STREAM = @as(c_int, 1);
pub const SOCK_DGRAM = @as(c_int, 2);
pub const SOCK_RAW = @as(c_int, 3);
pub const SOCK_RDM = @as(c_int, 4);
pub const SOCK_SEQPACKET = @as(c_int, 5);
pub const SO_DEBUG = @as(c_int, 0x0001);
pub const SO_ACCEPTCONN = @as(c_int, 0x0002);
pub const SO_REUSEADDR = @as(c_int, 0x0004);
pub const SO_KEEPALIVE = @as(c_int, 0x0008);
pub const SO_DONTROUTE = @as(c_int, 0x0010);
pub const SO_BROADCAST = @as(c_int, 0x0020);
pub const SO_USELOOPBACK = @as(c_int, 0x0040);
pub const SO_LINGER = @as(c_int, 0x0080);
pub const SO_LINGER_SEC = @as(c_int, 0x1080);
pub const SO_OOBINLINE = @as(c_int, 0x0100);
pub const SO_REUSEPORT = @as(c_int, 0x0200);
pub const SO_TIMESTAMP = @as(c_int, 0x0400);
pub const SO_TIMESTAMP_MONOTONIC = @as(c_int, 0x0800);
pub const SO_DONTTRUNC = @as(c_int, 0x2000);
pub const SO_WANTMORE = @as(c_int, 0x4000);
pub const SO_WANTOOBFLAG = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x8000, .hex);
pub const SO_SNDBUF = @as(c_int, 0x1001);
pub const SO_RCVBUF = @as(c_int, 0x1002);
pub const SO_SNDLOWAT = @as(c_int, 0x1003);
pub const SO_RCVLOWAT = @as(c_int, 0x1004);
pub const SO_SNDTIMEO = @as(c_int, 0x1005);
pub const SO_RCVTIMEO = @as(c_int, 0x1006);
pub const SO_ERROR = @as(c_int, 0x1007);
pub const SO_TYPE = @as(c_int, 0x1008);
pub const SO_LABEL = @as(c_int, 0x1010);
pub const SO_PEERLABEL = @as(c_int, 0x1011);
pub const SO_NREAD = @as(c_int, 0x1020);
pub const SO_NKE = @as(c_int, 0x1021);
pub const SO_NOSIGPIPE = @as(c_int, 0x1022);
pub const SO_NOADDRERR = @as(c_int, 0x1023);
pub const SO_NWRITE = @as(c_int, 0x1024);
pub const SO_REUSESHAREUID = @as(c_int, 0x1025);
pub const SO_NOTIFYCONFLICT = @as(c_int, 0x1026);
pub const SO_UPCALLCLOSEWAIT = @as(c_int, 0x1027);
pub const SO_RANDOMPORT = @as(c_int, 0x1082);
pub const SO_NP_EXTENSIONS = @as(c_int, 0x1083);
pub const SO_NUMRCVPKT = @as(c_int, 0x1112);
pub const SO_NET_SERVICE_TYPE = @as(c_int, 0x1116);
pub const SO_NETSVC_MARKING_LEVEL = @as(c_int, 0x1119);
pub const SO_RESOLVER_SIGNATURE = @as(c_int, 0x1131);
pub const SO_BINDTODEVICE = @as(c_int, 0x1134);
pub const NET_SERVICE_TYPE_BE = @as(c_int, 0);
pub const NET_SERVICE_TYPE_BK = @as(c_int, 1);
pub const NET_SERVICE_TYPE_SIG = @as(c_int, 2);
pub const NET_SERVICE_TYPE_VI = @as(c_int, 3);
pub const NET_SERVICE_TYPE_VO = @as(c_int, 4);
pub const NET_SERVICE_TYPE_RV = @as(c_int, 5);
pub const NET_SERVICE_TYPE_AV = @as(c_int, 6);
pub const NET_SERVICE_TYPE_OAM = @as(c_int, 7);
pub const NET_SERVICE_TYPE_RD = @as(c_int, 8);
pub const NETSVC_MRKNG_UNKNOWN = @as(c_int, 0);
pub const NETSVC_MRKNG_LVL_L2 = @as(c_int, 1);
pub const NETSVC_MRKNG_LVL_L3L2_ALL = @as(c_int, 2);
pub const NETSVC_MRKNG_LVL_L3L2_BK = @as(c_int, 3);
pub const SAE_ASSOCID_ANY = @as(c_int, 0);
pub const SAE_ASSOCID_ALL = @import("std").zig.c_translation.cast(sae_associd_t, -@as(c_ulonglong, 1));
pub const SAE_CONNID_ANY = @as(c_int, 0);
pub const SAE_CONNID_ALL = @import("std").zig.c_translation.cast(sae_connid_t, -@as(c_ulonglong, 1));
pub const CONNECT_RESUME_ON_READ_WRITE = @as(c_int, 0x1);
pub const CONNECT_DATA_IDEMPOTENT = @as(c_int, 0x2);
pub const CONNECT_DATA_AUTHENTICATED = @as(c_int, 0x4);
pub const SONPX_SETOPTSHUT = @as(c_int, 0x000000001);
pub const SOL_SOCKET = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0xffff, .hex);
pub const AF_UNSPEC = @as(c_int, 0);
pub const AF_UNIX = @as(c_int, 1);
pub const AF_LOCAL = AF_UNIX;
pub const AF_INET = @as(c_int, 2);
pub const AF_IMPLINK = @as(c_int, 3);
pub const AF_PUP = @as(c_int, 4);
pub const AF_CHAOS = @as(c_int, 5);
pub const AF_NS = @as(c_int, 6);
pub const AF_ISO = @as(c_int, 7);
pub const AF_OSI = AF_ISO;
pub const AF_ECMA = @as(c_int, 8);
pub const AF_DATAKIT = @as(c_int, 9);
pub const AF_CCITT = @as(c_int, 10);
pub const AF_SNA = @as(c_int, 11);
pub const AF_DECnet = @as(c_int, 12);
pub const AF_DLI = @as(c_int, 13);
pub const AF_LAT = @as(c_int, 14);
pub const AF_HYLINK = @as(c_int, 15);
pub const AF_APPLETALK = @as(c_int, 16);
pub const AF_ROUTE = @as(c_int, 17);
pub const AF_LINK = @as(c_int, 18);
pub const pseudo_AF_XTP = @as(c_int, 19);
pub const AF_COIP = @as(c_int, 20);
pub const AF_CNT = @as(c_int, 21);
pub const pseudo_AF_RTIP = @as(c_int, 22);
pub const AF_IPX = @as(c_int, 23);
pub const AF_SIP = @as(c_int, 24);
pub const pseudo_AF_PIP = @as(c_int, 25);
pub const AF_NDRV = @as(c_int, 27);
pub const AF_ISDN = @as(c_int, 28);
pub const AF_E164 = AF_ISDN;
pub const pseudo_AF_KEY = @as(c_int, 29);
pub const AF_INET6 = @as(c_int, 30);
pub const AF_NATM = @as(c_int, 31);
pub const AF_SYSTEM = @as(c_int, 32);
pub const AF_NETBIOS = @as(c_int, 33);
pub const AF_PPP = @as(c_int, 34);
pub const pseudo_AF_HDRCMPLT = @as(c_int, 35);
pub const AF_RESERVED_36 = @as(c_int, 36);
pub const AF_IEEE80211 = @as(c_int, 37);
pub const AF_UTUN = @as(c_int, 38);
pub const AF_VSOCK = @as(c_int, 40);
pub const AF_MAX = @as(c_int, 41);
pub const SOCK_MAXADDRLEN = @as(c_int, 255);
pub const _SS_MAXSIZE = @as(c_int, 128);
pub const _SS_ALIGNSIZE = @import("std").zig.c_translation.sizeof(__int64_t);
pub const _SS_PAD1SIZE = (_SS_ALIGNSIZE - @import("std").zig.c_translation.sizeof(__uint8_t)) - @import("std").zig.c_translation.sizeof(sa_family_t);
pub const _SS_PAD2SIZE = (((_SS_MAXSIZE - @import("std").zig.c_translation.sizeof(__uint8_t)) - @import("std").zig.c_translation.sizeof(sa_family_t)) - _SS_PAD1SIZE) - _SS_ALIGNSIZE;
pub const PF_UNSPEC = AF_UNSPEC;
pub const PF_LOCAL = AF_LOCAL;
pub const PF_UNIX = PF_LOCAL;
pub const PF_INET = AF_INET;
pub const PF_IMPLINK = AF_IMPLINK;
pub const PF_PUP = AF_PUP;
pub const PF_CHAOS = AF_CHAOS;
pub const PF_NS = AF_NS;
pub const PF_ISO = AF_ISO;
pub const PF_OSI = AF_ISO;
pub const PF_ECMA = AF_ECMA;
pub const PF_DATAKIT = AF_DATAKIT;
pub const PF_CCITT = AF_CCITT;
pub const PF_SNA = AF_SNA;
pub const PF_DECnet = AF_DECnet;
pub const PF_DLI = AF_DLI;
pub const PF_LAT = AF_LAT;
pub const PF_HYLINK = AF_HYLINK;
pub const PF_APPLETALK = AF_APPLETALK;
pub const PF_ROUTE = AF_ROUTE;
pub const PF_LINK = AF_LINK;
pub const PF_XTP = pseudo_AF_XTP;
pub const PF_COIP = AF_COIP;
pub const PF_CNT = AF_CNT;
pub const PF_SIP = AF_SIP;
pub const PF_IPX = AF_IPX;
pub const PF_RTIP = pseudo_AF_RTIP;
pub const PF_PIP = pseudo_AF_PIP;
pub const PF_NDRV = AF_NDRV;
pub const PF_ISDN = AF_ISDN;
pub const PF_KEY = pseudo_AF_KEY;
pub const PF_INET6 = AF_INET6;
pub const PF_NATM = AF_NATM;
pub const PF_SYSTEM = AF_SYSTEM;
pub const PF_NETBIOS = AF_NETBIOS;
pub const PF_PPP = AF_PPP;
pub const PF_RESERVED_36 = AF_RESERVED_36;
pub const PF_UTUN = AF_UTUN;
pub const PF_VSOCK = AF_VSOCK;
pub const PF_MAX = AF_MAX;
pub const PF_VLAN = @import("std").zig.c_translation.cast(u32, @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x766c616e, .hex));
pub const PF_BOND = @import("std").zig.c_translation.cast(u32, @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x626f6e64, .hex));
pub const NET_MAXID = AF_MAX;
pub const NET_RT_DUMP = @as(c_int, 1);
pub const NET_RT_FLAGS = @as(c_int, 2);
pub const NET_RT_IFLIST = @as(c_int, 3);
pub const NET_RT_STAT = @as(c_int, 4);
pub const NET_RT_TRASH = @as(c_int, 5);
pub const NET_RT_IFLIST2 = @as(c_int, 6);
pub const NET_RT_DUMP2 = @as(c_int, 7);
pub const NET_RT_FLAGS_PRIV = @as(c_int, 10);
pub const NET_RT_MAXID = @as(c_int, 11);
pub const SOMAXCONN = @as(c_int, 128);
pub const MSG_OOB = @as(c_int, 0x1);
pub const MSG_PEEK = @as(c_int, 0x2);
pub const MSG_DONTROUTE = @as(c_int, 0x4);
pub const MSG_EOR = @as(c_int, 0x8);
pub const MSG_TRUNC = @as(c_int, 0x10);
pub const MSG_CTRUNC = @as(c_int, 0x20);
pub const MSG_WAITALL = @as(c_int, 0x40);
pub const MSG_DONTWAIT = @as(c_int, 0x80);
pub const MSG_EOF = @as(c_int, 0x100);
pub const MSG_WAITSTREAM = @as(c_int, 0x200);
pub const MSG_FLUSH = @as(c_int, 0x400);
pub const MSG_HOLD = @as(c_int, 0x800);
pub const MSG_SEND = @as(c_int, 0x1000);
pub const MSG_HAVEMORE = @as(c_int, 0x2000);
pub const MSG_RCVMORE = @as(c_int, 0x4000);
pub const MSG_NEEDSA = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x10000, .hex);
pub const MSG_NOSIGNAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000, .hex);
pub inline fn CMSG_DATA(cmsg: anytype) @TypeOf(@import("std").zig.c_translation.cast([*c]u8, cmsg) + __DARWIN_ALIGN32(@import("std").zig.c_translation.sizeof(struct_cmsghdr))) {
    _ = &cmsg;
    return @import("std").zig.c_translation.cast([*c]u8, cmsg) + __DARWIN_ALIGN32(@import("std").zig.c_translation.sizeof(struct_cmsghdr));
}
pub inline fn CMSG_FIRSTHDR(mhdr: anytype) @TypeOf(if (mhdr.*.msg_controllen >= @import("std").zig.c_translation.sizeof(struct_cmsghdr)) @import("std").zig.c_translation.cast([*c]struct_cmsghdr, mhdr.*.msg_control) else @import("std").zig.c_translation.cast([*c]struct_cmsghdr, @as(c_long, 0))) {
    _ = &mhdr;
    return if (mhdr.*.msg_controllen >= @import("std").zig.c_translation.sizeof(struct_cmsghdr)) @import("std").zig.c_translation.cast([*c]struct_cmsghdr, mhdr.*.msg_control) else @import("std").zig.c_translation.cast([*c]struct_cmsghdr, @as(c_long, 0));
}
pub inline fn CMSG_NXTHDR(mhdr: anytype, cmsg: anytype) @TypeOf(if (@import("std").zig.c_translation.cast([*c]u8, cmsg) == @import("std").zig.c_translation.cast([*c]u8, @as(c_long, 0))) CMSG_FIRSTHDR(mhdr) else if (((@import("std").zig.c_translation.cast([*c]u8, cmsg) + __DARWIN_ALIGN32(@import("std").zig.c_translation.cast(__uint32_t, cmsg.*.cmsg_len))) + __DARWIN_ALIGN32(@import("std").zig.c_translation.sizeof(struct_cmsghdr))) > (@import("std").zig.c_translation.cast([*c]u8, mhdr.*.msg_control) + mhdr.*.msg_controllen)) @import("std").zig.c_translation.cast([*c]struct_cmsghdr, @as(c_long, 0)) else @import("std").zig.c_translation.cast([*c]struct_cmsghdr, @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast([*c]u8, cmsg) + __DARWIN_ALIGN32(@import("std").zig.c_translation.cast(__uint32_t, cmsg.*.cmsg_len))))) {
    _ = &mhdr;
    _ = &cmsg;
    return if (@import("std").zig.c_translation.cast([*c]u8, cmsg) == @import("std").zig.c_translation.cast([*c]u8, @as(c_long, 0))) CMSG_FIRSTHDR(mhdr) else if (((@import("std").zig.c_translation.cast([*c]u8, cmsg) + __DARWIN_ALIGN32(@import("std").zig.c_translation.cast(__uint32_t, cmsg.*.cmsg_len))) + __DARWIN_ALIGN32(@import("std").zig.c_translation.sizeof(struct_cmsghdr))) > (@import("std").zig.c_translation.cast([*c]u8, mhdr.*.msg_control) + mhdr.*.msg_controllen)) @import("std").zig.c_translation.cast([*c]struct_cmsghdr, @as(c_long, 0)) else @import("std").zig.c_translation.cast([*c]struct_cmsghdr, @import("std").zig.c_translation.cast(?*anyopaque, @import("std").zig.c_translation.cast([*c]u8, cmsg) + __DARWIN_ALIGN32(@import("std").zig.c_translation.cast(__uint32_t, cmsg.*.cmsg_len))));
}
pub inline fn CMSG_SPACE(l: anytype) @TypeOf(__DARWIN_ALIGN32(@import("std").zig.c_translation.sizeof(struct_cmsghdr)) + __DARWIN_ALIGN32(l)) {
    _ = &l;
    return __DARWIN_ALIGN32(@import("std").zig.c_translation.sizeof(struct_cmsghdr)) + __DARWIN_ALIGN32(l);
}
pub inline fn CMSG_LEN(l: anytype) @TypeOf(__DARWIN_ALIGN32(@import("std").zig.c_translation.sizeof(struct_cmsghdr)) + l) {
    _ = &l;
    return __DARWIN_ALIGN32(@import("std").zig.c_translation.sizeof(struct_cmsghdr)) + l;
}
pub const SCM_RIGHTS = @as(c_int, 0x01);
pub const SCM_TIMESTAMP = @as(c_int, 0x02);
pub const SCM_CREDS = @as(c_int, 0x03);
pub const SCM_TIMESTAMP_MONOTONIC = @as(c_int, 0x04);
pub const SHUT_RD = @as(c_int, 0);
pub const SHUT_WR = @as(c_int, 1);
pub const SHUT_RDWR = @as(c_int, 2);
pub const STREAM_XPORT_CLIENT = @as(c_int, 0);
pub const STREAM_XPORT_SERVER = @as(c_int, 1);
pub const STREAM_XPORT_CONNECT = @as(c_int, 2);
pub const STREAM_XPORT_BIND = @as(c_int, 4);
pub const STREAM_XPORT_LISTEN = @as(c_int, 8);
pub const STREAM_XPORT_CONNECT_ASYNC = @as(c_int, 16);
pub inline fn php_stream_xport_create(name: anytype, namelen: anytype, options: anytype, flags: anytype, persistent_id: anytype, timeout: anytype, context: anytype, estr: anytype, ecode: anytype) @TypeOf(_php_stream_xport_create(name, namelen, options, flags, persistent_id, timeout, context, estr, ecode)) {
    _ = &name;
    _ = &namelen;
    _ = &options;
    _ = &flags;
    _ = &persistent_id;
    _ = &timeout;
    _ = &context;
    _ = &estr;
    _ = &ecode;
    return _php_stream_xport_create(name, namelen, options, flags, persistent_id, timeout, context, estr, ecode);
}
pub inline fn php_stream_fopen(filename: anytype, mode: anytype, opened: anytype) @TypeOf(_php_stream_fopen(filename, mode, opened, @as(c_int, 0))) {
    _ = &filename;
    _ = &mode;
    _ = &opened;
    return _php_stream_fopen(filename, mode, opened, @as(c_int, 0));
}
pub inline fn php_stream_fopen_with_path(filename: anytype, mode: anytype, path: anytype, opened: anytype) @TypeOf(_php_stream_fopen_with_path(filename, mode, path, opened, @as(c_int, 0))) {
    _ = &filename;
    _ = &mode;
    _ = &path;
    _ = &opened;
    return _php_stream_fopen_with_path(filename, mode, path, opened, @as(c_int, 0));
}
pub inline fn php_stream_fopen_from_file(file: anytype, mode: anytype) @TypeOf(_php_stream_fopen_from_file(file, mode)) {
    _ = &file;
    _ = &mode;
    return _php_stream_fopen_from_file(file, mode);
}
pub inline fn php_stream_fopen_from_fd(fd: anytype, mode: anytype, persistent_id: anytype) @TypeOf(_php_stream_fopen_from_fd(fd, mode, persistent_id, @"false")) {
    _ = &fd;
    _ = &mode;
    _ = &persistent_id;
    return _php_stream_fopen_from_fd(fd, mode, persistent_id, @"false");
}
pub inline fn php_stream_fopen_from_pipe(file: anytype, mode: anytype) @TypeOf(_php_stream_fopen_from_pipe(file, mode)) {
    _ = &file;
    _ = &mode;
    return _php_stream_fopen_from_pipe(file, mode);
}
pub inline fn php_stream_fopen_tmpfile() @TypeOf(_php_stream_fopen_tmpfile(@as(c_int, 0))) {
    return _php_stream_fopen_tmpfile(@as(c_int, 0));
}
pub inline fn php_stream_fopen_temporary_file(dir: anytype, pfx: anytype, opened_path: anytype) @TypeOf(_php_stream_fopen_temporary_file(dir, pfx, opened_path)) {
    _ = &dir;
    _ = &pfx;
    _ = &opened_path;
    return _php_stream_fopen_temporary_file(dir, pfx, opened_path);
}
pub inline fn php_stream_open_wrapper_as_file(path: anytype, mode: anytype, options: anytype, opened_path: anytype) @TypeOf(_php_stream_open_wrapper_as_file(path, mode, options, opened_path)) {
    _ = &path;
    _ = &mode;
    _ = &options;
    _ = &opened_path;
    return _php_stream_open_wrapper_as_file(path, mode, options, opened_path);
}
pub inline fn php_glob_stream_get_path(stream: anytype, plen: anytype) @TypeOf(_php_glob_stream_get_path(stream, plen)) {
    _ = &stream;
    _ = &plen;
    return _php_glob_stream_get_path(stream, plen);
}
pub inline fn php_glob_stream_get_pattern(stream: anytype, plen: anytype) @TypeOf(_php_glob_stream_get_pattern(stream, plen)) {
    _ = &stream;
    _ = &plen;
    return _php_glob_stream_get_pattern(stream, plen);
}
pub inline fn php_glob_stream_get_count(stream: anytype, pflags: anytype) @TypeOf(_php_glob_stream_get_count(stream, pflags)) {
    _ = &stream;
    _ = &pflags;
    return _php_glob_stream_get_count(stream, pflags);
}
pub const PHP_STREAM_IS_USERSPACE = &php_stream_userspace_ops;
pub const PHP_STREAM_IS_USERSPACE_DIR = &php_stream_userspace_dir_ops;
pub const PHP_STREAM_MMAP_ALL = @as(c_int, 0);
pub const PHP_STREAM_MMAP_MAX = (@as(c_int, 512) * @as(c_int, 1024)) * @as(c_int, 1024);
pub inline fn php_stream_mmap_supported(stream: anytype) @TypeOf(if (_php_stream_set_option(stream, PHP_STREAM_OPTION_MMAP_API, PHP_STREAM_MMAP_SUPPORTED, NULL) == @as(c_int, 0)) @as(c_int, 1) else @as(c_int, 0)) {
    _ = &stream;
    return if (_php_stream_set_option(stream, PHP_STREAM_OPTION_MMAP_API, PHP_STREAM_MMAP_SUPPORTED, NULL) == @as(c_int, 0)) @as(c_int, 1) else @as(c_int, 0);
}
pub inline fn php_stream_mmap_possible(stream: anytype) @TypeOf(!(php_stream_is_filtered(stream) != 0) and (php_stream_mmap_supported(stream) != 0)) {
    _ = &stream;
    return !(php_stream_is_filtered(stream) != 0) and (php_stream_mmap_supported(stream) != 0);
}
pub inline fn php_stream_mmap_unmap(stream: anytype) @TypeOf(_php_stream_mmap_unmap(stream)) {
    _ = &stream;
    return _php_stream_mmap_unmap(stream);
}
pub inline fn php_stream_mmap_unmap_ex(stream: anytype, readden: anytype) @TypeOf(_php_stream_mmap_unmap_ex(stream, readden)) {
    _ = &stream;
    _ = &readden;
    return _php_stream_mmap_unmap_ex(stream, readden);
}
pub const PHP_STREAM_AS_STDIO = @as(c_int, 0);
pub const PHP_STREAM_AS_FD = @as(c_int, 1);
pub const PHP_STREAM_AS_SOCKETD = @as(c_int, 2);
pub const PHP_STREAM_AS_FD_FOR_SELECT = @as(c_int, 3);
pub const PHP_STREAM_CAST_TRY_HARD = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x80000000, .hex);
pub const PHP_STREAM_CAST_RELEASE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x40000000, .hex);
pub const PHP_STREAM_CAST_INTERNAL = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x20000000, .hex);
pub const PHP_STREAM_CAST_MASK = (PHP_STREAM_CAST_TRY_HARD | PHP_STREAM_CAST_RELEASE) | PHP_STREAM_CAST_INTERNAL;
pub inline fn php_stream_can_cast(stream: anytype, as: anytype) @TypeOf(_php_stream_cast(stream, as, NULL, @as(c_int, 0))) {
    _ = &stream;
    _ = &as;
    return _php_stream_cast(stream, as, NULL, @as(c_int, 0));
}
pub inline fn php_stream_cast(stream: anytype, as: anytype, ret: anytype, show_err: anytype) @TypeOf(_php_stream_cast(stream, as, ret, show_err)) {
    _ = &stream;
    _ = &as;
    _ = &ret;
    _ = &show_err;
    return _php_stream_cast(stream, as, ret, show_err);
}
pub inline fn php_stream_is(stream: anytype, anops: anytype) @TypeOf(stream.*.ops == anops) {
    _ = &stream;
    _ = &anops;
    return stream.*.ops == anops;
}
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_streams.h:527:9: warning: macro 'PHP_STREAM_IS_STDIO' contains a runtime value, translated to function
pub inline fn PHP_STREAM_IS_STDIO() @TypeOf(&php_stream_stdio_ops) {
    return &php_stream_stdio_ops;
}
pub inline fn php_stream_is_persistent(stream: anytype) @TypeOf(stream.*.is_persistent) {
    _ = &stream;
    return stream.*.is_persistent;
}
pub const IGNORE_PATH = @as(c_int, 0x00000000);
pub const USE_PATH = @as(c_int, 0x00000001);
pub const IGNORE_URL = @as(c_int, 0x00000002);
pub const REPORT_ERRORS = @as(c_int, 0x00000008);
pub const STREAM_MUST_SEEK = @as(c_int, 0x00000010);
pub const STREAM_WILL_CAST = @as(c_int, 0x00000020);
pub const STREAM_LOCATE_WRAPPERS_ONLY = @as(c_int, 0x00000040);
pub const STREAM_OPEN_FOR_INCLUDE = @as(c_int, 0x00000080);
pub const STREAM_USE_URL = @as(c_int, 0x00000100);
pub const STREAM_ONLY_GET_HEADERS = @as(c_int, 0x00000200);
pub const STREAM_DISABLE_OPEN_BASEDIR = @as(c_int, 0x00000400);
pub const STREAM_OPEN_PERSISTENT = @as(c_int, 0x00000800);
pub const STREAM_USE_GLOB_DIR_OPEN = @as(c_int, 0x00001000);
pub const STREAM_DISABLE_URL_PROTECTION = @as(c_int, 0x00002000);
pub const STREAM_ASSUME_REALPATH = @as(c_int, 0x00004000);
pub const STREAM_USE_BLOCKING_PIPE = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00008000, .hex);
pub const STREAM_OPEN_FOR_ZEND_STREAM = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x00010000, .hex);
pub inline fn php_stream_open_wrapper(path: anytype, mode: anytype, options: anytype, opened: anytype) @TypeOf(_php_stream_open_wrapper_ex(path, mode, options, opened, NULL)) {
    _ = &path;
    _ = &mode;
    _ = &options;
    _ = &opened;
    return _php_stream_open_wrapper_ex(path, mode, options, opened, NULL);
}
pub inline fn php_stream_open_wrapper_ex(path: anytype, mode: anytype, options: anytype, opened: anytype, context: anytype) @TypeOf(_php_stream_open_wrapper_ex(path, mode, options, opened, context)) {
    _ = &path;
    _ = &mode;
    _ = &options;
    _ = &opened;
    _ = &context;
    return _php_stream_open_wrapper_ex(path, mode, options, opened, context);
}
pub const PHP_STREAM_UNCHANGED = @as(c_int, 0);
pub const PHP_STREAM_RELEASED = @as(c_int, 1);
pub const PHP_STREAM_FAILED = @as(c_int, 2);
pub const PHP_STREAM_CRITICAL = @as(c_int, 3);
pub const PHP_STREAM_NO_PREFERENCE = @as(c_int, 0);
pub const PHP_STREAM_PREFER_STDIO = @as(c_int, 1);
pub const PHP_STREAM_FORCE_CONVERSION = @as(c_int, 2);
pub inline fn php_stream_make_seekable(origstream: anytype, newstream: anytype, flags: anytype) @TypeOf(_php_stream_make_seekable(origstream, newstream, flags)) {
    _ = &origstream;
    _ = &newstream;
    _ = &flags;
    return _php_stream_make_seekable(origstream, newstream, flags);
}
pub inline fn php_stream_get_url_stream_wrappers_hash() @TypeOf(_php_stream_get_url_stream_wrappers_hash()) {
    return _php_stream_get_url_stream_wrappers_hash();
}
pub inline fn php_get_stream_filters_hash() @TypeOf(_php_get_stream_filters_hash()) {
    return _php_get_stream_filters_hash();
}
pub const PHP_STREAM_IS_URL = @as(c_int, 1);
pub const PHP_STREAM_META_TOUCH = @as(c_int, 1);
pub const PHP_STREAM_META_OWNER_NAME = @as(c_int, 2);
pub const PHP_STREAM_META_OWNER = @as(c_int, 3);
pub const PHP_STREAM_META_GROUP_NAME = @as(c_int, 4);
pub const PHP_STREAM_META_GROUP = @as(c_int, 5);
pub const PHP_STREAM_META_ACCESS = @as(c_int, 6);
pub const PHP_MEMORY_STREAM_H = "";
pub const PHP_STREAM_MAX_MEM = (@as(c_int, 2) * @as(c_int, 1024)) * @as(c_int, 1024);
pub const TEMP_STREAM_DEFAULT = @as(c_int, 0x0);
pub const TEMP_STREAM_READONLY = @as(c_int, 0x1);
pub const TEMP_STREAM_TAKE_BUFFER = @as(c_int, 0x2);
pub const TEMP_STREAM_APPEND = @as(c_int, 0x4);
pub inline fn php_stream_memory_create(mode: anytype) @TypeOf(_php_stream_memory_create(mode)) {
    _ = &mode;
    return _php_stream_memory_create(mode);
}
pub inline fn php_stream_memory_create_rel(mode: anytype) @TypeOf(_php_stream_memory_create(mode)) {
    _ = &mode;
    return _php_stream_memory_create(mode);
}
pub inline fn php_stream_memory_open(mode: anytype, str: anytype) @TypeOf(_php_stream_memory_open(mode, str)) {
    _ = &mode;
    _ = &str;
    return _php_stream_memory_open(mode, str);
}
pub inline fn php_stream_memory_get_buffer(stream: anytype) @TypeOf(_php_stream_memory_get_buffer(stream)) {
    _ = &stream;
    return _php_stream_memory_get_buffer(stream);
}
pub inline fn php_stream_temp_new() @TypeOf(php_stream_temp_create(TEMP_STREAM_DEFAULT, PHP_STREAM_MAX_MEM)) {
    return php_stream_temp_create(TEMP_STREAM_DEFAULT, PHP_STREAM_MAX_MEM);
}
pub inline fn php_stream_temp_create(mode: anytype, max_memory_usage: anytype) @TypeOf(_php_stream_temp_create(mode, max_memory_usage)) {
    _ = &mode;
    _ = &max_memory_usage;
    return _php_stream_temp_create(mode, max_memory_usage);
}
pub inline fn php_stream_temp_create_ex(mode: anytype, max_memory_usage: anytype, tmpdir: anytype) @TypeOf(_php_stream_temp_create_ex(mode, max_memory_usage, tmpdir)) {
    _ = &mode;
    _ = &max_memory_usage;
    _ = &tmpdir;
    return _php_stream_temp_create_ex(mode, max_memory_usage, tmpdir);
}
pub inline fn php_stream_temp_create_rel(mode: anytype, max_memory_usage: anytype) @TypeOf(_php_stream_temp_create(mode, max_memory_usage)) {
    _ = &mode;
    _ = &max_memory_usage;
    return _php_stream_temp_create(mode, max_memory_usage);
}
pub inline fn php_stream_temp_open(mode: anytype, max_memory_usage: anytype, buf: anytype, length: anytype) @TypeOf(_php_stream_temp_open(mode, max_memory_usage, buf, length)) {
    _ = &mode;
    _ = &max_memory_usage;
    _ = &buf;
    _ = &length;
    return _php_stream_temp_open(mode, max_memory_usage, buf, length);
}
pub const PHP_STREAM_IS_MEMORY = &php_stream_memory_ops;
pub const PHP_STREAM_IS_TEMP = &php_stream_temp_ops;
pub const FOPEN_WRAPPERS_H = "";
pub const PHP_GLOBALS_H = "";
pub inline fn PG(v: anytype) @TypeOf(core_globals.v) {
    _ = &v;
    return core_globals.v;
}
pub const PHP_DISPLAY_ERRORS_STDOUT = @as(c_int, 1);
pub const PHP_DISPLAY_ERRORS_STDERR = @as(c_int, 2);
pub const TRACK_VARS_POST = @as(c_int, 0);
pub const TRACK_VARS_GET = @as(c_int, 1);
pub const TRACK_VARS_COOKIE = @as(c_int, 2);
pub const TRACK_VARS_SERVER = @as(c_int, 3);
pub const TRACK_VARS_ENV = @as(c_int, 4);
pub const TRACK_VARS_FILES = @as(c_int, 5);
pub const TRACK_VARS_REQUEST = @as(c_int, 6);
pub const PHP_INI_H = "";
pub const ZEND_INI_H = "";
pub const ZEND_INI_USER = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_INI_PERDIR = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_INI_SYSTEM = @as(c_int, 1) << @as(c_int, 2);
pub const ZEND_INI_ALL = (ZEND_INI_USER | ZEND_INI_PERDIR) | ZEND_INI_SYSTEM;
pub const ZEND_INI_MH = @compileError("unable to translate macro: undefined identifier `entry`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:30:9
pub const ZEND_INI_DISP = @compileError("unable to translate macro: undefined identifier `ini_entry`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:31:9
pub const ZEND_INI_BEGIN = @compileError("unable to translate macro: undefined identifier `ini_entries`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:150:9
pub const ZEND_INI_END = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:151:9
pub const ZEND_INI_ENTRY3_EX = @compileError("unable to translate C expr: unexpected token '{'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:153:9
pub inline fn ZEND_INI_ENTRY3(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype, arg1: anytype, arg2: anytype, arg3: anytype) @TypeOf(ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, arg1, arg2, arg3, NULL)) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    _ = &arg1;
    _ = &arg2;
    _ = &arg3;
    return ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, arg1, arg2, arg3, NULL);
}
pub inline fn ZEND_INI_ENTRY2_EX(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype, arg1: anytype, arg2: anytype, displayer: anytype) @TypeOf(ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, arg1, arg2, NULL, displayer)) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    _ = &arg1;
    _ = &arg2;
    _ = &displayer;
    return ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, arg1, arg2, NULL, displayer);
}
pub inline fn ZEND_INI_ENTRY2(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype, arg1: anytype, arg2: anytype) @TypeOf(ZEND_INI_ENTRY2_EX(name, default_value, modifiable, on_modify, arg1, arg2, NULL)) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    _ = &arg1;
    _ = &arg2;
    return ZEND_INI_ENTRY2_EX(name, default_value, modifiable, on_modify, arg1, arg2, NULL);
}
pub inline fn ZEND_INI_ENTRY1_EX(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype, arg1: anytype, displayer: anytype) @TypeOf(ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, arg1, NULL, NULL, displayer)) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    _ = &arg1;
    _ = &displayer;
    return ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, arg1, NULL, NULL, displayer);
}
pub inline fn ZEND_INI_ENTRY1(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype, arg1: anytype) @TypeOf(ZEND_INI_ENTRY1_EX(name, default_value, modifiable, on_modify, arg1, NULL)) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    _ = &arg1;
    return ZEND_INI_ENTRY1_EX(name, default_value, modifiable, on_modify, arg1, NULL);
}
pub inline fn ZEND_INI_ENTRY_EX(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype, displayer: anytype) @TypeOf(ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, NULL, NULL, NULL, displayer)) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    _ = &displayer;
    return ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, NULL, NULL, NULL, displayer);
}
pub inline fn ZEND_INI_ENTRY(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype) @TypeOf(ZEND_INI_ENTRY_EX(name, default_value, modifiable, on_modify, NULL)) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    return ZEND_INI_ENTRY_EX(name, default_value, modifiable, on_modify, NULL);
}
pub inline fn STD_ZEND_INI_ENTRY(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype, property_name: anytype, struct_type: anytype, struct_ptr: anytype) @TypeOf(ZEND_INI_ENTRY2(name, default_value, modifiable, on_modify, @import("std").zig.c_translation.cast(?*anyopaque, XtOffsetOf(struct_type, property_name)), @import("std").zig.c_translation.cast(?*anyopaque, &struct_ptr))) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    _ = &property_name;
    _ = &struct_type;
    _ = &struct_ptr;
    return ZEND_INI_ENTRY2(name, default_value, modifiable, on_modify, @import("std").zig.c_translation.cast(?*anyopaque, XtOffsetOf(struct_type, property_name)), @import("std").zig.c_translation.cast(?*anyopaque, &struct_ptr));
}
pub inline fn STD_ZEND_INI_ENTRY_EX(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype, property_name: anytype, struct_type: anytype, struct_ptr: anytype, displayer: anytype) @TypeOf(ZEND_INI_ENTRY2_EX(name, default_value, modifiable, on_modify, @import("std").zig.c_translation.cast(?*anyopaque, XtOffsetOf(struct_type, property_name)), @import("std").zig.c_translation.cast(?*anyopaque, &struct_ptr), displayer)) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    _ = &property_name;
    _ = &struct_type;
    _ = &struct_ptr;
    _ = &displayer;
    return ZEND_INI_ENTRY2_EX(name, default_value, modifiable, on_modify, @import("std").zig.c_translation.cast(?*anyopaque, XtOffsetOf(struct_type, property_name)), @import("std").zig.c_translation.cast(?*anyopaque, &struct_ptr), displayer);
}
pub inline fn STD_ZEND_INI_BOOLEAN(name: anytype, default_value: anytype, modifiable: anytype, on_modify: anytype, property_name: anytype, struct_type: anytype, struct_ptr: anytype) @TypeOf(ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, @import("std").zig.c_translation.cast(?*anyopaque, XtOffsetOf(struct_type, property_name)), @import("std").zig.c_translation.cast(?*anyopaque, &struct_ptr), NULL, zend_ini_boolean_displayer_cb)) {
    _ = &name;
    _ = &default_value;
    _ = &modifiable;
    _ = &on_modify;
    _ = &property_name;
    _ = &struct_type;
    _ = &struct_ptr;
    return ZEND_INI_ENTRY3_EX(name, default_value, modifiable, on_modify, @import("std").zig.c_translation.cast(?*anyopaque, XtOffsetOf(struct_type, property_name)), @import("std").zig.c_translation.cast(?*anyopaque, &struct_ptr), NULL, zend_ini_boolean_displayer_cb);
}
pub inline fn INI_INT(name: anytype) @TypeOf(zend_ini_long(name, strlen(name), @as(c_int, 0))) {
    _ = &name;
    return zend_ini_long(name, strlen(name), @as(c_int, 0));
}
pub inline fn INI_FLT(name: anytype) @TypeOf(zend_ini_double(name, strlen(name), @as(c_int, 0))) {
    _ = &name;
    return zend_ini_double(name, strlen(name), @as(c_int, 0));
}
pub inline fn INI_STR(name: anytype) @TypeOf(zend_ini_string_ex(name, strlen(name), @as(c_int, 0), NULL)) {
    _ = &name;
    return zend_ini_string_ex(name, strlen(name), @as(c_int, 0), NULL);
}
pub inline fn INI_BOOL(name: anytype) @TypeOf(@"bool" ++ INI_INT(name)) {
    _ = &name;
    return @"bool" ++ INI_INT(name);
}
pub inline fn INI_ORIG_INT(name: anytype) @TypeOf(zend_ini_long(name, strlen(name), @as(c_int, 1))) {
    _ = &name;
    return zend_ini_long(name, strlen(name), @as(c_int, 1));
}
pub inline fn INI_ORIG_FLT(name: anytype) @TypeOf(zend_ini_double(name, strlen(name), @as(c_int, 1))) {
    _ = &name;
    return zend_ini_double(name, strlen(name), @as(c_int, 1));
}
pub inline fn INI_ORIG_STR(name: anytype) @TypeOf(zend_ini_string(name, strlen(name), @as(c_int, 1))) {
    _ = &name;
    return zend_ini_string(name, strlen(name), @as(c_int, 1));
}
pub inline fn INI_ORIG_BOOL(name: anytype) @TypeOf(@"bool" ++ INI_ORIG_INT(name)) {
    _ = &name;
    return @"bool" ++ INI_ORIG_INT(name);
}
pub const REGISTER_INI_ENTRIES = @compileError("unable to translate macro: undefined identifier `ini_entries`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:203:9
pub const UNREGISTER_INI_ENTRIES = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:204:9
pub const DISPLAY_INI_ENTRIES = @compileError("unable to translate macro: undefined identifier `zend_module`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:205:9
pub inline fn REGISTER_INI_DISPLAYER(name: anytype, displayer: anytype) @TypeOf(zend_ini_register_displayer(name, strlen(name), displayer)) {
    _ = &name;
    _ = &displayer;
    return zend_ini_register_displayer(name, strlen(name), displayer);
}
pub inline fn REGISTER_INI_BOOLEAN(name: anytype) @TypeOf(REGISTER_INI_DISPLAYER(name, zend_ini_boolean_displayer_cb)) {
    _ = &name;
    return REGISTER_INI_DISPLAYER(name, zend_ini_boolean_displayer_cb);
}
pub const ZEND_INI_DISPLAY_ORIG = @as(c_int, 1);
pub const ZEND_INI_DISPLAY_ACTIVE = @as(c_int, 2);
pub const ZEND_INI_STAGE_STARTUP = @as(c_int, 1) << @as(c_int, 0);
pub const ZEND_INI_STAGE_SHUTDOWN = @as(c_int, 1) << @as(c_int, 1);
pub const ZEND_INI_STAGE_ACTIVATE = @as(c_int, 1) << @as(c_int, 2);
pub const ZEND_INI_STAGE_DEACTIVATE = @as(c_int, 1) << @as(c_int, 3);
pub const ZEND_INI_STAGE_RUNTIME = @as(c_int, 1) << @as(c_int, 4);
pub const ZEND_INI_STAGE_HTACCESS = @as(c_int, 1) << @as(c_int, 5);
pub const ZEND_INI_STAGE_IN_REQUEST = ((ZEND_INI_STAGE_ACTIVATE | ZEND_INI_STAGE_DEACTIVATE) | ZEND_INI_STAGE_RUNTIME) | ZEND_INI_STAGE_HTACCESS;
pub const ZEND_INI_PARSER_ENTRY = @as(c_int, 1);
pub const ZEND_INI_PARSER_SECTION = @as(c_int, 2);
pub const ZEND_INI_PARSER_POP_ENTRY = @as(c_int, 3);
pub const ZEND_INI_GET_BASE = @compileError("unable to translate macro: undefined identifier `mh_arg2`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:254:10
pub const ZEND_INI_GET_ADDR = @compileError("unable to translate macro: undefined identifier `mh_arg1`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_ini.h:259:9
pub const PHP_INI_USER = ZEND_INI_USER;
pub const PHP_INI_PERDIR = ZEND_INI_PERDIR;
pub const PHP_INI_SYSTEM = ZEND_INI_SYSTEM;
pub const PHP_INI_ALL = ZEND_INI_ALL;
pub const php_ini_entry = zend_ini_entry;
pub const PHP_INI_MH = ZEND_INI_MH;
pub const PHP_INI_DISP = ZEND_INI_DISP;
pub const PHP_INI_BEGIN = ZEND_INI_BEGIN;
pub const PHP_INI_END = ZEND_INI_END;
pub const PHP_INI_ENTRY3_EX = ZEND_INI_ENTRY3_EX;
pub const PHP_INI_ENTRY3 = ZEND_INI_ENTRY3;
pub const PHP_INI_ENTRY2_EX = ZEND_INI_ENTRY2_EX;
pub const PHP_INI_ENTRY2 = ZEND_INI_ENTRY2;
pub const PHP_INI_ENTRY1_EX = ZEND_INI_ENTRY1_EX;
pub const PHP_INI_ENTRY1 = ZEND_INI_ENTRY1;
pub const PHP_INI_ENTRY_EX = ZEND_INI_ENTRY_EX;
pub const PHP_INI_ENTRY = ZEND_INI_ENTRY;
pub const STD_PHP_INI_ENTRY = STD_ZEND_INI_ENTRY;
pub const STD_PHP_INI_ENTRY_EX = STD_ZEND_INI_ENTRY_EX;
pub const STD_PHP_INI_BOOLEAN = STD_ZEND_INI_BOOLEAN;
pub const PHP_INI_DISPLAY_ORIG = ZEND_INI_DISPLAY_ORIG;
pub const PHP_INI_DISPLAY_ACTIVE = ZEND_INI_DISPLAY_ACTIVE;
pub const PHP_INI_STAGE_STARTUP = ZEND_INI_STAGE_STARTUP;
pub const PHP_INI_STAGE_SHUTDOWN = ZEND_INI_STAGE_SHUTDOWN;
pub const PHP_INI_STAGE_ACTIVATE = ZEND_INI_STAGE_ACTIVATE;
pub const PHP_INI_STAGE_DEACTIVATE = ZEND_INI_STAGE_DEACTIVATE;
pub const PHP_INI_STAGE_RUNTIME = ZEND_INI_STAGE_RUNTIME;
pub const PHP_INI_STAGE_HTACCESS = ZEND_INI_STAGE_HTACCESS;
pub const php_ini_boolean_displayer_cb = zend_ini_boolean_displayer_cb;
pub const php_ini_color_displayer_cb = zend_ini_color_displayer_cb;
pub const php_alter_ini_entry = zend_alter_ini_entry;
pub const php_ini_long = zend_ini_long;
pub const php_ini_double = zend_ini_double;
pub const php_ini_string = zend_ini_string;
pub inline fn OPENBASEDIR_CHECKPATH(filename: anytype) @TypeOf(php_check_open_basedir(filename)) {
    _ = &filename;
    return php_check_open_basedir(filename);
}
pub const VIRTUAL_CWD_H = "";
pub const _UTIME_H_ = "";
pub const _DIRENT_H_ = "";
pub const _SYS_DIRENT_H = "";
pub const __DARWIN_MAXNAMLEN = @as(c_int, 255);
pub const __DARWIN_MAXPATHLEN = @as(c_int, 1024);
pub const __DARWIN_STRUCT_DIRENTRY = @compileError("unable to translate macro: undefined identifier `d_ino`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/dirent.h:102:9
pub const d_fileno = @compileError("unable to translate macro: undefined identifier `d_ino`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/sys/dirent.h:118:9
pub const MAXNAMLEN = __DARWIN_MAXNAMLEN;
pub const DT_UNKNOWN = @as(c_int, 0);
pub const DT_FIFO = @as(c_int, 1);
pub const DT_CHR = @as(c_int, 2);
pub const DT_DIR = @as(c_int, 4);
pub const DT_BLK = @as(c_int, 6);
pub const DT_REG = @as(c_int, 8);
pub const DT_LNK = @as(c_int, 10);
pub const DT_SOCK = @as(c_int, 12);
pub const DT_WHT = @as(c_int, 14);
pub inline fn IFTODT(mode: anytype) @TypeOf((mode & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0o170000, .octal)) >> @as(c_int, 12)) {
    _ = &mode;
    return (mode & @import("std").zig.c_translation.promoteIntLiteral(c_int, 0o170000, .octal)) >> @as(c_int, 12);
}
pub inline fn DTTOIF(dirtype: anytype) @TypeOf(dirtype << @as(c_int, 12)) {
    _ = &dirtype;
    return dirtype << @as(c_int, 12);
}
pub const DIRBLKSIZ = @as(c_int, 1024);
pub const DTF_HIDEW = @as(c_int, 0x0001);
pub const DTF_NODUP = @as(c_int, 0x0002);
pub const DTF_REWIND = @as(c_int, 0x0004);
pub const __DTF_READALL = @as(c_int, 0x0008);
pub const __DTF_SKIPREAD = @as(c_int, 0x0010);
pub const __DTF_ATEND = @as(c_int, 0x0020);
pub const __scandir_noescape = @compileError("unable to translate macro: undefined identifier `__noescape__`");
// /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/dirent.h:156:9
pub const DEFAULT_SLASH = '/';
pub const DEFAULT_DIR_SEPARATOR = ':';
pub inline fn IS_SLASH(c: anytype) @TypeOf(c == '/') {
    _ = &c;
    return c == '/';
}
pub inline fn IS_SLASH_P(c: anytype) @TypeOf(c.* == '/') {
    _ = &c;
    return c.* == '/';
}
pub inline fn IS_SLASH_P_EX(c: anytype, first_byte: anytype) @TypeOf(IS_SLASH_P(c)) {
    _ = &c;
    _ = &first_byte;
    return IS_SLASH_P(c);
}
pub inline fn COPY_WHEN_ABSOLUTE(path: anytype) @TypeOf(@as(c_int, 0)) {
    _ = &path;
    return @as(c_int, 0);
}
pub inline fn IS_ABSOLUTE_PATH(path: anytype, len: anytype) @TypeOf(IS_SLASH(path[@as(usize, @intCast(@as(c_int, 0)))])) {
    _ = &path;
    _ = &len;
    return IS_SLASH(path[@as(usize, @intCast(@as(c_int, 0)))]);
}
pub const CWD_API = @compileError("unable to translate macro: undefined identifier `visibility`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_virtual_cwd.h:143:10
pub const php_sys_stat = stat;
pub const php_sys_lstat = lstat;
pub const php_sys_fstat = fstat;
pub inline fn php_sys_readlink(link_1: anytype, target: anytype, target_len: anytype) @TypeOf(readlink(link_1, target, target_len)) {
    _ = &link_1;
    _ = &target;
    _ = &target_len;
    return readlink(link_1, target, target_len);
}
pub const php_sys_symlink = symlink;
pub const php_sys_link = link;
pub const CWD_EXPAND = @as(c_int, 0);
pub const CWD_FILEPATH = @as(c_int, 1);
pub const CWD_REALPATH = @as(c_int, 2);
pub const REALPATH_CACHE_TTL = @as(c_int, 2) * @as(c_int, 60);
pub const REALPATH_CACHE_SIZE = @as(c_int, 0);
pub inline fn CWDG(v: anytype) @TypeOf(cwd_globals.v) {
    _ = &v;
    return cwd_globals.v;
}
pub const VCWD_CREAT = @compileError("unable to translate macro: undefined identifier `creat`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_virtual_cwd.h:305:9
pub inline fn VCWD_FOPEN(path: anytype, mode: anytype) @TypeOf(fopen(path, mode)) {
    _ = &path;
    _ = &mode;
    return fopen(path, mode);
}
pub const VCWD_OPEN = @compileError("unable to translate macro: undefined identifier `open`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_virtual_cwd.h:322:9
pub const VCWD_OPEN_MODE = @compileError("unable to translate macro: undefined identifier `open`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_virtual_cwd.h:323:9
pub inline fn VCWD_RENAME(oldname: anytype, newname: anytype) @TypeOf(rename(oldname, newname)) {
    _ = &oldname;
    _ = &newname;
    return rename(oldname, newname);
}
pub inline fn VCWD_MKDIR(pathname: anytype, mode: anytype) @TypeOf(mkdir(pathname, mode)) {
    _ = &pathname;
    _ = &mode;
    return mkdir(pathname, mode);
}
pub inline fn VCWD_RMDIR(pathname: anytype) @TypeOf(rmdir(pathname)) {
    _ = &pathname;
    return rmdir(pathname);
}
pub inline fn VCWD_UNLINK(path: anytype) @TypeOf(unlink(path)) {
    _ = &path;
    return unlink(path);
}
pub inline fn VCWD_CHDIR(path: anytype) @TypeOf(chdir(path)) {
    _ = &path;
    return chdir(path);
}
pub inline fn VCWD_ACCESS(pathname: anytype, mode: anytype) @TypeOf(access(pathname, mode)) {
    _ = &pathname;
    _ = &mode;
    return access(pathname, mode);
}
pub inline fn VCWD_GETCWD(buff: anytype, size: anytype) @TypeOf(getcwd(buff, size)) {
    _ = &buff;
    _ = &size;
    return getcwd(buff, size);
}
pub inline fn VCWD_CHMOD(path: anytype, mode: anytype) @TypeOf(chmod(path, mode)) {
    _ = &path;
    _ = &mode;
    return chmod(path, mode);
}
pub inline fn VCWD_CHDIR_FILE(path: anytype) @TypeOf(virtual_chdir_file(path, chdir)) {
    _ = &path;
    return virtual_chdir_file(path, chdir);
}
pub inline fn VCWD_GETWD(buf: anytype) @TypeOf(getwd(buf)) {
    _ = &buf;
    return getwd(buf);
}
pub inline fn VCWD_STAT(path: anytype, buff: anytype) @TypeOf(php_sys_stat(path, buff)) {
    _ = &path;
    _ = &buff;
    return php_sys_stat(path, buff);
}
pub inline fn VCWD_LSTAT(path: anytype, buff: anytype) @TypeOf(lstat(path, buff)) {
    _ = &path;
    _ = &buff;
    return lstat(path, buff);
}
pub inline fn VCWD_OPENDIR(pathname: anytype) @TypeOf(opendir(pathname)) {
    _ = &pathname;
    return opendir(pathname);
}
pub inline fn VCWD_POPEN(command: anytype, @"type": anytype) @TypeOf(popen(command, @"type")) {
    _ = &command;
    _ = &@"type";
    return popen(command, @"type");
}
pub inline fn VCWD_REALPATH(path: anytype, real_path: anytype) @TypeOf(tsrm_realpath(path, real_path)) {
    _ = &path;
    _ = &real_path;
    return tsrm_realpath(path, real_path);
}
pub inline fn VCWD_UTIME(path: anytype, time_1: anytype) @TypeOf(utime(path, time_1)) {
    _ = &path;
    _ = &time_1;
    return utime(path, time_1);
}
pub inline fn VCWD_CHOWN(path: anytype, owner: anytype, group: anytype) @TypeOf(chown(path, owner, group)) {
    _ = &path;
    _ = &owner;
    _ = &group;
    return chown(path, owner, group);
}
pub inline fn VCWD_LCHOWN(path: anytype, owner: anytype, group: anytype) @TypeOf(lchown(path, owner, group)) {
    _ = &path;
    _ = &owner;
    _ = &group;
    return lchown(path, owner, group);
}
pub const _S_IFDIR = S_IFDIR;
pub const _S_IFREG = S_IFREG;
pub const S_IXROOT = (S_IXUSR | S_IXGRP) | S_IXOTH;
pub const ZEND_CONSTANTS_H = "";
pub const CONST_CS = @as(c_int, 0);
pub const CONST_PERSISTENT = @as(c_int, 1) << @as(c_int, 0);
pub const CONST_NO_FILE_CACHE = @as(c_int, 1) << @as(c_int, 1);
pub const CONST_DEPRECATED = @as(c_int, 1) << @as(c_int, 2);
pub const CONST_OWNED = @as(c_int, 1) << @as(c_int, 3);
pub const CONST_RECURSIVE = @as(c_int, 1) << @as(c_int, 4);
pub inline fn CONST_IS_RECURSIVE(c: anytype) @TypeOf(Z_CONSTANT_FLAGS(c.*.value) & CONST_RECURSIVE) {
    _ = &c;
    return Z_CONSTANT_FLAGS(c.*.value) & CONST_RECURSIVE;
}
pub const CONST_PROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:33:9
pub const CONST_UNPROTECT_RECURSION = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:37:9
pub const PHP_USER_CONSTANT = @import("std").zig.c_translation.promoteIntLiteral(c_int, 0x7fffff, .hex);
pub inline fn ZEND_CONSTANT_FLAGS(c: anytype) @TypeOf(Z_CONSTANT_FLAGS(c.*.value) & @as(c_int, 0xff)) {
    _ = &c;
    return Z_CONSTANT_FLAGS(c.*.value) & @as(c_int, 0xff);
}
pub inline fn ZEND_CONSTANT_MODULE_NUMBER(c: anytype) @TypeOf(Z_CONSTANT_FLAGS(c.*.value) >> @as(c_int, 8)) {
    _ = &c;
    return Z_CONSTANT_FLAGS(c.*.value) >> @as(c_int, 8);
}
pub const ZEND_CONSTANT_SET_FLAGS = @compileError("unable to translate C expr: unexpected token 'do'");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:55:9
pub const REGISTER_NULL_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:60:9
pub const REGISTER_BOOL_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:61:9
pub const REGISTER_LONG_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:62:9
pub const REGISTER_DOUBLE_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:63:9
pub const REGISTER_STRING_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:64:9
pub const REGISTER_STRINGL_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:65:9
pub const REGISTER_NS_NULL_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:67:9
pub const REGISTER_NS_BOOL_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:68:9
pub const REGISTER_NS_LONG_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:69:9
pub const REGISTER_NS_DOUBLE_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:70:9
pub const REGISTER_NS_STRING_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:71:9
pub const REGISTER_NS_STRINGL_CONSTANT = @compileError("unable to translate macro: undefined identifier `module_number`");
// /opt/homebrew/Cellar/php/8.4.10/include/php/Zend/zend_constants.h:72:9
pub inline fn REGISTER_MAIN_NULL_CONSTANT(name: anytype, flags: anytype) @TypeOf(zend_register_null_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), flags, @as(c_int, 0))) {
    _ = &name;
    _ = &flags;
    return zend_register_null_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), flags, @as(c_int, 0));
}
pub inline fn REGISTER_MAIN_BOOL_CONSTANT(name: anytype, bval: anytype, flags: anytype) @TypeOf(zend_register_bool_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), bval, flags, @as(c_int, 0))) {
    _ = &name;
    _ = &bval;
    _ = &flags;
    return zend_register_bool_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), bval, flags, @as(c_int, 0));
}
pub inline fn REGISTER_MAIN_LONG_CONSTANT(name: anytype, lval: anytype, flags: anytype) @TypeOf(zend_register_long_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), lval, flags, @as(c_int, 0))) {
    _ = &name;
    _ = &lval;
    _ = &flags;
    return zend_register_long_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), lval, flags, @as(c_int, 0));
}
pub inline fn REGISTER_MAIN_DOUBLE_CONSTANT(name: anytype, dval: anytype, flags: anytype) @TypeOf(zend_register_double_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), dval, flags, @as(c_int, 0))) {
    _ = &name;
    _ = &dval;
    _ = &flags;
    return zend_register_double_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), dval, flags, @as(c_int, 0));
}
pub inline fn REGISTER_MAIN_STRING_CONSTANT(name: anytype, str: anytype, flags: anytype) @TypeOf(zend_register_string_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), str, flags, @as(c_int, 0))) {
    _ = &name;
    _ = &str;
    _ = &flags;
    return zend_register_string_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), str, flags, @as(c_int, 0));
}
pub inline fn REGISTER_MAIN_STRINGL_CONSTANT(name: anytype, str: anytype, len: anytype, flags: anytype) @TypeOf(zend_register_stringl_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), str, len, flags, @as(c_int, 0))) {
    _ = &name;
    _ = &str;
    _ = &len;
    _ = &flags;
    return zend_register_stringl_constant(name, @import("std").zig.c_translation.sizeof(name) - @as(c_int, 1), str, len, flags, @as(c_int, 0));
}
pub const ZEND_CONSTANT_DTOR = free_zend_constant;
pub const PHP_CONNECTION_NORMAL = @as(c_int, 0);
pub const PHP_CONNECTION_ABORTED = @as(c_int, 1);
pub const PHP_CONNECTION_TIMEOUT = @as(c_int, 2);
pub const PHP_REENTRANCY_H = "";
pub const HAVE_LOCALTIME = @as(c_int, 1);
pub const HAVE_GMTIME = @as(c_int, 1);
pub const HAVE_ASCTIME = @as(c_int, 1);
pub const HAVE_CTIME = @as(c_int, 1);
pub const php_localtime_r = localtime_r;
pub const php_ctime_r = ctime_r;
pub const php_asctime_r = asctime_r;
pub const php_gmtime_r = gmtime_r;
pub const php_strtok_r = strtok_r;
pub const reentrancy_startup = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_reentrancy.h:112:9
pub const reentrancy_shutdown = @compileError("unable to translate C expr: unexpected token ''");
// /opt/homebrew/Cellar/php/8.4.10/include/php/main/php_reentrancy.h:113:9
pub const __darwin_pthread_handler_rec = struct___darwin_pthread_handler_rec;
pub const _opaque_pthread_attr_t = struct__opaque_pthread_attr_t;
pub const _opaque_pthread_cond_t = struct__opaque_pthread_cond_t;
pub const _opaque_pthread_condattr_t = struct__opaque_pthread_condattr_t;
pub const _opaque_pthread_mutex_t = struct__opaque_pthread_mutex_t;
pub const _opaque_pthread_mutexattr_t = struct__opaque_pthread_mutexattr_t;
pub const _opaque_pthread_once_t = struct__opaque_pthread_once_t;
pub const _opaque_pthread_rwlock_t = struct__opaque_pthread_rwlock_t;
pub const _opaque_pthread_rwlockattr_t = struct__opaque_pthread_rwlockattr_t;
pub const _opaque_pthread_t = struct__opaque_pthread_t;
pub const __darwin_arm_exception_state = struct___darwin_arm_exception_state;
pub const __darwin_arm_exception_state64 = struct___darwin_arm_exception_state64;
pub const __darwin_arm_exception_state64_v2 = struct___darwin_arm_exception_state64_v2;
pub const __darwin_arm_thread_state = struct___darwin_arm_thread_state;
pub const __darwin_arm_thread_state64 = struct___darwin_arm_thread_state64;
pub const __darwin_arm_vfp_state = struct___darwin_arm_vfp_state;
pub const __darwin_arm_neon_state64 = struct___darwin_arm_neon_state64;
pub const __darwin_arm_neon_state = struct___darwin_arm_neon_state;
pub const __arm_pagein_state = struct___arm_pagein_state;
pub const __darwin_arm_sme_state = struct___darwin_arm_sme_state;
pub const __darwin_arm_sve_z_state = struct___darwin_arm_sve_z_state;
pub const __darwin_arm_sve_p_state = struct___darwin_arm_sve_p_state;
pub const __darwin_arm_sme_za_state = struct___darwin_arm_sme_za_state;
pub const __darwin_arm_sme2_state = struct___darwin_arm_sme2_state;
pub const __arm_legacy_debug_state = struct___arm_legacy_debug_state;
pub const __darwin_arm_debug_state32 = struct___darwin_arm_debug_state32;
pub const __darwin_arm_debug_state64 = struct___darwin_arm_debug_state64;
pub const __darwin_arm_cpmu_state64 = struct___darwin_arm_cpmu_state64;
pub const __darwin_mcontext32 = struct___darwin_mcontext32;
pub const __darwin_mcontext64 = struct___darwin_mcontext64;
pub const __darwin_sigaltstack = struct___darwin_sigaltstack;
pub const __darwin_ucontext = struct___darwin_ucontext;
pub const sigval = union_sigval;
pub const sigevent = struct_sigevent;
pub const __siginfo = struct___siginfo;
pub const __sigaction_u = union___sigaction_u;
pub const __sigaction = struct___sigaction;
pub const sigstack = struct_sigstack;
pub const timeval = struct_timeval;
pub const rusage = struct_rusage;
pub const rusage_info_v0 = struct_rusage_info_v0;
pub const rusage_info_v1 = struct_rusage_info_v1;
pub const rusage_info_v2 = struct_rusage_info_v2;
pub const rusage_info_v3 = struct_rusage_info_v3;
pub const rusage_info_v4 = struct_rusage_info_v4;
pub const rusage_info_v5 = struct_rusage_info_v5;
pub const rusage_info_v6 = struct_rusage_info_v6;
pub const rlimit = struct_rlimit;
pub const proc_rlimit_control_wakeupmon = struct_proc_rlimit_control_wakeupmon;
pub const _malloc_zone_t = struct__malloc_zone_t;
pub const timespec = struct_timespec;
pub const __sbuf = struct___sbuf;
pub const __sFILEX = struct___sFILEX;
pub const __sFILE = struct___sFILE;
pub const __float2 = struct___float2;
pub const __double2 = struct___double2;
pub const exception = struct_exception;
pub const dl_info = struct_dl_info;
pub const _zend_refcounted_h = struct__zend_refcounted_h;
pub const _zend_string = struct__zend_string;
pub const _zend_refcounted = struct__zend_refcounted;
pub const _Bucket = struct__Bucket;
pub const _zend_array = struct__zend_array;
pub const _zend_resource = struct__zend_resource;
pub const _zend_reference = struct__zend_reference;
pub const _zend_ast_ref = struct__zend_ast_ref;
pub const _zend_arg_info = struct__zend_arg_info;
pub const _zend_property_info = struct__zend_property_info;
pub const _znode_op = union__znode_op;
pub const _zend_op = struct__zend_op;
pub const _zend_live_range = struct__zend_live_range;
pub const _zend_try_catch_element = struct__zend_try_catch_element;
pub const _zend_op_array = struct__zend_op_array;
pub const _zend_internal_arg_info = struct__zend_internal_arg_info;
pub const _zend_execute_data = struct__zend_execute_data;
pub const _zend_ini_entry = struct__zend_ini_entry;
pub const _zend_module_dep = struct__zend_module_dep;
pub const _zend_function_entry = struct__zend_function_entry;
pub const _zend_module_entry = struct__zend_module_entry;
pub const _zend_internal_function = struct__zend_internal_function;
pub const _zend_function = union__zend_function;
pub const _zend_value = union__zend_value;
pub const _zval_struct = struct__zval_struct;
pub const _zend_class_mutable_data = struct__zend_class_mutable_data;
pub const _zend_class_dependency = struct__zend_class_dependency;
pub const _zend_error_info = struct__zend_error_info;
pub const _zend_inheritance_cache_entry = struct__zend_inheritance_cache_entry;
pub const _zend_class_iterator_funcs = struct__zend_class_iterator_funcs;
pub const _zend_class_arrayaccess_funcs = struct__zend_class_arrayaccess_funcs;
pub const _zend_object_iterator_funcs = struct__zend_object_iterator_funcs;
pub const _zend_object_iterator = struct__zend_object_iterator;
pub const _zend_serialize_data = struct__zend_serialize_data;
pub const _zend_unserialize_data = struct__zend_unserialize_data;
pub const _zend_class_name = struct__zend_class_name;
pub const _zend_trait_method_reference = struct__zend_trait_method_reference;
pub const _zend_trait_alias = struct__zend_trait_alias;
pub const _zend_trait_precedence = struct__zend_trait_precedence;
pub const _zend_class_entry = struct__zend_class_entry;
pub const _zend_object = struct__zend_object;
pub const _zend_prop_purpose = enum__zend_prop_purpose;
pub const _zend_object_handlers = struct__zend_object_handlers;
pub const _zend_ast = struct__zend_ast;
pub const _HashTableIterator = struct__HashTableIterator;
pub const _zend_leak_info = struct__zend_leak_info;
pub const _zend_mm_heap = struct__zend_mm_heap;
pub const _zend_mm_handlers = struct__zend_mm_handlers;
pub const _zend_mm_storage = struct__zend_mm_storage;
pub const _zend_llist_element = struct__zend_llist_element;
pub const _zend_llist = struct__zend_llist;
pub const accessx_descriptor = struct_accessx_descriptor;
pub const fssearchblock = struct_fssearchblock;
pub const searchstate = struct_searchstate;
pub const tm = struct_tm;
pub const mach_port_status = struct_mach_port_status;
pub const mach_port_limits = struct_mach_port_limits;
pub const mach_port_info_ext = struct_mach_port_info_ext;
pub const mach_port_guard_info = struct_mach_port_guard_info;
pub const mach_port_qos = struct_mach_port_qos;
pub const mach_service_port_info = struct_mach_service_port_info;
pub const mach_port_options = struct_mach_port_options;
pub const mach_port_guard_exception_codes = enum_mach_port_guard_exception_codes;
pub const vm_statistics = struct_vm_statistics;
pub const vm_statistics64 = struct_vm_statistics64;
pub const vm_extmod_statistics = struct_vm_extmod_statistics;
pub const vm_purgeable_stat = struct_vm_purgeable_stat;
pub const vm_purgeable_info = struct_vm_purgeable_info;
pub const time_value = struct_time_value;
pub const host_can_has_debugger_info = struct_host_can_has_debugger_info;
pub const host_basic_info = struct_host_basic_info;
pub const host_sched_info = struct_host_sched_info;
pub const kernel_resource_sizes = struct_kernel_resource_sizes;
pub const host_priority_info = struct_host_priority_info;
pub const host_load_info = struct_host_load_info;
pub const host_cpu_load_info = struct_host_cpu_load_info;
pub const host_preferred_user_arch = struct_host_preferred_user_arch;
pub const mach_vm_range = struct_mach_vm_range;
pub const memory_object_perf_info = struct_memory_object_perf_info;
pub const memory_object_attr_info = struct_memory_object_attr_info;
pub const memory_object_behave_info = struct_memory_object_behave_info;
pub const arm_state_hdr = struct_arm_state_hdr;
pub const arm_unified_thread_state = struct_arm_unified_thread_state;
pub const ipc_info_space = struct_ipc_info_space;
pub const ipc_info_space_basic = struct_ipc_info_space_basic;
pub const ipc_info_name = struct_ipc_info_name;
pub const ipc_info_tree_name = struct_ipc_info_tree_name;
pub const ipc_info_port = struct_ipc_info_port;
pub const mach_voucher_attr_recipe_data = struct_mach_voucher_attr_recipe_data;
pub const processor_cpu_stat = struct_processor_cpu_stat;
pub const processor_cpu_stat64 = struct_processor_cpu_stat64;
pub const processor_basic_info = struct_processor_basic_info;
pub const processor_cpu_load_info = struct_processor_cpu_load_info;
pub const processor_set_basic_info = struct_processor_set_basic_info;
pub const processor_set_load_info = struct_processor_set_load_info;
pub const policy_timeshare_base = struct_policy_timeshare_base;
pub const policy_timeshare_limit = struct_policy_timeshare_limit;
pub const policy_timeshare_info = struct_policy_timeshare_info;
pub const policy_rr_base = struct_policy_rr_base;
pub const policy_rr_limit = struct_policy_rr_limit;
pub const policy_rr_info = struct_policy_rr_info;
pub const policy_fifo_base = struct_policy_fifo_base;
pub const policy_fifo_limit = struct_policy_fifo_limit;
pub const policy_fifo_info = struct_policy_fifo_info;
pub const policy_bases = struct_policy_bases;
pub const policy_limits = struct_policy_limits;
pub const policy_infos = struct_policy_infos;
pub const task_basic_info_32 = struct_task_basic_info_32;
pub const task_basic_info_64 = struct_task_basic_info_64;
pub const task_basic_info = struct_task_basic_info;
pub const task_events_info = struct_task_events_info;
pub const task_thread_times_info = struct_task_thread_times_info;
pub const task_absolutetime_info = struct_task_absolutetime_info;
pub const task_kernelmemory_info = struct_task_kernelmemory_info;
pub const task_affinity_tag_info = struct_task_affinity_tag_info;
pub const task_dyld_info = struct_task_dyld_info;
pub const task_basic_info_64_2 = struct_task_basic_info_64_2;
pub const task_extmod_info = struct_task_extmod_info;
pub const mach_task_basic_info = struct_mach_task_basic_info;
pub const task_power_info = struct_task_power_info;
pub const task_vm_info = struct_task_vm_info;
pub const task_trace_memory_info = struct_task_trace_memory_info;
pub const task_wait_state_info = struct_task_wait_state_info;
pub const task_power_info_v2 = struct_task_power_info_v2;
pub const task_flags_info = struct_task_flags_info;
pub const task_security_config_info = struct_task_security_config_info;
pub const task_inspect_flavor = enum_task_inspect_flavor;
pub const task_inspect_basic_counts = struct_task_inspect_basic_counts;
pub const task_role = enum_task_role;
pub const task_category_policy = struct_task_category_policy;
pub const task_latency_qos = enum_task_latency_qos;
pub const task_throughput_qos = enum_task_throughput_qos;
pub const task_qos_policy = struct_task_qos_policy;
pub const thread_basic_info = struct_thread_basic_info;
pub const thread_identifier_info = struct_thread_identifier_info;
pub const thread_extended_info = struct_thread_extended_info;
pub const io_stat_entry = struct_io_stat_entry;
pub const io_stat_info = struct_io_stat_info;
pub const thread_standard_policy = struct_thread_standard_policy;
pub const thread_extended_policy = struct_thread_extended_policy;
pub const thread_time_constraint_policy = struct_thread_time_constraint_policy;
pub const thread_precedence_policy = struct_thread_precedence_policy;
pub const thread_affinity_policy = struct_thread_affinity_policy;
pub const thread_background_policy = struct_thread_background_policy;
pub const thread_latency_qos_policy = struct_thread_latency_qos_policy;
pub const thread_throughput_qos_policy = struct_thread_throughput_qos_policy;
pub const mach_timespec = struct_mach_timespec;
pub const vm_region_basic_info_64 = struct_vm_region_basic_info_64;
pub const vm_region_basic_info = struct_vm_region_basic_info;
pub const vm_region_extended_info = struct_vm_region_extended_info;
pub const vm_region_top_info = struct_vm_region_top_info;
pub const vm_region_submap_info = struct_vm_region_submap_info;
pub const vm_region_submap_info_64 = struct_vm_region_submap_info_64;
pub const vm_region_submap_short_info_64 = struct_vm_region_submap_short_info_64;
pub const mach_vm_read_entry = struct_mach_vm_read_entry;
pub const vm_read_entry = struct_vm_read_entry;
pub const vm_page_info_basic = struct_vm_page_info_basic;
pub const kmod_reference = struct_kmod_reference;
pub const kmod_info = struct_kmod_info;
pub const kmod_info_32_v1 = struct_kmod_info_32_v1;
pub const kmod_info_64_v1 = struct_kmod_info_64_v1;
pub const fsid = struct_fsid;
pub const fsobj_id = struct_fsobj_id;
pub const dyld_kernel_image_info = struct_dyld_kernel_image_info;
pub const dyld_kernel_process_info = struct_dyld_kernel_process_info;
pub const _zend_gc_status = struct__zend_gc_status;
pub const _zend_known_string_id = enum__zend_known_string_id;
pub const _zend_hash_key = struct__zend_hash_key;
pub const _zend_ast_kind = enum__zend_ast_kind;
pub const _zend_ast_list = struct__zend_ast_list;
pub const _zend_ast_zval = struct__zend_ast_zval;
pub const _zend_ast_decl = struct__zend_ast_decl;
pub const ostat = struct_ostat;
pub const _filesec = struct__filesec;
pub const _zend_stream = struct__zend_stream;
pub const _zend_file_handle = struct__zend_file_handle;
pub const _zend_signal_entry_t = struct__zend_signal_entry_t;
pub const _zend_signal_t = struct__zend_signal_t;
pub const _zend_signal_queue_t = struct__zend_signal_queue_t;
pub const _zend_signal_globals_t = struct__zend_signal_globals_t;
pub const _zend_utility_functions = struct__zend_utility_functions;
pub const _zend_utility_values = struct__zend_utility_values;
pub const _zend_lazy_objects_store = struct__zend_lazy_objects_store;
pub const _zend_fcall_info = struct__zend_fcall_info;
pub const _zend_fcall_info_cache = struct__zend_fcall_info_cache;
pub const _zend_strtod_bigint = struct__zend_strtod_bigint;
pub const _zend_strtod_state = struct__zend_strtod_state;
pub const _znode = struct__znode;
pub const _zend_ast_znode = struct__zend_ast_znode;
pub const _zend_declarables = struct__zend_declarables;
pub const _zend_file_context = struct__zend_file_context;
pub const _zend_parser_stack_elem = union__zend_parser_stack_elem;
pub const _zend_brk_cont_element = struct__zend_brk_cont_element;
pub const _zend_label = struct__zend_label;
pub const _zend_oparray_context = struct__zend_oparray_context;
pub const _zend_class_constant = struct__zend_class_constant;
pub const _zend_internal_function_info = struct__zend_internal_function_info;
pub const _zend_stack = struct__zend_stack;
pub const _zend_ini_parser_param = struct__zend_ini_parser_param;
pub const _zend_arena = struct__zend_arena;
pub const _zend_encoding = struct__zend_encoding;
pub const _zend_compiler_globals = struct__zend_compiler_globals;
pub const _zend_vm_stack = struct__zend_vm_stack;
pub const zend_atomic_bool_s = struct_zend_atomic_bool_s;
pub const _zend_objects_store = struct__zend_objects_store;
pub const _zend_fiber_context = struct__zend_fiber_context;
pub const _zend_fiber = struct__zend_fiber;
pub const _zend_call_stack = struct__zend_call_stack;
pub const _zend_executor_globals = struct__zend_executor_globals;
pub const _zend_ptr_stack = struct__zend_ptr_stack;
pub const _zend_php_scanner_globals = struct__zend_php_scanner_globals;
pub const _zend_ini_scanner_globals = struct__zend_ini_scanner_globals;
pub const zend_atomic_int_s = struct_zend_atomic_int_s;
pub const _zend_multibyte_functions = struct__zend_multibyte_functions;
pub const sched_param = struct_sched_param;
pub const pthread_override_s = struct_pthread_override_s;
pub const _zend_compile_position = enum__zend_compile_position;
pub const _zend_auto_global = struct__zend_auto_global;
pub const _zend_rsrc_list_dtors_entry = struct__zend_rsrc_list_dtors_entry;
pub const _zend_expected_type = enum__zend_expected_type;
pub const passwd = struct_passwd;
pub const _php_output_handler_status_t = enum__php_output_handler_status_t;
pub const _php_output_handler_hook_t = enum__php_output_handler_hook_t;
pub const _php_output_buffer = struct__php_output_buffer;
pub const _php_output_context = struct__php_output_context;
pub const _php_output_handler_user_func_t = struct__php_output_handler_user_func_t;
pub const _php_output_handler = struct__php_output_handler;
pub const _zend_output_globals = struct__zend_output_globals;
pub const timeval64 = struct_timeval64;
pub const itimerval = struct_itimerval;
pub const clockinfo = struct_clockinfo;
pub const _php_stream_statbuf = struct__php_stream_statbuf;
pub const _php_stream_ops = struct__php_stream_ops;
pub const _php_stream_bucket = struct__php_stream_bucket;
pub const _php_stream_bucket_brigade = struct__php_stream_bucket_brigade;
pub const _php_stream_filter_ops = struct__php_stream_filter_ops;
pub const _php_stream_filter = struct__php_stream_filter;
pub const _php_stream_filter_chain = struct__php_stream_filter_chain;
pub const _php_stream_notifier = struct__php_stream_notifier;
pub const _php_stream_context = struct__php_stream_context;
pub const _php_stream_wrapper_ops = struct__php_stream_wrapper_ops;
pub const _php_stream_wrapper = struct__php_stream_wrapper;
pub const _php_stream = struct__php_stream;
pub const _php_stream_filter_factory = struct__php_stream_filter_factory;
pub const _php_stream_dirent = struct__php_stream_dirent;
pub const iovec = struct_iovec;
pub const sockaddr = struct_sockaddr;
pub const sa_endpoints = struct_sa_endpoints;
pub const linger = struct_linger;
pub const so_np_extensions = struct_so_np_extensions;
pub const __sockaddr_header = struct___sockaddr_header;
pub const sockproto = struct_sockproto;
pub const sockaddr_storage = struct_sockaddr_storage;
pub const msghdr = struct_msghdr;
pub const cmsghdr = struct_cmsghdr;
pub const sf_hdtr = struct_sf_hdtr;
pub const php_stream_xport_send_recv_flags = enum_php_stream_xport_send_recv_flags;
pub const _php_stream_xport_param = struct__php_stream_xport_param;
pub const _php_stream_xport_crypto_param = struct__php_stream_xport_crypto_param;
pub const _arg_separators = struct__arg_separators;
pub const _php_core_globals = struct__php_core_globals;
pub const _php_tick_function_entry = struct__php_tick_function_entry;
pub const _zend_ini_entry_def = struct__zend_ini_entry_def;
pub const utimbuf = struct_utimbuf;
pub const dirent = struct_dirent;
pub const _telldir = struct__telldir;
pub const _cwd_state = struct__cwd_state;
pub const _realpath_cache_bucket = struct__realpath_cache_bucket;
pub const _virtual_cwd_globals = struct__virtual_cwd_globals;
pub const _zend_constant = struct__zend_constant;
